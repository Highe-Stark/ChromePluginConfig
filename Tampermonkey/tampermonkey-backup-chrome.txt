{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"解决百度云大文件下载限制","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["http://pan.baidu.com/*","https://pan.baidu.com/*","http://yun.baidu.com/*","https://yun.baidu.com/*","https://eyun.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194679},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/17800-%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6/code/%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6.user.js","uuid":"a29830c6-5bac-45d0-8027-c98649086ddf","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDop6PlhrPnmb7luqbkupHlpKfmlofku7bkuIvovb3pmZDliLYKLy8gQG5hbWVzcGFjZSAgICB1bmRlZmluZWQKLy8gQHZlcnNpb24gICAgICAwLjAuNgovLyBAZGVzY3JpcHRpb24gIOS4gOihjOS7o+egge+8jOino+WGs+eZvuW6puS6keWkp+aWh+S7tuS4i+i9vemZkOWItgovLyBAYXV0aG9yICAgICAgIGZ1bmlhbnd1eGluCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3Bhbi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcGFuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3l1bi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8veXVuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9leXVuLmJhaWR1LmNvbS8qCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQovKiBqc2hpbnQgLVcwOTcgKi8KJ3VzZSBzdHJpY3QnOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KE9iamVjdC5nZXRQcm90b3R5cGVPZihuYXZpZ2F0b3IpLCdwbGF0Zm9ybScse2dldDpmdW5jdGlvbigpe3JldHVybiAnc2JfYmFpZHUnO319KQoKCihmdW5jdGlvbigpewp2YXIgaHJlZj1sb2NhdGlvbi5ocmVmOwovaHR0cDovLnRlc3QoaHJlZik/bG9jYXRpb24uaHJlZj0naHR0cHMnK2hyZWYuc2xpY2UoNCk6MDsKfSgpKTsKCgogICAg"},{"name":"AC-baidu:重定向优化百度搜狗谷歌搜索_去广告_favicon_双列","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["www.baidu.com"],"orig_excludes":[],"orig_includes":["*://ipv6.baidu.com/*","*://www.baidu.com/*","*://m.baidu.com/*","*://xueshu.baidu.com/*","*://www.sogou.com/web*","*://www.sogou.com/sie*","*://www.so.com/s?*","*://*.bing.com/*","*://encrypted.google.*/search*","*://*.google*/search*","*://*.zhihu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":["www.baidu.com","*"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"AdsStyleEnable":"btrue","AdsStyleMode_Baidu":"s2","AdsStyleMode_Google":"s0","Config":"o{\"isRedirectEnable\":true,\"isAdsEnable\":true,\"AdsStyleEnable\":true,\"AdsStyleMode_Baidu\":\"0\",\"AdsStyleMode_Google\":\"0\",\"AdsStyleMode_Bing\":\"0\",\"HuYan_Baidu\":false,\"HuYan_Google\":false,\"HuYan_Bing\":false,\"defaultHuYanColor\":\"#DEF1EF\",\"isUserColorEnable\":true,\"isFaviconEnable\":true,\"defaultFaviconUrl\":\"https://ws1.sinaimg.cn/large/6a155794ly1foijtdzhxhj200w00wjr5.jpg\",\"doDisableSug\":true,\"isRightDisplayEnable\":false,\"isCounterEnable\":false,\"isALineEnable\":false,\"isUserStyleEnable\":false,\"UserStyleText\":\"/**计数器的颜色样式*/\\n.CounterT{\\n    background: #FD9999;\\n}\\n/**右侧栏的样式-其实不开启更好看一些*/\\n#content_right{\\n    padding: 20px 15px 15px;\\n    border-radius: 5px;\\n    background-color: #fff;\\n    box-sizing: border-box;\\n    box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n    -webkit-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n    -moz-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n}\",\"oldVersion\":\"23.12\",\"isBlockEnable\":true,\"AdsStyleMode_SoGou\":3,\"HuYan_SoGou\":false,\"UserBlockList\":[\"baijiahao.baidu.com\"],\"isBlockDisplay\":false}","UserStyleText":"s#content_right{\n    padding: 20px 15px 15px;\n    border-radius: 5px;\n    background-color: #fff;\n    box-sizing: border-box;\n    box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\n    -webkit-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\n    -moz-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\n}","defaultFaviconUrl":"shttps://ws1.sinaimg.cn/large/6a155794ly1foijtdzhxhj200w00wjr5.jpg","doDisableSug":"btrue","isALineEnable":"bfalse","isAdsEnable":"btrue","isCounterEnable":"bfalse","isFaviconEnable":"btrue","isRedirectEnable":"btrue","isRightDisplayEnable":"bfalse","isUserStyleEnable":"btrue","version":"s20.1"},"ts":1550547247421},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/14178-ac-baidu-%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6-%E6%90%9C%E7%8B%97-%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E4%B9%8B%E9%87%8D%E5%AE%9A%E5%90%91%E5%8E%BB%E9%99%A4-%E5%8E%BB%E5%B9%BF%E5%91%8A-favicon/code/AC-baidu%EF%BC%9A%20%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6%E3%80%81%E6%90%9C%E7%8B%97%E3%80%81%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E4%B9%8B%E9%87%8D%E5%AE%9A%E5%90%91%E5%8E%BB%E9%99%A4+%E5%8E%BB%E5%B9%BF%E5%91%8A+favicon.user.js","uuid":"8cbc0612-9d37-471f-a58e-a1731c163c40","source":"","resources":[{"meta":{"name":"baiduCommonStyle.css","url":"http://xbaidu.ntaow.com/newcss/baiduCommonStyle.css?t=23.11","ts":1551921805020,"mimetype":"text/css"},"source":""},{"meta":{"name":"baiduOnePageStyle.css","url":"http://xbaidu.ntaow.com/newcss/baiduOnePageStyle.css?t=23.11","ts":1551921805004,"mimetype":"text/css"},"source":"I3dyYXBwZXJfd3JhcHBlciAjY29udGFpbmVye3dpZHRoOjEwMCV9Zm9ybS5mbXtwb3NpdGlvbjpyZWxhdGl2ZTtsZWZ0OmNhbGMoNDQlIC0gMzY1cHgpO2JhY2tncm91bmQtY29sb3I6dW5zZXQ7d2lkdGg6NTAlfS53cmFwcGVyX2wgZm9ybS5mbSAja3d7d2lkdGg6OTglIWltcG9ydGFudH0jcmVzdWx0X2xvZ297cG9zaXRpb246cmVsYXRpdmU7bGVmdDpjYWxjKDQ0JSAtIDM2NXB4KTttYXJnaW46MTBweCAwIDB9I3NfdGFiIGIsI3NfdGFiIGF7cG9zaXRpb246cmVsYXRpdmU7bGVmdDpjYWxjKDUwJSAtIDQ0NXB4KX0jd3JhcHBlciAuaGVhZF9udW1zX2NvbnRfb3V0ZXJ7cG9zaXRpb246YWJzb2x1dGU7bGVmdDpjYWxjKDQ1dncgLSA1MDBweCl9I3dyYXBwZXIgI2NvbnRlbnRfbGVmdCwjd3JhcHBlciAjcnMsI3dyYXBwZXIgI3BhZ2V7dG9wOjM1cHg7cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZy1sZWZ0OjA7d2lkdGg6NTAlIWltcG9ydGFudDttaW4td2lkdGg6NjcwcHg7ZmxvYXQ6dW5zZXQ7bWFyZ2luLWxlZnQ6dW5zZXQ7bWFyZ2luOjAgYXV0b30jd3JhcHBlciAjcnMgLnR0e21hcmdpbjowIC0yMHB4IDFweCAwfSN3cmFwcGVyICNjb250ZW50X2xlZnQgLmMtY29udGFpbmVye3dpZHRoOjEwMCUhaW1wb3J0YW50O21pbi13aWR0aDo2NTBweDttYXJnaW46MCBhdXRvfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTAwMHB4KXsjd3JhcHBlciAjY29udGVudF9sZWZ0LCN3cmFwcGVyICNyc3ttaW4td2lkdGg6ODUwcHh9fSN3cmFwcGVyICNjb250ZW50X3JpZ2h0e21hcmdpbi1yaWdodDpjYWxjKDE1dncgLSAyMTBweCk7ZGlzcGxheTpub25lfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTgwMHB4KXsjd3JhcHBlciAjY29udGVudF9yaWdodHtkaXNwbGF5OmJsb2NrO2Zsb2F0OnVuc2V0O3Bvc2l0aW9uOmFic29sdXRlfX0jd3JhcHBlciAjcGFnZSBhLCN3cmFwcGVyICNwYWdlIHN0cm9uZ3ttYXJnaW4tcmlnaHQ6MjJweCFpbXBvcnRhbnR9LnNfdGFiX2lubmVye2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5oaW50X2NvbW1vbl9yZXN0b3B7cG9zaXRpb246YWJzb2x1dGU7bGVmdDpjYWxjKDUwJSAtIDUwMnB4KTttYXJnaW4tdG9wOjI1cHh9I3Nlai1jb250YWluZXJ7cGFkZGluZy1sZWZ0OmNhbGMoNDQlIC0gNDc4cHgpIWltcG9ydGFudH0="},{"meta":{"name":"baiduTwoPageStyle.css","url":"http://xbaidu.ntaow.com/newcss/baiduTwoPageStyle.css?t=23.11","ts":1551921805001,"mimetype":"text/css"},"source":"I3dyYXBwZXJfd3JhcHBlciAjY29udGFpbmVye3dpZHRoOmF1dG99Zm9ybS5mbXtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDo1MCU7bGVmdDpjYWxjKDEyJSk7YmFja2dyb3VuZC1jb2xvcjp1bnNldH0jd3JhcHBlciAuc190YWJfaW5uZXIsI3NfdGFiIC50YWItd3JhcHBlcnttYXJnaW4tbGVmdDoxMiV9I3NfdGFiIGIsI3NfdGFiIGF7cG9zaXRpb246cmVsYXRpdmV9I3Jlc3VsdF9sb2dvLC5zX2xvZ297cG9zaXRpb246cmVsYXRpdmU7bGVmdDpjYWxjKDEyJSl9I3dyYXBwZXIgLmhlYWRfbnVtc19jb250X291dGVyIC5zZWFyY2hfdG9vbF9jb250ZXIsI3dyYXBwZXIgLmhlYWRfbnVtc19jb250X291dGVyIC5udW1ze3dpZHRoOjgwJX0jd3JhcHBlciAuaGVhZF9udW1zX2NvbnRfb3V0ZXIsLmhpbnRfY29tbW9uX3Jlc3RvcCwjaGVhZGVyX3RvcF9iYXJ7cG9zaXRpb246cmVsYXRpdmU7bGVmdDoxMCU7d2lkdGg6ODAlfSN3cmFwcGVyICNoZWFkZXJfdG9wX2JhcnttYXJnaW4tYm90dG9tOjB9I3dyYXBwZXIgI2NvbnRlbnRfbGVmdHtkaXNwbGF5OmlubGluZS1ncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczo1MCUgNTAlO21hcmdpbjowIGF1dG87cG9zaXRpb246cmVsYXRpdmU7cGFkZGluZy1sZWZ0OjUlO2Zsb2F0OnVuc2V0O3dpZHRoOjgwJTttYXJnaW4tbGVmdDo3JTttYXJnaW4tYm90dG9tOjMwcHh9Ym9keVtuZXdzXSAjd3JhcHBlciAjY29udGVudF9sZWZ0PmRpdjpub3QoW2NsYXNzXSk6bm90KFtpZF0pe2Rpc3BsYXk6aW5saW5lLWdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOjUwJSA1MCV9I3dyYXBwZXIgI2NvbnRlbnRfcmlnaHR7ZGlzcGxheTpub25lIWltcG9ydGFudH0jd3JhcHBlciAjcnN7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luOjAgYXV0b30jd3JhcHBlciAjcGFnZXttaW4td2lkdGg6NzEwcHg7aGVpZ2h0OjQwcHg7bGluZS1oZWlnaHQ6NDBweDtwYWRkaW5nOjVweCAxMHB4O21hcmdpbjowIGF1dG87dGV4dC1hbGlnbjpjZW50ZXI7cG9zaXRpb246cmVsYXRpdmV9I3dyYXBwZXIgI2NvbnRlbnRfbGVmdCAucmVzdWx0LCN3cmFwcGVyICNjb250ZW50X2xlZnQgLmMtY29udGFpbmVye3dpZHRoOnVuc2V0IWltcG9ydGFudDttYXgtd2lkdGg6MTAwJTttYXJnaW4tYm90dG9tOjMwcHg7bWFyZ2luLWxlZnQ6NXB4O21hcmdpbi1yaWdodDoxNXB4fSN3cmFwcGVyICNjb250ZW50X2xlZnQ+Kjpub3QoW2NsYXNzKj1yZXN1bHRdKXtncmlkLWNvbHVtbi1zdGFydDoxO2dyaWQtY29sdW1uLWVuZDozfS5jLWNvbnRhaW5lciBoMyBhe3otaW5kZXg6MX0jc2VqLWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6Y2FsYygxMiUgLSAxMTNweCkhaW1wb3J0YW50fQ=="},{"meta":{"name":"googleCommonStyle.css","url":"http://xbaidu.ntaow.com/newcss/googleCommonStyle.css?t=23.11","ts":1551921805007,"mimetype":"text/css"},"source":"aWZyYW1lLGRpdi5yZXNfdG9wX2Jhbm5lciAjZm9vdCwjcGFnZSAuZmssI2hlYWQgLmhlYWRCbG9jaywjcnNfdG9wX25ldywjY29udGVudF9yaWdodCwuc3JnPnRhYmxlLC5zcmc+ZGl2W2lkKj0iMzAiXSwuc3JnIC5jLXJlY29tbWVuZCwuc3JnIC5sZWZ0QmxvY2ssLnNyZyAuaGl0X3RvcF9uZXcsLnNyZyAjZmxkLC5zcmcgZGl2LnJyZWNvbS1idG4tcGFyZW50LCNjb250ZW50X3JpZ2h0LCNjZW50ZXJfY29sPiN0YXcsI2RlbW97ZGlzcGxheTpub25lIWltcG9ydGFudH1ib2R5W2dvb2dsZV17YmFja2dyb3VuZC1jb2xvcjojZmRmZGZkfSNmb3JtIC5iZHN1Z3t3aWR0aDo3NiV9I2FsYV9pbWdfcmVzdWx0c3tvdmVyZmxvdzpoaWRkZW59YSxhIGVte3RleHQtZGVjb3JhdGlvbjpub25lfSNoZWFkLCNzX3RhYntiYWNrZ3JvdW5kLWNvbG9yOiNmOGY4Zjh9I2hlYWR7Ym9yZGVyLWJvdHRvbTowfSNmb3Jte2JhY2tncm91bmQtY29sb3I6dW5zZXR9I2Zvcm0gLmJkc3VnIGxpe3dpZHRoOmF1dG87Y29sb3I6IzAwMDtmb250OjE1cHggYXJpYWw7bGluZS1oZWlnaHQ6MjZweH0jZm9ybSAuc19pcHRfd3IuYmd7YmFja2dyb3VuZDojZmZmO3dpZHRoOjc2JX0jZm9ybSAuc19idG57YmFja2dyb3VuZDojMjg2NmJkO2JvcmRlci1ib3R0b206MXB4IHNvbGlkICM0ODc5YmR9I2Zvcm0gLnNfYnRuOmhvdmVye2JhY2tncm91bmQ6IzQ4NzliZDtib3JkZXItYm90dG9tOjFweCBzb2xpZCAjMjg2NmJkfSNzX3RhYiBie2NvbG9yOiMyODY2YmQ7Ym9yZGVyLWJvdHRvbTozcHggIzI4NjZiZCBzb2xpZH0jc190YWJ7Ym9yZGVyLWJvdHRvbTojZTBlMGUwIDFweCBzb2xpZH0jdSBhe3RleHQtZGVjb3JhdGlvbjpub25lfSNjb250YWluZXIgLmhlYWRfbnVtc19jb250X291dGVyIC5zZWFyY2hfdG9vbF9jb250ZXIsI2NvbnRhaW5lciAuaGVhZF9udW1zX2NvbnRfb3V0ZXIgLm51bXN7d2lkdGg6NjMwcHh9I3NlYXJjaCAuc3JnLC5tZWQ+I2lyZXMgLmJrV01nZD4uc3Jne2FuaW1hdGlvbi1uYW1lOmxlZnRfbG9nb1I7LXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb246LjFzOy13ZWJraXQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjplYXNlfSNycywuYmtXTWdkIC5ne3dpZHRoOjc2MHB4O3BhZGRpbmc6MCAyMHB4IDE1cHg7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206NDBweDtib3JkZXItcmFkaXVzOjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym94LXNpemluZzpib3JkZXItYm94O2JveC1zaGFkb3c6MCAwIDIwcHggMnB4IHJnYmEoMCwwLDAsLjEpOy13ZWJraXQtYm94LXNoYWRvdzowIDAgMjBweCAycHggcmdiYSgwLDAsMCwuMSk7LW1vei1ib3gtc2hhZG93OjAgMCAyMHB4IDJweCByZ2JhKDAsMCwwLC4xKX0jcnMsLmJrV01nZCAuZyBkaXYucmMgLnN7bWF4LXdpZHRoOnVuc2V0fS5ia1dNZ2QgLmc6aG92ZXJ7Ym94LXNoYWRvdzowIDAgMnB4IGdyYXk7YmFja2dyb3VuZDpyZ2JhKDIzMCwyMzAsMjMwLC4xKSFpbXBvcnRhbnR9LmJrV01nZCAuZ1t0cGw9c29mdF0gLm9wLXNvZnQtdGl0bGUsLmJrV01nZCAuZyBkaXYucntiYWNrZ3JvdW5kLWNvbG9yOiNmOGY4Zjg7bWFyZ2luOjAgLTIwcHggMTBweDtwYWRkaW5nOjhweCAyMHB4IDVweDtib3JkZXItcmFkaXVzOjVweCA1cHggMCAwfS5zcmcgLmYxMyBhLC5zcmcgLmYxMyBlbSwuc3JnIC5jLXNwYW4xOCBhLC5zcmcgLnN1YkxpbmtfZmFjdG9yeSBhLC5zcmcgLmMtdGFicy1jb250ZW50IGEsLnNyZyAub3Bfb2ZmaWNhbF93ZWlib19jb250ZW50IGEsLnNyZyAub3Bfb2ZmaWNhbF93ZWlib19weiBhLC5zcmcgLm9wX3RpZWJhMl90YWJsaW5rc19jb250YWluZXIgYSwuc3JnIC5vcC10aWViYS1nZW5lcmFsLXJpZ2h0LC5zcmcgLm9wX2RxMDFfdGl0bGUsLnNyZyAub3BfZHEwMV90YWJsZSBhLC5zcmcgLm9wX2RxMDFfbW9yZWxpbmsgYSwuc3JnIC5vcC10aWViYS1nZW5lcmFsLW1haW5wbCBhLC5zcmcgLm9wLXNlLWxpc3Rlbi1yZWNvbW1lbmQsLnNyZyAuYy1vZmZzZXQ+ZGl2IGF7dGV4dC1kZWNvcmF0aW9uOm5vbmU7Y29sb3I6IzI4NjZiZH0uc3JnIC5mMTMgYTpob3Zlciwuc3JnIC5mMTMgZW06aG92ZXIsLnNyZyAuc3ViTGlua19mYWN0b3J5IGE6aG92ZXIsLnNyZyAuYy10YWJzLWNvbnRlbnQgYTpob3Zlciwuc3JnIC5vcF90aWViYTJfdGFibGlua3NfY29udGFpbmVyIGE6aG92ZXIsLnNyZyAub3AtdGllYmEtZ2VuZXJhbC1yaWdodDpob3Zlciwuc3JnIC5vcF9kcTAxX3RpdGxlOmhvdmVyLC5zcmcgLm9wX2RxMDFfdGFibGUgYTpob3Zlciwuc3JnIC5vcF9kcTAxX21vcmVsaW5rIGE6aG92ZXIsLnNyZyAub3AtdGllYmEtZ2VuZXJhbC1tYWlucGwgYTpob3Zlciwuc3JnIC5vcC1zZS1saXN0ZW4tcmVjb21tZW5kOmhvdmVyLC5zcmcgLmMtb2Zmc2V0PmRpdiBhOmhvdmVye3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUhaW1wb3J0YW50fS5zcmcgLmYxMyBhe2NvbG9yOmdyZWVufS5zcmcgLmMtc3BhbjE4LC5zcmcgLmMtc3BhbjI0e3dpZHRoOjEwMCU7bWluLXdpZHRoOnVuc2V0fS5zcmcgLmMtYm9yZGVye3dpZHRoOmF1dG87Ym9yZGVyOjA7Ym9yZGVyLWJvdHRvbS1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXItcmlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym94LXNoYWRvdzowIDAgMCB0cmFuc3BhcmVudDstd2Via2l0LWJveC1zaGFkb3c6MCAwIDAgdHJhbnNwYXJlbnQ7LW1vei1ib3gtc2hhZG93OjAgMCAwIHRyYW5zcGFyZW50Oy1vLWJveC1zaGFkb3c6MCAwIDAgdHJhbnNwYXJlbnR9LnNyZyAuc2VfY29tX2lycmVndWxhcl9nYWxsZXJ5IHVsIGxpLC5zcmcgLm9wX2ppbmd5YW5fbGlzdCwuYmtXTWdkIC5nIC5vcC1pbWctYWRkcmVzcy1saW5rLXR5cGV7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6MTBweH0uYmtXTWdkIC5nW3RwbD1zb2Z0XSAub3Atc29mdC10aXRsZSBhLC5ia1dNZ2QgLmdbdHBsPXNvZnRdIC5vcC1zb2Z0LXRpdGxlIGEgZW0sLmJrV01nZCAuZyBkaXYucj5hLC5ia1dNZ2QgLmcgYSBoMywuYmtXTWdkIC5nIGRpdi5yPmEgZW17Y29sb3I6IzI4NjZiZDtmb250LXdlaWdodDo3MDB9LnNyZyAub3Atc29mdC10aXRsZSBhOnZpc2l0ZWQsLnNyZyAub3Atc29mdC10aXRsZSBhOnZpc2l0ZWQgZW0sLmJrV01nZCAuZyBkaXYucj5hOnZpc2l0ZWQsLmJrV01nZCAuZyBkaXYucj5hOnZpc2l0ZWQgZW0sLmJrV01nZCAuZyBhOnZpc2l0ZWQgaDN7Y29sb3I6IzYwOX0uc3JnIC5vcC1zb2Z0LXRpdGxlIGEsLmJrV01nZCAuZyBkaXYucj5he3Bvc2l0aW9uOnJlbGF0aXZlfS5zcmcgLm9wLXNvZnQtdGl0bGUgYSBlbSwuYmtXTWdkIC5nIGRpdi5yPmEgZW17dGV4dC1kZWNvcmF0aW9uOm5vbmV9LnNyZyAub3Atc29mdC10aXRsZSBhOmhvdmVyOmFmdGVyLC5ia1dNZ2QgLmcgZGl2LnI+YTpob3ZlcjphZnRlcntsZWZ0OjA7d2lkdGg6MTAwJTstd2Via2l0LXRyYW5zaXRpb246d2lkdGggMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zO3RyYW5zaXRpb246d2lkdGggMzUwbXN9LnNyZyAub3Atc29mdC10aXRsZSBhOmFmdGVyLC5ia1dNZ2QgLmcgZGl2LnI+YTphZnRlcntjb250ZW50OiIiO3Bvc2l0aW9uOmFic29sdXRlO2JvcmRlci1ib3R0b206MnB4IHNvbGlkICMyODY2YmQ7Ym90dG9tOi0ycHg7bGVmdDoxMDAlO3dpZHRoOjA7LXdlYmtpdC10cmFuc2l0aW9uOndpZHRoIDM1MG1zLGxlZnQgMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zLGxlZnQgMzUwbXM7dHJhbnNpdGlvbjp3aWR0aCAzNTBtcyxsZWZ0IDM1MG1zfS5zcmcgLm9wLXNvZnQtdGl0bGUgYSAuYmtXTWdkIC5nIGRpdi5yPmF7cG9zaXRpb246cmVsYXRpdmV9LnNyZyAub3Atc29mdC10aXRsZSBhOnZpc2l0ZWQ6aG92ZXI6YWZ0ZXIsLmJrV01nZCAuZyBkaXYucj5hOnZpc2l0ZWQ6aG92ZXI6YWZ0ZXJ7bGVmdDowO3dpZHRoOjEwMCU7LXdlYmtpdC10cmFuc2l0aW9uOndpZHRoIDM1MG1zOy1tb3otdHJhbnNpdGlvbjp3aWR0aCAzNTBtczt0cmFuc2l0aW9uOndpZHRoIDM1MG1zfS5zcmcgLm9wLXNvZnQtdGl0bGUgYTp2aXNpdGVkOmFmdGVyLC5ia1dNZ2QgLmcgZGl2LnI+YTp2aXNpdGVkOmFmdGVye2NvbnRlbnQ6IiI7cG9zaXRpb246YWJzb2x1dGU7Ym9yZGVyLWJvdHRvbToycHggc29saWQgIzYwOTtib3R0b206LTJweDtsZWZ0OjEwMCU7d2lkdGg6MDstd2Via2l0LXRyYW5zaXRpb246d2lkdGggMzUwbXMsbGVmdCAzNTBtczstbW96LXRyYW5zaXRpb246d2lkdGggMzUwbXMsbGVmdCAzNTBtczt0cmFuc2l0aW9uOndpZHRoIDM1MG1zLGxlZnQgMzUwbXN9I3Jze21hcmdpbi10b3A6MDtwYWRkaW5nOjAgMjBweCAxNXB4O2JvcmRlci1yYWRpdXM6NXB4fSNycyAudHR7bWFyZ2luOjAgLTIwcHggNXB4O3BhZGRpbmc6NXB4IDIwcHg7YmFja2dyb3VuZC1jb2xvcjojZjhmOGY4O2JvcmRlci1yYWRpdXM6NXB4IDVweCAwIDB9I3JzIHRhYmxle3dpZHRoOjYzMHB4O3BhZGRpbmc6NXB4IDE1cHh9I3JzIHRhYmxlIHRyIGF7bWFyZ2luLXRvcDo1cHg7bWFyZ2luLWJvdHRvbTo1cHg7Y29sb3I6IzI4NjZiZH0jcnMgdGFibGUgdHIgYTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfSNwYWdle21pbi13aWR0aDo3MTBweDtoZWlnaHQ6NDBweDtsaW5lLWhlaWdodDo0MHB4O3BhZGRpbmctdG9wOjVweDttYXJnaW46MCAwIDUwcHggODBweH0ub3AtaW1nLWFkZHJlc3MtZGVza3RvcC1jb250e292ZXJmbG93OmhpZGRlbn0jcGFnZSBhLCNwYWdlIHN0cm9uZ3tjb2xvcjojMjg2NmJkO2hlaWdodDphdXRvO2JveC1zaGFkb3c6MCAwIDIwcHggMnB4IHJnYmEoMCwwLDAsLjEpOy13ZWJraXQtYm94LXNoYWRvdzowIDAgMjBweCAycHggcmdiYSgwLDAsMCwuMSk7LW1vei1ib3gtc2hhZG93OjAgMCAyMHB4IDJweCByZ2JhKDAsMCwwLC4xKX0jcGFnZSAubjpob3ZlciwjcGFnZSBhOmhvdmVyIC5wY3tib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JhY2tncm91bmQ6I2Q4ZDhkODtjb2xvcjojMDA1N2RhfSNwYWdlIHN0cm9uZyAucGN7YmFja2dyb3VuZDojNDg3OWJkO2NvbG9yOiNmZmZ9QC13ZWJraXQta2V5ZnJhbWVzIGxlZnRfbG9nb1J7MCV7LXdlYmtpdC10cmFuc2Zvcm06dHJhbnNsYXRlWSg2NHB4KTtvcGFjaXR5OjB9NTAle29wYWNpdHk6MH0xMDAle29wYWNpdHk6MX19LmJrV01nZD5kaXY6bm90KFtjbGFzc10pe3dpZHRoOjczMHB4fS5ia1dNZ2Q+ZGl2Om5vdChbY2xhc3NdKXttYXJnaW4tbGVmdDoxOHB4O21hcmdpbi1yaWdodDoxOHB4fS5ia1dNZ2QgLmcgLmV4cC1vdXRsaW5le2Rpc3BsYXk6bm9uZX0jbWFpbiAubXcgI3Joc3ttYXJnaW4tbGVmdDoxMDIwcHh9I3JlcyAuZyAudHN7bWF4LXdpZHRoOnVuc2V0fUBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6MTQwMHB4KXsubXcgI3Joc3tkaXNwbGF5Om5vbmV9fWNpdGV7Zm9udC13ZWlnaHQ6NDAwfSNyZXMgLnJ7bGluZS1oZWlnaHQ6MS4zfSNycywuYmtXTWdkIC5ne21hcmdpbi1ib3R0b206MjBweDtib3JkZXItcmFkaXVzOjEwcHh9LmJrV01nZCAuZyBkaXYucntib3JkZXItcmFkaXVzOjEwcHggMTBweCAwIDB9LmMyeHpUYiAuZywucnVUY0lkIC5nLC5mbTA2SWYgLmcsLmNVblFLZSAuZywuSGFuUW1mIC5ne3dpZHRoOjc1OHB4O3BhZGRpbmctbGVmdDoyMHB4IWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjIwcHghaW1wb3J0YW50O2JveC1zaGFkb3c6MCAwIDAgMCByZ2JhKDAsMCwwKX1kaXYgLnhmeHg1ZHttYXJnaW4tYm90dG9tOi0xOHB4IWltcG9ydGFudDttYXJnaW4tdG9wOi0yNXB4IWltcG9ydGFudH1kaXYgLnhhcUp6Zi54Znh4NWQgLmtuby1mdHJ7bWFyZ2luLXRvcDoxMHB4IWltcG9ydGFudH1kaXYgLmtuby1mdHIgYXtwb3NpdGlvbjpzdGlja3l9"},{"meta":{"name":"googleOnePageStyle.css","url":"http://xbaidu.ntaow.com/newcss/googleOnePageStyle.css?t=23.11","ts":1551921805005,"mimetype":"text/css"},"source":"I2NlbnRlcl9jb2w+KntwYWRkaW5nLWxlZnQ6dW5zZXQ7cGFkZGluZy1yaWdodDp1bnNldDt3aWR0aDoxMDB2d30jY2VudGVyX2NvbCAuc3Atc2VwYXJhdG9ye3dpZHRoOjg5MHB4O21hcmdpbjowIGF1dG99I3Rhd3ttYXgtd2lkdGg6dW5zZXR9LmJrV01nZCAuZ3t3aWR0aDo4OTBweCFpbXBvcnRhbnQ7bWFyZ2luOjAgYXV0bzttYXJnaW4tYm90dG9tOjQwcHh9LmJrV01nZD5kaXY6bm90KFtjbGFzc10pe3dpZHRoOjg2MHB4IWltcG9ydGFudDttYXJnaW46MCBhdXRvO21hcmdpbi1ib3R0b206NDBweH0jcnMsLnNyZyAuZyAucmMgLnN7bWF4LXdpZHRoOnVuc2V0fSNyZXN7bWFyZ2luLWxlZnQ6dW5zZXQhaW1wb3J0YW50fS5zZmliYmJje3dpZHRoOjc2MHB4fS50c2YtcD4ubG9nb2NvbnQsI3Nlai1jb250YWluZXJ7cGFkZGluZy1sZWZ0OmNhbGMoNTB2dyAtIDQ1MHB4KSFpbXBvcnRhbnR9LnRzZi1wPi5zZmliYmJje3BhZGRpbmctbGVmdDpjYWxjKDUwdncgLSA0NzBweCkhaW1wb3J0YW50fSN0b3BfbmF2ICNoZHRiLXN7cGFkZGluZy1sZWZ0OmNhbGMoNTB2dyAtIDU4MHB4KX0uYXBwYmFyICNleHRhYmFyICN0b3BhYmFye3BhZGRpbmctbGVmdDpjYWxjKDUwdncgLSA1ODBweCl9I2lyZXMgI2Jyc3twYWRkaW5nLWxlZnQ6Y2FsYygzN3Z3IC0gMjAwcHgpfSNpcmVzICNyc297d2lkdGg6MTAwdnd9I2NlbnRlcl9jb2x7bWFyZ2luLWxlZnQ6MCFpbXBvcnRhbnR9I2NlbnRlcl9jb2wgI2Zvb3R7d2lkdGg6MTAwdnc7bWFyZ2luOjAgYXV0b30jbWFpbiAubXcgI3Joc3tkaXNwbGF5Om5vbmU7bWFyZ2luLWxlZnQ6Y2FsYyg4MHZ3IC0gMTAwcHgpfS5tZWQgI2JvdHN0dWZme3dpZHRoOjg5MHB4IWltcG9ydGFudDttYXJnaW46MCBhdXRvfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6MTgwMHB4KXsjbWFpbiAubXcgI3Joc3tkaXNwbGF5OmJsb2NrfX1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjEyODBweCl7LmpzcnA+Zm9ybXttYXJnaW46MCBhdXRvfX0="},{"meta":{"name":"googleTwoPageStyle.css","url":"http://xbaidu.ntaow.com/newcss/googleTwoPageStyle.css?t=23.11","ts":1551921805016,"mimetype":"text/css"},"source":"LnNyZ3twb3NpdGlvbjpyZWxhdGl2ZTtmbG9hdDp1bnNldH0uc3JnPi5nLC5ia1dNZ2Q+Lmd7d2lkdGg6dW5zZXQ7bWFyZ2luLWxlZnQ6MjBweDtvdmVyZmxvdzpoaWRkZW47cGFkZGluZzowIDIwcHggMTVweDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbTozMHB4O2JvcmRlci1yYWRpdXM6NXB4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNoYWRvdzowIDAgMjBweCAycHggcmdiYSgwLDAsMCwuMSk7LXdlYmtpdC1ib3gtc2hhZG93OjAgMCAyMHB4IDJweCByZ2JhKDAsMCwwLC4xKTstbW96LWJveC1zaGFkb3c6MCAwIDIwcHggMnB4IHJnYmEoMCwwLDAsLjEpfS5zZWFyY2g+I2lyZXMgLnNyZz4uZ3ttYXgtd2lkdGg6dW5zZXR9I21haW4gLm13ICNyaHN7ZGlzcGxheTpub25lfSNtYWluIC5td3ttYXgtd2lkdGg6dW5zZXR9I21haW4gI2NudHt3aWR0aDo4MHZ3O21hcmdpbi1sZWZ0OjEwdnd9I2FjaWRfc3JjPmRpdnt3aWR0aDp1bnNldDttYXJnaW4tbGVmdDoyMHB4O2dyaWQtY29sdW1uLXN0YXJ0OjE7Z3JpZC1jb2x1bW4tZW5kOjZ9LmJrV01nZCAuQ09Fb2lke21hcmdpbjp1bnNldH0uY29se3dpZHRoOjEwMCUhaW1wb3J0YW50fS5jb2wgI2NlbnRlcl9jb2x7d2lkdGg6MTAwJSFpbXBvcnRhbnQ7bWFyZ2luLWxlZnQ6dW5zZXQhaW1wb3J0YW50fSNhY2lkX3NyY3tkaXNwbGF5OmdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdChhdXRvLWZpdCxtaW5tYXgoNTAlLDFmcikpfS5zcmd7ZGlzcGxheTpncmlkO2dyaWQtdGVtcGxhdGUtY29sdW1uczpyZXBlYXQoYXV0by1maXQsbWlubWF4KDUwJSwxZnIpKX0jYWNpZF9zcmMgZGl2Omxhc3QtY2hpbGR7Z3JpZC1jb2x1bW4tZW5kOjN9LmpzcnA+Zm9ybXttYXJnaW46MCBhdXRvfQ=="},{"meta":{"name":"bingCommonStyle.css","url":"http://xbaidu.ntaow.com/newcss/bingCommonStyle.css?t=23.11","ts":1551921805018,"mimetype":"text/css"},"source":"Ym9keXtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9I2JfY29udGVudCAjYl9yZXN1bHRzPmxpe3dpZHRoOjY3MHB4O3BhZGRpbmc6MTJweCAyMHB4IWltcG9ydGFudDttYXJnaW4tdG9wOjA7bWFyZ2luLWJvdHRvbToyNXB4O2JvcmRlci1yYWRpdXM6NXB4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNoYWRvdzowIDAgMjBweCAycHggcmdiYSgwLDAsMCwuMSk7LXdlYmtpdC1ib3gtc2hhZG93OjAgMCAyMHB4IDJweCByZ2JhKDAsMCwwLC4xKTstbW96LWJveC1zaGFkb3c6MCAwIDIwcHggMnB4IHJnYmEoMCwwLDAsLjEpfSNiX2NvbnRlbnQgI2JfcmVzdWx0cyBhLCNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhe3Bvc2l0aW9uOnJlbGF0aXZlfSNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhLCNiX3Jlc3VsdHMgaDIgc3Ryb25ne2ZvbnQtd2VpZ2h0OjcwMDtmb250LXNpemU6bWVkaXVtfSNiX2NvbnRlbnQgI2JfcmVzdWx0cz5saTpob3Zlcntib3gtc2hhZG93OjAgMCAycHggZ3JheSFpbXBvcnRhbnQ7YmFja2dyb3VuZDpyZ2JhKDIzMCwyMzAsMjMwLC4xKSFpbXBvcnRhbnR9I2JfY29udGVudD4jYl9yZXN1bHRzIGxpIGgye2JhY2tncm91bmQtY29sb3I6I2Y4ZjhmODttYXJnaW46LTEycHggLTIwcHggMTBweDtwYWRkaW5nOjhweCAyMHB4IDVweDtib3JkZXItcmFkaXVzOjVweCA1cHggMCAwfWEsYSBzdHJvbmd7dGV4dC1kZWNvcmF0aW9uOm5vbmV9I2JfY29udGVudCAjYl9yZXN1bHRzIGEgc3Ryb25nLCNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhIHN0cm9uZ3t0ZXh0LWRlY29yYXRpb246bm9uZX0jYl9jb250ZW50ICNiX3Jlc3VsdHMgYTpob3ZlcjphZnRlciwjYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgYTpob3ZlcjphZnRlcntsZWZ0OjA7d2lkdGg6MTAwJTstd2Via2l0LXRyYW5zaXRpb246d2lkdGggMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zO3RyYW5zaXRpb246d2lkdGggMzUwbXN9I2JfY29udGVudCAjYl9yZXN1bHRzIGE6YWZ0ZXIsI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGE6YWZ0ZXJ7Y29udGVudDoiIjtwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXItYm90dG9tOjJweCBzb2xpZCAjMjg2NmJkO2JvdHRvbToxcHg7bGVmdDoxMDAlO3dpZHRoOjA7LXdlYmtpdC10cmFuc2l0aW9uOndpZHRoIDM1MG1zLGxlZnQgMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zLGxlZnQgMzUwbXM7dHJhbnNpdGlvbjp3aWR0aCAzNTBtcyxsZWZ0IDM1MG1zfSNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhOnZpc2l0ZWQsI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGE6dmlzaXRlZCBzdHJvbmcsI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGgyIGE6dmlzaXRlZCwjYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgaDIgYTp2aXNpdGVkIHN0cm9uZ3tjb2xvcjojNjA5fSNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhOnZpc2l0ZWQ6aG92ZXI6YWZ0ZXIsI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGgyIGE6dmlzaXRlZDpob3ZlcjphZnRlcntsZWZ0OjA7d2lkdGg6MTAwJTstd2Via2l0LXRyYW5zaXRpb246d2lkdGggMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zO3RyYW5zaXRpb246d2lkdGggMzUwbXN9I2JfY29udGVudD5vbCNiX2NvbnRleHR7ZGlzcGxheTpub25lfWJvZHkgI2JfaGVhZGVye2JhY2tncm91bmQtY29sb3I6I2Y1ZjVmNX0jYl9jb250ZW50IC5iX3VuZGVyU2VhcmNoYm94e21hcmdpbi10b3A6MTBweH0="},{"meta":{"name":"bingOnePageStyle.css","url":"http://xbaidu.ntaow.com/newcss/bingOnePageStyle.css?t=23.11","ts":1551921805022,"mimetype":"text/css"},"source":"I2JfY29udGVudCAjYl9yZXN1bHRze3dpZHRoOjgwdnd9Ym9keSAjYl9oZWFkZXJ7d2lkdGg6Nzl2dztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7bWFyZ2luOjAgYXV0b30jYl9jb250ZW50e21hcmdpbi1sZWZ0OjV2d30jYl9jb250ZW50ICNiX3Jlc3VsdHM+bGl7d2lkdGg6OTglfWJvZHkgI3Nlai1jb250YWluZXJ7cGFkZGluZy1sZWZ0OmNhbGMoMTIlIC0gMTEzcHgpIWltcG9ydGFudH0="},{"meta":{"name":"bingTwoPageStyle.css","url":"http://xbaidu.ntaow.com/newcss/bingTwoPageStyle.css?t=23.11","ts":1551921805047,"mimetype":"text/css"},"source":"I2NvbnRhaW5lciAjY29udGVudF9sZWZ0IC5oaXRfdG9wX25ld3tkaXNwbGF5Om5vbmV9I2JfY29udGVudCAjYl9yZXN1bHRze3dpZHRoOjgwdnc7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdChhdXRvLWZpdCxtaW5tYXgoNTAlLDFmcikpO2Rpc3BsYXk6aW5saW5lLWdyaWR9I2JfY29udGVudCAjYl9yZXN1bHRzPmxpe3dpZHRoOjk4JX0jYl9tc2csI2JfcGFne2dyaWQtY29sdW1uLWVuZDozO2dyaWQtY29sdW1uLXN0YXJ0OjE7YmFja2dyb3VuZC1jb2xvcjojZmZmfWJvZHkgI2JfY29udGVudHttYXJnaW4tbGVmdDo1dnd9Ym9keSAjc2VqLWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6Y2FsYygxMiUgLSAxMTNweCkhaW1wb3J0YW50fQ=="},{"meta":{"name":"sogouCommonStyle.css","url":"http://xbaidu.ntaow.com/newcss/sogouCommonStyle.css?t=23.11","ts":1551921805024,"mimetype":"text/css"},"source":"Ym9keXtiYWNrZ3JvdW5kLWNvbG9yOiNmNWY1ZjV9I2Jpel90aXBfYm94X3R1aWd1YW5nX2Zsb2F0e2Rpc3BsYXk6bm9uZX0udG9wLWJhciBsaXtsaW5lLWhlaWdodDozNXB4fS50b3AtYmFyIC5zb2dvdS1zZXQtYm94IGF7ZGlzcGxheTppbmxpbmUtYmxvY2t9I21haW4gLnJlc3VsdHN7d2lkdGg6MTAwJSFpbXBvcnRhbnR9I21haW4gLnJlc3VsdHM+ZGl2e3dpZHRoOjEwMCUhaW1wb3J0YW50O292ZXJmbG93OmhpZGRlbjtwYWRkaW5nOjEycHggMjBweCFpbXBvcnRhbnQ7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MjVweDtib3JkZXItcmFkaXVzOjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym94LXNpemluZzpib3JkZXItYm94O2JveC1zaGFkb3c6MCAwIDIwcHggMnB4IHJnYmEoMCwwLDAsLjEpOy13ZWJraXQtYm94LXNoYWRvdzowIDAgMjBweCAycHggcmdiYSgwLDAsMCwuMSk7LW1vei1ib3gtc2hhZG93OjAgMCAyMHB4IDJweCByZ2JhKDAsMCwwLC4xKX0ucmVzdWx0cyAucmIgYSwucmVzdWx0cyAudnJ3cmFwIGEsLnJlc3VsdHMgLnJiIGgzIGEsLnJlc3VsdHMgLnZyd3JhcCBoMyBhe3Bvc2l0aW9uOnJlbGF0aXZlfSNtYWluIC5yZXN1bHRzPmRpdjpob3Zlcntib3gtc2hhZG93OjAgMCAycHggZ3JheSFpbXBvcnRhbnQ7YmFja2dyb3VuZDpyZ2JhKDIzMCwyMzAsMjMwLC4xKSFpbXBvcnRhbnR9I21haW4gLnJlc3VsdHM+ZGl2IGgze2JhY2tncm91bmQtY29sb3I6I2Y4ZjhmODttYXJnaW46LTEycHggLTIwcHggMTBweDtwYWRkaW5nOjhweCAyMHB4IDVweDtib3JkZXItcmFkaXVzOjVweCA1cHggMCAwfWEsYSBzdHJvbmd7dGV4dC1kZWNvcmF0aW9uOm5vbmV9I21haW4gLnJlc3VsdHM+ZGl2IGEgc3Ryb25nLCNtYWluIC5yZXN1bHRzPmRpdiBoMyBhIHN0cm9uZ3t0ZXh0LWRlY29yYXRpb246bm9uZX0jbWFpbiAucmVzdWx0cz5kaXYgYTpob3ZlcjphZnRlciwjbWFpbiAucmVzdWx0cz5kaXYgaDMgYTpob3ZlcjphZnRlcntsZWZ0OjA7d2lkdGg6MTAwJTstd2Via2l0LXRyYW5zaXRpb246d2lkdGggMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zO3RyYW5zaXRpb246d2lkdGggMzUwbXN9I21haW4gLnJlc3VsdHM+ZGl2IGE6YWZ0ZXIsI21haW4gLnJlc3VsdHM+ZGl2IGgzIGE6YWZ0ZXJ7Y29udGVudDoiIjtwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXItYm90dG9tOjJweCBzb2xpZCAjMjg2NmJkO2JvdHRvbToxcHg7bGVmdDoxMDAlO3dpZHRoOjA7LXdlYmtpdC10cmFuc2l0aW9uOndpZHRoIDM1MG1zLGxlZnQgMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zLGxlZnQgMzUwbXM7dHJhbnNpdGlvbjp3aWR0aCAzNTBtcyxsZWZ0IDM1MG1zfSNtYWluIC5yZXN1bHRzPmRpdiBoMyBhOnZpc2l0ZWQsI21haW4gLnJlc3VsdHM+ZGl2IGgzIGE6dmlzaXRlZCBzdHJvbmcsI21haW4gLnJlc3VsdHM+ZGl2IGgzIGgzIGE6dmlzaXRlZCwjbWFpbiAucmVzdWx0cz5kaXYgaDMgaDMgYTp2aXNpdGVkIHN0cm9uZ3tjb2xvcjojNjA5fSNtYWluIC5yZXN1bHRzPmRpdiBoMyBhOnZpc2l0ZWQ6aG92ZXI6YWZ0ZXIsI21haW4gLnJlc3VsdHM+ZGl2IGgzIGgzIGE6dmlzaXRlZDpob3ZlcjphZnRlcntsZWZ0OjA7d2lkdGg6MTAwJTstd2Via2l0LXRyYW5zaXRpb246d2lkdGggMzUwbXM7LW1vei10cmFuc2l0aW9uOndpZHRoIDM1MG1zO3RyYW5zaXRpb246d2lkdGggMzUwbXN9"},{"meta":{"name":"sogouOnePageStyle.css","url":"http://xbaidu.ntaow.com/newcss/sogouOnePageStyle.css?t=23.11","ts":1551921805026,"mimetype":"text/css"},"source":"LndyYXAgLndyYXBwZXIgLnJpZ2h0e2Rpc3BsYXk6bm9uZX0ud3JhcCAud3JhcHBlcntwYWRkaW5nLWxlZnQ6dW5zZXR9LndyYXA+LndyYXBwZXIgI21haW4sLndyYXA+LmhpbnRCb3gsLndyYXA+LnB7d2lkdGg6NTV2dzttYXgtd2lkdGg6NTV2dzttaW4td2lkdGg6ODUwcHg7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luOjAgYXV0bztmbG9hdDp1bnNldDtwYWRkaW5nLXJpZ2h0OnVuc2V0O3BhZGRpbmctbGVmdDp1bnNldH0jbWFpbiAucmVzdWx0cz5kaXZ7d2lkdGg6MTAwJSFpbXBvcnRhbnR9LndyYXAgLmhlYWRlciAuaGVhZGVyLWJveHttaW4td2lkdGg6ODUwcHg7d2lkdGg6NTB2dzttYXJnaW46MCBhdXRvfS53cmFwIC5oZWFkZXIgLmhlYWRlci1ib3ggYS5sb2dve2xlZnQ6dW5zZXR9Ym9keSAjc2VqLWNvbnRhaW5lcntwYWRkaW5nLWxlZnQ6Y2FsYygxMiUgLSAxMTNweCkhaW1wb3J0YW50fQ=="},{"meta":{"name":"sogouTwoPageStyle.css","url":"http://xbaidu.ntaow.com/newcss/sogouTwoPageStyle.css?t=23.11","ts":1551921805038,"mimetype":"text/css"},"source":"LndyYXAgLndyYXBwZXIgLnJpZ2h0e2Rpc3BsYXk6bm9uZX0ud3JhcCAud3JhcHBlcntwYWRkaW5nLWxlZnQ6dW5zZXR9LndyYXA+LndyYXBwZXIgI21haW4sLndyYXA+LmhpbnRCb3gsLndyYXA+LnB7d2lkdGg6NzV2dzttYXgtd2lkdGg6dW5zZXQ7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luOjAgYXV0bztmbG9hdDp1bnNldDtwYWRkaW5nLXJpZ2h0OnVuc2V0O3BhZGRpbmctbGVmdDp1bnNldH0jbWFpbiAucmVzdWx0c3t3aWR0aDoxMDAlO2Rpc3BsYXk6aW5saW5lLWdyaWQ7Z3JpZC10ZW1wbGF0ZS1jb2x1bW5zOnJlcGVhdChhdXRvLWZpdCxtaW5tYXgoNTAlLDFmcikpfSNtYWluIC5yZXN1bHRzPmRpdnttYXJnaW4tbGVmdDo1cHg7bWFyZ2luLXJpZ2h0OjE1cHg7d2lkdGg6dW5zZXQhaW1wb3J0YW50fS53cmFwIC5oZWFkZXIgLmhlYWRlci1ib3h7bWluLXdpZHRoOjg1MHB4O3dpZHRoOjUwdnc7bWFyZ2luOjAgYXV0b30ud3JhcCAuaGVhZGVyIC5oZWFkZXItYm94IGEubG9nb3tsZWZ0OnVuc2V0fWJvZHkgI3Nlai1jb250YWluZXJ7cGFkZGluZy1sZWZ0OmNhbGMoMTIlIC0gMTEzcHgpIWltcG9ydGFudH0="},{"meta":{"name":"HuYanStyle.css","url":"http://xbaidu.ntaow.com/newcss/HuYanStyle.css?t=23.11","ts":1551921805035,"mimetype":"text/css"},"source":"Ym9keVtiYWlkdV0sI3dyYXBwZXIgI2hlYWQsI3dyYXBwZXIgI3NfdGFiLGZvcm0uZm0gLnNfaXB0X3dyLmJne2JhY2tncm91bmQtY29sb3I6I2ZmZn0jd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3AsI3dyYXBwZXIgI2NvbnRlbnRfbGVmdCAucmVzdWx0LCN3cmFwcGVyICNycywjd3JhcHBlciAjcnMsI3dyYXBwZXIgI2NvbnRlbnRfcmlnaHR7YmFja2dyb3VuZC1jb2xvcjojYWFhO2JvcmRlcjoxcHggZG91YmxlICNhMmQ3ZDQ7Ym9yZGVyLXJhZGl1czowfSN3cmFwcGVyICNjb250ZW50X2xlZnQgLnJlc3VsdC1vcDpob3Zlciwjd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojY2NjIWltcG9ydGFudH0jd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQgaDMsI3dyYXBwZXIgI2NvbnRlbnRfbGVmdCAucmVzdWx0LW9wIGgzLCN3cmFwcGVyICNjb250ZW50X2xlZnQgLmMtY29udGFpbmVyIGgzLCN3cmFwcGVyICNycyAudHR7YmFja2dyb3VuZC1jb2xvcjojYmJifS5uYV9jbnQgLm53c19pdG0sLm53c19pdG1iLCNiX2NvbnRlbnQgI2JfcmVzdWx0cyBsaSxib2R5ICNiX2hlYWRlcntiYWNrZ3JvdW5kLWNvbG9yOiNhYWE7Ym9yZGVyOjFweCBkb3VibGUgI2EyZDdkNDtib3JkZXItcmFkaXVzOjB9I2JfY29udGVudCAjYl9yZXN1bHRzIGxpOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2NjYyFpbXBvcnRhbnR9I2JfY29udGVudCAjYl9yZXN1bHRzIGxpIGgye2JhY2tncm91bmQtY29sb3I6I2JiYn1ib2R5W2dvb2dsZV17YmFja2dyb3VuZC1jb2xvcjojZmRmZGZkfS5zcmcgLmcsLmJrV01nZD4uZywuYmtXTWdkIGctaW5uZXItY2FyZCwjcmhzY29sICNyaHMsI3Joc2NvbCAjcmhzIC5nPmRpdiwuYzJ4elRiIC5nLC5ydVRjSWQgLmcsLmZtMDZJZiAuZywuY1VuUUtlIC5nLC5IYW5RbWYgLmd7YmFja2dyb3VuZC1jb2xvcjojYWFhO2JvcmRlcjoxcHggZG91YmxlICNhMmQ3ZDQ7Ym9yZGVyLXJhZGl1czowfS5zcmcgLmc6aG92ZXIsLmJrV01nZD4uZzpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNjY2MhaW1wb3J0YW50fS5ia1dNZ2QgLmcgZGl2LnIsLnNyZyAuZyBoM3tiYWNrZ3JvdW5kLWNvbG9yOiNiYmJ9"}]},{"name":"网页强制复制","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":true,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194696},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/218-%E7%BD%91%E9%A1%B5%E5%BC%BA%E5%88%B6%E5%A4%8D%E5%88%B6/code/%E7%BD%91%E9%A1%B5%E5%BC%BA%E5%88%B6%E5%A4%8D%E5%88%B6.user.js","uuid":"49785a30-8d71-475d-a3f9-776deb01e244","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAg572R6aG15by65Yi25aSN5Yi2Ci8vIEBuYW1lc3BhY2UgICAgaHR0cDovL2dvb2dsby5tZS8KLy8gQGF1dGhvcgnml6Dms5Xor4nor7TnmoTlkJ/ojaEKLy8gQGljb24JICBodHRwOi8vZ29vZ2xvLm1lL2Zhdmljb24uaWNvCi8vIEB2ZXJzaW9uCTMuMwovLyBAZGVzY3JpcHRpb24J5Y+z6ZSu5by65Yqb6Kej6ZSB77yM5Y+v5Lul5aSN5Yi25LiA5Lqb572R56uZ55qE5YWN6LS556ug6IqC5oiW6ICF54m55q6K5paH5a2XCi8vIEBob21lcGFnZQlodHRwczovL2dyZWFzeWZvcmsub3JnL3poLUNOL3NjcmlwdHMvMjE4Ci8vIEBpbmNsdWRlICAgICAgICAqCi8vIEBncmFudCAgICAgICAgICB1bnNhZmVXaW5kb3cKLy8gQHJlcXVpcmUgICAgICAgIGh0dHA6Ly9saWJzLmJhaWR1LmNvbS9qcXVlcnkvMi4wLjAvanF1ZXJ5Lm1pbi5qcwoKLy8gPT0vVXNlclNjcmlwdD09CiAgICBmdW5jdGlvbiByZXN0b3JlKCl7CiAgICB3aXRoIChkb2N1bWVudC53cmFwcGVkSlNPYmplY3QgfHwgZG9jdW1lbnQpIHsKICAgIG9ubW91c2V1cCA9IG51bGw7CiAgICBvbm1vdXNlZG93biA9IG51bGw7CiAgICBvbmNvbnRleHRtZW51ID0gbnVsbDsKICAgIH0KICAgIHZhciBhckFsbEVsZW1lbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJyonKTsKICAgIGZvciAodmFyIGkgPSBhckFsbEVsZW1lbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7CiAgICB2YXIgZWxtT25lID0gYXJBbGxFbGVtZW50c1tpXTsKICAgIHdpdGggKGVsbU9uZS53cmFwcGVkSlNPYmplY3QgfHwgZWxtT25lKSB7CiAgICBvbm1vdXNldXAgPSBudWxsOwogICAgb25tb3VzZWRvd24gPSBudWxsOwogICAgfQogICAgfQogICAgfQoKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJyxyZXN0b3JlLHRydWUpOwoKICAgIGZ1bmN0aW9uIGFkZEdsb2JhbFN0eWxlKGNzcykgewogICAgICAgIHZhciBoZWFkLCBzdHlsZTsKICAgICAgICBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgICAgICBpZiAoIWhlYWQpIHsgcmV0dXJuOyB9CiAgICAgICAgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwogICAgICAgIHN0eWxlLnR5cGUgPSAndGV4dC9jc3MnOwogICAgICAgIHN0eWxlLmlubmVySFRNTCA9IGNzczsKICAgICAgICBoZWFkLmFwcGVuZENoaWxkKHN0eWxlKTsKICAgIH0KCiAgICBhZGRHbG9iYWxTdHlsZSgiaHRtbCwgKiB7LW1vei11c2VyLXNlbGVjdDp0ZXh0IWltcG9ydGFudDt9Iik7","requires":[{"meta":{"name":"jquery.min.js","url":"http://libs.baidu.com/jquery/2.0.0/jquery.min.js","ts":1551919618292,"mimetype":"text/javascript"},"source":""}]},{"name":"网盘提取工具","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":["/(^[^:\\/#\\?]*:\\/\\/([^#\\?\\/]*\\.)?www\\.bilibili\\.com(:[0-9]{1,5})?\\/.*$)/"],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194699},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/18733-%E7%BD%91%E7%9B%98%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7/code/%E7%BD%91%E7%9B%98%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7.user.js","uuid":"f0401549-58a9-4a3f-98a2-8d10038d5e02","source":""},{"name":"Baidu Tieba: No Login","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/^https?://(?:tieba\\.baidu\\.com|www\\.tieba\\.com|dq\\.tieba\\.com|jump2?\\.bdimg\\.com)//"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194703},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/14151-baidu-tieba-no-login/code/Baidu%20Tieba:%20No%20Login.user.js","uuid":"478dbc75-c1e0-4755-b857-823779e7fd65","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWVzcGFjZSAgIFZBX2kKLy8gQHZlcnNpb24gICAgIDQuMS4wLjIwMTgxMDIwCi8vIEBncmFudCAgICAgICB1bnNhZmVXaW5kb3cKLy8gQGluY2x1ZGUgICAgIC9eaHR0cHM/Oi8vKD86dGllYmFcLmJhaWR1XC5jb218d3d3XC50aWViYVwuY29tfGRxXC50aWViYVwuY29tfGp1bXAyP1wuYmRpbWdcLmNvbSkvLwovLyBAcnVuLWF0ICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQG5hbWUgICAgICAgIEJhaWR1IFRpZWJhOiBObyBMb2dpbgovLyBAbmFtZTp6aC1DTiAg55m+5bqm6LS05ZCn77ya5LiN55m75b2V5Y2z5Y+v55yL6LS0Ci8vIEBuYW1lOnpoLVRXICDnmb7luqbotLTlkKfvvJrkuI3nmbvlhaXljbPlj6/nnIvosrwKLy8gQGRlc2NyaXB0aW9uIFZpZXcgQmFpZHUgVGllYmEgd2l0aG91dCBsb2dpbi4KLy8gQGRlc2NyaXB0aW9uOnpoLUNOIOeZvuW6pui0tOWQp+eci+i0tO+8iOWMheaLrOalvOS4realvO+8ieaXoOmhu+eZu+W9leOAggovLyBAZGVzY3JpcHRpb246emgtVFcg55m+5bqm6LS05ZCn55yL6LK877yI5YyF5ous5qiT5Lit5qiT77yJ54Sh6aCI55m75YWl44CCCi8vID09L1VzZXJTY3JpcHQ9PQoKdW5zYWZlV2luZG93Lk9iamVjdC5mcmVlemUgPSBudWxsOwoKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uIChldmVudCkgewogIHRyeSB7CiAgICB1bnNhZmVXaW5kb3cuUGFnZURhdGEudXNlci5pc19sb2dpbiA9IDE7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIC8vYWxlcnQoZXJyb3IpOwogIH0KfSwgdHJ1ZSk7Cg=="},{"name":"gwdang","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://*.jd.com/*","https://*.jd.com/*","http://*.jd.hk/*","https://*.jd.hk/*","http://*.yiyaojd.com/*","https://*.yiyaojd.com/*","http://*.taobao.com/*","https://*.taobao.com/*","http://*.tmall.com/*","https://*.tmall.com/*","https://*.tmall.hk/*","http://*.yixun.com/*","http://*.51buy.com/*","http://*.yhd.com/*","http://*.suning.com/*","https://*.suning.com/*","http://*.dangdang.com/*","http://*.gome.com.cn/*","http://*.newegg.cn/*","http://*.paipai.com/*","https://*.amazon.com/*","https://*.amazon.cn/*","https://*.amazon.*/*","http://www.kjt.com/*","http://www.kaola.com/*","https://www.kaola.com/*","http://www.kaola.com.hk/*","https://www.kaola.com.hk/*","http://www.tcl.com/*","http://shop.hisense.com/*","http://*.oppo.com/*","http://shop.vivo.com.cn/*","http://www.ebay.com/*","http://t.dianping.com/*","http://*.nuomi.com/*","http://*.meituan.com/*","https://yao.95095.com/*","http://*.feiniu.com/*","http://*.meilishuo.com/*","http://*.mogujie.com/*","http://shop.coolpad.cn/*","http://*.sephora.cn/*","http://*.yesmywine.com/*","http://*.yiguo.com/*","http://*.wanggou.com/*","http://mall.jia.com/*","http://weigou.baidu.com/*","http://*.mi.com/*","http://shop.letv.com/*","http://*.handu.com/*","http://*.taoshu.com/*","http://*.1688.com/*","http://*.muyingzhijia.com/*","http://*.vmall.com/*","http://*.xiji.com/*","http://*.xijie.com/*","http://www.yougou.com/*","http://www.okbuy.com/*","http://*.001town.com/*","http://*.01goo.com/*","http://*.03l.cn/*","http://*.133china.com/*","http://*.139shop.com/*","http://yxp.163.com/*","http://*.168dg.com/*","http://*.186mall.com/*","http://*.18to82.com/*","http://*.1j.cn/*","http://*.22shop.com/*","http://*.24dq.com/*","http://*.24quan.com/*","http://*.258sd.com/*","http://*.2688.com/*","http://*.360buy.com/*","http://*.360hqb.com/*","http://*.360kxr.com/*","http://*.360mart.com/*","http://*.365goba.com/*","http://*.38hzt.com/*","http://*.39ty.com/*","http://*.4inlook.com/*","http://*.5188bag.com/*","http://*.51buy.com/*","http://51buy.com/","http://*.51dg.com/*","http://*.51eng.com/*","http://*.51sheyuan.com/*","http://*.51youpin.com/*","http://*.520eye.com/*","http://*.52shehua.com/*","http://*.5366.com/*","http://t.58.com/*","http://*.58hua.com/*","http://*.5lux.com/*","http://*.5yth.com/*","http://*.6919.com/*","http://*.6sbuy.com/*","http://*.77toy.com/*","http://*.7caihua.com/*","http://*.7cv.com/*","http://*.7sev.com/*","http://*.80ebus.com/*","http://*.8801.net/*","http://*.919it.com/*","http://*.929.cn/*","http://*.942radio.com/*","http://b2c.958shop.com/*","http://*.96128.com/*","http://*.99pto.com/*","http://*.99read.com/*","http://*.9dadao.com/*","http://*.9you.com/*","http://*.afffff.com/*","http://*.ai356.com/*","http://*.aibang.com/*","http://*.aidai.com/*","http://*.aiju.com/*","http://*.aim36.com/*","http://*.aimer.com.cn/*","http://*.aiyingshi.com/*","http://*.aizhigu.com.cn/*","http://*.amazon.cn/*","http://*.anni.com/*","http://*.apabi.com/*","http://*.augshow.com/*","http://*.autosup.com/*","http://*.baiyjk.com/*","http://*.bbesports.com/*","http://*.bookuu.com/*","http://*.bearbuy.com.cn/*","http://*.beautyplus.cn/*","http://*.beifabook.com/*","http://*.benq.com.cn/*","http://*.best1.com/*","http://*.biaoshang.hk/*","http://*.binggo.com/*","http://*.bloves.com/*","http://*.bobomobi.com/*","http://*.bookschina.com/*","http://*.boqii.com/*","http://*.buding.com/*","http://*.buy007.com/*","http://*.buy361.cn/*","http://*.buyfine.net/*","http://*.buynow.com.cn/*","http://*.caistv.com/*","http://*.caomeipai.com/*","http://*.car339.com.cn/*","http://*.car6688.com/*","http://*.carrefour.com.cn/*","http://*.cdream.com/*","http://*.ceetop.com/*","http://*.chashu.cn/*","http://*.chedangjia.com/*","http://*.chengdecs.com/*","http://*.china-gift.com/*","http://*.china-pub.com/*","http://emall.chinapay.com/*","http://*.chinayrs.com/*","http://*.chris-tina.com/*","http://*.clady.com/*","http://*.clinique.com.cn/*","http://*.cncard.com/*","http://*.cnfse.com/*","http://*.colebuy.com/*","http://*.conslive.com/*","http://*.coo8.com/*","http://*.cosize.com/*","http://*.cosme-de.com/*","http://*.ctrip.com/*","http://*.cw100.com/*","http://*.d1.com.cn/*","http://*.daisonghua.com/*","http://*.dangdang.com/*","http://*.daoyao.com/*","http://*.woyo.com/*","http://*.dazhe.cn/*","http://*.dazhongdianqi.com.cn/*","http://*.dianpu.com/*","http://*.didatuan.com/*","http://*.disiqu.cn/*","http://*.dixintong.com/*","http://*.doulaimai.com/*","http://*.dsgoo.com/*","http://*.dtoto.com/*","http://*.duhub.com/*","http://*.duoding.com/*","http://*.e-giordano.com/*","http://*.e-lining.com/*","http://*.e-my.com.cn/*","http://*.easy361.com/*","http://*.ebaimi.com/*","http://*.eboxbuy.com/*","http://*.ebtea.com/*","http://*.ecosme.cn/*","http://*.efeihu.com/*","http://*.ehaier.com/*","http://*.ejia.com/*","http://*.enet.com.cn/*","http://*.enjoyeye.com/*","http://*.epetbar.com/*","http://*.et5155.com/*","http://*.f508.com/*","http://*.fclub.cn/*","http://*.flowerby.com/*","http://*.flowercn.com/*","http://*.gap.cn/*","http://*.godida.com/*","http://*.gome.com.cn/*","http://*.goocctv.cn/*","http://*.goodjd.com/*","http://*.goodnourish.cn/*","http://*.gou3618.com/*","http://*.gouduo.com/*","http://*.gouwulian.com/*","http://*.gouxie.com/*","http://*.goyahome.com/*","http://*.guobuy.com/*","http://*.guopi.com/*","http://*.guuoo.com/*","http://*.hany.cn/*","http://*.happigo.com/*","http://*.hit168.com.cn/*","http://*.hitao.com/*","http://*.homeold.cn/*","http://*.homevv.com/*","http://*.hongkouzi.com/*","http://*.hopebook.net/*","http://*.huachu.com.cn/*","http://*.huimeifang.cn/*","http://*.hw2008.cn/*","http://*.icaifeng.com/*","http://*.icson.com/*","http://*.ideemall.com/*","http://*.ihush.com/*","http://*.iloveyou.com.cn/*","http://*.ilovezuan.com/*","http://*.imeelee.com/*","http://*.inoble.com.cn/*","http://*.inshion.com/*","http://*.ishop.cn/*","http://*.it88.com.cn/*","http://*.itzm.com/*","http://*.iyuyou.com/*","http://*.jiajiajk.com/*","http://*.jiaju.com/*","http://*.jiatx.com/*","http://*.jiayougo.com/*","http://*.jinbaidu.com/*","http://*.jmeishop.com/*","http://*.joyran.com/*","http://*.jsbcmall.com/*","http://*.jtlhome.com/*","http://*.jumei.com/*","http://*.junph.com/*","http://*.justonline.cn/*","http://*.jxdyf.com/*","http://*.k121.com/*","http://*.kadang.com/*","http://*.keede.com.cn/*","http://*.kela.cn/*","http://*.kuaishubao.com/*","http://*.kxtkx.com/*","http://*.ladypk.com/*","http://*.laeibelle.com/*","http://*.lafaso.com/*","http://*.lamiu.com/*","http://*.lancome.com.cn/*","http://*.lashou.com/*","http://*.ledaojia.com/*","http://*.leftlady.com/*","http://*.lenovo.com.cn/*","http://*.lens2005.com/*","http://*.letao.com/*","http://*.leyou.com/*","http://*.leyou.com.cn/*","http://*.lijiababy.com.cn/*","http://*.lijigou.com/*","http://*.likebuy.com/*","http://*.likeface.com/*","http://*.lingshi.com/*","http://*.liqunshop.com/*","http://*.liyi99.com/*","http://*.locknlock.com.cn/*","http://*.lovo.cn/*","http://*.luckigo.com/*","http://*.lusen.com/*","http://*.lyceem.com/*","http://*.m18.com/*","http://*.maichawang.com/*","http://*.maimaike.cn/*","http://*.mamabb.com/*","http://*.mamahao.cn/*","http://*.mangocity.com/*","http://*.manzuo.com/*","http://*.masamaso.com/*","http://*.maxfunbuy.com/*","http://*.maywon.com/*","http://*.mbaobao.com/*","http://*.meici.com/*","http://*.meilele.com/*","http://*.meilieasy.com/*","http://*.meituan.com/*","http://*.menglu.com/*","http://*.mengmai.com/*","http://*.minibuy.com/*","http://*.mmgw.cn/*","http://*.mmuses.com/*","http://*.mobi001.com/*","http://*.mokamall.com/*","http://*.momoyoyo.com/*","http://*.montrosechina.com/*","http://*.mooiee.com/*","http://*.moonbasa.com/*","http://*.motostore.com.cn/*","http://*.mpshow.com.cn/*","http://*.naccoo.com/*","http://*.naguu.com/*","http://*.nayao.com/*","http://*.newegg.com.cn/*","http://*.newgo5.com/*","http://*.nmlch.com/*","http://*.no5.com.cn/*","http://*.nokia.com.cn/*","http://*.nonmin88.com/*","http://*.obuy.cn/*","http://*.ofcard.com/*","http://*.ogage.cn/*","http://*.okbig.com/*","http://*.okbuy.com/*","http://*.okddy.com/*","http://*.okgolf.cn/*","http://*.olomo.com/*","http://*.olympus.com.cn/*","http://*.olymsports.com/*","http://*.ono.com.cn/*","http://*.orange3c.com/*","http://*.ouku.com/*","http://*.ourtasty.com/*","http://*.outice.com/*","http://*.oyego.com/*","http://*.paixie.net/*","http://*.palcent.com/*","http://*.ocj.com.cn/*","http://*.pb89.com/*","http://*.pcarm.com/*","http://*.petyoo.com/*","http://*.pgbao.com/*","http://*.piaoliang100.com/*","http://*.pirateship.com.cn/*","http://*.popyj.com/*","http://*.pupai.cn/*","http://*.purcotton.com/*","http://*.qianxun.com/*","http://*.qingci.com/*","http://*.qinqinbaby.com/*","http://*.qmango.com/*","http://*.qumei.com/*","http://*.quwan.com/*","http://*.qxian.com/*","http://*.rayi.cn/*","http://*.redbaby.com.cn/*","http://*.robam.com/*","http://*.salala.com.cn/*","http://*.samsclub.cn/*","http://*.sanfo.com/*","http://*.sapo.com.hk/*","http://*.sasa.com/*","http://*.sasacity.com/*","http://*.sawbuy.com/*","http://*.shanghai-sports.com/*","http://*.shentop.com/*","http://*.shishangqiyi.com/*","http://*.shjdq.com/*","http://*.shnn.com/*","http://*.shopin.net/*","http://*.shoubiao.com.cn/*","http://*.sigo.cn/*","http://mall.sina.com.cn/*","http://*.sinobuy.cn/*","http://*.skcoo.com/*","http://*.skomart.com/*","http://*.snyun.com/*","http://*.sonmai.cn/*","http://*.sport2008.com.cn/*","http://*.strawberrynet.com/*","http://*.suning.com/*","http://*.sz-esun.com/*","http://*.tao3c.com/*","http://item.taobao.com/*","http://*.taoxie.cn/*","http://*.the365.com/*","http://*.thinkshop.cn/*","http://*.tian10.com/*","http://*.tiantian.com/*","http://*.junph.com/*","http://*.tieyou.com/*","http://detail.tmall.com/*","http://*.togj.com/*","http://*.tooogooo.com/*","http://*.toy90.com/*","http://*.toys365.com/*","http://*.tpy100.com/*","http://*.tuniu.com/*","http://*.tztart.com/*","http://*.ugou.cn/*","http://*.uipmall.com/*","http://*.uiyi.cn/*","http://*.ushan.cn/*","http://*.uushouji.com/*","http://*.uya100.com/*","http://*.vaakav.com/*","http://*.vafox.com/*","http://*.vancl.com/*","http://*.vcotton.com/*","http://*.veedl.com/*","http://*.vegoos.com/*","http://*.venusveil.com/*","http://*.veryok.cn/*","http://*.viccol.com/*","http://*.vipshop.com/*","http://*.vipstore.com/*","http://*.vivian.cn/*","http://*.vjia.com/*","http://*.vnasi.com/*","http://*.voipyeah.com/*","http://*.w1.cn/*","http://*.waipowang.com/*","http://*.wangshanghai.com/*","http://*.wg365.com/*","http://*.winenice.com/*","http://*.wl.cn/*","http://*.womai.com/*","http://*.woye.com/*","http://*.wtaotao.com/*","http://*.wumeiwang.com/*","http://*.x-playboy.com/*","http://*.xiaokang.com/*","http://*.xiaozhuren.com/*","http://*.xinbaigo.com/*","http://*.xindou.com/*","http://*.xing800.com/*","http://*.xinhuabookstore.com/*","http://*.xiu.com/*","http://*.xtpo.cn/*","http://*.xzuan.com/*","http://*.yaja.com.cn/*","http://*.yaofang.cn/*","http://*.yasai.cn/*","http://*.yeecare.com/*","http://buy.yesky.com/*","http://*.yesmytea.com/*","http://*.yesmywine.com/*","http://*.yide.com/*","http://*.yifu.com/*","http://*.yihaodian.com/*","http://*.yintai.com/*","http://*.yinyuehe.net/*","http://*.yjcs.cn/*","http://*.yobrand.com/*","http://*.yoger.com.cn/*","http://*.yoho.cn/*","http://*.yongle.com.cn/*","http://*.yougou.com/*","http://*.youjk.com/*","http://*.yoyo18.com/*","http://*.yumaoclub.com/*","http://*.yyosso.com/*","http://*.zbird.com/*","http://*.zgcbb.com/*","http://*.zm7.cn/*","http://*.zopo.com/*","http://*.ibuying.com/*","http://*.33go.com.cn/*","http://*.xijie.com/*","http://*.nop.cn/*","http://*.asyp.com/*","http://*.sparty.cn/*","http://*.yizhedian.com/*","http://*.lvhezi.com/*","http://*.aishangbaobao.com/*","http://*.sportica.cn/*","http://*.jstsilk.cn/*","http://*.camel.com.cn/*","http://*.cottonpop.net/*","http://*.hyj.com/*","http://*.myxiequ.com/*","http://*.mfplaza.com/*","http://*.do93.com/*","http://*.3guo.cn/*","http://*.yaqifushi.com/*","http://*.trura.com/*","http://*.lbaobao.cn/*","http://*.xiutuan.com/*","http://*.usashopcn.com/*","http://*.ihaveu.com/*","http://*.vipku.com/*","http://*.vipchina.com/*","http://*.fanrry.cn/*","http://*.lesunvip.com/*","http://*.nala.com.cn/*","http://*.miqi.cn/*","http://*.meiribuy.com/*","http://*.pufung.com/*","http://*.xiaoye.com/*","http://*.hmeili.com/*","http://*.oulybuy.com/*","http://*.meifenzi.com/*","http://*.caomeishop.com/*","http://*.meifu360.com/*","http://*.bapashop.com/*","http://*.bulangxiongdi.com/*","http://*.gusubuy.com/*","http://*.opearl.net/*","http://*.ruci.cn/*","http://*.rax.cn/*","http://*.jiuxian.com/*","http://*.maimaicha.com/*","http://*.pinwine.cn/*","http://*.meiweidao.com/*","http://*.okliang.com/*","http://*.365wine.com/*","http://*.jjlg.com.cn/*","http://*.bianlishe.com/*","http://*.epkmall.com/*","http://*.gdcct.com/*","http://*.500ccc.com/*","http://*.me361.com/*","http://*.malatamobile.com/*","http://*.trioo.com/*","http://*.oohdear.com/*","http://*.yaahe.cn/*","http://*.easeeyes.com/*","http://*.dbox.cn/*","http://*.haotehui.com/*","http://*.m6go.com/*","http://*.bianyigo.com/*","http://*.okjee.com/*","http://*.mygeek.cn/*","http://*.tbb.cn/*","http://*.ushare360.com/*","http://*.gqt168.com/*","http://*.konjoy.com/*","http://*.aoliz.com/*","http://*.jianianle.com/*","http://*.akajia.com/*","http://*.miqi.com.cn/*","http://*.lehuimai.com/*","http://*.lifevc.com/*","http://*www.ouku.com/","http://nuomi.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194711},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/14466-%E8%B4%AD%E7%89%A9%E5%85%9A%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7/code/%E8%B4%AD%E7%89%A9%E5%85%9A%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7.user.js","uuid":"4851d4f9-bc60-490a-a388-b04ba9beda00","source":"","requires":[{"meta":{"name":"get.js","url":"https://browser.gwdang.com/get.js?f=/js/gwdang_extension.js","ts":1551926333271,"mimetype":"text/javascript"},"source":"LyogQERhdGU6IFRodSBGZWIgMjggMjAxOSAxNTozMTowMyBHTVQrMDgwMCAoR01UKzA4OjAwKQoKICovIWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoaSl7aWYobltpXSlyZXR1cm4gbltpXS5leHBvcnRzO3ZhciBvPW5baV09e2V4cG9ydHM6e30saWQ6aSxsb2FkZWQ6ITF9O3JldHVybiB0W2ldLmNhbGwoby5leHBvcnRzLG8sby5leHBvcnRzLGUpLG8ubG9hZGVkPSEwLG8uZXhwb3J0c312YXIgbj17fTtyZXR1cm4gZS5tPXQsZS5jPW4sZS5wPSIiLGUoMCl9KFtmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKHQpeyJ1c2Ugc3RyaWN0IjshZnVuY3Rpb24oKXtpZighbigyKSl7dmFyIGU9big1KSgpO2lmKCFlfHwhbG9jYXRpb24uaG9zdC5tYXRjaCgvKD86dGFvYmFvfHRtYWxsfHlhb1wuOTUwOTV8MTY4OFwuY29tfGFsaWV4cHJlc3NcLmNvbXxpZWZyYW1lXC5kbGwpLykpe24oNiksbig4KS5pbml0KCksbig5KS5pbml0KCk7dmFyIGk9bigxNCk7aSYmaS5pbml0KHQuZ3dkX2NuenopLCJtLmZpbmUzcS5jb20iPT09bG9jYXRpb24uaG9zdCYmbigxNSkuaW5pdCgpLDAhPT10LnBhZ2VJbmZvLnR5cGUmJihuKDE2KS5pbml0KCksbigxNykoKXx8KG4oMTgpLG4oMTkpLHQubG9nb05hbWU9bigyMCkoOCksbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCJNYXh0aG9uIik+LTEsdC5wbHVnaW5zPVtuKDIxKSxuKDMzKV0sbigzNSksbigzNikoKSxuKDM4KS5jb21tb24oZnVuY3Rpb24oZSl7dmFyIGk9WyJib29raW5nIiwiZWxvbmciLCJ3YmlhbyIsImFnb2RhIiwiaG90ZWxzIiwiMjI4Iiwicm9zZW9ubHkiLCJmZWVsdW5pcXVlIiwibmlrZSIsImthb2xhIiwiYWxpZXhwcmVzcyIsInZpcHNob3AiLCJodWppYW5nIiwiMTY4OCJdOyFlfHwhZS5yZXN1bHR8fGUucmVzdWx0IGluc3RhbmNlb2YgQXJyYXl8fGUucmVzdWx0LmFkZHJlc3MuaW5kZXhPZigi5YyX5LqsIikhPS0xfHxlLnJlc3VsdC5hZGRyZXNzLmluZGV4T2YoIuS4iua1tyIpIT0tMXx8ZS5yZXN1bHQuYWRkcmVzcy5pbmRleE9mKCLlub/lt54iKSE9LTF8fGUucmVzdWx0LmFkZHJlc3MuaW5kZXhPZigi5rex5ZyzIikhPS0xfHxlLnJlc3VsdC5hZGRyZXNzLmluZGV4T2YoIuadreW3niIpIT0tMXx8ZS5yZXN1bHQuYWRkcmVzcy5pbmRleE9mKCLljZfkuqwiKSE9LTE/ZSYmZS5yZXN1bHQuYWRkcmVzcy5pbmRleE9mKCLljZfkuqwiKT09LTEmJih0LmZvcmJpZEFkPSEwKTooaS5pbmRleE9mJiZpLmluZGV4T2YodC5zaXRlKT4tMSYmKHQuc2V0X2ZvcmNlPSEwKSx0LmZvcmJpZEFkPSEwKSxlJiZlLnJlc3VsdC5hZGRyZXNzLmluZGV4T2YoIuWMl+S6rCIpPi0xJiYodC5mb3JiaWRNaW5pYmFyPSEwKSxlJiZlLnJlc3VsdCYmZS5yZXN1bHQgaW5zdGFuY2VvZiBBcnJheSYmKHQuZm9yYmlkQ291cG9uPSEwKSxlJiZlLnJlc3VsdCYmIShlLnJlc3VsdCBpbnN0YW5jZW9mIEFycmF5KSYmKGUucmVzdWx0LmFkZHJlc3MuaW5kZXhPZigi5YyX5LqsIik+LTF8fGUucmVzdWx0LmFkZHJlc3MuaW5kZXhPZigi5p2t5beeIik+LTEpJiYodC5mb3JiaWRDb3Vwb249ITApLG4oMjMpLmdldFJhdGUoZnVuY3Rpb24oKXtuKDM5KS5nZXQoZnVuY3Rpb24oKXtuKDUwKS5pbml0KCl9KX0pfSkpKX19fSgpfSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3QuZXhwb3J0cz17bW9kdWxlczp7fSx2ZXJzaW9uOjE1NTEzMzkwNTQzMzUsYnJvd3Nlcjp7fSxkZWJ1ZzovZ3dkZWJ1Zy8udGVzdCh3aW5kb3cubG9jYXRpb24uaHJlZiksZXh0ZW5kOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSBpbiB0KXRoaXNbZV09dFtlXX19fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDMpLG89big0KTtpZihpJiZpLnBhcmVudE5vZGUmJmkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCYmaS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGkpLGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJCSUpJQV9IQVNfQlVJTFQiKSlvKCIjQklKSUFfSEFTX0JVSUxUIikuYWRkQ2xhc3MoZS5mcm9tX2RldmljZSksdC5leHBvcnRzPSEwO2Vsc2V7dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7YS5pZD0iQklKSUFfSEFTX0JVSUxUIjt2YXIgcj1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpO3ImJnJbMF0mJihyPXJbMF0pLHIuYXBwZW5kQ2hpbGQoYSksbygiI0JJSklBX0hBU19CVUlMVCIpLmFkZENsYXNzKGUuZnJvbV9kZXZpY2UpLHQuZXhwb3J0cz0hMX19KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4oKXtpZihkb2N1bWVudC5jdXJyZW50U2NyaXB0KXJldHVybiBkb2N1bWVudC5jdXJyZW50U2NyaXB0O2Zvcih2YXIgdD1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0Iiksbj0wO248dC5sZW5ndGg7bisrKWlmKG5ldyBSZWdFeHAoZS5leHROYW1lKyItbm90aWZpZXIiLCJpIikudGVzdCh0W25dLnNyYykpcmV0dXJuIHRbbl19dC5leHBvcnRzPW4oKX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpOyFmdW5jdGlvbihlLG4peyJvYmplY3QiPT10eXBlb2YgdCYmIm9iamVjdCI9PXR5cGVvZiB0LmV4cG9ydHM/dC5leHBvcnRzPWUuZG9jdW1lbnQ/bihlLCEwKTpmdW5jdGlvbih0KXtpZighdC5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoImpRdWVyeSByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnQiKTtyZXR1cm4gbih0KX06bihlKX0oInVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OnRoaXMsZnVuY3Rpb24obyxhKXtmdW5jdGlvbiByKHQpe3ZhciBlPSJsZW5ndGgiaW4gdCYmdC5sZW5ndGgsbj1sdC50eXBlKHQpO3JldHVybiJmdW5jdGlvbiIhPT1uJiYhbHQuaXNXaW5kb3codCkmJighKDEhPT10Lm5vZGVUeXBlfHwhZSl8fCgiYXJyYXkiPT09bnx8MD09PWV8fCJudW1iZXIiPT10eXBlb2YgZSYmZT4wJiZlLTEgaW4gdCkpfWZ1bmN0aW9uIHModCxlLG4pe2lmKGx0LmlzRnVuY3Rpb24oZSkpcmV0dXJuIGx0LmdyZXAodCxmdW5jdGlvbih0LGkpe3JldHVybiEhZS5jYWxsKHQsaSx0KSE9PW59KTtpZihlLm5vZGVUeXBlKXJldHVybiBsdC5ncmVwKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1lIT09bn0pO2lmKCJzdHJpbmciPT10eXBlb2YgZSl7aWYoZ3QudGVzdChlKSlyZXR1cm4gbHQuZmlsdGVyKGUsdCxuKTtlPWx0LmZpbHRlcihlLHQpfXJldHVybiBsdC5ncmVwKHQsZnVuY3Rpb24odCl7cmV0dXJuIGx0LmluQXJyYXkodCxlKT49MCE9PW59KX1mdW5jdGlvbiBsKHQsZSl7ZG8gdD10W2VdO3doaWxlKHQmJjEhPT10Lm5vZGVUeXBlKTtyZXR1cm4gdH1mdW5jdGlvbiBjKHQpe3ZhciBlPXp0W3RdPXt9O3JldHVybiBsdC5lYWNoKHQubWF0Y2goa3QpfHxbXSxmdW5jdGlvbih0LG4pe2Vbbl09ITB9KSxlfWZ1bmN0aW9uIHAoKXt4dC5hZGRFdmVudExpc3RlbmVyPyh4dC5yZW1vdmVFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixkLCExKSxvLnJlbW92ZUV2ZW50TGlzdGVuZXIoImxvYWQiLGQsITEpKTooeHQuZGV0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsZCksby5kZXRhY2hFdmVudCgib25sb2FkIixkKSl9ZnVuY3Rpb24gZCgpeyh4dC5hZGRFdmVudExpc3RlbmVyfHwibG9hZCI9PT1ldmVudC50eXBlfHwiY29tcGxldGUiPT09eHQucmVhZHlTdGF0ZSkmJihwKCksbHQucmVhZHkoKSl9ZnVuY3Rpb24gaCh0LGUsbil7aWYodm9pZCAwPT09biYmMT09PXQubm9kZVR5cGUpe3ZhciBpPSJkYXRhLSIrZS5yZXBsYWNlKFR0LCItJDEiKS50b0xvd2VyQ2FzZSgpO2lmKG49dC5nZXRBdHRyaWJ1dGUoaSksInN0cmluZyI9PXR5cGVvZiBuKXt0cnl7bj0idHJ1ZSI9PT1ufHwiZmFsc2UiIT09biYmKCJudWxsIj09PW4/bnVsbDorbisiIj09PW4/K246UHQudGVzdChuKT9sdC5wYXJzZUpTT04obik6bil9Y2F0Y2gobyl7fWx0LmRhdGEodCxlLG4pfWVsc2Ugbj12b2lkIDB9cmV0dXJuIG59ZnVuY3Rpb24gdSh0KXt2YXIgZTtmb3IoZSBpbiB0KWlmKCgiZGF0YSIhPT1lfHwhbHQuaXNFbXB0eU9iamVjdCh0W2VdKSkmJiJ0b0pTT04iIT09ZSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBtKHQsZSxuLGkpe2lmKGx0LmFjY2VwdERhdGEodCkpe3ZhciBvLGEscj1sdC5leHBhbmRvLHM9dC5ub2RlVHlwZSxsPXM/bHQuY2FjaGU6dCxjPXM/dFtyXTp0W3JdJiZyO2lmKGMmJmxbY10mJihpfHxsW2NdLmRhdGEpfHx2b2lkIDAhPT1ufHwic3RyaW5nIiE9dHlwZW9mIGUpcmV0dXJuIGN8fChjPXM/dFtyXT1LLnBvcCgpfHxsdC5ndWlkKys6ciksbFtjXXx8KGxbY109cz97fTp7dG9KU09OOmx0Lm5vb3B9KSwib2JqZWN0IiE9dHlwZW9mIGUmJiJmdW5jdGlvbiIhPXR5cGVvZiBlfHwoaT9sW2NdPWx0LmV4dGVuZChsW2NdLGUpOmxbY10uZGF0YT1sdC5leHRlbmQobFtjXS5kYXRhLGUpKSxhPWxbY10saXx8KGEuZGF0YXx8KGEuZGF0YT17fSksYT1hLmRhdGEpLHZvaWQgMCE9PW4mJihhW2x0LmNhbWVsQ2FzZShlKV09biksInN0cmluZyI9PXR5cGVvZiBlPyhvPWFbZV0sbnVsbD09byYmKG89YVtsdC5jYW1lbENhc2UoZSldKSk6bz1hLG99fWZ1bmN0aW9uIGYodCxlLG4pe2lmKGx0LmFjY2VwdERhdGEodCkpe3ZhciBpLG8sYT10Lm5vZGVUeXBlLHI9YT9sdC5jYWNoZTp0LHM9YT90W2x0LmV4cGFuZG9dOmx0LmV4cGFuZG87aWYocltzXSl7aWYoZSYmKGk9bj9yW3NdOnJbc10uZGF0YSkpe2x0LmlzQXJyYXkoZSk/ZT1lLmNvbmNhdChsdC5tYXAoZSxsdC5jYW1lbENhc2UpKTplIGluIGk/ZT1bZV06KGU9bHQuY2FtZWxDYXNlKGUpLGU9ZSBpbiBpP1tlXTplLnNwbGl0KCIgIikpLG89ZS5sZW5ndGg7Zm9yKDtvLS07KWRlbGV0ZSBpW2Vbb11dO2lmKG4/IXUoaSk6IWx0LmlzRW1wdHlPYmplY3QoaSkpcmV0dXJufShufHwoZGVsZXRlIHJbc10uZGF0YSx1KHJbc10pKSkmJihhP2x0LmNsZWFuRGF0YShbdF0sITApOnJ0LmRlbGV0ZUV4cGFuZG98fHIhPXIud2luZG93P2RlbGV0ZSByW3NdOnJbc109bnVsbCl9fX1mdW5jdGlvbiBnKCl7cmV0dXJuITB9ZnVuY3Rpb24gdygpe3JldHVybiExfWZ1bmN0aW9uIHgoKXt0cnl7cmV0dXJuIHh0LmFjdGl2ZUVsZW1lbnR9Y2F0Y2godCl7fX1mdW5jdGlvbiBiKHQpe3ZhciBlPU10LnNwbGl0KCJ8Iiksbj10LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtpZihuLmNyZWF0ZUVsZW1lbnQpZm9yKDtlLmxlbmd0aDspbi5jcmVhdGVFbGVtZW50KGUucG9wKCkpO3JldHVybiBufWZ1bmN0aW9uIF8odCxlKXt2YXIgbixpLG89MCxhPXR5cGVvZiB0LmdldEVsZW1lbnRzQnlUYWdOYW1lIT09U3Q/dC5nZXRFbGVtZW50c0J5VGFnTmFtZShlfHwiKiIpOnR5cGVvZiB0LnF1ZXJ5U2VsZWN0b3JBbGwhPT1TdD90LnF1ZXJ5U2VsZWN0b3JBbGwoZXx8IioiKTp2b2lkIDA7aWYoIWEpZm9yKGE9W10sbj10LmNoaWxkTm9kZXN8fHQ7bnVsbCE9KGk9bltvXSk7bysrKSFlfHxsdC5ub2RlTmFtZShpLGUpP2EucHVzaChpKTpsdC5tZXJnZShhLF8oaSxlKSk7cmV0dXJuIHZvaWQgMD09PWV8fGUmJmx0Lm5vZGVOYW1lKHQsZSk/bHQubWVyZ2UoW3RdLGEpOmF9ZnVuY3Rpb24gdih0KXtxdC50ZXN0KHQudHlwZSkmJih0LmRlZmF1bHRDaGVja2VkPXQuY2hlY2tlZCl9ZnVuY3Rpb24geSh0LGUpe3JldHVybiBsdC5ub2RlTmFtZSh0LCJ0YWJsZSIpJiZsdC5ub2RlTmFtZSgxMSE9PWUubm9kZVR5cGU/ZTplLmZpcnN0Q2hpbGQsInRyIik/dC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGJvZHkiKVswXXx8dC5hcHBlbmRDaGlsZCh0Lm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGJvZHkiKSk6dH1mdW5jdGlvbiBrKHQpe3JldHVybiB0LnR5cGU9KG51bGwhPT1sdC5maW5kLmF0dHIodCwidHlwZSIpKSsiLyIrdC50eXBlLHR9ZnVuY3Rpb24geih0KXt2YXIgZT1WdC5leGVjKHQudHlwZSk7cmV0dXJuIGU/dC50eXBlPWVbMV06dC5yZW1vdmVBdHRyaWJ1dGUoInR5cGUiKSx0fWZ1bmN0aW9uIGoodCxlKXtmb3IodmFyIG4saT0wO251bGwhPShuPXRbaV0pO2krKylsdC5fZGF0YShuLCJnbG9iYWxFdmFsIiwhZXx8bHQuX2RhdGEoZVtpXSwiZ2xvYmFsRXZhbCIpKX1mdW5jdGlvbiBDKHQsZSl7aWYoMT09PWUubm9kZVR5cGUmJmx0Lmhhc0RhdGEodCkpe3ZhciBuLGksbyxhPWx0Ll9kYXRhKHQpLHI9bHQuX2RhdGEoZSxhKSxzPWEuZXZlbnRzO2lmKHMpe2RlbGV0ZSByLmhhbmRsZSxyLmV2ZW50cz17fTtmb3IobiBpbiBzKWZvcihpPTAsbz1zW25dLmxlbmd0aDtpPG87aSsrKWx0LmV2ZW50LmFkZChlLG4sc1tuXVtpXSl9ci5kYXRhJiYoci5kYXRhPWx0LmV4dGVuZCh7fSxyLmRhdGEpKX19ZnVuY3Rpb24gUyh0LGUpe3ZhciBuLGksbztpZigxPT09ZS5ub2RlVHlwZSl7aWYobj1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksIXJ0Lm5vQ2xvbmVFdmVudCYmZVtsdC5leHBhbmRvXSl7bz1sdC5fZGF0YShlKTtmb3IoaSBpbiBvLmV2ZW50cylsdC5yZW1vdmVFdmVudChlLGksby5oYW5kbGUpO2UucmVtb3ZlQXR0cmlidXRlKGx0LmV4cGFuZG8pfSJzY3JpcHQiPT09biYmZS50ZXh0IT09dC50ZXh0PyhrKGUpLnRleHQ9dC50ZXh0LHooZSkpOiJvYmplY3QiPT09bj8oZS5wYXJlbnROb2RlJiYoZS5vdXRlckhUTUw9dC5vdXRlckhUTUwpLHJ0Lmh0bWw1Q2xvbmUmJnQuaW5uZXJIVE1MJiYhbHQudHJpbShlLmlubmVySFRNTCkmJihlLmlubmVySFRNTD10LmlubmVySFRNTCkpOiJpbnB1dCI9PT1uJiZxdC50ZXN0KHQudHlwZSk/KGUuZGVmYXVsdENoZWNrZWQ9ZS5jaGVja2VkPXQuY2hlY2tlZCxlLnZhbHVlIT09dC52YWx1ZSYmKGUudmFsdWU9dC52YWx1ZSkpOiJvcHRpb24iPT09bj9lLmRlZmF1bHRTZWxlY3RlZD1lLnNlbGVjdGVkPXQuZGVmYXVsdFNlbGVjdGVkOiJpbnB1dCIhPT1uJiYidGV4dGFyZWEiIT09bnx8KGUuZGVmYXVsdFZhbHVlPXQuZGVmYXVsdFZhbHVlKX19ZnVuY3Rpb24gUCh0LGUpe3ZhciBuLGk9bHQoZS5jcmVhdGVFbGVtZW50KHQpKS5hcHBlbmRUbyhlLmJvZHkpLGE9by5nZXREZWZhdWx0Q29tcHV0ZWRTdHlsZSYmKG49by5nZXREZWZhdWx0Q29tcHV0ZWRTdHlsZShpWzBdKSk/bi5kaXNwbGF5Omx0LmNzcyhpWzBdLCJkaXNwbGF5Iik7cmV0dXJuIGkuZGV0YWNoKCksYX1mdW5jdGlvbiBUKHQpe3ZhciBlPXh0LG49aWVbdF07cmV0dXJuIG58fChuPVAodCxlKSwibm9uZSIhPT1uJiZufHwobmU9KG5lfHxsdCgiPGlmcmFtZSBmcmFtZWJvcmRlcj0nMCcgd2lkdGg9JzAnIGhlaWdodD0nMCcvPiIpKS5hcHBlbmRUbyhlLmRvY3VtZW50RWxlbWVudCksZT0obmVbMF0uY29udGVudFdpbmRvd3x8bmVbMF0uY29udGVudERvY3VtZW50KS5kb2N1bWVudCxlLndyaXRlKCksZS5jbG9zZSgpLG49UCh0LGUpLG5lLmRldGFjaCgpKSxpZVt0XT1uKSxufWZ1bmN0aW9uIEEodCxlKXtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7dmFyIG49dCgpO2lmKG51bGwhPW4pcmV0dXJuIG4/dm9pZCBkZWxldGUgdGhpcy5nZXQ6KHRoaXMuZ2V0PWUpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fWZ1bmN0aW9uIE4odCxlKXtpZihlIGluIHQpcmV0dXJuIGU7Zm9yKHZhciBuPWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrZS5zbGljZSgxKSxpPWUsbz1nZS5sZW5ndGg7by0tOylpZihlPWdlW29dK24sZSBpbiB0KXJldHVybiBlO3JldHVybiBpfWZ1bmN0aW9uIEkodCxlKXtmb3IodmFyIG4saSxvLGE9W10scj0wLHM9dC5sZW5ndGg7cjxzO3IrKylpPXRbcl0saS5zdHlsZSYmKGFbcl09bHQuX2RhdGEoaSwib2xkZGlzcGxheSIpLG49aS5zdHlsZS5kaXNwbGF5LGU/KGFbcl18fCJub25lIiE9PW58fChpLnN0eWxlLmRpc3BsYXk9IiIpLCIiPT09aS5zdHlsZS5kaXNwbGF5JiZJdChpKSYmKGFbcl09bHQuX2RhdGEoaSwib2xkZGlzcGxheSIsVChpLm5vZGVOYW1lKSkpKToobz1JdChpKSwobiYmIm5vbmUiIT09bnx8IW8pJiZsdC5fZGF0YShpLCJvbGRkaXNwbGF5IixvP246bHQuY3NzKGksImRpc3BsYXkiKSkpKTtmb3Iocj0wO3I8cztyKyspaT10W3JdLGkuc3R5bGUmJihlJiYibm9uZSIhPT1pLnN0eWxlLmRpc3BsYXkmJiIiIT09aS5zdHlsZS5kaXNwbGF5fHwoaS5zdHlsZS5kaXNwbGF5PWU/YVtyXXx8IiI6Im5vbmUiKSk7cmV0dXJuIHR9ZnVuY3Rpb24gQih0LGUsbil7dmFyIGk9aGUuZXhlYyhlKTtyZXR1cm4gaT9NYXRoLm1heCgwLGlbMV0tKG58fDApKSsoaVsyXXx8InB4Iik6ZX1mdW5jdGlvbiBxKHQsZSxuLGksbyl7Zm9yKHZhciBhPW49PT0oaT8iYm9yZGVyIjoiY29udGVudCIpPzQ6IndpZHRoIj09PWU/MTowLHI9MDthPDQ7YSs9MikibWFyZ2luIj09PW4mJihyKz1sdC5jc3ModCxuK050W2FdLCEwLG8pKSxpPygiY29udGVudCI9PT1uJiYoci09bHQuY3NzKHQsInBhZGRpbmciK050W2FdLCEwLG8pKSwibWFyZ2luIiE9PW4mJihyLT1sdC5jc3ModCwiYm9yZGVyIitOdFthXSsiV2lkdGgiLCEwLG8pKSk6KHIrPWx0LmNzcyh0LCJwYWRkaW5nIitOdFthXSwhMCxvKSwicGFkZGluZyIhPT1uJiYocis9bHQuY3NzKHQsImJvcmRlciIrTnRbYV0rIldpZHRoIiwhMCxvKSkpO3JldHVybiByfWZ1bmN0aW9uIE8odCxlLG4pe3ZhciBpPSEwLG89IndpZHRoIj09PWU/dC5vZmZzZXRXaWR0aDp0Lm9mZnNldEhlaWdodCxhPW9lKHQpLHI9cnQuYm94U2l6aW5nJiYiYm9yZGVyLWJveCI9PT1sdC5jc3ModCwiYm94U2l6aW5nIiwhMSxhKTtpZihvPD0wfHxudWxsPT1vKXtpZihvPWFlKHQsZSxhKSwobzwwfHxudWxsPT1vKSYmKG89dC5zdHlsZVtlXSksc2UudGVzdChvKSlyZXR1cm4gbztpPXImJihydC5ib3hTaXppbmdSZWxpYWJsZSgpfHxvPT09dC5zdHlsZVtlXSksbz1wYXJzZUZsb2F0KG8pfHwwfXJldHVybiBvK3EodCxlLG58fChyPyJib3JkZXIiOiJjb250ZW50IiksaSxhKSsicHgifWZ1bmN0aW9uIEUodCxlLG4saSxvKXtyZXR1cm4gbmV3IEUucHJvdG90eXBlLmluaXQodCxlLG4saSxvKX1mdW5jdGlvbiBMKCl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3ZT12b2lkIDB9KSx3ZT1sdC5ub3coKX1mdW5jdGlvbiBEKHQsZSl7dmFyIG4saT17aGVpZ2h0OnR9LG89MDtmb3IoZT1lPzE6MDtvPDQ7bys9Mi1lKW49TnRbb10saVsibWFyZ2luIituXT1pWyJwYWRkaW5nIituXT10O3JldHVybiBlJiYoaS5vcGFjaXR5PWkud2lkdGg9dCksaX1mdW5jdGlvbiBGKHQsZSxuKXtmb3IodmFyIGksbz0oa2VbZV18fFtdKS5jb25jYXQoa2VbIioiXSksYT0wLHI9by5sZW5ndGg7YTxyO2ErKylpZihpPW9bYV0uY2FsbChuLGUsdCkpcmV0dXJuIGl9ZnVuY3Rpb24gTSh0LGUsbil7dmFyIGksbyxhLHIscyxsLGMscCxkPXRoaXMsaD17fSx1PXQuc3R5bGUsbT10Lm5vZGVUeXBlJiZJdCh0KSxmPWx0Ll9kYXRhKHQsImZ4c2hvdyIpO24ucXVldWV8fChzPWx0Ll9xdWV1ZUhvb2tzKHQsImZ4IiksbnVsbD09cy51bnF1ZXVlZCYmKHMudW5xdWV1ZWQ9MCxsPXMuZW1wdHkuZmlyZSxzLmVtcHR5LmZpcmU9ZnVuY3Rpb24oKXtzLnVucXVldWVkfHxsKCl9KSxzLnVucXVldWVkKyssZC5hbHdheXMoZnVuY3Rpb24oKXtkLmFsd2F5cyhmdW5jdGlvbigpe3MudW5xdWV1ZWQtLSxsdC5xdWV1ZSh0LCJmeCIpLmxlbmd0aHx8cy5lbXB0eS5maXJlKCl9KX0pKSwxPT09dC5ub2RlVHlwZSYmKCJoZWlnaHQiaW4gZXx8IndpZHRoImluIGUpJiYobi5vdmVyZmxvdz1bdS5vdmVyZmxvdyx1Lm92ZXJmbG93WCx1Lm92ZXJmbG93WV0sYz1sdC5jc3ModCwiZGlzcGxheSIpLHA9Im5vbmUiPT09Yz9sdC5fZGF0YSh0LCJvbGRkaXNwbGF5Iil8fFQodC5ub2RlTmFtZSk6YywiaW5saW5lIj09PXAmJiJub25lIj09PWx0LmNzcyh0LCJmbG9hdCIpJiYocnQuaW5saW5lQmxvY2tOZWVkc0xheW91dCYmImlubGluZSIhPT1UKHQubm9kZU5hbWUpP3Uuem9vbT0xOnUuZGlzcGxheT0iaW5saW5lLWJsb2NrIikpLG4ub3ZlcmZsb3cmJih1Lm92ZXJmbG93PSJoaWRkZW4iLHJ0LnNocmlua1dyYXBCbG9ja3MoKXx8ZC5hbHdheXMoZnVuY3Rpb24oKXt1Lm92ZXJmbG93PW4ub3ZlcmZsb3dbMF0sdS5vdmVyZmxvd1g9bi5vdmVyZmxvd1sxXSx1Lm92ZXJmbG93WT1uLm92ZXJmbG93WzJdfSkpO2ZvcihpIGluIGUpaWYobz1lW2ldLGJlLmV4ZWMobykpe2lmKGRlbGV0ZSBlW2ldLGE9YXx8InRvZ2dsZSI9PT1vLG89PT0obT8iaGlkZSI6InNob3ciKSl7aWYoInNob3ciIT09b3x8IWZ8fHZvaWQgMD09PWZbaV0pY29udGludWU7bT0hMH1oW2ldPWYmJmZbaV18fGx0LnN0eWxlKHQsaSl9ZWxzZSBjPXZvaWQgMDtpZihsdC5pc0VtcHR5T2JqZWN0KGgpKSJpbmxpbmUiPT09KCJub25lIj09PWM/VCh0Lm5vZGVOYW1lKTpjKSYmKHUuZGlzcGxheT1jKTtlbHNle2Y/ImhpZGRlbiJpbiBmJiYobT1mLmhpZGRlbik6Zj1sdC5fZGF0YSh0LCJmeHNob3ciLHt9KSxhJiYoZi5oaWRkZW49IW0pLG0/bHQodCkuc2hvdygpOmQuZG9uZShmdW5jdGlvbigpe2x0KHQpLmhpZGUoKX0pLGQuZG9uZShmdW5jdGlvbigpe3ZhciBlO2x0Ll9yZW1vdmVEYXRhKHQsImZ4c2hvdyIpO2ZvcihlIGluIGgpbHQuc3R5bGUodCxlLGhbZV0pfSk7Zm9yKGkgaW4gaClyPUYobT9mW2ldOjAsaSxkKSxpIGluIGZ8fChmW2ldPXIuc3RhcnQsbSYmKHIuZW5kPXIuc3RhcnQsci5zdGFydD0id2lkdGgiPT09aXx8ImhlaWdodCI9PT1pPzE6MCkpfX1mdW5jdGlvbiBSKHQsZSl7dmFyIG4saSxvLGEscjtmb3IobiBpbiB0KWlmKGk9bHQuY2FtZWxDYXNlKG4pLG89ZVtpXSxhPXRbbl0sbHQuaXNBcnJheShhKSYmKG89YVsxXSxhPXRbbl09YVswXSksbiE9PWkmJih0W2ldPWEsZGVsZXRlIHRbbl0pLHI9bHQuY3NzSG9va3NbaV0sciYmImV4cGFuZCJpbiByKXthPXIuZXhwYW5kKGEpLGRlbGV0ZSB0W2ldO2ZvcihuIGluIGEpbiBpbiB0fHwodFtuXT1hW25dLGVbbl09byl9ZWxzZSBlW2ldPW99ZnVuY3Rpb24gJCh0LGUsbil7dmFyIGksbyxhPTAscj15ZS5sZW5ndGgscz1sdC5EZWZlcnJlZCgpLmFsd2F5cyhmdW5jdGlvbigpe2RlbGV0ZSBsLmVsZW19KSxsPWZ1bmN0aW9uKCl7aWYobylyZXR1cm4hMTtmb3IodmFyIGU9d2V8fEwoKSxuPU1hdGgubWF4KDAsYy5zdGFydFRpbWUrYy5kdXJhdGlvbi1lKSxpPW4vYy5kdXJhdGlvbnx8MCxhPTEtaSxyPTAsbD1jLnR3ZWVucy5sZW5ndGg7cjxsO3IrKyljLnR3ZWVuc1tyXS5ydW4oYSk7cmV0dXJuIHMubm90aWZ5V2l0aCh0LFtjLGEsbl0pLGE8MSYmbD9uOihzLnJlc29sdmVXaXRoKHQsW2NdKSwhMSl9LGM9cy5wcm9taXNlKHtlbGVtOnQscHJvcHM6bHQuZXh0ZW5kKHt9LGUpLG9wdHM6bHQuZXh0ZW5kKCEwLHtzcGVjaWFsRWFzaW5nOnt9fSxuKSxvcmlnaW5hbFByb3BlcnRpZXM6ZSxvcmlnaW5hbE9wdGlvbnM6bixzdGFydFRpbWU6d2V8fEwoKSxkdXJhdGlvbjpuLmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbihlLG4pe3ZhciBpPWx0LlR3ZWVuKHQsYy5vcHRzLGUsbixjLm9wdHMuc3BlY2lhbEVhc2luZ1tlXXx8Yy5vcHRzLmVhc2luZyk7cmV0dXJuIGMudHdlZW5zLnB1c2goaSksaX0sc3RvcDpmdW5jdGlvbihlKXt2YXIgbj0wLGk9ZT9jLnR3ZWVucy5sZW5ndGg6MDtpZihvKXJldHVybiB0aGlzO2ZvcihvPSEwO248aTtuKyspYy50d2VlbnNbbl0ucnVuKDEpO3JldHVybiBlP3MucmVzb2x2ZVdpdGgodCxbYyxlXSk6cy5yZWplY3RXaXRoKHQsW2MsZV0pLHRoaXN9fSkscD1jLnByb3BzO2ZvcihSKHAsYy5vcHRzLnNwZWNpYWxFYXNpbmcpO2E8cjthKyspaWYoaT15ZVthXS5jYWxsKGMsdCxwLGMub3B0cykpcmV0dXJuIGk7cmV0dXJuIGx0Lm1hcChwLEYsYyksbHQuaXNGdW5jdGlvbihjLm9wdHMuc3RhcnQpJiZjLm9wdHMuc3RhcnQuY2FsbCh0LGMpLGx0LmZ4LnRpbWVyKGx0LmV4dGVuZChsLHtlbGVtOnQsYW5pbTpjLHF1ZXVlOmMub3B0cy5xdWV1ZX0pKSxjLnByb2dyZXNzKGMub3B0cy5wcm9ncmVzcykuZG9uZShjLm9wdHMuZG9uZSxjLm9wdHMuY29tcGxldGUpLmZhaWwoYy5vcHRzLmZhaWwpLmFsd2F5cyhjLm9wdHMuYWx3YXlzKX1mdW5jdGlvbiBIKHQpe3JldHVybiBmdW5jdGlvbihlLG4peyJzdHJpbmciIT10eXBlb2YgZSYmKG49ZSxlPSIqIik7dmFyIGksbz0wLGE9ZS50b0xvd2VyQ2FzZSgpLm1hdGNoKGt0KXx8W107aWYobHQuaXNGdW5jdGlvbihuKSlmb3IoO2k9YVtvKytdOykiKyI9PT1pLmNoYXJBdCgwKT8oaT1pLnNsaWNlKDEpfHwiKiIsKHRbaV09dFtpXXx8W10pLnVuc2hpZnQobikpOih0W2ldPXRbaV18fFtdKS5wdXNoKG4pfX1mdW5jdGlvbiBXKHQsZSxuLGkpe2Z1bmN0aW9uIG8ocyl7dmFyIGw7cmV0dXJuIGFbc109ITAsbHQuZWFjaCh0W3NdfHxbXSxmdW5jdGlvbih0LHMpe3ZhciBjPXMoZSxuLGkpO3JldHVybiJzdHJpbmciIT10eXBlb2YgY3x8cnx8YVtjXT9yPyEobD1jKTp2b2lkIDA6KGUuZGF0YVR5cGVzLnVuc2hpZnQoYyksbyhjKSwhMSl9KSxsfXZhciBhPXt9LHI9dD09PUdlO3JldHVybiBvKGUuZGF0YVR5cGVzWzBdKXx8IWFbIioiXSYmbygiKiIpfWZ1bmN0aW9uIFUodCxlKXt2YXIgbixpLG89bHQuYWpheFNldHRpbmdzLmZsYXRPcHRpb25zfHx7fTtmb3IoaSBpbiBlKXZvaWQgMCE9PWVbaV0mJigob1tpXT90Om58fChuPXt9KSlbaV09ZVtpXSk7cmV0dXJuIG4mJmx0LmV4dGVuZCghMCx0LG4pLHR9ZnVuY3Rpb24gWSh0LGUsbil7Zm9yKHZhciBpLG8sYSxyLHM9dC5jb250ZW50cyxsPXQuZGF0YVR5cGVzOyIqIj09PWxbMF07KWwuc2hpZnQoKSx2b2lkIDA9PT1vJiYobz10Lm1pbWVUeXBlfHxlLmdldFJlc3BvbnNlSGVhZGVyKCJDb250ZW50LVR5cGUiKSk7aWYobylmb3IociBpbiBzKWlmKHNbcl0mJnNbcl0udGVzdChvKSl7bC51bnNoaWZ0KHIpO2JyZWFrfWlmKGxbMF1pbiBuKWE9bFswXTtlbHNle2ZvcihyIGluIG4pe2lmKCFsWzBdfHx0LmNvbnZlcnRlcnNbcisiICIrbFswXV0pe2E9cjticmVha31pfHwoaT1yKX1hPWF8fGl9aWYoYSlyZXR1cm4gYSE9PWxbMF0mJmwudW5zaGlmdChhKSxuW2FdfWZ1bmN0aW9uIEcodCxlLG4saSl7dmFyIG8sYSxyLHMsbCxjPXt9LHA9dC5kYXRhVHlwZXMuc2xpY2UoKTtpZihwWzFdKWZvcihyIGluIHQuY29udmVydGVycyljW3IudG9Mb3dlckNhc2UoKV09dC5jb252ZXJ0ZXJzW3JdO2ZvcihhPXAuc2hpZnQoKTthOylpZih0LnJlc3BvbnNlRmllbGRzW2FdJiYoblt0LnJlc3BvbnNlRmllbGRzW2FdXT1lKSwhbCYmaSYmdC5kYXRhRmlsdGVyJiYoZT10LmRhdGFGaWx0ZXIoZSx0LmRhdGFUeXBlKSksbD1hLGE9cC5zaGlmdCgpKWlmKCIqIj09PWEpYT1sO2Vsc2UgaWYoIioiIT09bCYmbCE9PWEpe2lmKHI9Y1tsKyIgIithXXx8Y1siKiAiK2FdLCFyKWZvcihvIGluIGMpaWYocz1vLnNwbGl0KCIgIiksc1sxXT09PWEmJihyPWNbbCsiICIrc1swXV18fGNbIiogIitzWzBdXSkpe3I9PT0hMD9yPWNbb106Y1tvXSE9PSEwJiYoYT1zWzBdLHAudW5zaGlmdChzWzFdKSk7YnJlYWt9aWYociE9PSEwKWlmKHImJnRbInRocm93cyJdKWU9cihlKTtlbHNlIHRyeXtlPXIoZSl9Y2F0Y2goZCl7cmV0dXJue3N0YXRlOiJwYXJzZXJlcnJvciIsZXJyb3I6cj9kOiJObyBjb252ZXJzaW9uIGZyb20gIitsKyIgdG8gIithfX19cmV0dXJue3N0YXRlOiJzdWNjZXNzIixkYXRhOmV9fWZ1bmN0aW9uIFgodCxlLG4saSl7dmFyIG87aWYobHQuaXNBcnJheShlKSlsdC5lYWNoKGUsZnVuY3Rpb24oZSxvKXtufHxWZS50ZXN0KHQpP2kodCxvKTpYKHQrIlsiKygib2JqZWN0Ij09dHlwZW9mIG8/ZToiIikrIl0iLG8sbixpKX0pO2Vsc2UgaWYobnx8Im9iamVjdCIhPT1sdC50eXBlKGUpKWkodCxlKTtlbHNlIGZvcihvIGluIGUpWCh0KyJbIitvKyJdIixlW29dLG4saSl9ZnVuY3Rpb24gSigpe3RyeXtyZXR1cm4gbmV3IG8uWE1MSHR0cFJlcXVlc3R9Y2F0Y2godCl7fX1mdW5jdGlvbiBaKCl7dHJ5e3JldHVybiBuZXcgby5BY3RpdmVYT2JqZWN0KCJNaWNyb3NvZnQuWE1MSFRUUCIpfWNhdGNoKHQpe319ZnVuY3Rpb24gVih0KXtyZXR1cm4gbHQuaXNXaW5kb3codCk/dDo5PT09dC5ub2RlVHlwZSYmKHQuZGVmYXVsdFZpZXd8fHQucGFyZW50V2luZG93KX12YXIgSz1bXSxRPUsuc2xpY2UsdHQ9Sy5jb25jYXQsZXQ9Sy5wdXNoLG50PUsuaW5kZXhPZixpdD17fSxvdD1pdC50b1N0cmluZyxhdD1pdC5oYXNPd25Qcm9wZXJ0eSxydD17fSxzdD0iMS4xMS4zIixsdD1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgbHQuZm4uaW5pdCh0LGUpfSxjdD0vXltcc1x1RkVGRlx4QTBdK3xbXHNcdUZFRkZceEEwXSskL2cscHQ9L14tbXMtLyxkdD0vLShbXGRhLXpdKS9naSxodD1mdW5jdGlvbih0LGUpe3JldHVybiBlLnRvVXBwZXJDYXNlKCl9O2x0LmZuPWx0LnByb3RvdHlwZT17anF1ZXJ5OnN0LGNvbnN0cnVjdG9yOmx0LHNlbGVjdG9yOiIiLGxlbmd0aDowLHRvQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gUS5jYWxsKHRoaXMpfSxnZXQ6ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXQ/dDwwP3RoaXNbdCt0aGlzLmxlbmd0aF06dGhpc1t0XTpRLmNhbGwodGhpcyl9LHB1c2hTdGFjazpmdW5jdGlvbih0KXt2YXIgZT1sdC5tZXJnZSh0aGlzLmNvbnN0cnVjdG9yKCksdCk7cmV0dXJuIGUucHJldk9iamVjdD10aGlzLGUuY29udGV4dD10aGlzLmNvbnRleHQsZX0sZWFjaDpmdW5jdGlvbih0LGUpe3JldHVybiBsdC5lYWNoKHRoaXMsdCxlKX0sbWFwOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnB1c2hTdGFjayhsdC5tYXAodGhpcyxmdW5jdGlvbihlLG4pe3JldHVybiB0LmNhbGwoZSxuLGUpfSkpfSxzbGljZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnB1c2hTdGFjayhRLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LGZpcnN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoMCl9LGxhc3Q6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lcSgtMSl9LGVxOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubGVuZ3RoLG49K3QrKHQ8MD9lOjApO3JldHVybiB0aGlzLnB1c2hTdGFjayhuPj0wJiZuPGU/W3RoaXNbbl1dOltdKX0sZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucHJldk9iamVjdHx8dGhpcy5jb25zdHJ1Y3RvcihudWxsKX0scHVzaDpldCxzb3J0Oksuc29ydCxzcGxpY2U6Sy5zcGxpY2V9LGx0LmV4dGVuZD1sdC5mbi5leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxvLGEscj1hcmd1bWVudHNbMF18fHt9LHM9MSxsPWFyZ3VtZW50cy5sZW5ndGgsYz0hMTtmb3IoImJvb2xlYW4iPT10eXBlb2YgciYmKGM9cixyPWFyZ3VtZW50c1tzXXx8e30scysrKSwib2JqZWN0Ij09dHlwZW9mIHJ8fGx0LmlzRnVuY3Rpb24ocil8fChyPXt9KSxzPT09bCYmKHI9dGhpcyxzLS0pO3M8bDtzKyspaWYobnVsbCE9KG89YXJndW1lbnRzW3NdKSlmb3IoaSBpbiBvKXQ9cltpXSxuPW9baV0sciE9PW4mJihjJiZuJiYobHQuaXNQbGFpbk9iamVjdChuKXx8KGU9bHQuaXNBcnJheShuKSkpPyhlPyhlPSExLGE9dCYmbHQuaXNBcnJheSh0KT90OltdKTphPXQmJmx0LmlzUGxhaW5PYmplY3QodCk/dDp7fSxyW2ldPWx0LmV4dGVuZChjLGEsbikpOnZvaWQgMCE9PW4mJihyW2ldPW4pKTtyZXR1cm4gcn0sbHQuZXh0ZW5kKHtleHBhbmRvOiJqUXVlcnkiKyhzdCtNYXRoLnJhbmRvbSgpKS5yZXBsYWNlKC9cRC9nLCIiKSxpc1JlYWR5OiEwLGVycm9yOmZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcih0KX0sbm9vcDpmdW5jdGlvbigpe30saXNGdW5jdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4iZnVuY3Rpb24iPT09bHQudHlwZSh0KX0saXNBcnJheTpBcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm4iYXJyYXkiPT09bHQudHlwZSh0KX0saXNXaW5kb3c6ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXQmJnQ9PXQud2luZG93fSxpc051bWVyaWM6ZnVuY3Rpb24odCl7cmV0dXJuIWx0LmlzQXJyYXkodCkmJnQtcGFyc2VGbG9hdCh0KSsxPj0wfSxpc0VtcHR5T2JqZWN0OmZ1bmN0aW9uKHQpe3ZhciBlO2ZvcihlIGluIHQpcmV0dXJuITE7cmV0dXJuITB9LGlzUGxhaW5PYmplY3Q6ZnVuY3Rpb24odCl7dmFyIGU7aWYoIXR8fCJvYmplY3QiIT09bHQudHlwZSh0KXx8dC5ub2RlVHlwZXx8bHQuaXNXaW5kb3codCkpcmV0dXJuITE7dHJ5e2lmKHQuY29uc3RydWN0b3ImJiFhdC5jYWxsKHQsImNvbnN0cnVjdG9yIikmJiFhdC5jYWxsKHQuY29uc3RydWN0b3IucHJvdG90eXBlLCJpc1Byb3RvdHlwZU9mIikpcmV0dXJuITF9Y2F0Y2gobil7cmV0dXJuITF9aWYocnQub3duTGFzdClmb3IoZSBpbiB0KXJldHVybiBhdC5jYWxsKHQsZSk7Zm9yKGUgaW4gdCk7cmV0dXJuIHZvaWQgMD09PWV8fGF0LmNhbGwodCxlKX0sdHlwZTpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD90KyIiOiJvYmplY3QiPT10eXBlb2YgdHx8ImZ1bmN0aW9uIj09dHlwZW9mIHQ/aXRbb3QuY2FsbCh0KV18fCJvYmplY3QiOnR5cGVvZiB0fSxnbG9iYWxFdmFsOmZ1bmN0aW9uKHQpe3QmJmx0LnRyaW0odCkmJihvLmV4ZWNTY3JpcHR8fGZ1bmN0aW9uKHQpe28uZXZhbC5jYWxsKG8sdCl9KSh0KX0sY2FtZWxDYXNlOmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UocHQsIm1zLSIpLnJlcGxhY2UoZHQsaHQpfSxub2RlTmFtZTpmdW5jdGlvbih0LGUpe3JldHVybiB0Lm5vZGVOYW1lJiZ0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1lLnRvTG93ZXJDYXNlKCl9LGVhY2g6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG89MCxhPXQubGVuZ3RoLHM9cih0KTtpZihuKXtpZihzKWZvcig7bzxhJiYoaT1lLmFwcGx5KHRbb10sbiksaSE9PSExKTtvKyspO2Vsc2UgZm9yKG8gaW4gdClpZihpPWUuYXBwbHkodFtvXSxuKSxpPT09ITEpYnJlYWt9ZWxzZSBpZihzKWZvcig7bzxhJiYoaT1lLmNhbGwodFtvXSxvLHRbb10pLGkhPT0hMSk7bysrKTtlbHNlIGZvcihvIGluIHQpaWYoaT1lLmNhbGwodFtvXSxvLHRbb10pLGk9PT0hMSlicmVhaztyZXR1cm4gdH0sdHJpbTpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD8iIjoodCsiIikucmVwbGFjZShjdCwiIil9LG1ha2VBcnJheTpmdW5jdGlvbih0LGUpe3ZhciBuPWV8fFtdO3JldHVybiBudWxsIT10JiYocihPYmplY3QodCkpP2x0Lm1lcmdlKG4sInN0cmluZyI9PXR5cGVvZiB0P1t0XTp0KTpldC5jYWxsKG4sdCkpLG59LGluQXJyYXk6ZnVuY3Rpb24odCxlLG4pe3ZhciBpO2lmKGUpe2lmKG50KXJldHVybiBudC5jYWxsKGUsdCxuKTtmb3IoaT1lLmxlbmd0aCxuPW4/bjwwP01hdGgubWF4KDAsaStuKTpuOjA7bjxpO24rKylpZihuIGluIGUmJmVbbl09PT10KXJldHVybiBufXJldHVybi0xfSxtZXJnZTpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0rZS5sZW5ndGgsaT0wLG89dC5sZW5ndGg7aTxuOyl0W28rK109ZVtpKytdO2lmKG4hPT1uKWZvcig7dm9pZCAwIT09ZVtpXTspdFtvKytdPWVbaSsrXTtyZXR1cm4gdC5sZW5ndGg9byx0fSxncmVwOmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIGksbz1bXSxhPTAscj10Lmxlbmd0aCxzPSFuO2E8cjthKyspaT0hZSh0W2FdLGEpLGkhPT1zJiZvLnB1c2godFthXSk7cmV0dXJuIG99LG1hcDpmdW5jdGlvbih0LGUsbil7dmFyIGksbz0wLGE9dC5sZW5ndGgscz1yKHQpLGw9W107aWYocylmb3IoO288YTtvKyspaT1lKHRbb10sbyxuKSxudWxsIT1pJiZsLnB1c2goaSk7ZWxzZSBmb3IobyBpbiB0KWk9ZSh0W29dLG8sbiksbnVsbCE9aSYmbC5wdXNoKGkpO3JldHVybiB0dC5hcHBseShbXSxsKX0sZ3VpZDoxLHByb3h5OmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxvO2lmKCJzdHJpbmciPT10eXBlb2YgZSYmKG89dFtlXSxlPXQsdD1vKSxsdC5pc0Z1bmN0aW9uKHQpKXJldHVybiBuPVEuY2FsbChhcmd1bWVudHMsMiksaT1mdW5jdGlvbigpe3JldHVybiB0LmFwcGx5KGV8fHRoaXMsbi5jb25jYXQoUS5jYWxsKGFyZ3VtZW50cykpKX0saS5ndWlkPXQuZ3VpZD10Lmd1aWR8fGx0Lmd1aWQrKyxpfSxub3c6ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9LHN1cHBvcnQ6cnR9KSxsdC5lYWNoKCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIi5zcGxpdCgiICIpLGZ1bmN0aW9uKHQsZSl7aXRbIltvYmplY3QgIitlKyJdIl09ZS50b0xvd2VyQ2FzZSgpfSk7dmFyIHV0PWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUodCxlLG4saSl7dmFyIG8sYSxyLHMsbCxjLGQsdSxtLGY7aWYoKGU/ZS5vd25lckRvY3VtZW50fHxlOk0pIT09SSYmTihlKSxlPWV8fEksbj1ufHxbXSxzPWUubm9kZVR5cGUsInN0cmluZyIhPXR5cGVvZiB0fHwhdHx8MSE9PXMmJjkhPT1zJiYxMSE9PXMpcmV0dXJuIG47aWYoIWkmJnEpe2lmKDExIT09cyYmKG89eHQuZXhlYyh0KSkpaWYocj1vWzFdKXtpZig5PT09cyl7aWYoYT1lLmdldEVsZW1lbnRCeUlkKHIpLCFhfHwhYS5wYXJlbnROb2RlKXJldHVybiBuO2lmKGEuaWQ9PT1yKXJldHVybiBuLnB1c2goYSksbn1lbHNlIGlmKGUub3duZXJEb2N1bWVudCYmKGE9ZS5vd25lckRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHIpKSYmRChlLGEpJiZhLmlkPT09cilyZXR1cm4gbi5wdXNoKGEpLG59ZWxzZXtpZihvWzJdKXJldHVybiBLLmFwcGx5KG4sZS5nZXRFbGVtZW50c0J5VGFnTmFtZSh0KSksbjtpZigocj1vWzNdKSYmdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKXJldHVybiBLLmFwcGx5KG4sZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKHIpKSxufWlmKHYucXNhJiYoIU98fCFPLnRlc3QodCkpKXtpZih1PWQ9RixtPWUsZj0xIT09cyYmdCwxPT09cyYmIm9iamVjdCIhPT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpe2ZvcihjPWoodCksKGQ9ZS5nZXRBdHRyaWJ1dGUoImlkIikpP3U9ZC5yZXBsYWNlKF90LCJcXCQmIik6ZS5zZXRBdHRyaWJ1dGUoImlkIix1KSx1PSJbaWQ9JyIrdSsiJ10gIixsPWMubGVuZ3RoO2wtLTspY1tsXT11K2goY1tsXSk7bT1idC50ZXN0KHQpJiZwKGUucGFyZW50Tm9kZSl8fGUsZj1jLmpvaW4oIiwiKX1pZihmKXRyeXtyZXR1cm4gSy5hcHBseShuLG0ucXVlcnlTZWxlY3RvckFsbChmKSksbn1jYXRjaChnKXt9ZmluYWxseXtkfHxlLnJlbW92ZUF0dHJpYnV0ZSgiaWQiKX19fXJldHVybiBTKHQucmVwbGFjZShsdCwiJDEiKSxlLG4saSl9ZnVuY3Rpb24gbigpe2Z1bmN0aW9uIHQobixpKXtyZXR1cm4gZS5wdXNoKG4rIiAiKT55LmNhY2hlTGVuZ3RoJiZkZWxldGUgdFtlLnNoaWZ0KCldLHRbbisiICJdPWl9dmFyIGU9W107cmV0dXJuIHR9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gdFtGXT0hMCx0fWZ1bmN0aW9uIG8odCl7dmFyIGU9SS5jcmVhdGVFbGVtZW50KCJkaXYiKTt0cnl7cmV0dXJuISF0KGUpfWNhdGNoKG4pe3JldHVybiExfWZpbmFsbHl7ZS5wYXJlbnROb2RlJiZlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSksZT1udWxsfX1mdW5jdGlvbiBhKHQsZSl7Zm9yKHZhciBuPXQuc3BsaXQoInwiKSxpPXQubGVuZ3RoO2ktLTspeS5hdHRySGFuZGxlW25baV1dPWV9ZnVuY3Rpb24gcih0LGUpe3ZhciBuPWUmJnQsaT1uJiYxPT09dC5ub2RlVHlwZSYmMT09PWUubm9kZVR5cGUmJih+ZS5zb3VyY2VJbmRleHx8RyktKH50LnNvdXJjZUluZGV4fHxHKTtpZihpKXJldHVybiBpO2lmKG4pZm9yKDtuPW4ubmV4dFNpYmxpbmc7KWlmKG49PT1lKXJldHVybi0xO3JldHVybiB0PzE6LTF9ZnVuY3Rpb24gcyh0KXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIG49ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiJpbnB1dCI9PT1uJiZlLnR5cGU9PT10fX1mdW5jdGlvbiBsKHQpe3JldHVybiBmdW5jdGlvbihlKXt2YXIgbj1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuKCJpbnB1dCI9PT1ufHwiYnV0dG9uIj09PW4pJiZlLnR5cGU9PT10fX1mdW5jdGlvbiBjKHQpe3JldHVybiBpKGZ1bmN0aW9uKGUpe3JldHVybiBlPStlLGkoZnVuY3Rpb24obixpKXtmb3IodmFyIG8sYT10KFtdLG4ubGVuZ3RoLGUpLHI9YS5sZW5ndGg7ci0tOyluW289YVtyXV0mJihuW29dPSEoaVtvXT1uW29dKSl9KX0pfWZ1bmN0aW9uIHAodCl7cmV0dXJuIHQmJiJ1bmRlZmluZWQiIT10eXBlb2YgdC5nZXRFbGVtZW50c0J5VGFnTmFtZSYmdH1mdW5jdGlvbiBkKCl7fWZ1bmN0aW9uIGgodCl7Zm9yKHZhciBlPTAsbj10Lmxlbmd0aCxpPSIiO2U8bjtlKyspaSs9dFtlXS52YWx1ZTtyZXR1cm4gaX1mdW5jdGlvbiB1KHQsZSxuKXt2YXIgaT1lLmRpcixvPW4mJiJwYXJlbnROb2RlIj09PWksYT0kKys7cmV0dXJuIGUuZmlyc3Q/ZnVuY3Rpb24oZSxuLGEpe2Zvcig7ZT1lW2ldOylpZigxPT09ZS5ub2RlVHlwZXx8bylyZXR1cm4gdChlLG4sYSl9OmZ1bmN0aW9uKGUsbixyKXt2YXIgcyxsLGM9W1IsYV07aWYocil7Zm9yKDtlPWVbaV07KWlmKCgxPT09ZS5ub2RlVHlwZXx8bykmJnQoZSxuLHIpKXJldHVybiEwfWVsc2UgZm9yKDtlPWVbaV07KWlmKDE9PT1lLm5vZGVUeXBlfHxvKXtpZihsPWVbRl18fChlW0ZdPXt9KSwocz1sW2ldKSYmc1swXT09PVImJnNbMV09PT1hKXJldHVybiBjWzJdPXNbMl07aWYobFtpXT1jLGNbMl09dChlLG4scikpcmV0dXJuITB9fX1mdW5jdGlvbiBtKHQpe3JldHVybiB0Lmxlbmd0aD4xP2Z1bmN0aW9uKGUsbixpKXtmb3IodmFyIG89dC5sZW5ndGg7by0tOylpZighdFtvXShlLG4saSkpcmV0dXJuITE7cmV0dXJuITB9OnRbMF19ZnVuY3Rpb24gZih0LG4saSl7Zm9yKHZhciBvPTAsYT1uLmxlbmd0aDtvPGE7bysrKWUodCxuW29dLGkpO3JldHVybiBpfWZ1bmN0aW9uIGcodCxlLG4saSxvKXtmb3IodmFyIGEscj1bXSxzPTAsbD10Lmxlbmd0aCxjPW51bGwhPWU7czxsO3MrKykoYT10W3NdKSYmKG4mJiFuKGEsaSxvKXx8KHIucHVzaChhKSxjJiZlLnB1c2gocykpKTtyZXR1cm4gcn1mdW5jdGlvbiB3KHQsZSxuLG8sYSxyKXtyZXR1cm4gbyYmIW9bRl0mJihvPXcobykpLGEmJiFhW0ZdJiYoYT13KGEscikpLGkoZnVuY3Rpb24oaSxyLHMsbCl7dmFyIGMscCxkLGg9W10sdT1bXSxtPXIubGVuZ3RoLHc9aXx8ZihlfHwiKiIscy5ub2RlVHlwZT9bc106cyxbXSkseD0hdHx8IWkmJmU/dzpnKHcsaCx0LHMsbCksYj1uP2F8fChpP3Q6bXx8byk/W106cjp4O2lmKG4mJm4oeCxiLHMsbCksbylmb3IoYz1nKGIsdSksbyhjLFtdLHMsbCkscD1jLmxlbmd0aDtwLS07KShkPWNbcF0pJiYoYlt1W3BdXT0hKHhbdVtwXV09ZCkpO2lmKGkpe2lmKGF8fHQpe2lmKGEpe2ZvcihjPVtdLHA9Yi5sZW5ndGg7cC0tOykoZD1iW3BdKSYmYy5wdXNoKHhbcF09ZCk7YShudWxsLGI9W10sYyxsKX1mb3IocD1iLmxlbmd0aDtwLS07KShkPWJbcF0pJiYoYz1hP3R0KGksZCk6aFtwXSk+LTEmJihpW2NdPSEocltjXT1kKSl9fWVsc2UgYj1nKGI9PT1yP2Iuc3BsaWNlKG0sYi5sZW5ndGgpOmIpLGE/YShudWxsLHIsYixsKTpLLmFwcGx5KHIsYil9KX1mdW5jdGlvbiB4KHQpe2Zvcih2YXIgZSxuLGksbz10Lmxlbmd0aCxhPXkucmVsYXRpdmVbdFswXS50eXBlXSxyPWF8fHkucmVsYXRpdmVbIiAiXSxzPWE/MTowLGw9dShmdW5jdGlvbih0KXtyZXR1cm4gdD09PWV9LHIsITApLGM9dShmdW5jdGlvbih0KXtyZXR1cm4gdHQoZSx0KT4tMX0sciwhMCkscD1bZnVuY3Rpb24odCxuLGkpe3ZhciBvPSFhJiYoaXx8biE9PVApfHwoKGU9bikubm9kZVR5cGU/bCh0LG4saSk6Yyh0LG4saSkpO3JldHVybiBlPW51bGwsb31dO3M8bztzKyspaWYobj15LnJlbGF0aXZlW3Rbc10udHlwZV0pcD1bdShtKHApLG4pXTtlbHNle2lmKG49eS5maWx0ZXJbdFtzXS50eXBlXS5hcHBseShudWxsLHRbc10ubWF0Y2hlcyksbltGXSl7Zm9yKGk9KytzO2k8byYmIXkucmVsYXRpdmVbdFtpXS50eXBlXTtpKyspO3JldHVybiB3KHM+MSYmbShwKSxzPjEmJmgodC5zbGljZSgwLHMtMSkuY29uY2F0KHt2YWx1ZToiICI9PT10W3MtMl0udHlwZT8iKiI6IiJ9KSkucmVwbGFjZShsdCwiJDEiKSxuLHM8aSYmeCh0LnNsaWNlKHMsaSkpLGk8byYmeCh0PXQuc2xpY2UoaSkpLGk8byYmaCh0KSl9cC5wdXNoKG4pfXJldHVybiBtKHApfWZ1bmN0aW9uIGIodCxuKXt2YXIgbz1uLmxlbmd0aD4wLGE9dC5sZW5ndGg+MCxyPWZ1bmN0aW9uKGkscixzLGwsYyl7dmFyIHAsZCxoLHU9MCxtPSIwIixmPWkmJltdLHc9W10seD1QLGI9aXx8YSYmeS5maW5kLlRBRygiKiIsYyksXz1SKz1udWxsPT14PzE6TWF0aC5yYW5kb20oKXx8LjEsdj1iLmxlbmd0aDtmb3IoYyYmKFA9ciE9PUkmJnIpO20hPT12JiZudWxsIT0ocD1iW21dKTttKyspe2lmKGEmJnApe2ZvcihkPTA7aD10W2QrK107KWlmKGgocCxyLHMpKXtsLnB1c2gocCk7YnJlYWt9YyYmKFI9Xyl9byYmKChwPSFoJiZwKSYmdS0tLGkmJmYucHVzaChwKSl9aWYodSs9bSxvJiZtIT09dSl7Zm9yKGQ9MDtoPW5bZCsrXTspaChmLHcscixzKTtpZihpKXtpZih1PjApZm9yKDttLS07KWZbbV18fHdbbV18fCh3W21dPVouY2FsbChsKSk7dz1nKHcpfUsuYXBwbHkobCx3KSxjJiYhaSYmdy5sZW5ndGg+MCYmdStuLmxlbmd0aD4xJiZlLnVuaXF1ZVNvcnQobCl9cmV0dXJuIGMmJihSPV8sUD14KSxmfTtyZXR1cm4gbz9pKHIpOnJ9dmFyIF8sdix5LGsseixqLEMsUyxQLFQsQSxOLEksQixxLE8sRSxMLEQsRj0ic2l6emxlIisxKm5ldyBEYXRlLE09dC5kb2N1bWVudCxSPTAsJD0wLEg9bigpLFc9bigpLFU9bigpLFk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD09PWUmJihBPSEwKSwwfSxHPTE8PDMxLFg9e30uaGFzT3duUHJvcGVydHksSj1bXSxaPUoucG9wLFY9Si5wdXNoLEs9Si5wdXNoLFE9Si5zbGljZSx0dD1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLGk9dC5sZW5ndGg7bjxpO24rKylpZih0W25dPT09ZSlyZXR1cm4gbjtyZXR1cm4tMX0sZXQ9ImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkIixudD0iW1xceDIwXFx0XFxyXFxuXFxmXSIsaXQ9Iig/OlxcXFwufFtcXHctXXxbXlxceDAwLVxceGEwXSkrIixvdD1pdC5yZXBsYWNlKCJ3IiwidyMiKSxhdD0iXFxbIitudCsiKigiK2l0KyIpKD86IitudCsiKihbKl4kfCF+XT89KSIrbnQrIiooPzonKCg/OlxcXFwufFteXFxcXCddKSopJ3xcIigoPzpcXFxcLnxbXlxcXFxcIl0pKilcInwoIitvdCsiKSl8KSIrbnQrIipcXF0iLHJ0PSI6KCIraXQrIikoPzpcXCgoKCcoKD86XFxcXC58W15cXFxcJ10pKiknfFwiKCg/OlxcXFwufFteXFxcXFwiXSkqKVwiKXwoKD86XFxcXC58W15cXFxcKClbXFxdXXwiK2F0KyIpKil8LiopXFwpfCkiLHN0PW5ldyBSZWdFeHAobnQrIisiLCJnIiksbHQ9bmV3IFJlZ0V4cCgiXiIrbnQrIit8KCg/Ol58W15cXFxcXSkoPzpcXFxcLikqKSIrbnQrIiskIiwiZyIpLGN0PW5ldyBSZWdFeHAoIl4iK250KyIqLCIrbnQrIioiKSxwdD1uZXcgUmVnRXhwKCJeIitudCsiKihbPit+XXwiK250KyIpIitudCsiKiIpLGR0PW5ldyBSZWdFeHAoIj0iK250KyIqKFteXFxdJ1wiXSo/KSIrbnQrIipcXF0iLCJnIiksaHQ9bmV3IFJlZ0V4cChydCksdXQ9bmV3IFJlZ0V4cCgiXiIrb3QrIiQiKSxtdD17SUQ6bmV3IFJlZ0V4cCgiXiMoIitpdCsiKSIpLENMQVNTOm5ldyBSZWdFeHAoIl5cXC4oIitpdCsiKSIpLFRBRzpuZXcgUmVnRXhwKCJeKCIraXQucmVwbGFjZSgidyIsIncqIikrIikiKSxBVFRSOm5ldyBSZWdFeHAoIl4iK2F0KSxQU0VVRE86bmV3IFJlZ0V4cCgiXiIrcnQpLENISUxEOm5ldyBSZWdFeHAoIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcKCIrbnQrIiooZXZlbnxvZGR8KChbKy1dfCkoXFxkKilufCkiK250KyIqKD86KFsrLV18KSIrbnQrIiooXFxkKyl8KSkiK250KyIqXFwpfCkiLCJpIiksYm9vbDpuZXcgUmVnRXhwKCJeKD86IitldCsiKSQiLCJpIiksbmVlZHNDb250ZXh0Om5ldyBSZWdFeHAoIl4iK250KyIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXCgiK250KyIqKCg/Oi1cXGQpP1xcZCopIitudCsiKlxcKXwpKD89W14tXXwkKSIsImkiKX0sZnQ9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxndD0vXmhcZCQvaSx3dD0vXltee10rXHtccypcW25hdGl2ZSBcdy8seHQ9L14oPzojKFtcdy1dKyl8KFx3Kyl8XC4oW1x3LV0rKSkkLyxidD0vWyt+XS8sX3Q9Lyd8XFwvZyx2dD1uZXcgUmVnRXhwKCJcXFxcKFtcXGRhLWZdezEsNn0iK250KyI/fCgiK250KyIpfC4pIiwiaWciKSx5dD1mdW5jdGlvbih0LGUsbil7dmFyIGk9IjB4IitlLTY1NTM2O3JldHVybiBpIT09aXx8bj9lOmk8MD9TdHJpbmcuZnJvbUNoYXJDb2RlKGkrNjU1MzYpOlN0cmluZy5mcm9tQ2hhckNvZGUoaT4+MTB8NTUyOTYsMTAyMyZpfDU2MzIwKX0sa3Q9ZnVuY3Rpb24oKXtOKCl9O3RyeXtLLmFwcGx5KEo9US5jYWxsKE0uY2hpbGROb2RlcyksTS5jaGlsZE5vZGVzKSxKW00uY2hpbGROb2Rlcy5sZW5ndGhdLm5vZGVUeXBlfWNhdGNoKHp0KXtLPXthcHBseTpKLmxlbmd0aD9mdW5jdGlvbih0LGUpe1YuYXBwbHkodCxRLmNhbGwoZSkpfTpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10Lmxlbmd0aCxpPTA7dFtuKytdPWVbaSsrXTspO3QubGVuZ3RoPW4tMX19fXY9ZS5zdXBwb3J0PXt9LHo9ZS5pc1hNTD1mdW5jdGlvbih0KXt2YXIgZT10JiYodC5vd25lckRvY3VtZW50fHx0KS5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuISFlJiYiSFRNTCIhPT1lLm5vZGVOYW1lfSxOPWUuc2V0RG9jdW1lbnQ9ZnVuY3Rpb24odCl7dmFyIGUsbixpPXQ/dC5vd25lckRvY3VtZW50fHx0Ok07cmV0dXJuIGkhPT1JJiY5PT09aS5ub2RlVHlwZSYmaS5kb2N1bWVudEVsZW1lbnQ/KEk9aSxCPWkuZG9jdW1lbnRFbGVtZW50LG49aS5kZWZhdWx0VmlldyxuJiZuIT09bi50b3AmJihuLmFkZEV2ZW50TGlzdGVuZXI/bi5hZGRFdmVudExpc3RlbmVyKCJ1bmxvYWQiLGt0LCExKTpuLmF0dGFjaEV2ZW50JiZuLmF0dGFjaEV2ZW50KCJvbnVubG9hZCIsa3QpKSxxPSF6KGkpLHYuYXR0cmlidXRlcz1vKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNsYXNzTmFtZT0iaSIsIXQuZ2V0QXR0cmlidXRlKCJjbGFzc05hbWUiKX0pLHYuZ2V0RWxlbWVudHNCeVRhZ05hbWU9byhmdW5jdGlvbih0KXtyZXR1cm4gdC5hcHBlbmRDaGlsZChpLmNyZWF0ZUNvbW1lbnQoIiIpKSwhdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiKiIpLmxlbmd0aH0pLHYuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZT13dC50ZXN0KGkuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSksdi5nZXRCeUlkPW8oZnVuY3Rpb24odCl7cmV0dXJuIEIuYXBwZW5kQ2hpbGQodCkuaWQ9RiwhaS5nZXRFbGVtZW50c0J5TmFtZXx8IWkuZ2V0RWxlbWVudHNCeU5hbWUoRikubGVuZ3RofSksdi5nZXRCeUlkPyh5LmZpbmQuSUQ9ZnVuY3Rpb24odCxlKXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIGUuZ2V0RWxlbWVudEJ5SWQmJnEpe3ZhciBuPWUuZ2V0RWxlbWVudEJ5SWQodCk7cmV0dXJuIG4mJm4ucGFyZW50Tm9kZT9bbl06W119fSx5LmZpbHRlci5JRD1mdW5jdGlvbih0KXt2YXIgZT10LnJlcGxhY2UodnQseXQpO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRBdHRyaWJ1dGUoImlkIik9PT1lfX0pOihkZWxldGUgeS5maW5kLklELHkuZmlsdGVyLklEPWZ1bmN0aW9uKHQpe3ZhciBlPXQucmVwbGFjZSh2dCx5dCk7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBuPSJ1bmRlZmluZWQiIT10eXBlb2YgdC5nZXRBdHRyaWJ1dGVOb2RlJiZ0LmdldEF0dHJpYnV0ZU5vZGUoImlkIik7cmV0dXJuIG4mJm4udmFsdWU9PT1lfX0pLHkuZmluZC5UQUc9di5nZXRFbGVtZW50c0J5VGFnTmFtZT9mdW5jdGlvbih0LGUpe3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgZS5nZXRFbGVtZW50c0J5VGFnTmFtZT9lLmdldEVsZW1lbnRzQnlUYWdOYW1lKHQpOnYucXNhP2UucXVlcnlTZWxlY3RvckFsbCh0KTp2b2lkIDB9OmZ1bmN0aW9uKHQsZSl7dmFyIG4saT1bXSxvPTAsYT1lLmdldEVsZW1lbnRzQnlUYWdOYW1lKHQpO2lmKCIqIj09PXQpe2Zvcig7bj1hW28rK107KTE9PT1uLm5vZGVUeXBlJiZpLnB1c2gobik7cmV0dXJuIGl9cmV0dXJuIGF9LHkuZmluZC5DTEFTUz12LmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmZ1bmN0aW9uKHQsZSl7aWYocSlyZXR1cm4gZS5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKHQpfSxFPVtdLE89W10sKHYucXNhPXd0LnRlc3QoaS5xdWVyeVNlbGVjdG9yQWxsKSkmJihvKGZ1bmN0aW9uKHQpe0IuYXBwZW5kQ2hpbGQodCkuaW5uZXJIVE1MPSI8YSBpZD0nIitGKyInPjwvYT48c2VsZWN0IGlkPSciK0YrIi1cZl0nIG1zYWxsb3djYXB0dXJlPScnPjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+Iix0LnF1ZXJ5U2VsZWN0b3JBbGwoIlttc2FsbG93Y2FwdHVyZV49JyddIikubGVuZ3RoJiZPLnB1c2goIlsqXiRdPSIrbnQrIiooPzonJ3xcIlwiKSIpLHQucXVlcnlTZWxlY3RvckFsbCgiW3NlbGVjdGVkXSIpLmxlbmd0aHx8Ty5wdXNoKCJcXFsiK250KyIqKD86dmFsdWV8IitldCsiKSIpLHQucXVlcnlTZWxlY3RvckFsbCgiW2lkfj0iK0YrIi1dIikubGVuZ3RofHxPLnB1c2goIn49IiksdC5xdWVyeVNlbGVjdG9yQWxsKCI6Y2hlY2tlZCIpLmxlbmd0aHx8Ty5wdXNoKCI6Y2hlY2tlZCIpLHQucXVlcnlTZWxlY3RvckFsbCgiYSMiK0YrIisqIikubGVuZ3RofHxPLnB1c2goIi4jLitbK35dIil9KSxvKGZ1bmN0aW9uKHQpe3ZhciBlPWkuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTtlLnNldEF0dHJpYnV0ZSgidHlwZSIsImhpZGRlbiIpLHQuYXBwZW5kQ2hpbGQoZSkuc2V0QXR0cmlidXRlKCJuYW1lIiwiRCIpLHQucXVlcnlTZWxlY3RvckFsbCgiW25hbWU9ZF0iKS5sZW5ndGgmJk8ucHVzaCgibmFtZSIrbnQrIipbKl4kfCF+XT89IiksdC5xdWVyeVNlbGVjdG9yQWxsKCI6ZW5hYmxlZCIpLmxlbmd0aHx8Ty5wdXNoKCI6ZW5hYmxlZCIsIjpkaXNhYmxlZCIpLHQucXVlcnlTZWxlY3RvckFsbCgiKiw6eCIpLE8ucHVzaCgiLC4qOiIpfSkpLCh2Lm1hdGNoZXNTZWxlY3Rvcj13dC50ZXN0KEw9Qi5tYXRjaGVzfHxCLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8Qi5tb3pNYXRjaGVzU2VsZWN0b3J8fEIub01hdGNoZXNTZWxlY3Rvcnx8Qi5tc01hdGNoZXNTZWxlY3RvcikpJiZvKGZ1bmN0aW9uKHQpe3YuZGlzY29ubmVjdGVkTWF0Y2g9TC5jYWxsKHQsImRpdiIpLEwuY2FsbCh0LCJbcyE9JyddOngiKSxFLnB1c2goIiE9IixydCl9KSxPPU8ubGVuZ3RoJiZuZXcgUmVnRXhwKE8uam9pbigifCIpKSxFPUUubGVuZ3RoJiZuZXcgUmVnRXhwKEUuam9pbigifCIpKSxlPXd0LnRlc3QoQi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiksRD1lfHx3dC50ZXN0KEIuY29udGFpbnMpP2Z1bmN0aW9uKHQsZSl7dmFyIG49OT09PXQubm9kZVR5cGU/dC5kb2N1bWVudEVsZW1lbnQ6dCxpPWUmJmUucGFyZW50Tm9kZTtyZXR1cm4gdD09PWl8fCEoIWl8fDEhPT1pLm5vZGVUeXBlfHwhKG4uY29udGFpbnM/bi5jb250YWlucyhpKTp0LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uJiYxNiZ0LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGkpKSl9OmZ1bmN0aW9uKHQsZSl7aWYoZSlmb3IoO2U9ZS5wYXJlbnROb2RlOylpZihlPT09dClyZXR1cm4hMDtyZXR1cm4hMX0sWT1lP2Z1bmN0aW9uKHQsZSl7aWYodD09PWUpcmV0dXJuIEE9ITAsMDt2YXIgbj0hdC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbi0hZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtyZXR1cm4gbj9uOihuPSh0Lm93bmVyRG9jdW1lbnR8fHQpPT09KGUub3duZXJEb2N1bWVudHx8ZSk/dC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihlKToxLDEmbnx8IXYuc29ydERldGFjaGVkJiZlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHQpPT09bj90PT09aXx8dC5vd25lckRvY3VtZW50PT09TSYmRChNLHQpPy0xOmU9PT1pfHxlLm93bmVyRG9jdW1lbnQ9PT1NJiZEKE0sZSk/MTpUP3R0KFQsdCktdHQoVCxlKTowOjQmbj8tMToxKX06ZnVuY3Rpb24odCxlKXtpZih0PT09ZSlyZXR1cm4gQT0hMCwwO3ZhciBuLG89MCxhPXQucGFyZW50Tm9kZSxzPWUucGFyZW50Tm9kZSxsPVt0XSxjPVtlXTtpZighYXx8IXMpcmV0dXJuIHQ9PT1pPy0xOmU9PT1pPzE6YT8tMTpzPzE6VD90dChULHQpLXR0KFQsZSk6MDtpZihhPT09cylyZXR1cm4gcih0LGUpO2ZvcihuPXQ7bj1uLnBhcmVudE5vZGU7KWwudW5zaGlmdChuKTtmb3Iobj1lO249bi5wYXJlbnROb2RlOyljLnVuc2hpZnQobik7Zm9yKDtsW29dPT09Y1tvXTspbysrO3JldHVybiBvP3IobFtvXSxjW29dKTpsW29dPT09TT8tMTpjW29dPT09TT8xOjB9LGkpOkl9LGUubWF0Y2hlcz1mdW5jdGlvbih0LG4pe3JldHVybiBlKHQsbnVsbCxudWxsLG4pfSxlLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbih0LG4pe2lmKCh0Lm93bmVyRG9jdW1lbnR8fHQpIT09SSYmTih0KSxuPW4ucmVwbGFjZShkdCwiPSckMSddIiksdi5tYXRjaGVzU2VsZWN0b3ImJnEmJighRXx8IUUudGVzdChuKSkmJighT3x8IU8udGVzdChuKSkpdHJ5e3ZhciBpPUwuY2FsbCh0LG4pO2lmKGl8fHYuZGlzY29ubmVjdGVkTWF0Y2h8fHQuZG9jdW1lbnQmJjExIT09dC5kb2N1bWVudC5ub2RlVHlwZSlyZXR1cm4gaX1jYXRjaChvKXt9cmV0dXJuIGUobixJLG51bGwsW3RdKS5sZW5ndGg+MH0sZS5jb250YWlucz1mdW5jdGlvbih0LGUpe3JldHVybih0Lm93bmVyRG9jdW1lbnR8fHQpIT09SSYmTih0KSxEKHQsZSl9LGUuYXR0cj1mdW5jdGlvbih0LGUpeyh0Lm93bmVyRG9jdW1lbnR8fHQpIT09SSYmTih0KTt2YXIgbj15LmF0dHJIYW5kbGVbZS50b0xvd2VyQ2FzZSgpXSxpPW4mJlguY2FsbCh5LmF0dHJIYW5kbGUsZS50b0xvd2VyQ2FzZSgpKT9uKHQsZSwhcSk6dm9pZCAwO3JldHVybiB2b2lkIDAhPT1pP2k6di5hdHRyaWJ1dGVzfHwhcT90LmdldEF0dHJpYnV0ZShlKTooaT10LmdldEF0dHJpYnV0ZU5vZGUoZSkpJiZpLnNwZWNpZmllZD9pLnZhbHVlOm51bGx9LGUuZXJyb3I9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiAiK3QpfSxlLnVuaXF1ZVNvcnQ9ZnVuY3Rpb24odCl7dmFyIGUsbj1bXSxpPTAsbz0wO2lmKEE9IXYuZGV0ZWN0RHVwbGljYXRlcyxUPSF2LnNvcnRTdGFibGUmJnQuc2xpY2UoMCksdC5zb3J0KFkpLEEpe2Zvcig7ZT10W28rK107KWU9PT10W29dJiYoaT1uLnB1c2gobykpO2Zvcig7aS0tOyl0LnNwbGljZShuW2ldLDEpfXJldHVybiBUPW51bGwsdH0saz1lLmdldFRleHQ9ZnVuY3Rpb24odCl7dmFyIGUsbj0iIixpPTAsbz10Lm5vZGVUeXBlO2lmKG8pe2lmKDE9PT1vfHw5PT09b3x8MTE9PT1vKXtpZigic3RyaW5nIj09dHlwZW9mIHQudGV4dENvbnRlbnQpcmV0dXJuIHQudGV4dENvbnRlbnQ7Zm9yKHQ9dC5maXJzdENoaWxkO3Q7dD10Lm5leHRTaWJsaW5nKW4rPWsodCl9ZWxzZSBpZigzPT09b3x8ND09PW8pcmV0dXJuIHQubm9kZVZhbHVlfWVsc2UgZm9yKDtlPXRbaSsrXTspbis9ayhlKTtyZXR1cm4gbn0seT1lLnNlbGVjdG9ycz17Y2FjaGVMZW5ndGg6NTAsY3JlYXRlUHNldWRvOmksbWF0Y2g6bXQsYXR0ckhhbmRsZTp7fSxmaW5kOnt9LHJlbGF0aXZlOnsiPiI6e2RpcjoicGFyZW50Tm9kZSIsZmlyc3Q6ITB9LCIgIjp7ZGlyOiJwYXJlbnROb2RlIn0sIisiOntkaXI6InByZXZpb3VzU2libGluZyIsZmlyc3Q6ITB9LCJ+Ijp7ZGlyOiJwcmV2aW91c1NpYmxpbmcifX0scHJlRmlsdGVyOntBVFRSOmZ1bmN0aW9uKHQpe3JldHVybiB0WzFdPXRbMV0ucmVwbGFjZSh2dCx5dCksdFszXT0odFszXXx8dFs0XXx8dFs1XXx8IiIpLnJlcGxhY2UodnQseXQpLCJ+PSI9PT10WzJdJiYodFszXT0iICIrdFszXSsiICIpLHQuc2xpY2UoMCw0KX0sQ0hJTEQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRbMV09dFsxXS50b0xvd2VyQ2FzZSgpLCJudGgiPT09dFsxXS5zbGljZSgwLDMpPyh0WzNdfHxlLmVycm9yKHRbMF0pLHRbNF09Kyh0WzRdP3RbNV0rKHRbNl18fDEpOjIqKCJldmVuIj09PXRbM118fCJvZGQiPT09dFszXSkpLHRbNV09Kyh0WzddK3RbOF18fCJvZGQiPT09dFszXSkpOnRbM10mJmUuZXJyb3IodFswXSksdH0sUFNFVURPOmZ1bmN0aW9uKHQpe3ZhciBlLG49IXRbNl0mJnRbMl07cmV0dXJuIG10LkNISUxELnRlc3QodFswXSk/bnVsbDoodFszXT90WzJdPXRbNF18fHRbNV18fCIiOm4mJmh0LnRlc3QobikmJihlPWoobiwhMCkpJiYoZT1uLmluZGV4T2YoIikiLG4ubGVuZ3RoLWUpLW4ubGVuZ3RoKSYmKHRbMF09dFswXS5zbGljZSgwLGUpLHRbMl09bi5zbGljZSgwLGUpKSx0LnNsaWNlKDAsMykpfX0sZmlsdGVyOntUQUc6ZnVuY3Rpb24odCl7dmFyIGU9dC5yZXBsYWNlKHZ0LHl0KS50b0xvd2VyQ2FzZSgpO3JldHVybiIqIj09PXQ/ZnVuY3Rpb24oKXtyZXR1cm4hMH06ZnVuY3Rpb24odCl7cmV0dXJuIHQubm9kZU5hbWUmJnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PWV9fSxDTEFTUzpmdW5jdGlvbih0KXt2YXIgZT1IW3QrIiAiXTtyZXR1cm4gZXx8KGU9bmV3IFJlZ0V4cCgiKF58IitudCsiKSIrdCsiKCIrbnQrInwkKSIpKSYmSCh0LGZ1bmN0aW9uKHQpe3JldHVybiBlLnRlc3QoInN0cmluZyI9PXR5cGVvZiB0LmNsYXNzTmFtZSYmdC5jbGFzc05hbWV8fCJ1bmRlZmluZWQiIT10eXBlb2YgdC5nZXRBdHRyaWJ1dGUmJnQuZ2V0QXR0cmlidXRlKCJjbGFzcyIpfHwiIil9KX0sQVRUUjpmdW5jdGlvbih0LG4saSl7cmV0dXJuIGZ1bmN0aW9uKG8pe3ZhciBhPWUuYXR0cihvLHQpO3JldHVybiBudWxsPT1hPyIhPSI9PT1uOiFufHwoYSs9IiIsIj0iPT09bj9hPT09aToiIT0iPT09bj9hIT09aToiXj0iPT09bj9pJiYwPT09YS5pbmRleE9mKGkpOiIqPSI9PT1uP2kmJmEuaW5kZXhPZihpKT4tMToiJD0iPT09bj9pJiZhLnNsaWNlKC1pLmxlbmd0aCk9PT1pOiJ+PSI9PT1uPygiICIrYS5yZXBsYWNlKHN0LCIgIikrIiAiKS5pbmRleE9mKGkpPi0xOiJ8PSI9PT1uJiYoYT09PWl8fGEuc2xpY2UoMCxpLmxlbmd0aCsxKT09PWkrIi0iKSl9fSxDSElMRDpmdW5jdGlvbih0LGUsbixpLG8pe3ZhciBhPSJudGgiIT09dC5zbGljZSgwLDMpLHI9Imxhc3QiIT09dC5zbGljZSgtNCkscz0ib2YtdHlwZSI9PT1lO3JldHVybiAxPT09aSYmMD09PW8/ZnVuY3Rpb24odCl7cmV0dXJuISF0LnBhcmVudE5vZGV9OmZ1bmN0aW9uKGUsbixsKXt2YXIgYyxwLGQsaCx1LG0sZj1hIT09cj8ibmV4dFNpYmxpbmciOiJwcmV2aW91c1NpYmxpbmciLGc9ZS5wYXJlbnROb2RlLHc9cyYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLHg9IWwmJiFzO2lmKGcpe2lmKGEpe2Zvcig7Zjspe2ZvcihkPWU7ZD1kW2ZdOylpZihzP2Qubm9kZU5hbWUudG9Mb3dlckNhc2UoKT09PXc6MT09PWQubm9kZVR5cGUpcmV0dXJuITE7bT1mPSJvbmx5Ij09PXQmJiFtJiYibmV4dFNpYmxpbmcifXJldHVybiEwfWlmKG09W3I/Zy5maXJzdENoaWxkOmcubGFzdENoaWxkXSxyJiZ4KXtmb3IocD1nW0ZdfHwoZ1tGXT17fSksYz1wW3RdfHxbXSx1PWNbMF09PT1SJiZjWzFdLGg9Y1swXT09PVImJmNbMl0sZD11JiZnLmNoaWxkTm9kZXNbdV07ZD0rK3UmJmQmJmRbZl18fChoPXU9MCl8fG0ucG9wKCk7KWlmKDE9PT1kLm5vZGVUeXBlJiYrK2gmJmQ9PT1lKXtwW3RdPVtSLHUsaF07YnJlYWt9fWVsc2UgaWYoeCYmKGM9KGVbRl18fChlW0ZdPXt9KSlbdF0pJiZjWzBdPT09UiloPWNbMV07ZWxzZSBmb3IoOyhkPSsrdSYmZCYmZFtmXXx8KGg9dT0wKXx8bS5wb3AoKSkmJigocz9kLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkhPT13OjEhPT1kLm5vZGVUeXBlKXx8ISsraHx8KHgmJigoZFtGXXx8KGRbRl09e30pKVt0XT1bUixoXSksZCE9PWUpKTspO3JldHVybiBoLT1vLGg9PT1pfHxoJWk9PT0wJiZoL2k+PTB9fX0sUFNFVURPOmZ1bmN0aW9uKHQsbil7dmFyIG8sYT15LnBzZXVkb3NbdF18fHkuc2V0RmlsdGVyc1t0LnRvTG93ZXJDYXNlKCldfHxlLmVycm9yKCJ1bnN1cHBvcnRlZCBwc2V1ZG86ICIrdCk7cmV0dXJuIGFbRl0/YShuKTphLmxlbmd0aD4xPyhvPVt0LHQsIiIsbl0seS5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KHQudG9Mb3dlckNhc2UoKSk/aShmdW5jdGlvbih0LGUpe2Zvcih2YXIgaSxvPWEodCxuKSxyPW8ubGVuZ3RoO3ItLTspaT10dCh0LG9bcl0pLHRbaV09IShlW2ldPW9bcl0pfSk6ZnVuY3Rpb24odCl7cmV0dXJuIGEodCwwLG8pfSk6YX19LHBzZXVkb3M6e25vdDppKGZ1bmN0aW9uKHQpe3ZhciBlPVtdLG49W10sbz1DKHQucmVwbGFjZShsdCwiJDEiKSk7cmV0dXJuIG9bRl0/aShmdW5jdGlvbih0LGUsbixpKXtmb3IodmFyIGEscj1vKHQsbnVsbCxpLFtdKSxzPXQubGVuZ3RoO3MtLTspKGE9cltzXSkmJih0W3NdPSEoZVtzXT1hKSk7Cn0pOmZ1bmN0aW9uKHQsaSxhKXtyZXR1cm4gZVswXT10LG8oZSxudWxsLGEsbiksZVswXT1udWxsLCFuLnBvcCgpfX0pLGhhczppKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gZSh0LG4pLmxlbmd0aD4wfX0pLGNvbnRhaW5zOmkoZnVuY3Rpb24odCl7cmV0dXJuIHQ9dC5yZXBsYWNlKHZ0LHl0KSxmdW5jdGlvbihlKXtyZXR1cm4oZS50ZXh0Q29udGVudHx8ZS5pbm5lclRleHR8fGsoZSkpLmluZGV4T2YodCk+LTF9fSksbGFuZzppKGZ1bmN0aW9uKHQpe3JldHVybiB1dC50ZXN0KHR8fCIiKXx8ZS5lcnJvcigidW5zdXBwb3J0ZWQgbGFuZzogIit0KSx0PXQucmVwbGFjZSh2dCx5dCkudG9Mb3dlckNhc2UoKSxmdW5jdGlvbihlKXt2YXIgbjtkbyBpZihuPXE/ZS5sYW5nOmUuZ2V0QXR0cmlidXRlKCJ4bWw6bGFuZyIpfHxlLmdldEF0dHJpYnV0ZSgibGFuZyIpKXJldHVybiBuPW4udG9Mb3dlckNhc2UoKSxuPT09dHx8MD09PW4uaW5kZXhPZih0KyItIik7d2hpbGUoKGU9ZS5wYXJlbnROb2RlKSYmMT09PWUubm9kZVR5cGUpO3JldHVybiExfX0pLHRhcmdldDpmdW5jdGlvbihlKXt2YXIgbj10LmxvY2F0aW9uJiZ0LmxvY2F0aW9uLmhhc2g7cmV0dXJuIG4mJm4uc2xpY2UoMSk9PT1lLmlkfSxyb290OmZ1bmN0aW9uKHQpe3JldHVybiB0PT09Qn0sZm9jdXM6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1JLmFjdGl2ZUVsZW1lbnQmJighSS5oYXNGb2N1c3x8SS5oYXNGb2N1cygpKSYmISEodC50eXBlfHx0LmhyZWZ8fH50LnRhYkluZGV4KX0sZW5hYmxlZDpmdW5jdGlvbih0KXtyZXR1cm4gdC5kaXNhYmxlZD09PSExfSxkaXNhYmxlZDpmdW5jdGlvbih0KXtyZXR1cm4gdC5kaXNhYmxlZD09PSEwfSxjaGVja2VkOmZ1bmN0aW9uKHQpe3ZhciBlPXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4iaW5wdXQiPT09ZSYmISF0LmNoZWNrZWR8fCJvcHRpb24iPT09ZSYmISF0LnNlbGVjdGVkfSxzZWxlY3RlZDpmdW5jdGlvbih0KXtyZXR1cm4gdC5wYXJlbnROb2RlJiZ0LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCx0LnNlbGVjdGVkPT09ITB9LGVtcHR5OmZ1bmN0aW9uKHQpe2Zvcih0PXQuZmlyc3RDaGlsZDt0O3Q9dC5uZXh0U2libGluZylpZih0Lm5vZGVUeXBlPDYpcmV0dXJuITE7cmV0dXJuITB9LHBhcmVudDpmdW5jdGlvbih0KXtyZXR1cm4heS5wc2V1ZG9zLmVtcHR5KHQpfSxoZWFkZXI6ZnVuY3Rpb24odCl7cmV0dXJuIGd0LnRlc3QodC5ub2RlTmFtZSl9LGlucHV0OmZ1bmN0aW9uKHQpe3JldHVybiBmdC50ZXN0KHQubm9kZU5hbWUpfSxidXR0b246ZnVuY3Rpb24odCl7dmFyIGU9dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiJpbnB1dCI9PT1lJiYiYnV0dG9uIj09PXQudHlwZXx8ImJ1dHRvbiI9PT1lfSx0ZXh0OmZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiJpbnB1dCI9PT10Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkmJiJ0ZXh0Ij09PXQudHlwZSYmKG51bGw9PShlPXQuZ2V0QXR0cmlidXRlKCJ0eXBlIikpfHwidGV4dCI9PT1lLnRvTG93ZXJDYXNlKCkpfSxmaXJzdDpjKGZ1bmN0aW9uKCl7cmV0dXJuWzBdfSksbGFzdDpjKGZ1bmN0aW9uKHQsZSl7cmV0dXJuW2UtMV19KSxlcTpjKGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm5bbjwwP24rZTpuXX0pLGV2ZW46YyhmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248ZTtuKz0yKXQucHVzaChuKTtyZXR1cm4gdH0pLG9kZDpjKGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTE7bjxlO24rPTIpdC5wdXNoKG4pO3JldHVybiB0fSksbHQ6YyhmdW5jdGlvbih0LGUsbil7Zm9yKHZhciBpPW48MD9uK2U6bjstLWk+PTA7KXQucHVzaChpKTtyZXR1cm4gdH0pLGd0OmMoZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgaT1uPDA/bitlOm47KytpPGU7KXQucHVzaChpKTtyZXR1cm4gdH0pfX0seS5wc2V1ZG9zLm50aD15LnBzZXVkb3MuZXE7Zm9yKF8gaW57cmFkaW86ITAsY2hlY2tib3g6ITAsZmlsZTohMCxwYXNzd29yZDohMCxpbWFnZTohMH0peS5wc2V1ZG9zW19dPXMoXyk7Zm9yKF8gaW57c3VibWl0OiEwLHJlc2V0OiEwfSl5LnBzZXVkb3NbX109bChfKTtyZXR1cm4gZC5wcm90b3R5cGU9eS5maWx0ZXJzPXkucHNldWRvcyx5LnNldEZpbHRlcnM9bmV3IGQsaj1lLnRva2VuaXplPWZ1bmN0aW9uKHQsbil7dmFyIGksbyxhLHIscyxsLGMscD1XW3QrIiAiXTtpZihwKXJldHVybiBuPzA6cC5zbGljZSgwKTtmb3Iocz10LGw9W10sYz15LnByZUZpbHRlcjtzOyl7aSYmIShvPWN0LmV4ZWMocykpfHwobyYmKHM9cy5zbGljZShvWzBdLmxlbmd0aCl8fHMpLGwucHVzaChhPVtdKSksaT0hMSwobz1wdC5leGVjKHMpKSYmKGk9by5zaGlmdCgpLGEucHVzaCh7dmFsdWU6aSx0eXBlOm9bMF0ucmVwbGFjZShsdCwiICIpfSkscz1zLnNsaWNlKGkubGVuZ3RoKSk7Zm9yKHIgaW4geS5maWx0ZXIpIShvPW10W3JdLmV4ZWMocykpfHxjW3JdJiYhKG89Y1tyXShvKSl8fChpPW8uc2hpZnQoKSxhLnB1c2goe3ZhbHVlOmksdHlwZTpyLG1hdGNoZXM6b30pLHM9cy5zbGljZShpLmxlbmd0aCkpO2lmKCFpKWJyZWFrfXJldHVybiBuP3MubGVuZ3RoOnM/ZS5lcnJvcih0KTpXKHQsbCkuc2xpY2UoMCl9LEM9ZS5jb21waWxlPWZ1bmN0aW9uKHQsZSl7dmFyIG4saT1bXSxvPVtdLGE9VVt0KyIgIl07aWYoIWEpe2ZvcihlfHwoZT1qKHQpKSxuPWUubGVuZ3RoO24tLTspYT14KGVbbl0pLGFbRl0/aS5wdXNoKGEpOm8ucHVzaChhKTthPVUodCxiKG8saSkpLGEuc2VsZWN0b3I9dH1yZXR1cm4gYX0sUz1lLnNlbGVjdD1mdW5jdGlvbih0LGUsbixpKXt2YXIgbyxhLHIscyxsLGM9ImZ1bmN0aW9uIj09dHlwZW9mIHQmJnQsZD0haSYmaih0PWMuc2VsZWN0b3J8fHQpO2lmKG49bnx8W10sMT09PWQubGVuZ3RoKXtpZihhPWRbMF09ZFswXS5zbGljZSgwKSxhLmxlbmd0aD4yJiYiSUQiPT09KHI9YVswXSkudHlwZSYmdi5nZXRCeUlkJiY5PT09ZS5ub2RlVHlwZSYmcSYmeS5yZWxhdGl2ZVthWzFdLnR5cGVdKXtpZihlPSh5LmZpbmQuSUQoci5tYXRjaGVzWzBdLnJlcGxhY2UodnQseXQpLGUpfHxbXSlbMF0sIWUpcmV0dXJuIG47YyYmKGU9ZS5wYXJlbnROb2RlKSx0PXQuc2xpY2UoYS5zaGlmdCgpLnZhbHVlLmxlbmd0aCl9Zm9yKG89bXQubmVlZHNDb250ZXh0LnRlc3QodCk/MDphLmxlbmd0aDtvLS0mJihyPWFbb10sIXkucmVsYXRpdmVbcz1yLnR5cGVdKTspaWYoKGw9eS5maW5kW3NdKSYmKGk9bChyLm1hdGNoZXNbMF0ucmVwbGFjZSh2dCx5dCksYnQudGVzdChhWzBdLnR5cGUpJiZwKGUucGFyZW50Tm9kZSl8fGUpKSl7aWYoYS5zcGxpY2UobywxKSx0PWkubGVuZ3RoJiZoKGEpLCF0KXJldHVybiBLLmFwcGx5KG4saSksbjticmVha319cmV0dXJuKGN8fEModCxkKSkoaSxlLCFxLG4sYnQudGVzdCh0KSYmcChlLnBhcmVudE5vZGUpfHxlKSxufSx2LnNvcnRTdGFibGU9Ri5zcGxpdCgiIikuc29ydChZKS5qb2luKCIiKT09PUYsdi5kZXRlY3REdXBsaWNhdGVzPSEhQSxOKCksdi5zb3J0RGV0YWNoZWQ9byhmdW5jdGlvbih0KXtyZXR1cm4gMSZ0LmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKEkuY3JlYXRlRWxlbWVudCgiZGl2IikpfSksbyhmdW5jdGlvbih0KXtyZXR1cm4gdC5pbm5lckhUTUw9IjxhIGhyZWY9JyMnPjwvYT4iLCIjIj09PXQuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoImhyZWYiKX0pfHxhKCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoIixmdW5jdGlvbih0LGUsbil7aWYoIW4pcmV0dXJuIHQuZ2V0QXR0cmlidXRlKGUsInR5cGUiPT09ZS50b0xvd2VyQ2FzZSgpPzE6Mil9KSx2LmF0dHJpYnV0ZXMmJm8oZnVuY3Rpb24odCl7cmV0dXJuIHQuaW5uZXJIVE1MPSI8aW5wdXQvPiIsdC5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSgidmFsdWUiLCIiKSwiIj09PXQuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoInZhbHVlIil9KXx8YSgidmFsdWUiLGZ1bmN0aW9uKHQsZSxuKXtpZighbiYmImlucHV0Ij09PXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSlyZXR1cm4gdC5kZWZhdWx0VmFsdWV9KSxvKGZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10LmdldEF0dHJpYnV0ZSgiZGlzYWJsZWQiKX0pfHxhKGV0LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTtpZighbilyZXR1cm4gdFtlXT09PSEwP2UudG9Mb3dlckNhc2UoKTooaT10LmdldEF0dHJpYnV0ZU5vZGUoZSkpJiZpLnNwZWNpZmllZD9pLnZhbHVlOm51bGx9KSxlfShvKTtsdC5maW5kPXV0LGx0LmV4cHI9dXQuc2VsZWN0b3JzLGx0LmV4cHJbIjoiXT1sdC5leHByLnBzZXVkb3MsbHQudW5pcXVlPXV0LnVuaXF1ZVNvcnQsbHQudGV4dD11dC5nZXRUZXh0LGx0LmlzWE1MRG9jPXV0LmlzWE1MLGx0LmNvbnRhaW5zPXV0LmNvbnRhaW5zO3ZhciBtdD1sdC5leHByLm1hdGNoLm5lZWRzQ29udGV4dCxmdD0vXjwoXHcrKVxzKlwvPz4oPzo8XC9cMT58KSQvLGd0PS9eLlteOiNcW1wuLF0qJC87bHQuZmlsdGVyPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1lWzBdO3JldHVybiBuJiYodD0iOm5vdCgiK3QrIikiKSwxPT09ZS5sZW5ndGgmJjE9PT1pLm5vZGVUeXBlP2x0LmZpbmQubWF0Y2hlc1NlbGVjdG9yKGksdCk/W2ldOltdOmx0LmZpbmQubWF0Y2hlcyh0LGx0LmdyZXAoZSxmdW5jdGlvbih0KXtyZXR1cm4gMT09PXQubm9kZVR5cGV9KSl9LGx0LmZuLmV4dGVuZCh7ZmluZDpmdW5jdGlvbih0KXt2YXIgZSxuPVtdLGk9dGhpcyxvPWkubGVuZ3RoO2lmKCJzdHJpbmciIT10eXBlb2YgdClyZXR1cm4gdGhpcy5wdXNoU3RhY2sobHQodCkuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKGU9MDtlPG87ZSsrKWlmKGx0LmNvbnRhaW5zKGlbZV0sdGhpcykpcmV0dXJuITB9KSk7Zm9yKGU9MDtlPG87ZSsrKWx0LmZpbmQodCxpW2VdLG4pO3JldHVybiBuPXRoaXMucHVzaFN0YWNrKG8+MT9sdC51bmlxdWUobik6biksbi5zZWxlY3Rvcj10aGlzLnNlbGVjdG9yP3RoaXMuc2VsZWN0b3IrIiAiK3Q6dCxufSxmaWx0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHModGhpcyx0fHxbXSwhMSkpfSxub3Q6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucHVzaFN0YWNrKHModGhpcyx0fHxbXSwhMCkpfSxpczpmdW5jdGlvbih0KXtyZXR1cm4hIXModGhpcywic3RyaW5nIj09dHlwZW9mIHQmJm10LnRlc3QodCk/bHQodCk6dHx8W10sITEpLmxlbmd0aH19KTt2YXIgd3QseHQ9by5kb2N1bWVudCxidD0vXig/OlxzKig8W1x3XFddKz4pW14+XSp8IyhbXHctXSopKSQvLF90PWx0LmZuLmluaXQ9ZnVuY3Rpb24odCxlKXt2YXIgbixpO2lmKCF0KXJldHVybiB0aGlzO2lmKCJzdHJpbmciPT10eXBlb2YgdCl7aWYobj0iPCI9PT10LmNoYXJBdCgwKSYmIj4iPT09dC5jaGFyQXQodC5sZW5ndGgtMSkmJnQubGVuZ3RoPj0zP1tudWxsLHQsbnVsbF06YnQuZXhlYyh0KSwhbnx8IW5bMV0mJmUpcmV0dXJuIWV8fGUuanF1ZXJ5PyhlfHx3dCkuZmluZCh0KTp0aGlzLmNvbnN0cnVjdG9yKGUpLmZpbmQodCk7aWYoblsxXSl7aWYoZT1lIGluc3RhbmNlb2YgbHQ/ZVswXTplLGx0Lm1lcmdlKHRoaXMsbHQucGFyc2VIVE1MKG5bMV0sZSYmZS5ub2RlVHlwZT9lLm93bmVyRG9jdW1lbnR8fGU6eHQsITApKSxmdC50ZXN0KG5bMV0pJiZsdC5pc1BsYWluT2JqZWN0KGUpKWZvcihuIGluIGUpbHQuaXNGdW5jdGlvbih0aGlzW25dKT90aGlzW25dKGVbbl0pOnRoaXMuYXR0cihuLGVbbl0pO3JldHVybiB0aGlzfWlmKGk9eHQuZ2V0RWxlbWVudEJ5SWQoblsyXSksaSYmaS5wYXJlbnROb2RlKXtpZihpLmlkIT09blsyXSlyZXR1cm4gd3QuZmluZCh0KTt0aGlzLmxlbmd0aD0xLHRoaXNbMF09aX1yZXR1cm4gdGhpcy5jb250ZXh0PXh0LHRoaXMuc2VsZWN0b3I9dCx0aGlzfXJldHVybiB0Lm5vZGVUeXBlPyh0aGlzLmNvbnRleHQ9dGhpc1swXT10LHRoaXMubGVuZ3RoPTEsdGhpcyk6bHQuaXNGdW5jdGlvbih0KT8idW5kZWZpbmVkIiE9dHlwZW9mIHd0LnJlYWR5P3d0LnJlYWR5KHQpOnQobHQpOih2b2lkIDAhPT10LnNlbGVjdG9yJiYodGhpcy5zZWxlY3Rvcj10LnNlbGVjdG9yLHRoaXMuY29udGV4dD10LmNvbnRleHQpLGx0Lm1ha2VBcnJheSh0LHRoaXMpKX07X3QucHJvdG90eXBlPWx0LmZuLHd0PWx0KHh0KTt2YXIgdnQ9L14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8seXQ9e2NoaWxkcmVuOiEwLGNvbnRlbnRzOiEwLG5leHQ6ITAscHJldjohMH07bHQuZXh0ZW5kKHtkaXI6ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgaT1bXSxvPXRbZV07byYmOSE9PW8ubm9kZVR5cGUmJih2b2lkIDA9PT1ufHwxIT09by5ub2RlVHlwZXx8IWx0KG8pLmlzKG4pKTspMT09PW8ubm9kZVR5cGUmJmkucHVzaChvKSxvPW9bZV07cmV0dXJuIGl9LHNpYmxpbmc6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49W107dDt0PXQubmV4dFNpYmxpbmcpMT09PXQubm9kZVR5cGUmJnQhPT1lJiZuLnB1c2godCk7cmV0dXJuIG59fSksbHQuZm4uZXh0ZW5kKHtoYXM6ZnVuY3Rpb24odCl7dmFyIGUsbj1sdCh0LHRoaXMpLGk9bi5sZW5ndGg7cmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKGU9MDtlPGk7ZSsrKWlmKGx0LmNvbnRhaW5zKHRoaXMsbltlXSkpcmV0dXJuITB9KX0sY2xvc2VzdDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbixpPTAsbz10aGlzLmxlbmd0aCxhPVtdLHI9bXQudGVzdCh0KXx8InN0cmluZyIhPXR5cGVvZiB0P2x0KHQsZXx8dGhpcy5jb250ZXh0KTowO2k8bztpKyspZm9yKG49dGhpc1tpXTtuJiZuIT09ZTtuPW4ucGFyZW50Tm9kZSlpZihuLm5vZGVUeXBlPDExJiYocj9yLmluZGV4KG4pPi0xOjE9PT1uLm5vZGVUeXBlJiZsdC5maW5kLm1hdGNoZXNTZWxlY3RvcihuLHQpKSl7YS5wdXNoKG4pO2JyZWFrfXJldHVybiB0aGlzLnB1c2hTdGFjayhhLmxlbmd0aD4xP2x0LnVuaXF1ZShhKTphKX0saW5kZXg6ZnVuY3Rpb24odCl7cmV0dXJuIHQ/InN0cmluZyI9PXR5cGVvZiB0P2x0LmluQXJyYXkodGhpc1swXSxsdCh0KSk6bHQuaW5BcnJheSh0LmpxdWVyeT90WzBdOnQsdGhpcyk6dGhpc1swXSYmdGhpc1swXS5wYXJlbnROb2RlP3RoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoOi0xfSxhZGQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2sobHQudW5pcXVlKGx0Lm1lcmdlKHRoaXMuZ2V0KCksbHQodCxlKSkpKX0sYWRkQmFjazpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hZGQobnVsbD09dD90aGlzLnByZXZPYmplY3Q6dGhpcy5wcmV2T2JqZWN0LmZpbHRlcih0KSl9fSksbHQuZWFjaCh7cGFyZW50OmZ1bmN0aW9uKHQpe3ZhciBlPXQucGFyZW50Tm9kZTtyZXR1cm4gZSYmMTEhPT1lLm5vZGVUeXBlP2U6bnVsbH0scGFyZW50czpmdW5jdGlvbih0KXtyZXR1cm4gbHQuZGlyKHQsInBhcmVudE5vZGUiKX0scGFyZW50c1VudGlsOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbHQuZGlyKHQsInBhcmVudE5vZGUiLG4pfSxuZXh0OmZ1bmN0aW9uKHQpe3JldHVybiBsKHQsIm5leHRTaWJsaW5nIil9LHByZXY6ZnVuY3Rpb24odCl7cmV0dXJuIGwodCwicHJldmlvdXNTaWJsaW5nIil9LG5leHRBbGw6ZnVuY3Rpb24odCl7cmV0dXJuIGx0LmRpcih0LCJuZXh0U2libGluZyIpfSxwcmV2QWxsOmZ1bmN0aW9uKHQpe3JldHVybiBsdC5kaXIodCwicHJldmlvdXNTaWJsaW5nIil9LG5leHRVbnRpbDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGx0LmRpcih0LCJuZXh0U2libGluZyIsbil9LHByZXZVbnRpbDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGx0LmRpcih0LCJwcmV2aW91c1NpYmxpbmciLG4pfSxzaWJsaW5nczpmdW5jdGlvbih0KXtyZXR1cm4gbHQuc2libGluZygodC5wYXJlbnROb2RlfHx7fSkuZmlyc3RDaGlsZCx0KX0sY2hpbGRyZW46ZnVuY3Rpb24odCl7cmV0dXJuIGx0LnNpYmxpbmcodC5maXJzdENoaWxkKX0sY29udGVudHM6ZnVuY3Rpb24odCl7cmV0dXJuIGx0Lm5vZGVOYW1lKHQsImlmcmFtZSIpP3QuY29udGVudERvY3VtZW50fHx0LmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ6bHQubWVyZ2UoW10sdC5jaGlsZE5vZGVzKX19LGZ1bmN0aW9uKHQsZSl7bHQuZm5bdF09ZnVuY3Rpb24obixpKXt2YXIgbz1sdC5tYXAodGhpcyxlLG4pO3JldHVybiJVbnRpbCIhPT10LnNsaWNlKC01KSYmKGk9biksaSYmInN0cmluZyI9PXR5cGVvZiBpJiYobz1sdC5maWx0ZXIoaSxvKSksdGhpcy5sZW5ndGg+MSYmKHl0W3RdfHwobz1sdC51bmlxdWUobykpLHZ0LnRlc3QodCkmJihvPW8ucmV2ZXJzZSgpKSksdGhpcy5wdXNoU3RhY2sobyl9fSk7dmFyIGt0PS9cUysvZyx6dD17fTtsdC5DYWxsYmFja3M9ZnVuY3Rpb24odCl7dD0ic3RyaW5nIj09dHlwZW9mIHQ/enRbdF18fGModCk6bHQuZXh0ZW5kKHt9LHQpO3ZhciBlLG4saSxvLGEscixzPVtdLGw9IXQub25jZSYmW10scD1mdW5jdGlvbihjKXtmb3Iobj10Lm1lbW9yeSYmYyxpPSEwLGE9cnx8MCxyPTAsbz1zLmxlbmd0aCxlPSEwO3MmJmE8bzthKyspaWYoc1thXS5hcHBseShjWzBdLGNbMV0pPT09ITEmJnQuc3RvcE9uRmFsc2Upe249ITE7YnJlYWt9ZT0hMSxzJiYobD9sLmxlbmd0aCYmcChsLnNoaWZ0KCkpOm4/cz1bXTpkLmRpc2FibGUoKSl9LGQ9e2FkZDpmdW5jdGlvbigpe2lmKHMpe3ZhciBpPXMubGVuZ3RoOyFmdW5jdGlvbiBhKGUpe2x0LmVhY2goZSxmdW5jdGlvbihlLG4pe3ZhciBpPWx0LnR5cGUobik7ImZ1bmN0aW9uIj09PWk/dC51bmlxdWUmJmQuaGFzKG4pfHxzLnB1c2gobik6biYmbi5sZW5ndGgmJiJzdHJpbmciIT09aSYmYShuKX0pfShhcmd1bWVudHMpLGU/bz1zLmxlbmd0aDpuJiYocj1pLHAobikpfXJldHVybiB0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtyZXR1cm4gcyYmbHQuZWFjaChhcmd1bWVudHMsZnVuY3Rpb24odCxuKXtmb3IodmFyIGk7KGk9bHQuaW5BcnJheShuLHMsaSkpPi0xOylzLnNwbGljZShpLDEpLGUmJihpPD1vJiZvLS0saTw9YSYmYS0tKX0pLHRoaXN9LGhhczpmdW5jdGlvbih0KXtyZXR1cm4gdD9sdC5pbkFycmF5KHQscyk+LTE6ISghc3x8IXMubGVuZ3RoKX0sZW1wdHk6ZnVuY3Rpb24oKXtyZXR1cm4gcz1bXSxvPTAsdGhpc30sZGlzYWJsZTpmdW5jdGlvbigpe3JldHVybiBzPWw9bj12b2lkIDAsdGhpc30sZGlzYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hc30sbG9jazpmdW5jdGlvbigpe3JldHVybiBsPXZvaWQgMCxufHxkLmRpc2FibGUoKSx0aGlzfSxsb2NrZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hbH0sZmlyZVdpdGg6ZnVuY3Rpb24odCxuKXtyZXR1cm4hc3x8aSYmIWx8fChuPW58fFtdLG49W3Qsbi5zbGljZT9uLnNsaWNlKCk6bl0sZT9sLnB1c2gobik6cChuKSksdGhpc30sZmlyZTpmdW5jdGlvbigpe3JldHVybiBkLmZpcmVXaXRoKHRoaXMsYXJndW1lbnRzKSx0aGlzfSxmaXJlZDpmdW5jdGlvbigpe3JldHVybiEhaX19O3JldHVybiBkfSxsdC5leHRlbmQoe0RlZmVycmVkOmZ1bmN0aW9uKHQpe3ZhciBlPVtbInJlc29sdmUiLCJkb25lIixsdC5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksInJlc29sdmVkIl0sWyJyZWplY3QiLCJmYWlsIixsdC5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IiksInJlamVjdGVkIl0sWyJub3RpZnkiLCJwcm9ncmVzcyIsbHQuQ2FsbGJhY2tzKCJtZW1vcnkiKV1dLG49InBlbmRpbmciLGk9e3N0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIG59LGFsd2F5czpmdW5jdGlvbigpe3JldHVybiBvLmRvbmUoYXJndW1lbnRzKS5mYWlsKGFyZ3VtZW50cyksdGhpc30sdGhlbjpmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cztyZXR1cm4gbHQuRGVmZXJyZWQoZnVuY3Rpb24obil7bHQuZWFjaChlLGZ1bmN0aW9uKGUsYSl7dmFyIHI9bHQuaXNGdW5jdGlvbih0W2VdKSYmdFtlXTtvW2FbMV1dKGZ1bmN0aW9uKCl7dmFyIHQ9ciYmci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dCYmbHQuaXNGdW5jdGlvbih0LnByb21pc2UpP3QucHJvbWlzZSgpLmRvbmUobi5yZXNvbHZlKS5mYWlsKG4ucmVqZWN0KS5wcm9ncmVzcyhuLm5vdGlmeSk6blthWzBdKyJXaXRoIl0odGhpcz09PWk/bi5wcm9taXNlKCk6dGhpcyxyP1t0XTphcmd1bWVudHMpfSl9KSx0PW51bGx9KS5wcm9taXNlKCl9LHByb21pc2U6ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPXQ/bHQuZXh0ZW5kKHQsaSk6aX19LG89e307cmV0dXJuIGkucGlwZT1pLnRoZW4sbHQuZWFjaChlLGZ1bmN0aW9uKHQsYSl7dmFyIHI9YVsyXSxzPWFbM107aVthWzFdXT1yLmFkZCxzJiZyLmFkZChmdW5jdGlvbigpe249c30sZVsxXnRdWzJdLmRpc2FibGUsZVsyXVsyXS5sb2NrKSxvW2FbMF1dPWZ1bmN0aW9uKCl7cmV0dXJuIG9bYVswXSsiV2l0aCJdKHRoaXM9PT1vP2k6dGhpcyxhcmd1bWVudHMpLHRoaXN9LG9bYVswXSsiV2l0aCJdPXIuZmlyZVdpdGh9KSxpLnByb21pc2UobyksdCYmdC5jYWxsKG8sbyksb30sd2hlbjpmdW5jdGlvbih0KXt2YXIgZSxuLGksbz0wLGE9US5jYWxsKGFyZ3VtZW50cykscj1hLmxlbmd0aCxzPTEhPT1yfHx0JiZsdC5pc0Z1bmN0aW9uKHQucHJvbWlzZSk/cjowLGw9MT09PXM/dDpsdC5EZWZlcnJlZCgpLGM9ZnVuY3Rpb24odCxuLGkpe3JldHVybiBmdW5jdGlvbihvKXtuW3RdPXRoaXMsaVt0XT1hcmd1bWVudHMubGVuZ3RoPjE/US5jYWxsKGFyZ3VtZW50cyk6byxpPT09ZT9sLm5vdGlmeVdpdGgobixpKTotLXN8fGwucmVzb2x2ZVdpdGgobixpKX19O2lmKHI+MSlmb3IoZT1uZXcgQXJyYXkociksbj1uZXcgQXJyYXkociksaT1uZXcgQXJyYXkocik7bzxyO28rKylhW29dJiZsdC5pc0Z1bmN0aW9uKGFbb10ucHJvbWlzZSk/YVtvXS5wcm9taXNlKCkuZG9uZShjKG8saSxhKSkuZmFpbChsLnJlamVjdCkucHJvZ3Jlc3MoYyhvLG4sZSkpOi0tcztyZXR1cm4gc3x8bC5yZXNvbHZlV2l0aChpLGEpLGwucHJvbWlzZSgpfX0pO3ZhciBqdDtsdC5mbi5yZWFkeT1mdW5jdGlvbih0KXtyZXR1cm4gbHQucmVhZHkucHJvbWlzZSgpLmRvbmUodCksdGhpc30sbHQuZXh0ZW5kKHtpc1JlYWR5OiExLHJlYWR5V2FpdDoxLGhvbGRSZWFkeTpmdW5jdGlvbih0KXt0P2x0LnJlYWR5V2FpdCsrOmx0LnJlYWR5KCEwKX0scmVhZHk6ZnVuY3Rpb24odCl7aWYodD09PSEwPyEtLWx0LnJlYWR5V2FpdDohbHQuaXNSZWFkeSl7aWYoIXh0LmJvZHkpcmV0dXJuIHNldFRpbWVvdXQobHQucmVhZHkpO2x0LmlzUmVhZHk9ITAsdCE9PSEwJiYtLWx0LnJlYWR5V2FpdD4wfHwoanQucmVzb2x2ZVdpdGgoeHQsW2x0XSksbHQuZm4udHJpZ2dlckhhbmRsZXImJihsdCh4dCkudHJpZ2dlckhhbmRsZXIoInJlYWR5IiksbHQoeHQpLm9mZigicmVhZHkiKSkpfX19KSxsdC5yZWFkeS5wcm9taXNlPWZ1bmN0aW9uKHQpe2lmKCFqdClpZihqdD1sdC5EZWZlcnJlZCgpLCJjb21wbGV0ZSI9PT14dC5yZWFkeVN0YXRlKXNldFRpbWVvdXQobHQucmVhZHkpO2Vsc2UgaWYoeHQuYWRkRXZlbnRMaXN0ZW5lcil4dC5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixkLCExKSxvLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGQsITEpO2Vsc2V7eHQuYXR0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsZCksby5hdHRhY2hFdmVudCgib25sb2FkIixkKTt2YXIgZT0hMTt0cnl7ZT1udWxsPT1vLmZyYW1lRWxlbWVudCYmeHQuZG9jdW1lbnRFbGVtZW50fWNhdGNoKG4pe31lJiZlLmRvU2Nyb2xsJiYhZnVuY3Rpb24gaSgpe2lmKCFsdC5pc1JlYWR5KXt0cnl7ZS5kb1Njcm9sbCgibGVmdCIpfWNhdGNoKHQpe3JldHVybiBzZXRUaW1lb3V0KGksNTApfXAoKSxsdC5yZWFkeSgpfX0oKX1yZXR1cm4ganQucHJvbWlzZSh0KX07dmFyIEN0LFN0PSJ1bmRlZmluZWQiO2ZvcihDdCBpbiBsdChydCkpYnJlYWs7cnQub3duTGFzdD0iMCIhPT1DdCxydC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0PSExLGx0KGZ1bmN0aW9uKCl7dmFyIHQsZSxuLGk7bj14dC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYm9keSIpWzBdLG4mJm4uc3R5bGUmJihlPXh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpLGk9eHQuY3JlYXRlRWxlbWVudCgiZGl2IiksaS5zdHlsZS5jc3NUZXh0PSJwb3NpdGlvbjphYnNvbHV0ZTtib3JkZXI6MDt3aWR0aDowO2hlaWdodDowO3RvcDowO2xlZnQ6LTk5OTlweCIsbi5hcHBlbmRDaGlsZChpKS5hcHBlbmRDaGlsZChlKSx0eXBlb2YgZS5zdHlsZS56b29tIT09U3QmJihlLnN0eWxlLmNzc1RleHQ9ImRpc3BsYXk6aW5saW5lO21hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MXB4O3dpZHRoOjFweDt6b29tOjEiLHJ0LmlubGluZUJsb2NrTmVlZHNMYXlvdXQ9dD0zPT09ZS5vZmZzZXRXaWR0aCx0JiYobi5zdHlsZS56b29tPTEpKSxuLnJlbW92ZUNoaWxkKGkpKX0pLGZ1bmN0aW9uKCl7dmFyIHQ9eHQuY3JlYXRlRWxlbWVudCgiZGl2Iik7aWYobnVsbD09cnQuZGVsZXRlRXhwYW5kbyl7cnQuZGVsZXRlRXhwYW5kbz0hMDt0cnl7ZGVsZXRlIHQudGVzdH1jYXRjaChlKXtydC5kZWxldGVFeHBhbmRvPSExfX10PW51bGx9KCksbHQuYWNjZXB0RGF0YT1mdW5jdGlvbih0KXt2YXIgZT1sdC5ub0RhdGFbKHQubm9kZU5hbWUrIiAiKS50b0xvd2VyQ2FzZSgpXSxuPSt0Lm5vZGVUeXBlfHwxO3JldHVybigxPT09bnx8OT09PW4pJiYoIWV8fGUhPT0hMCYmdC5nZXRBdHRyaWJ1dGUoImNsYXNzaWQiKT09PWUpfTt2YXIgUHQ9L14oPzpce1tcd1xXXSpcfXxcW1tcd1xXXSpcXSkkLyxUdD0vKFtBLVpdKS9nO2x0LmV4dGVuZCh7Y2FjaGU6e30sbm9EYXRhOnsiYXBwbGV0ICI6ITAsImVtYmVkICI6ITAsIm9iamVjdCAiOiJjbHNpZDpEMjdDREI2RS1BRTZELTExY2YtOTZCOC00NDQ1NTM1NDAwMDAifSxoYXNEYXRhOmZ1bmN0aW9uKHQpe3JldHVybiB0PXQubm9kZVR5cGU/bHQuY2FjaGVbdFtsdC5leHBhbmRvXV06dFtsdC5leHBhbmRvXSwhIXQmJiF1KHQpfSxkYXRhOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbSh0LGUsbil9LHJlbW92ZURhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZih0LGUpfSxfZGF0YTpmdW5jdGlvbih0LGUsbil7cmV0dXJuIG0odCxlLG4sITApfSxfcmVtb3ZlRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiBmKHQsZSwhMCl9fSksbHQuZm4uZXh0ZW5kKHtkYXRhOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxvLGE9dGhpc1swXSxyPWEmJmEuYXR0cmlidXRlcztpZih2b2lkIDA9PT10KXtpZih0aGlzLmxlbmd0aCYmKG89bHQuZGF0YShhKSwxPT09YS5ub2RlVHlwZSYmIWx0Ll9kYXRhKGEsInBhcnNlZEF0dHJzIikpKXtmb3Iobj1yLmxlbmd0aDtuLS07KXJbbl0mJihpPXJbbl0ubmFtZSwwPT09aS5pbmRleE9mKCJkYXRhLSIpJiYoaT1sdC5jYW1lbENhc2UoaS5zbGljZSg1KSksaChhLGksb1tpXSkpKTtsdC5fZGF0YShhLCJwYXJzZWRBdHRycyIsITApfXJldHVybiBvfXJldHVybiJvYmplY3QiPT10eXBlb2YgdD90aGlzLmVhY2goZnVuY3Rpb24oKXtsdC5kYXRhKHRoaXMsdCl9KTphcmd1bWVudHMubGVuZ3RoPjE/dGhpcy5lYWNoKGZ1bmN0aW9uKCl7bHQuZGF0YSh0aGlzLHQsZSl9KTphP2goYSx0LGx0LmRhdGEoYSx0KSk6dm9pZCAwfSxyZW1vdmVEYXRhOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtsdC5yZW1vdmVEYXRhKHRoaXMsdCl9KX19KSxsdC5leHRlbmQoe3F1ZXVlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaTtpZih0KXJldHVybiBlPShlfHwiZngiKSsicXVldWUiLGk9bHQuX2RhdGEodCxlKSxuJiYoIWl8fGx0LmlzQXJyYXkobik/aT1sdC5fZGF0YSh0LGUsbHQubWFrZUFycmF5KG4pKTppLnB1c2gobikpLGl8fFtdfSxkZXF1ZXVlOmZ1bmN0aW9uKHQsZSl7ZT1lfHwiZngiO3ZhciBuPWx0LnF1ZXVlKHQsZSksaT1uLmxlbmd0aCxvPW4uc2hpZnQoKSxhPWx0Ll9xdWV1ZUhvb2tzKHQsZSkscj1mdW5jdGlvbigpe2x0LmRlcXVldWUodCxlKX07ImlucHJvZ3Jlc3MiPT09byYmKG89bi5zaGlmdCgpLGktLSksbyYmKCJmeCI9PT1lJiZuLnVuc2hpZnQoImlucHJvZ3Jlc3MiKSxkZWxldGUgYS5zdG9wLG8uY2FsbCh0LHIsYSkpLCFpJiZhJiZhLmVtcHR5LmZpcmUoKX0sX3F1ZXVlSG9va3M6ZnVuY3Rpb24odCxlKXt2YXIgbj1lKyJxdWV1ZUhvb2tzIjtyZXR1cm4gbHQuX2RhdGEodCxuKXx8bHQuX2RhdGEodCxuLHtlbXB0eTpsdC5DYWxsYmFja3MoIm9uY2UgbWVtb3J5IikuYWRkKGZ1bmN0aW9uKCl7bHQuX3JlbW92ZURhdGEodCxlKyJxdWV1ZSIpLGx0Ll9yZW1vdmVEYXRhKHQsbil9KX0pfX0pLGx0LmZuLmV4dGVuZCh7cXVldWU6ZnVuY3Rpb24odCxlKXt2YXIgbj0yO3JldHVybiJzdHJpbmciIT10eXBlb2YgdCYmKGU9dCx0PSJmeCIsbi0tKSxhcmd1bWVudHMubGVuZ3RoPG4/bHQucXVldWUodGhpc1swXSx0KTp2b2lkIDA9PT1lP3RoaXM6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIG49bHQucXVldWUodGhpcyx0LGUpO2x0Ll9xdWV1ZUhvb2tzKHRoaXMsdCksImZ4Ij09PXQmJiJpbnByb2dyZXNzIiE9PW5bMF0mJmx0LmRlcXVldWUodGhpcyx0KX0pfSxkZXF1ZXVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtsdC5kZXF1ZXVlKHRoaXMsdCl9KX0sY2xlYXJRdWV1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5xdWV1ZSh0fHwiZngiLFtdKX0scHJvbWlzZTpmdW5jdGlvbih0LGUpe3ZhciBuLGk9MSxvPWx0LkRlZmVycmVkKCksYT10aGlzLHI9dGhpcy5sZW5ndGgscz1mdW5jdGlvbigpey0taXx8by5yZXNvbHZlV2l0aChhLFthXSl9O2Zvcigic3RyaW5nIiE9dHlwZW9mIHQmJihlPXQsdD12b2lkIDApLHQ9dHx8ImZ4IjtyLS07KW49bHQuX2RhdGEoYVtyXSx0KyJxdWV1ZUhvb2tzIiksbiYmbi5lbXB0eSYmKGkrKyxuLmVtcHR5LmFkZChzKSk7cmV0dXJuIHMoKSxvLnByb21pc2UoZSl9fSk7dmFyIEF0PS9bKy1dPyg/OlxkKlwufClcZCsoPzpbZUVdWystXT9cZCt8KS8uc291cmNlLE50PVsiVG9wIiwiUmlnaHQiLCJCb3R0b20iLCJMZWZ0Il0sSXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1lfHx0LCJub25lIj09PWx0LmNzcyh0LCJkaXNwbGF5Iil8fCFsdC5jb250YWlucyh0Lm93bmVyRG9jdW1lbnQsdCl9LEJ0PWx0LmFjY2Vzcz1mdW5jdGlvbih0LGUsbixpLG8sYSxyKXt2YXIgcz0wLGw9dC5sZW5ndGgsYz1udWxsPT1uO2lmKCJvYmplY3QiPT09bHQudHlwZShuKSl7bz0hMDtmb3IocyBpbiBuKWx0LmFjY2Vzcyh0LGUscyxuW3NdLCEwLGEscil9ZWxzZSBpZih2b2lkIDAhPT1pJiYobz0hMCxsdC5pc0Z1bmN0aW9uKGkpfHwocj0hMCksYyYmKHI/KGUuY2FsbCh0LGkpLGU9bnVsbCk6KGM9ZSxlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gYy5jYWxsKGx0KHQpLG4pfSkpLGUpKWZvcig7czxsO3MrKyllKHRbc10sbixyP2k6aS5jYWxsKHRbc10scyxlKHRbc10sbikpKTtyZXR1cm4gbz90OmM/ZS5jYWxsKHQpOmw/ZSh0WzBdLG4pOmF9LHF0PS9eKD86Y2hlY2tib3h8cmFkaW8pJC9pOyFmdW5jdGlvbigpe3ZhciB0PXh0LmNyZWF0ZUVsZW1lbnQoImlucHV0IiksZT14dC5jcmVhdGVFbGVtZW50KCJkaXYiKSxuPXh0LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtpZihlLmlubmVySFRNTD0iICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+IixydC5sZWFkaW5nV2hpdGVzcGFjZT0zPT09ZS5maXJzdENoaWxkLm5vZGVUeXBlLHJ0LnRib2R5PSFlLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0Ym9keSIpLmxlbmd0aCxydC5odG1sU2VyaWFsaXplPSEhZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGluayIpLmxlbmd0aCxydC5odG1sNUNsb25lPSI8Om5hdj48LzpuYXY+IiE9PXh0LmNyZWF0ZUVsZW1lbnQoIm5hdiIpLmNsb25lTm9kZSghMCkub3V0ZXJIVE1MLHQudHlwZT0iY2hlY2tib3giLHQuY2hlY2tlZD0hMCxuLmFwcGVuZENoaWxkKHQpLHJ0LmFwcGVuZENoZWNrZWQ9dC5jaGVja2VkLGUuaW5uZXJIVE1MPSI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+IixydC5ub0Nsb25lQ2hlY2tlZD0hIWUuY2xvbmVOb2RlKCEwKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlLG4uYXBwZW5kQ2hpbGQoZSksZS5pbm5lckhUTUw9IjxpbnB1dCB0eXBlPSdyYWRpbycgY2hlY2tlZD0nY2hlY2tlZCcgbmFtZT0ndCcvPiIscnQuY2hlY2tDbG9uZT1lLmNsb25lTm9kZSghMCkuY2xvbmVOb2RlKCEwKS5sYXN0Q2hpbGQuY2hlY2tlZCxydC5ub0Nsb25lRXZlbnQ9ITAsZS5hdHRhY2hFdmVudCYmKGUuYXR0YWNoRXZlbnQoIm9uY2xpY2siLGZ1bmN0aW9uKCl7cnQubm9DbG9uZUV2ZW50PSExfSksZS5jbG9uZU5vZGUoITApLmNsaWNrKCkpLG51bGw9PXJ0LmRlbGV0ZUV4cGFuZG8pe3J0LmRlbGV0ZUV4cGFuZG89ITA7dHJ5e2RlbGV0ZSBlLnRlc3R9Y2F0Y2goaSl7cnQuZGVsZXRlRXhwYW5kbz0hMX19fSgpLGZ1bmN0aW9uKCl7dmFyIHQsZSxuPXh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpO2Zvcih0IGlue3N1Ym1pdDohMCxjaGFuZ2U6ITAsZm9jdXNpbjohMH0pZT0ib24iK3QsKHJ0W3QrIkJ1YmJsZXMiXT1lIGluIG8pfHwobi5zZXRBdHRyaWJ1dGUoZSwidCIpLHJ0W3QrIkJ1YmJsZXMiXT1uLmF0dHJpYnV0ZXNbZV0uZXhwYW5kbz09PSExKTtuPW51bGx9KCk7dmFyIE90PS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhKSQvaSxFdD0vXmtleS8sTHQ9L14oPzptb3VzZXxwb2ludGVyfGNvbnRleHRtZW51KXxjbGljay8sRHQ9L14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLEZ0PS9eKFteLl0qKSg/OlwuKC4rKXwpJC87bHQuZXZlbnQ9e2dsb2JhbDp7fSxhZGQ6ZnVuY3Rpb24odCxlLG4saSxvKXt2YXIgYSxyLHMsbCxjLHAsZCxoLHUsbSxmLGc9bHQuX2RhdGEodCk7aWYoZyl7Zm9yKG4uaGFuZGxlciYmKGw9bixuPWwuaGFuZGxlcixvPWwuc2VsZWN0b3IpLG4uZ3VpZHx8KG4uZ3VpZD1sdC5ndWlkKyspLChyPWcuZXZlbnRzKXx8KHI9Zy5ldmVudHM9e30pLChwPWcuaGFuZGxlKXx8KHA9Zy5oYW5kbGU9ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiBsdD09PVN0fHx0JiZsdC5ldmVudC50cmlnZ2VyZWQ9PT10LnR5cGU/dm9pZCAwOmx0LmV2ZW50LmRpc3BhdGNoLmFwcGx5KHAuZWxlbSxhcmd1bWVudHMpfSxwLmVsZW09dCksZT0oZXx8IiIpLm1hdGNoKGt0KXx8WyIiXSxzPWUubGVuZ3RoO3MtLTspYT1GdC5leGVjKGVbc10pfHxbXSx1PWY9YVsxXSxtPShhWzJdfHwiIikuc3BsaXQoIi4iKS5zb3J0KCksdSYmKGM9bHQuZXZlbnQuc3BlY2lhbFt1XXx8e30sdT0obz9jLmRlbGVnYXRlVHlwZTpjLmJpbmRUeXBlKXx8dSxjPWx0LmV2ZW50LnNwZWNpYWxbdV18fHt9LGQ9bHQuZXh0ZW5kKHt0eXBlOnUsb3JpZ1R5cGU6ZixkYXRhOmksaGFuZGxlcjpuLGd1aWQ6bi5ndWlkLHNlbGVjdG9yOm8sbmVlZHNDb250ZXh0Om8mJmx0LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QobyksbmFtZXNwYWNlOm0uam9pbigiLiIpfSxsKSwoaD1yW3VdKXx8KGg9clt1XT1bXSxoLmRlbGVnYXRlQ291bnQ9MCxjLnNldHVwJiZjLnNldHVwLmNhbGwodCxpLG0scCkhPT0hMXx8KHQuYWRkRXZlbnRMaXN0ZW5lcj90LmFkZEV2ZW50TGlzdGVuZXIodSxwLCExKTp0LmF0dGFjaEV2ZW50JiZ0LmF0dGFjaEV2ZW50KCJvbiIrdSxwKSkpLGMuYWRkJiYoYy5hZGQuY2FsbCh0LGQpLGQuaGFuZGxlci5ndWlkfHwoZC5oYW5kbGVyLmd1aWQ9bi5ndWlkKSksbz9oLnNwbGljZShoLmRlbGVnYXRlQ291bnQrKywwLGQpOmgucHVzaChkKSxsdC5ldmVudC5nbG9iYWxbdV09ITApO3Q9bnVsbH19LHJlbW92ZTpmdW5jdGlvbih0LGUsbixpLG8pe3ZhciBhLHIscyxsLGMscCxkLGgsdSxtLGYsZz1sdC5oYXNEYXRhKHQpJiZsdC5fZGF0YSh0KTtpZihnJiYocD1nLmV2ZW50cykpe2ZvcihlPShlfHwiIikubWF0Y2goa3QpfHxbIiJdLGM9ZS5sZW5ndGg7Yy0tOylpZihzPUZ0LmV4ZWMoZVtjXSl8fFtdLHU9Zj1zWzFdLG09KHNbMl18fCIiKS5zcGxpdCgiLiIpLnNvcnQoKSx1KXtmb3IoZD1sdC5ldmVudC5zcGVjaWFsW3VdfHx7fSx1PShpP2QuZGVsZWdhdGVUeXBlOmQuYmluZFR5cGUpfHx1LGg9cFt1XXx8W10scz1zWzJdJiZuZXcgUmVnRXhwKCIoXnxcXC4pIittLmpvaW4oIlxcLig/Oi4qXFwufCkiKSsiKFxcLnwkKSIpLGw9YT1oLmxlbmd0aDthLS07KXI9aFthXSwhbyYmZiE9PXIub3JpZ1R5cGV8fG4mJm4uZ3VpZCE9PXIuZ3VpZHx8cyYmIXMudGVzdChyLm5hbWVzcGFjZSl8fGkmJmkhPT1yLnNlbGVjdG9yJiYoIioqIiE9PWl8fCFyLnNlbGVjdG9yKXx8KGguc3BsaWNlKGEsMSksci5zZWxlY3RvciYmaC5kZWxlZ2F0ZUNvdW50LS0sZC5yZW1vdmUmJmQucmVtb3ZlLmNhbGwodCxyKSk7bCYmIWgubGVuZ3RoJiYoZC50ZWFyZG93biYmZC50ZWFyZG93bi5jYWxsKHQsbSxnLmhhbmRsZSkhPT0hMXx8bHQucmVtb3ZlRXZlbnQodCx1LGcuaGFuZGxlKSxkZWxldGUgcFt1XSl9ZWxzZSBmb3IodSBpbiBwKWx0LmV2ZW50LnJlbW92ZSh0LHUrZVtjXSxuLGksITApO2x0LmlzRW1wdHlPYmplY3QocCkmJihkZWxldGUgZy5oYW5kbGUsbHQuX3JlbW92ZURhdGEodCwiZXZlbnRzIikpfX0sdHJpZ2dlcjpmdW5jdGlvbih0LGUsbixpKXt2YXIgYSxyLHMsbCxjLHAsZCxoPVtufHx4dF0sdT1hdC5jYWxsKHQsInR5cGUiKT90LnR5cGU6dCxtPWF0LmNhbGwodCwibmFtZXNwYWNlIik/dC5uYW1lc3BhY2Uuc3BsaXQoIi4iKTpbXTtpZihzPXA9bj1ufHx4dCwzIT09bi5ub2RlVHlwZSYmOCE9PW4ubm9kZVR5cGUmJiFEdC50ZXN0KHUrbHQuZXZlbnQudHJpZ2dlcmVkKSYmKHUuaW5kZXhPZigiLiIpPj0wJiYobT11LnNwbGl0KCIuIiksdT1tLnNoaWZ0KCksbS5zb3J0KCkpLHI9dS5pbmRleE9mKCI6Iik8MCYmIm9uIit1LHQ9dFtsdC5leHBhbmRvXT90Om5ldyBsdC5FdmVudCh1LCJvYmplY3QiPT10eXBlb2YgdCYmdCksdC5pc1RyaWdnZXI9aT8yOjMsdC5uYW1lc3BhY2U9bS5qb2luKCIuIiksdC5uYW1lc3BhY2VfcmU9dC5uYW1lc3BhY2U/bmV3IFJlZ0V4cCgiKF58XFwuKSIrbS5qb2luKCJcXC4oPzouKlxcLnwpIikrIihcXC58JCkiKTpudWxsLHQucmVzdWx0PXZvaWQgMCx0LnRhcmdldHx8KHQudGFyZ2V0PW4pLGU9bnVsbD09ZT9bdF06bHQubWFrZUFycmF5KGUsW3RdKSxjPWx0LmV2ZW50LnNwZWNpYWxbdV18fHt9LGl8fCFjLnRyaWdnZXJ8fGMudHJpZ2dlci5hcHBseShuLGUpIT09ITEpKXtpZighaSYmIWMubm9CdWJibGUmJiFsdC5pc1dpbmRvdyhuKSl7Zm9yKGw9Yy5kZWxlZ2F0ZVR5cGV8fHUsRHQudGVzdChsK3UpfHwocz1zLnBhcmVudE5vZGUpO3M7cz1zLnBhcmVudE5vZGUpaC5wdXNoKHMpLHA9cztwPT09KG4ub3duZXJEb2N1bWVudHx8eHQpJiZoLnB1c2gocC5kZWZhdWx0Vmlld3x8cC5wYXJlbnRXaW5kb3d8fG8pfWZvcihkPTA7KHM9aFtkKytdKSYmIXQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTspdC50eXBlPWQ+MT9sOmMuYmluZFR5cGV8fHUsYT0obHQuX2RhdGEocywiZXZlbnRzIil8fHt9KVt0LnR5cGVdJiZsdC5fZGF0YShzLCJoYW5kbGUiKSxhJiZhLmFwcGx5KHMsZSksYT1yJiZzW3JdLGEmJmEuYXBwbHkmJmx0LmFjY2VwdERhdGEocykmJih0LnJlc3VsdD1hLmFwcGx5KHMsZSksdC5yZXN1bHQ9PT0hMSYmdC5wcmV2ZW50RGVmYXVsdCgpKTtpZih0LnR5cGU9dSwhaSYmIXQuaXNEZWZhdWx0UHJldmVudGVkKCkmJighYy5fZGVmYXVsdHx8Yy5fZGVmYXVsdC5hcHBseShoLnBvcCgpLGUpPT09ITEpJiZsdC5hY2NlcHREYXRhKG4pJiZyJiZuW3VdJiYhbHQuaXNXaW5kb3cobikpe3A9bltyXSxwJiYobltyXT1udWxsKSxsdC5ldmVudC50cmlnZ2VyZWQ9dTt0cnl7blt1XSgpfWNhdGNoKGYpe31sdC5ldmVudC50cmlnZ2VyZWQ9dm9pZCAwLHAmJihuW3JdPXApfXJldHVybiB0LnJlc3VsdH19LGRpc3BhdGNoOmZ1bmN0aW9uKHQpe3Q9bHQuZXZlbnQuZml4KHQpO3ZhciBlLG4saSxvLGEscj1bXSxzPVEuY2FsbChhcmd1bWVudHMpLGw9KGx0Ll9kYXRhKHRoaXMsImV2ZW50cyIpfHx7fSlbdC50eXBlXXx8W10sYz1sdC5ldmVudC5zcGVjaWFsW3QudHlwZV18fHt9O2lmKHNbMF09dCx0LmRlbGVnYXRlVGFyZ2V0PXRoaXMsIWMucHJlRGlzcGF0Y2h8fGMucHJlRGlzcGF0Y2guY2FsbCh0aGlzLHQpIT09ITEpe2ZvcihyPWx0LmV2ZW50LmhhbmRsZXJzLmNhbGwodGhpcyx0LGwpLGU9MDsobz1yW2UrK10pJiYhdC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpOylmb3IodC5jdXJyZW50VGFyZ2V0PW8uZWxlbSxhPTA7KGk9by5oYW5kbGVyc1thKytdKSYmIXQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKTspdC5uYW1lc3BhY2VfcmUmJiF0Lm5hbWVzcGFjZV9yZS50ZXN0KGkubmFtZXNwYWNlKXx8KHQuaGFuZGxlT2JqPWksdC5kYXRhPWkuZGF0YSxuPSgobHQuZXZlbnQuc3BlY2lhbFtpLm9yaWdUeXBlXXx8e30pLmhhbmRsZXx8aS5oYW5kbGVyKS5hcHBseShvLmVsZW0scyksdm9pZCAwIT09biYmKHQucmVzdWx0PW4pPT09ITEmJih0LnByZXZlbnREZWZhdWx0KCksdC5zdG9wUHJvcGFnYXRpb24oKSkpO3JldHVybiBjLnBvc3REaXNwYXRjaCYmYy5wb3N0RGlzcGF0Y2guY2FsbCh0aGlzLHQpLHQucmVzdWx0fX0saGFuZGxlcnM6ZnVuY3Rpb24odCxlKXt2YXIgbixpLG8sYSxyPVtdLHM9ZS5kZWxlZ2F0ZUNvdW50LGw9dC50YXJnZXQ7aWYocyYmbC5ub2RlVHlwZSYmKCF0LmJ1dHRvbnx8ImNsaWNrIiE9PXQudHlwZSkpZm9yKDtsIT10aGlzO2w9bC5wYXJlbnROb2RlfHx0aGlzKWlmKDE9PT1sLm5vZGVUeXBlJiYobC5kaXNhYmxlZCE9PSEwfHwiY2xpY2siIT09dC50eXBlKSl7Zm9yKG89W10sYT0wO2E8czthKyspaT1lW2FdLG49aS5zZWxlY3RvcisiICIsdm9pZCAwPT09b1tuXSYmKG9bbl09aS5uZWVkc0NvbnRleHQ/bHQobix0aGlzKS5pbmRleChsKT49MDpsdC5maW5kKG4sdGhpcyxudWxsLFtsXSkubGVuZ3RoKSxvW25dJiZvLnB1c2goaSk7by5sZW5ndGgmJnIucHVzaCh7ZWxlbTpsLGhhbmRsZXJzOm99KX1yZXR1cm4gczxlLmxlbmd0aCYmci5wdXNoKHtlbGVtOnRoaXMsaGFuZGxlcnM6ZS5zbGljZShzKX0pLHJ9LGZpeDpmdW5jdGlvbih0KXtpZih0W2x0LmV4cGFuZG9dKXJldHVybiB0O3ZhciBlLG4saSxvPXQudHlwZSxhPXQscj10aGlzLmZpeEhvb2tzW29dO2ZvcihyfHwodGhpcy5maXhIb29rc1tvXT1yPUx0LnRlc3Qobyk/dGhpcy5tb3VzZUhvb2tzOkV0LnRlc3Qobyk/dGhpcy5rZXlIb29rczp7fSksaT1yLnByb3BzP3RoaXMucHJvcHMuY29uY2F0KHIucHJvcHMpOnRoaXMucHJvcHMsdD1uZXcgbHQuRXZlbnQoYSksZT1pLmxlbmd0aDtlLS07KW49aVtlXSx0W25dPWFbbl07cmV0dXJuIHQudGFyZ2V0fHwodC50YXJnZXQ9YS5zcmNFbGVtZW50fHx4dCksMz09PXQudGFyZ2V0Lm5vZGVUeXBlJiYodC50YXJnZXQ9dC50YXJnZXQucGFyZW50Tm9kZSksdC5tZXRhS2V5PSEhdC5tZXRhS2V5LHIuZmlsdGVyP3IuZmlsdGVyKHQsYSk6dH0scHJvcHM6ImFsdEtleSBidWJibGVzIGNhbmNlbGFibGUgY3RybEtleSBjdXJyZW50VGFyZ2V0IGV2ZW50UGhhc2UgbWV0YUtleSByZWxhdGVkVGFyZ2V0IHNoaWZ0S2V5IHRhcmdldCB0aW1lU3RhbXAgdmlldyB3aGljaCIuc3BsaXQoIiAiKSxmaXhIb29rczp7fSxrZXlIb29rczp7cHJvcHM6ImNoYXIgY2hhckNvZGUga2V5IGtleUNvZGUiLnNwbGl0KCIgIiksZmlsdGVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PXQud2hpY2gmJih0LndoaWNoPW51bGwhPWUuY2hhckNvZGU/ZS5jaGFyQ29kZTplLmtleUNvZGUpLHR9fSxtb3VzZUhvb2tzOntwcm9wczoiYnV0dG9uIGJ1dHRvbnMgY2xpZW50WCBjbGllbnRZIGZyb21FbGVtZW50IG9mZnNldFggb2Zmc2V0WSBwYWdlWCBwYWdlWSBzY3JlZW5YIHNjcmVlblkgdG9FbGVtZW50Ii5zcGxpdCgiICIpLGZpbHRlcjpmdW5jdGlvbih0LGUpe3ZhciBuLGksbyxhPWUuYnV0dG9uLHI9ZS5mcm9tRWxlbWVudDtyZXR1cm4gbnVsbD09dC5wYWdlWCYmbnVsbCE9ZS5jbGllbnRYJiYoaT10LnRhcmdldC5vd25lckRvY3VtZW50fHx4dCxvPWkuZG9jdW1lbnRFbGVtZW50LG49aS5ib2R5LHQucGFnZVg9ZS5jbGllbnRYKyhvJiZvLnNjcm9sbExlZnR8fG4mJm4uc2Nyb2xsTGVmdHx8MCktKG8mJm8uY2xpZW50TGVmdHx8biYmbi5jbGllbnRMZWZ0fHwwKSx0LnBhZ2VZPWUuY2xpZW50WSsobyYmby5zY3JvbGxUb3B8fG4mJm4uc2Nyb2xsVG9wfHwwKS0obyYmby5jbGllbnRUb3B8fG4mJm4uY2xpZW50VG9wfHwwKSksIXQucmVsYXRlZFRhcmdldCYmciYmKHQucmVsYXRlZFRhcmdldD1yPT09dC50YXJnZXQ/ZS50b0VsZW1lbnQ6ciksdC53aGljaHx8dm9pZCAwPT09YXx8KHQud2hpY2g9MSZhPzE6MiZhPzM6NCZhPzI6MCksdH19LHNwZWNpYWw6e2xvYWQ6e25vQnViYmxlOiEwfSxmb2N1czp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKHRoaXMhPT14KCkmJnRoaXMuZm9jdXMpdHJ5e3JldHVybiB0aGlzLmZvY3VzKCksITF9Y2F0Y2godCl7fX0sZGVsZWdhdGVUeXBlOiJmb2N1c2luIn0sYmx1cjp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKHRoaXM9PT14KCkmJnRoaXMuYmx1cilyZXR1cm4gdGhpcy5ibHVyKCksITF9LGRlbGVnYXRlVHlwZToiZm9jdXNvdXQifSxjbGljazp7dHJpZ2dlcjpmdW5jdGlvbigpe2lmKGx0Lm5vZGVOYW1lKHRoaXMsImlucHV0IikmJiJjaGVja2JveCI9PT10aGlzLnR5cGUmJnRoaXMuY2xpY2spcmV0dXJuIHRoaXMuY2xpY2soKSwhMX0sX2RlZmF1bHQ6ZnVuY3Rpb24odCl7cmV0dXJuIGx0Lm5vZGVOYW1lKHQudGFyZ2V0LCJhIil9fSxiZWZvcmV1bmxvYWQ6e3Bvc3REaXNwYXRjaDpmdW5jdGlvbih0KXt2b2lkIDAhPT10LnJlc3VsdCYmdC5vcmlnaW5hbEV2ZW50JiYodC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlPXQucmVzdWx0KX19fSxzaW11bGF0ZTpmdW5jdGlvbih0LGUsbixpKXt2YXIgbz1sdC5leHRlbmQobmV3IGx0LkV2ZW50LG4se3R5cGU6dCxpc1NpbXVsYXRlZDohMCxvcmlnaW5hbEV2ZW50Ont9fSk7aT9sdC5ldmVudC50cmlnZ2VyKG8sbnVsbCxlKTpsdC5ldmVudC5kaXNwYXRjaC5jYWxsKGUsbyksby5pc0RlZmF1bHRQcmV2ZW50ZWQoKSYmbi5wcmV2ZW50RGVmYXVsdCgpfX0sbHQucmVtb3ZlRXZlbnQ9eHQucmVtb3ZlRXZlbnRMaXN0ZW5lcj9mdW5jdGlvbih0LGUsbil7dC5yZW1vdmVFdmVudExpc3RlbmVyJiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoZSxuLCExKX06ZnVuY3Rpb24odCxlLG4pe3ZhciBpPSJvbiIrZTt0LmRldGFjaEV2ZW50JiYodHlwZW9mIHRbaV09PT1TdCYmKHRbaV09bnVsbCksdC5kZXRhY2hFdmVudChpLG4pKX0sbHQuRXZlbnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGx0LkV2ZW50Pyh0JiZ0LnR5cGU/KHRoaXMub3JpZ2luYWxFdmVudD10LHRoaXMudHlwZT10LnR5cGUsdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9dC5kZWZhdWx0UHJldmVudGVkfHx2b2lkIDA9PT10LmRlZmF1bHRQcmV2ZW50ZWQmJnQucmV0dXJuVmFsdWU9PT0hMT9nOncpOnRoaXMudHlwZT10LGUmJmx0LmV4dGVuZCh0aGlzLGUpLHRoaXMudGltZVN0YW1wPXQmJnQudGltZVN0YW1wfHxsdC5ub3coKSx2b2lkKHRoaXNbbHQuZXhwYW5kb109ITApKTpuZXcgbHQuRXZlbnQodCxlKX0sbHQuRXZlbnQucHJvdG90eXBlPXtpc0RlZmF1bHRQcmV2ZW50ZWQ6dyxpc1Byb3BhZ2F0aW9uU3RvcHBlZDp3LGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOncscHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9Zyx0JiYodC5wcmV2ZW50RGVmYXVsdD90LnByZXZlbnREZWZhdWx0KCk6dC5yZXR1cm5WYWx1ZT0hMSl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPWcsdCYmKHQuc3RvcFByb3BhZ2F0aW9uJiZ0LnN0b3BQcm9wYWdhdGlvbigpLHQuY2FuY2VsQnViYmxlPSEwKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9Zyx0JiZ0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiYmdC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSx0aGlzLnN0b3BQcm9wYWdhdGlvbigpfX0sbHQuZWFjaCh7bW91c2VlbnRlcjoibW91c2VvdmVyIixtb3VzZWxlYXZlOiJtb3VzZW91dCIscG9pbnRlcmVudGVyOiJwb2ludGVyb3ZlciIscG9pbnRlcmxlYXZlOiJwb2ludGVyb3V0In0sZnVuY3Rpb24odCxlKXtsdC5ldmVudC5zcGVjaWFsW3RdPXtkZWxlZ2F0ZVR5cGU6ZSxiaW5kVHlwZTplLGhhbmRsZTpmdW5jdGlvbih0KXt2YXIgbixpPXRoaXMsbz10LnJlbGF0ZWRUYXJnZXQsYT10LmhhbmRsZU9iajtyZXR1cm4gbyYmKG89PT1pfHxsdC5jb250YWlucyhpLG8pKXx8KHQudHlwZT1hLm9yaWdUeXBlLG49YS5oYW5kbGVyLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0LnR5cGU9ZSksbn19fSkscnQuc3VibWl0QnViYmxlc3x8KGx0LmV2ZW50LnNwZWNpYWwuc3VibWl0PXtzZXR1cDpmdW5jdGlvbigpe3JldHVybiFsdC5ub2RlTmFtZSh0aGlzLCJmb3JtIikmJnZvaWQgbHQuZXZlbnQuYWRkKHRoaXMsImNsaWNrLl9zdWJtaXQga2V5cHJlc3MuX3N1Ym1pdCIsZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQsbj1sdC5ub2RlTmFtZShlLCJpbnB1dCIpfHxsdC5ub2RlTmFtZShlLCJidXR0b24iKT9lLmZvcm06dm9pZCAwO24mJiFsdC5fZGF0YShuLCJzdWJtaXRCdWJibGVzIikmJihsdC5ldmVudC5hZGQobiwic3VibWl0Ll9zdWJtaXQiLGZ1bmN0aW9uKHQpe3QuX3N1Ym1pdF9idWJibGU9ITB9KSxsdC5fZGF0YShuLCJzdWJtaXRCdWJibGVzIiwhMCkpfSl9LHBvc3REaXNwYXRjaDpmdW5jdGlvbih0KXt0Ll9zdWJtaXRfYnViYmxlJiYoZGVsZXRlIHQuX3N1Ym1pdF9idWJibGUsdGhpcy5wYXJlbnROb2RlJiYhdC5pc1RyaWdnZXImJmx0LmV2ZW50LnNpbXVsYXRlKCJzdWJtaXQiLHRoaXMucGFyZW50Tm9kZSx0LCEwKSl9LHRlYXJkb3duOmZ1bmN0aW9uKCl7cmV0dXJuIWx0Lm5vZGVOYW1lKHRoaXMsImZvcm0iKSYmdm9pZCBsdC5ldmVudC5yZW1vdmUodGhpcywiLl9zdWJtaXQiKX19KSxydC5jaGFuZ2VCdWJibGVzfHwobHQuZXZlbnQuc3BlY2lhbC5jaGFuZ2U9e3NldHVwOmZ1bmN0aW9uKCl7cmV0dXJuIE90LnRlc3QodGhpcy5ub2RlTmFtZSk/KCJjaGVja2JveCIhPT10aGlzLnR5cGUmJiJyYWRpbyIhPT10aGlzLnR5cGV8fChsdC5ldmVudC5hZGQodGhpcywicHJvcGVydHljaGFuZ2UuX2NoYW5nZSIsZnVuY3Rpb24odCl7ImNoZWNrZWQiPT09dC5vcmlnaW5hbEV2ZW50LnByb3BlcnR5TmFtZSYmKHRoaXMuX2p1c3RfY2hhbmdlZD0hMCl9KSxsdC5ldmVudC5hZGQodGhpcywiY2xpY2suX2NoYW5nZSIsZnVuY3Rpb24odCl7dGhpcy5fanVzdF9jaGFuZ2VkJiYhdC5pc1RyaWdnZXImJih0aGlzLl9qdXN0X2NoYW5nZWQ9ITEpLGx0LmV2ZW50LnNpbXVsYXRlKCJjaGFuZ2UiLHRoaXMsdCwhMCl9KSksITEpOnZvaWQgbHQuZXZlbnQuYWRkKHRoaXMsImJlZm9yZWFjdGl2YXRlLl9jaGFuZ2UiLGZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0O090LnRlc3QoZS5ub2RlTmFtZSkmJiFsdC5fZGF0YShlLCJjaGFuZ2VCdWJibGVzIikmJihsdC5ldmVudC5hZGQoZSwiY2hhbmdlLl9jaGFuZ2UiLGZ1bmN0aW9uKHQpeyF0aGlzLnBhcmVudE5vZGV8fHQuaXNTaW11bGF0ZWR8fHQuaXNUcmlnZ2VyfHxsdC5ldmVudC5zaW11bGF0ZSgiY2hhbmdlIix0aGlzLnBhcmVudE5vZGUsdCwhMCl9KSxsdC5fZGF0YShlLCJjaGFuZ2VCdWJibGVzIiwhMCkpfSl9LGhhbmRsZTpmdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldDtpZih0aGlzIT09ZXx8dC5pc1NpbXVsYXRlZHx8dC5pc1RyaWdnZXJ8fCJyYWRpbyIhPT1lLnR5cGUmJiJjaGVja2JveCIhPT1lLnR5cGUpcmV0dXJuIHQuaGFuZGxlT2JqLmhhbmRsZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3JldHVybiBsdC5ldmVudC5yZW1vdmUodGhpcywiLl9jaGFuZ2UiKSwhT3QudGVzdCh0aGlzLm5vZGVOYW1lKX19KSxydC5mb2N1c2luQnViYmxlc3x8bHQuZWFjaCh7Zm9jdXM6ImZvY3VzaW4iLGJsdXI6ImZvY3Vzb3V0In0sZnVuY3Rpb24odCxlKXt2YXIgbj1mdW5jdGlvbih0KXtsdC5ldmVudC5zaW11bGF0ZShlLHQudGFyZ2V0LGx0LmV2ZW50LmZpeCh0KSwhMCl9O2x0LmV2ZW50LnNwZWNpYWxbZV09e3NldHVwOmZ1bmN0aW9uKCl7dmFyIGk9dGhpcy5vd25lckRvY3VtZW50fHx0aGlzLG89bHQuX2RhdGEoaSxlKTtvfHxpLmFkZEV2ZW50TGlzdGVuZXIodCxuLCEwKSxsdC5fZGF0YShpLGUsKG98fDApKzEpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3ZhciBpPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcyxvPWx0Ll9kYXRhKGksZSktMTtvP2x0Ll9kYXRhKGksZSxvKTooaS5yZW1vdmVFdmVudExpc3RlbmVyKHQsbiwhMCksbHQuX3JlbW92ZURhdGEoaSxlKSl9fX0pLGx0LmZuLmV4dGVuZCh7b246ZnVuY3Rpb24odCxlLG4saSxvKXt2YXIgYSxyO2lmKCJvYmplY3QiPT10eXBlb2YgdCl7InN0cmluZyIhPXR5cGVvZiBlJiYobj1ufHxlLGU9dm9pZCAwKTtmb3IoYSBpbiB0KXRoaXMub24oYSxlLG4sdFthXSxvKTtyZXR1cm4gdGhpc31pZihudWxsPT1uJiZudWxsPT1pPyhpPWUsbj1lPXZvaWQgMCk6bnVsbD09aSYmKCJzdHJpbmciPT10eXBlb2YgZT8oaT1uLG49dm9pZCAwKTooaT1uLG49ZSxlPXZvaWQgMCkpLGk9PT0hMSlpPXc7ZWxzZSBpZighaSlyZXR1cm4gdGhpcztyZXR1cm4gMT09PW8mJihyPWksaT1mdW5jdGlvbih0KXtyZXR1cm4gbHQoKS5vZmYodCksci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGkuZ3VpZD1yLmd1aWR8fChyLmd1aWQ9bHQuZ3VpZCsrKSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7bHQuZXZlbnQuYWRkKHRoaXMsdCxpLG4sZSl9KX0sb25lOmZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiB0aGlzLm9uKHQsZSxuLGksMSl9LG9mZjpmdW5jdGlvbih0LGUsbil7dmFyIGksbztpZih0JiZ0LnByZXZlbnREZWZhdWx0JiZ0LmhhbmRsZU9iailyZXR1cm4gaT10LmhhbmRsZU9iaixsdCh0LmRlbGVnYXRlVGFyZ2V0KS5vZmYoaS5uYW1lc3BhY2U/aS5vcmlnVHlwZSsiLiIraS5uYW1lc3BhY2U6aS5vcmlnVHlwZSxpLnNlbGVjdG9yLGkuaGFuZGxlciksdGhpcztpZigib2JqZWN0Ij09dHlwZW9mIHQpe2ZvcihvIGluIHQpdGhpcy5vZmYobyxlLHRbb10pO3JldHVybiB0aGlzfXJldHVybiBlIT09ITEmJiJmdW5jdGlvbiIhPXR5cGVvZiBlfHwobj1lLGU9dm9pZCAwKSxuPT09ITEmJihuPXcpLHRoaXMuZWFjaChmdW5jdGlvbigpe2x0LmV2ZW50LnJlbW92ZSh0aGlzLHQsbixlKX0pfSx0cmlnZ2VyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2x0LmV2ZW50LnRyaWdnZXIodCxlLHRoaXMpfSl9LHRyaWdnZXJIYW5kbGVyOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpc1swXTtpZihuKXJldHVybiBsdC5ldmVudC50cmlnZ2VyKHQsZSxuLCEwKX19KTt2YXIgTXQ9ImFiYnJ8YXJ0aWNsZXxhc2lkZXxhdWRpb3xiZGl8Y2FudmFzfGRhdGF8ZGF0YWxpc3R8ZGV0YWlsc3xmaWdjYXB0aW9ufGZpZ3VyZXxmb290ZXJ8aGVhZGVyfGhncm91cHxtYXJrfG1ldGVyfG5hdnxvdXRwdXR8cHJvZ3Jlc3N8c2VjdGlvbnxzdW1tYXJ5fHRpbWV8dmlkZW8iLFJ0PS8galF1ZXJ5XGQrPSIoPzpudWxsfFxkKykiL2csJHQ9bmV3IFJlZ0V4cCgiPCg/OiIrTXQrIilbXFxzLz5dIiwiaSIpLEh0PS9eXHMrLyxXdD0vPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbXHc6XSspW14+XSopXC8+L2dpLFV0PS88KFtcdzpdKykvLFl0PS88dGJvZHkvaSxHdD0vPHwmIz9cdys7LyxYdD0vPCg/OnNjcmlwdHxzdHlsZXxsaW5rKS9pLEp0PS9jaGVja2VkXHMqKD86W149XXw9XHMqLmNoZWNrZWQuKS9pLFp0PS9eJHxcLyg/OmphdmF8ZWNtYSlzY3JpcHQvaSxWdD0vXnRydWVcLyguKikvLEt0PS9eXHMqPCEoPzpcW0NEQVRBXFt8LS0pfCg/OlxdXF18LS0pPlxzKiQvZyxRdD17b3B0aW9uOlsxLCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+IiwiPC9zZWxlY3Q+Il0sbGVnZW5kOlsxLCI8ZmllbGRzZXQ+IiwiPC9maWVsZHNldD4iXSxhcmVhOlsxLCI8bWFwPiIsIjwvbWFwPiJdLHBhcmFtOlsxLCI8b2JqZWN0PiIsIjwvb2JqZWN0PiJdLHRoZWFkOlsxLCI8dGFibGU+IiwiPC90YWJsZT4iXSx0cjpbMiwiPHRhYmxlPjx0Ym9keT4iLCI8L3Rib2R5PjwvdGFibGU+Il0sY29sOlsyLCI8dGFibGU+PHRib2R5PjwvdGJvZHk+PGNvbGdyb3VwPiIsIjwvY29sZ3JvdXA+PC90YWJsZT4iXSx0ZDpbMywiPHRhYmxlPjx0Ym9keT48dHI+IiwiPC90cj48L3Rib2R5PjwvdGFibGU+Il0sX2RlZmF1bHQ6cnQuaHRtbFNlcmlhbGl6ZT9bMCwiIiwiIl06WzEsIlg8ZGl2PiIsIjwvZGl2PiJdfSx0ZT1iKHh0KSxlZT10ZS5hcHBlbmRDaGlsZCh4dC5jcmVhdGVFbGVtZW50KCJkaXYiKSk7UXQub3B0Z3JvdXA9UXQub3B0aW9uLFF0LnRib2R5PVF0LnRmb290PVF0LmNvbGdyb3VwPVF0LmNhcHRpb249UXQudGhlYWQsUXQudGg9UXQudGQsbHQuZXh0ZW5kKHtjbG9uZTpmdW5jdGlvbih0LGUsbil7dmFyIGksbyxhLHIscyxsPWx0LmNvbnRhaW5zKHQub3duZXJEb2N1bWVudCx0KTtpZihydC5odG1sNUNsb25lfHxsdC5pc1hNTERvYyh0KXx8ISR0LnRlc3QoIjwiK3Qubm9kZU5hbWUrIj4iKT9hPXQuY2xvbmVOb2RlKCEwKTooZWUuaW5uZXJIVE1MPXQub3V0ZXJIVE1MLGVlLnJlbW92ZUNoaWxkKGE9ZWUuZmlyc3RDaGlsZCkpLCEocnQubm9DbG9uZUV2ZW50JiZydC5ub0Nsb25lQ2hlY2tlZHx8MSE9PXQubm9kZVR5cGUmJjExIT09dC5ub2RlVHlwZXx8bHQuaXNYTUxEb2ModCkpKWZvcihpPV8oYSkscz1fKHQpLHI9MDtudWxsIT0obz1zW3JdKTsrK3IpaVtyXSYmUyhvLGlbcl0pO2lmKGUpaWYobilmb3Iocz1zfHxfKHQpLGk9aXx8XyhhKSxyPTA7bnVsbCE9KG89c1tyXSk7cisrKUMobyxpW3JdKTtlbHNlIEModCxhKTtyZXR1cm4gaT1fKGEsInNjcmlwdCIpLGkubGVuZ3RoPjAmJmooaSwhbCYmXyh0LCJzY3JpcHQiKSksaT1zPW89bnVsbCxhfSxidWlsZEZyYWdtZW50OmZ1bmN0aW9uKHQsZSxuLGkpe2Zvcih2YXIgbyxhLHIscyxsLGMscCxkPXQubGVuZ3RoLGg9YihlKSx1PVtdLG09MDttPGQ7bSsrKWlmKGE9dFttXSxhfHwwPT09YSlpZigib2JqZWN0Ij09PWx0LnR5cGUoYSkpbHQubWVyZ2UodSxhLm5vZGVUeXBlP1thXTphKTtlbHNlIGlmKEd0LnRlc3QoYSkpe2ZvcihzPXN8fGguYXBwZW5kQ2hpbGQoZS5jcmVhdGVFbGVtZW50KCJkaXYiKSksbD0oVXQuZXhlYyhhKXx8WyIiLCIiXSlbMV0udG9Mb3dlckNhc2UoKSxwPVF0W2xdfHxRdC5fZGVmYXVsdCxzLmlubmVySFRNTD1wWzFdK2EucmVwbGFjZShXdCwiPCQxPjwvJDI+IikrcFsyXSxvPXBbMF07by0tOylzPXMubGFzdENoaWxkO2lmKCFydC5sZWFkaW5nV2hpdGVzcGFjZSYmSHQudGVzdChhKSYmdS5wdXNoKGUuY3JlYXRlVGV4dE5vZGUoSHQuZXhlYyhhKVswXSkpLCFydC50Ym9keSlmb3IoYT0idGFibGUiIT09bHx8WXQudGVzdChhKT8iPHRhYmxlPiIhPT1wWzFdfHxZdC50ZXN0KGEpPzA6czpzLmZpcnN0Q2hpbGQsbz1hJiZhLmNoaWxkTm9kZXMubGVuZ3RoO28tLTspbHQubm9kZU5hbWUoYz1hLmNoaWxkTm9kZXNbb10sInRib2R5IikmJiFjLmNoaWxkTm9kZXMubGVuZ3RoJiZhLnJlbW92ZUNoaWxkKGMpO2ZvcihsdC5tZXJnZSh1LHMuY2hpbGROb2Rlcykscy50ZXh0Q29udGVudD0iIjtzLmZpcnN0Q2hpbGQ7KXMucmVtb3ZlQ2hpbGQocy5maXJzdENoaWxkKTtzPWgubGFzdENoaWxkfWVsc2UgdS5wdXNoKGUuY3JlYXRlVGV4dE5vZGUoYSkpO2ZvcihzJiZoLnJlbW92ZUNoaWxkKHMpLHJ0LmFwcGVuZENoZWNrZWR8fGx0LmdyZXAoXyh1LCJpbnB1dCIpLHYpLG09MDthPXVbbSsrXTspaWYoKCFpfHxsdC5pbkFycmF5KGEsaSk9PT0tMSkmJihyPWx0LmNvbnRhaW5zKGEub3duZXJEb2N1bWVudCxhKSxzPV8oaC5hcHBlbmRDaGlsZChhKSwic2NyaXB0IiksciYmaihzKSxuKSlmb3Iobz0wO2E9c1tvKytdOyladC50ZXN0KGEudHlwZXx8IiIpJiZuLnB1c2goYSk7cmV0dXJuIHM9bnVsbCxofSxjbGVhbkRhdGE6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4saSxvLGEscj0wLHM9bHQuZXhwYW5kbyxsPWx0LmNhY2hlLGM9cnQuZGVsZXRlRXhwYW5kbyxwPWx0LmV2ZW50LnNwZWNpYWw7bnVsbCE9KG49dFtyXSk7cisrKWlmKChlfHxsdC5hY2NlcHREYXRhKG4pKSYmKG89bltzXSxhPW8mJmxbb10pKXtpZihhLmV2ZW50cylmb3IoaSBpbiBhLmV2ZW50cylwW2ldP2x0LmV2ZW50LnJlbW92ZShuLGkpOmx0LnJlbW92ZUV2ZW50KG4saSxhLmhhbmRsZSk7bFtvXSYmKGRlbGV0ZSBsW29dLGM/ZGVsZXRlIG5bc106dHlwZW9mIG4ucmVtb3ZlQXR0cmlidXRlIT09U3Q/bi5yZW1vdmVBdHRyaWJ1dGUocyk6bltzXT1udWxsLEsucHVzaChvKSl9fX0pLGx0LmZuLmV4dGVuZCh7dGV4dDpmdW5jdGlvbih0KXtyZXR1cm4gQnQodGhpcyxmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dD9sdC50ZXh0KHRoaXMpOnRoaXMuZW1wdHkoKS5hcHBlbmQoKHRoaXNbMF0mJnRoaXNbMF0ub3duZXJEb2N1bWVudHx8eHQpLmNyZWF0ZVRleHROb2RlKHQpKX0sbnVsbCx0LGFyZ3VtZW50cy5sZW5ndGgpfSxhcHBlbmQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsZnVuY3Rpb24odCl7aWYoMT09PXRoaXMubm9kZVR5cGV8fDExPT09dGhpcy5ub2RlVHlwZXx8OT09PXRoaXMubm9kZVR5cGUpe3ZhciBlPXkodGhpcyx0KTtlLmFwcGVuZENoaWxkKHQpfX0pfSxwcmVwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLGZ1bmN0aW9uKHQpe2lmKDE9PT10aGlzLm5vZGVUeXBlfHwxMT09PXRoaXMubm9kZVR5cGV8fDk9PT10aGlzLm5vZGVUeXBlKXt2YXIgZT15KHRoaXMsdCk7ZS5pbnNlcnRCZWZvcmUodCxlLmZpcnN0Q2hpbGQpfX0pfSxiZWZvcmU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsZnVuY3Rpb24odCl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQsdGhpcyl9KX0sYWZ0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kb21NYW5pcChhcmd1bWVudHMsZnVuY3Rpb24odCl7dGhpcy5wYXJlbnROb2RlJiZ0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQsdGhpcy5uZXh0U2libGluZyl9KX0scmVtb3ZlOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuLGk9dD9sdC5maWx0ZXIodCx0aGlzKTp0aGlzLG89MDtudWxsIT0obj1pW29dKTtvKyspZXx8MSE9PW4ubm9kZVR5cGV8fGx0LmNsZWFuRGF0YShfKG4pKSxuLnBhcmVudE5vZGUmJihlJiZsdC5jb250YWlucyhuLm93bmVyRG9jdW1lbnQsbikmJmooXyhuLCJzY3JpcHQiKSksbi5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG4pKTtyZXR1cm4gdGhpc30sZW1wdHk6ZnVuY3Rpb24oKXtmb3IodmFyIHQsZT0wO251bGwhPSh0PXRoaXNbZV0pO2UrKyl7Zm9yKDE9PT10Lm5vZGVUeXBlJiZsdC5jbGVhbkRhdGEoXyh0LCExKSk7dC5maXJzdENoaWxkOyl0LnJlbW92ZUNoaWxkKHQuZmlyc3RDaGlsZCk7dC5vcHRpb25zJiZsdC5ub2RlTmFtZSh0LCJzZWxlY3QiKSYmKHQub3B0aW9ucy5sZW5ndGg9MCl9cmV0dXJuIHRoaXN9LGNsb25lOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9bnVsbCE9dCYmdCxlPW51bGw9PWU/dDplLHRoaXMubWFwKGZ1bmN0aW9uKCl7cmV0dXJuIGx0LmNsb25lKHRoaXMsdCxlKX0pfSxodG1sOmZ1bmN0aW9uKHQpe3JldHVybiBCdCh0aGlzLGZ1bmN0aW9uKHQpe3ZhciBlPXRoaXNbMF18fHt9LG49MCxpPXRoaXMubGVuZ3RoO2lmKHZvaWQgMD09PXQpcmV0dXJuIDE9PT1lLm5vZGVUeXBlP2UuaW5uZXJIVE1MLnJlcGxhY2UoUnQsIiIpOnZvaWQgMDtpZigic3RyaW5nIj09dHlwZW9mIHQmJiFYdC50ZXN0KHQpJiYocnQuaHRtbFNlcmlhbGl6ZXx8ISR0LnRlc3QodCkpJiYocnQubGVhZGluZ1doaXRlc3BhY2V8fCFIdC50ZXN0KHQpKSYmIVF0WyhVdC5leGVjKHQpfHxbIiIsIiJdKVsxXS50b0xvd2VyQ2FzZSgpXSl7dD10LnJlcGxhY2UoV3QsIjwkMT48LyQyPiIpO3RyeXtmb3IoO248aTtuKyspZT10aGlzW25dfHx7fSwxPT09ZS5ub2RlVHlwZSYmKGx0LmNsZWFuRGF0YShfKGUsITEpKSxlLmlubmVySFRNTD10KTtlPTB9Y2F0Y2gobyl7fX1lJiZ0aGlzLmVtcHR5KCkuYXBwZW5kKHQpOwp9LG51bGwsdCxhcmd1bWVudHMubGVuZ3RoKX0scmVwbGFjZVdpdGg6ZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHNbMF07cmV0dXJuIHRoaXMuZG9tTWFuaXAoYXJndW1lbnRzLGZ1bmN0aW9uKGUpe3Q9dGhpcy5wYXJlbnROb2RlLGx0LmNsZWFuRGF0YShfKHRoaXMpKSx0JiZ0LnJlcGxhY2VDaGlsZChlLHRoaXMpfSksdCYmKHQubGVuZ3RofHx0Lm5vZGVUeXBlKT90aGlzOnRoaXMucmVtb3ZlKCl9LGRldGFjaDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5yZW1vdmUodCwhMCl9LGRvbU1hbmlwOmZ1bmN0aW9uKHQsZSl7dD10dC5hcHBseShbXSx0KTt2YXIgbixpLG8sYSxyLHMsbD0wLGM9dGhpcy5sZW5ndGgscD10aGlzLGQ9Yy0xLGg9dFswXSx1PWx0LmlzRnVuY3Rpb24oaCk7aWYodXx8Yz4xJiYic3RyaW5nIj09dHlwZW9mIGgmJiFydC5jaGVja0Nsb25lJiZKdC50ZXN0KGgpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24obil7dmFyIGk9cC5lcShuKTt1JiYodFswXT1oLmNhbGwodGhpcyxuLGkuaHRtbCgpKSksaS5kb21NYW5pcCh0LGUpfSk7aWYoYyYmKHM9bHQuYnVpbGRGcmFnbWVudCh0LHRoaXNbMF0ub3duZXJEb2N1bWVudCwhMSx0aGlzKSxuPXMuZmlyc3RDaGlsZCwxPT09cy5jaGlsZE5vZGVzLmxlbmd0aCYmKHM9biksbikpe2ZvcihhPWx0Lm1hcChfKHMsInNjcmlwdCIpLGspLG89YS5sZW5ndGg7bDxjO2wrKylpPXMsbCE9PWQmJihpPWx0LmNsb25lKGksITAsITApLG8mJmx0Lm1lcmdlKGEsXyhpLCJzY3JpcHQiKSkpLGUuY2FsbCh0aGlzW2xdLGksbCk7aWYobylmb3Iocj1hW2EubGVuZ3RoLTFdLm93bmVyRG9jdW1lbnQsbHQubWFwKGEseiksbD0wO2w8bztsKyspaT1hW2xdLFp0LnRlc3QoaS50eXBlfHwiIikmJiFsdC5fZGF0YShpLCJnbG9iYWxFdmFsIikmJmx0LmNvbnRhaW5zKHIsaSkmJihpLnNyYz9sdC5fZXZhbFVybCYmbHQuX2V2YWxVcmwoaS5zcmMpOmx0Lmdsb2JhbEV2YWwoKGkudGV4dHx8aS50ZXh0Q29udGVudHx8aS5pbm5lckhUTUx8fCIiKS5yZXBsYWNlKEt0LCIiKSkpO3M9bj1udWxsfXJldHVybiB0aGlzfX0pLGx0LmVhY2goe2FwcGVuZFRvOiJhcHBlbmQiLHByZXBlbmRUbzoicHJlcGVuZCIsaW5zZXJ0QmVmb3JlOiJiZWZvcmUiLGluc2VydEFmdGVyOiJhZnRlciIscmVwbGFjZUFsbDoicmVwbGFjZVdpdGgifSxmdW5jdGlvbih0LGUpe2x0LmZuW3RdPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbixpPTAsbz1bXSxhPWx0KHQpLHI9YS5sZW5ndGgtMTtpPD1yO2krKyluPWk9PT1yP3RoaXM6dGhpcy5jbG9uZSghMCksbHQoYVtpXSlbZV0obiksZXQuYXBwbHkobyxuLmdldCgpKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2sobyl9fSk7dmFyIG5lLGllPXt9OyFmdW5jdGlvbigpe3ZhciB0O3J0LnNocmlua1dyYXBCbG9ja3M9ZnVuY3Rpb24oKXtpZihudWxsIT10KXJldHVybiB0O3Q9ITE7dmFyIGUsbixpO3JldHVybiBuPXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJib2R5IilbMF0sbiYmbi5zdHlsZT8oZT14dC5jcmVhdGVFbGVtZW50KCJkaXYiKSxpPXh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpLGkuc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7Ym9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHgiLG4uYXBwZW5kQ2hpbGQoaSkuYXBwZW5kQ2hpbGQoZSksdHlwZW9mIGUuc3R5bGUuem9vbSE9PVN0JiYoZS5zdHlsZS5jc3NUZXh0PSItd2Via2l0LWJveC1zaXppbmc6Y29udGVudC1ib3g7LW1vei1ib3gtc2l6aW5nOmNvbnRlbnQtYm94O2JveC1zaXppbmc6Y29udGVudC1ib3g7ZGlzcGxheTpibG9jazttYXJnaW46MDtib3JkZXI6MDtwYWRkaW5nOjFweDt3aWR0aDoxcHg7em9vbToxIixlLmFwcGVuZENoaWxkKHh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpKS5zdHlsZS53aWR0aD0iNXB4Iix0PTMhPT1lLm9mZnNldFdpZHRoKSxuLnJlbW92ZUNoaWxkKGkpLHQpOnZvaWQgMH19KCk7dmFyIG9lLGFlLHJlPS9ebWFyZ2luLyxzZT1uZXcgUmVnRXhwKCJeKCIrQXQrIikoPyFweClbYS16JV0rJCIsImkiKSxsZT0vXih0b3B8cmlnaHR8Ym90dG9tfGxlZnQpJC87by5nZXRDb21wdXRlZFN0eWxlPyhvZT1mdW5jdGlvbih0KXtyZXR1cm4gdC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3Lm9wZW5lcj90Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSh0LG51bGwpOm8uZ2V0Q29tcHV0ZWRTdHlsZSh0LG51bGwpfSxhZT1mdW5jdGlvbih0LGUsbil7dmFyIGksbyxhLHIscz10LnN0eWxlO3JldHVybiBuPW58fG9lKHQpLHI9bj9uLmdldFByb3BlcnR5VmFsdWUoZSl8fG5bZV06dm9pZCAwLG4mJigiIiE9PXJ8fGx0LmNvbnRhaW5zKHQub3duZXJEb2N1bWVudCx0KXx8KHI9bHQuc3R5bGUodCxlKSksc2UudGVzdChyKSYmcmUudGVzdChlKSYmKGk9cy53aWR0aCxvPXMubWluV2lkdGgsYT1zLm1heFdpZHRoLHMubWluV2lkdGg9cy5tYXhXaWR0aD1zLndpZHRoPXIscj1uLndpZHRoLHMud2lkdGg9aSxzLm1pbldpZHRoPW8scy5tYXhXaWR0aD1hKSksdm9pZCAwPT09cj9yOnIrIiJ9KTp4dC5kb2N1bWVudEVsZW1lbnQuY3VycmVudFN0eWxlJiYob2U9ZnVuY3Rpb24odCl7cmV0dXJuIHQuY3VycmVudFN0eWxlfSxhZT1mdW5jdGlvbih0LGUsbil7dmFyIGksbyxhLHIscz10LnN0eWxlO3JldHVybiBuPW58fG9lKHQpLHI9bj9uW2VdOnZvaWQgMCxudWxsPT1yJiZzJiZzW2VdJiYocj1zW2VdKSxzZS50ZXN0KHIpJiYhbGUudGVzdChlKSYmKGk9cy5sZWZ0LG89dC5ydW50aW1lU3R5bGUsYT1vJiZvLmxlZnQsYSYmKG8ubGVmdD10LmN1cnJlbnRTdHlsZS5sZWZ0KSxzLmxlZnQ9ImZvbnRTaXplIj09PWU/IjFlbSI6cixyPXMucGl4ZWxMZWZ0KyJweCIscy5sZWZ0PWksYSYmKG8ubGVmdD1hKSksdm9pZCAwPT09cj9yOnIrIiJ8fCJhdXRvIn0pLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3ZhciB0LGUsbixpO2U9eHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImJvZHkiKVswXSxlJiZlLnN0eWxlJiYodD14dC5jcmVhdGVFbGVtZW50KCJkaXYiKSxuPXh0LmNyZWF0ZUVsZW1lbnQoImRpdiIpLG4uc3R5bGUuY3NzVGV4dD0icG9zaXRpb246YWJzb2x1dGU7Ym9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHgiLGUuYXBwZW5kQ2hpbGQobikuYXBwZW5kQ2hpbGQodCksdC5zdHlsZS5jc3NUZXh0PSItd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDstbW96LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTpibG9jazttYXJnaW4tdG9wOjElO3RvcDoxJTtib3JkZXI6MXB4O3BhZGRpbmc6MXB4O3dpZHRoOjRweDtwb3NpdGlvbjphYnNvbHV0ZSIsYT1yPSExLGw9ITAsby5nZXRDb21wdXRlZFN0eWxlJiYoYT0iMSUiIT09KG8uZ2V0Q29tcHV0ZWRTdHlsZSh0LG51bGwpfHx7fSkudG9wLHI9IjRweCI9PT0oby5nZXRDb21wdXRlZFN0eWxlKHQsbnVsbCl8fHt3aWR0aDoiNHB4In0pLndpZHRoLGk9dC5hcHBlbmRDaGlsZCh4dC5jcmVhdGVFbGVtZW50KCJkaXYiKSksaS5zdHlsZS5jc3NUZXh0PXQuc3R5bGUuY3NzVGV4dD0iLXdlYmtpdC1ib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tb3otYm94LXNpemluZzpjb250ZW50LWJveDtib3gtc2l6aW5nOmNvbnRlbnQtYm94O2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjA7Ym9yZGVyOjA7cGFkZGluZzowIixpLnN0eWxlLm1hcmdpblJpZ2h0PWkuc3R5bGUud2lkdGg9IjAiLHQuc3R5bGUud2lkdGg9IjFweCIsbD0hcGFyc2VGbG9hdCgoby5nZXRDb21wdXRlZFN0eWxlKGksbnVsbCl8fHt9KS5tYXJnaW5SaWdodCksdC5yZW1vdmVDaGlsZChpKSksdC5pbm5lckhUTUw9Ijx0YWJsZT48dHI+PHRkPjwvdGQ+PHRkPnQ8L3RkPjwvdHI+PC90YWJsZT4iLGk9dC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGQiKSxpWzBdLnN0eWxlLmNzc1RleHQ9Im1hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MDtkaXNwbGF5Om5vbmUiLHM9MD09PWlbMF0ub2Zmc2V0SGVpZ2h0LHMmJihpWzBdLnN0eWxlLmRpc3BsYXk9IiIsaVsxXS5zdHlsZS5kaXNwbGF5PSJub25lIixzPTA9PT1pWzBdLm9mZnNldEhlaWdodCksZS5yZW1vdmVDaGlsZChuKSl9dmFyIGUsbixpLGEscixzLGw7ZT14dC5jcmVhdGVFbGVtZW50KCJkaXYiKSxlLmlubmVySFRNTD0iICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+IixpPWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXSxuPWkmJmkuc3R5bGUsbiYmKG4uY3NzVGV4dD0iZmxvYXQ6bGVmdDtvcGFjaXR5Oi41IixydC5vcGFjaXR5PSIwLjUiPT09bi5vcGFjaXR5LHJ0LmNzc0Zsb2F0PSEhbi5jc3NGbG9hdCxlLnN0eWxlLmJhY2tncm91bmRDbGlwPSJjb250ZW50LWJveCIsZS5jbG9uZU5vZGUoITApLnN0eWxlLmJhY2tncm91bmRDbGlwPSIiLHJ0LmNsZWFyQ2xvbmVTdHlsZT0iY29udGVudC1ib3giPT09ZS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCxydC5ib3hTaXppbmc9IiI9PT1uLmJveFNpemluZ3x8IiI9PT1uLk1vekJveFNpemluZ3x8IiI9PT1uLldlYmtpdEJveFNpemluZyxsdC5leHRlbmQocnQse3JlbGlhYmxlSGlkZGVuT2Zmc2V0czpmdW5jdGlvbigpe3JldHVybiBudWxsPT1zJiZ0KCksc30sYm94U2l6aW5nUmVsaWFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbD09ciYmdCgpLHJ9LHBpeGVsUG9zaXRpb246ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbD09YSYmdCgpLGF9LHJlbGlhYmxlTWFyZ2luUmlnaHQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbD09bCYmdCgpLGx9fSkpfSgpLGx0LnN3YXA9ZnVuY3Rpb24odCxlLG4saSl7dmFyIG8sYSxyPXt9O2ZvcihhIGluIGUpclthXT10LnN0eWxlW2FdLHQuc3R5bGVbYV09ZVthXTtvPW4uYXBwbHkodCxpfHxbXSk7Zm9yKGEgaW4gZSl0LnN0eWxlW2FdPXJbYV07cmV0dXJuIG99O3ZhciBjZT0vYWxwaGFcKFteKV0qXCkvaSxwZT0vb3BhY2l0eVxzKj1ccyooW14pXSopLyxkZT0vXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8saGU9bmV3IFJlZ0V4cCgiXigiK0F0KyIpKC4qKSQiLCJpIiksdWU9bmV3IFJlZ0V4cCgiXihbKy1dKT0oIitBdCsiKSIsImkiKSxtZT17cG9zaXRpb246ImFic29sdXRlIix2aXNpYmlsaXR5OiJoaWRkZW4iLGRpc3BsYXk6ImJsb2NrIn0sZmU9e2xldHRlclNwYWNpbmc6IjAiLGZvbnRXZWlnaHQ6IjQwMCJ9LGdlPVsiV2Via2l0IiwiTyIsIk1veiIsIm1zIl07bHQuZXh0ZW5kKHtjc3NIb29rczp7b3BhY2l0eTp7Z2V0OmZ1bmN0aW9uKHQsZSl7aWYoZSl7dmFyIG49YWUodCwib3BhY2l0eSIpO3JldHVybiIiPT09bj8iMSI6bn19fX0sY3NzTnVtYmVyOntjb2x1bW5Db3VudDohMCxmaWxsT3BhY2l0eTohMCxmbGV4R3JvdzohMCxmbGV4U2hyaW5rOiEwLGZvbnRXZWlnaHQ6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwfSxjc3NQcm9wczp7ImZsb2F0IjpydC5jc3NGbG9hdD8iY3NzRmxvYXQiOiJzdHlsZUZsb2F0In0sc3R5bGU6ZnVuY3Rpb24odCxlLG4saSl7aWYodCYmMyE9PXQubm9kZVR5cGUmJjghPT10Lm5vZGVUeXBlJiZ0LnN0eWxlKXt2YXIgbyxhLHIscz1sdC5jYW1lbENhc2UoZSksbD10LnN0eWxlO2lmKGU9bHQuY3NzUHJvcHNbc118fChsdC5jc3NQcm9wc1tzXT1OKGwscykpLHI9bHQuY3NzSG9va3NbZV18fGx0LmNzc0hvb2tzW3NdLHZvaWQgMD09PW4pcmV0dXJuIHImJiJnZXQiaW4gciYmdm9pZCAwIT09KG89ci5nZXQodCwhMSxpKSk/bzpsW2VdO2lmKGE9dHlwZW9mIG4sInN0cmluZyI9PT1hJiYobz11ZS5leGVjKG4pKSYmKG49KG9bMV0rMSkqb1syXStwYXJzZUZsb2F0KGx0LmNzcyh0LGUpKSxhPSJudW1iZXIiKSxudWxsIT1uJiZuPT09biYmKCJudW1iZXIiIT09YXx8bHQuY3NzTnVtYmVyW3NdfHwobis9InB4IikscnQuY2xlYXJDbG9uZVN0eWxlfHwiIiE9PW58fDAhPT1lLmluZGV4T2YoImJhY2tncm91bmQiKXx8KGxbZV09ImluaGVyaXQiKSwhKHImJiJzZXQiaW4gciYmdm9pZCAwPT09KG49ci5zZXQodCxuLGkpKSkpKXRyeXtsW2VdPW59Y2F0Y2goYyl7fX19LGNzczpmdW5jdGlvbih0LGUsbixpKXt2YXIgbyxhLHIscz1sdC5jYW1lbENhc2UoZSk7cmV0dXJuIGU9bHQuY3NzUHJvcHNbc118fChsdC5jc3NQcm9wc1tzXT1OKHQuc3R5bGUscykpLHI9bHQuY3NzSG9va3NbZV18fGx0LmNzc0hvb2tzW3NdLHImJiJnZXQiaW4gciYmKGE9ci5nZXQodCwhMCxuKSksdm9pZCAwPT09YSYmKGE9YWUodCxlLGkpKSwibm9ybWFsIj09PWEmJmUgaW4gZmUmJihhPWZlW2VdKSwiIj09PW58fG4/KG89cGFyc2VGbG9hdChhKSxuPT09ITB8fGx0LmlzTnVtZXJpYyhvKT9vfHwwOmEpOmF9fSksbHQuZWFjaChbImhlaWdodCIsIndpZHRoIl0sZnVuY3Rpb24odCxlKXtsdC5jc3NIb29rc1tlXT17Z2V0OmZ1bmN0aW9uKHQsbixpKXtpZihuKXJldHVybiBkZS50ZXN0KGx0LmNzcyh0LCJkaXNwbGF5IikpJiYwPT09dC5vZmZzZXRXaWR0aD9sdC5zd2FwKHQsbWUsZnVuY3Rpb24oKXtyZXR1cm4gTyh0LGUsaSl9KTpPKHQsZSxpKX0sc2V0OmZ1bmN0aW9uKHQsbixpKXt2YXIgbz1pJiZvZSh0KTtyZXR1cm4gQih0LG4saT9xKHQsZSxpLHJ0LmJveFNpemluZyYmImJvcmRlci1ib3giPT09bHQuY3NzKHQsImJveFNpemluZyIsITEsbyksbyk6MCl9fX0pLHJ0Lm9wYWNpdHl8fChsdC5jc3NIb29rcy5vcGFjaXR5PXtnZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gcGUudGVzdCgoZSYmdC5jdXJyZW50U3R5bGU/dC5jdXJyZW50U3R5bGUuZmlsdGVyOnQuc3R5bGUuZmlsdGVyKXx8IiIpPy4wMSpwYXJzZUZsb2F0KFJlZ0V4cC4kMSkrIiI6ZT8iMSI6IiJ9LHNldDpmdW5jdGlvbih0LGUpe3ZhciBuPXQuc3R5bGUsaT10LmN1cnJlbnRTdHlsZSxvPWx0LmlzTnVtZXJpYyhlKT8iYWxwaGEob3BhY2l0eT0iKzEwMCplKyIpIjoiIixhPWkmJmkuZmlsdGVyfHxuLmZpbHRlcnx8IiI7bi56b29tPTEsKGU+PTF8fCIiPT09ZSkmJiIiPT09bHQudHJpbShhLnJlcGxhY2UoY2UsIiIpKSYmbi5yZW1vdmVBdHRyaWJ1dGUmJihuLnJlbW92ZUF0dHJpYnV0ZSgiZmlsdGVyIiksIiI9PT1lfHxpJiYhaS5maWx0ZXIpfHwobi5maWx0ZXI9Y2UudGVzdChhKT9hLnJlcGxhY2UoY2Usbyk6YSsiICIrbyl9fSksbHQuY3NzSG9va3MubWFyZ2luUmlnaHQ9QShydC5yZWxpYWJsZU1hcmdpblJpZ2h0LGZ1bmN0aW9uKHQsZSl7aWYoZSlyZXR1cm4gbHQuc3dhcCh0LHtkaXNwbGF5OiJpbmxpbmUtYmxvY2sifSxhZSxbdCwibWFyZ2luUmlnaHQiXSl9KSxsdC5lYWNoKHttYXJnaW46IiIscGFkZGluZzoiIixib3JkZXI6IldpZHRoIn0sZnVuY3Rpb24odCxlKXtsdC5jc3NIb29rc1t0K2VdPXtleHBhbmQ6ZnVuY3Rpb24obil7Zm9yKHZhciBpPTAsbz17fSxhPSJzdHJpbmciPT10eXBlb2Ygbj9uLnNwbGl0KCIgIik6W25dO2k8NDtpKyspb1t0K050W2ldK2VdPWFbaV18fGFbaS0yXXx8YVswXTtyZXR1cm4gb319LHJlLnRlc3QodCl8fChsdC5jc3NIb29rc1t0K2VdLnNldD1CKX0pLGx0LmZuLmV4dGVuZCh7Y3NzOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIEJ0KHRoaXMsZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8sYT17fSxyPTA7aWYobHQuaXNBcnJheShlKSl7Zm9yKGk9b2UodCksbz1lLmxlbmd0aDtyPG87cisrKWFbZVtyXV09bHQuY3NzKHQsZVtyXSwhMSxpKTtyZXR1cm4gYX1yZXR1cm4gdm9pZCAwIT09bj9sdC5zdHlsZSh0LGUsbik6bHQuY3NzKHQsZSl9LHQsZSxhcmd1bWVudHMubGVuZ3RoPjEpfSxzaG93OmZ1bmN0aW9uKCl7cmV0dXJuIEkodGhpcywhMCl9LGhpZGU6ZnVuY3Rpb24oKXtyZXR1cm4gSSh0aGlzKX0sdG9nZ2xlOmZ1bmN0aW9uKHQpe3JldHVybiJib29sZWFuIj09dHlwZW9mIHQ/dD90aGlzLnNob3coKTp0aGlzLmhpZGUoKTp0aGlzLmVhY2goZnVuY3Rpb24oKXtJdCh0aGlzKT9sdCh0aGlzKS5zaG93KCk6bHQodGhpcykuaGlkZSgpfSl9fSksbHQuVHdlZW49RSxFLnByb3RvdHlwZT17Y29uc3RydWN0b3I6RSxpbml0OmZ1bmN0aW9uKHQsZSxuLGksbyxhKXt0aGlzLmVsZW09dCx0aGlzLnByb3A9bix0aGlzLmVhc2luZz1vfHwic3dpbmciLHRoaXMub3B0aW9ucz1lLHRoaXMuc3RhcnQ9dGhpcy5ub3c9dGhpcy5jdXIoKSx0aGlzLmVuZD1pLHRoaXMudW5pdD1hfHwobHQuY3NzTnVtYmVyW25dPyIiOiJweCIpfSxjdXI6ZnVuY3Rpb24oKXt2YXIgdD1FLnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiB0JiZ0LmdldD90LmdldCh0aGlzKTpFLnByb3BIb29rcy5fZGVmYXVsdC5nZXQodGhpcyl9LHJ1bjpmdW5jdGlvbih0KXt2YXIgZSxuPUUucHJvcEhvb2tzW3RoaXMucHJvcF07cmV0dXJuIHRoaXMub3B0aW9ucy5kdXJhdGlvbj90aGlzLnBvcz1lPWx0LmVhc2luZ1t0aGlzLmVhc2luZ10odCx0aGlzLm9wdGlvbnMuZHVyYXRpb24qdCwwLDEsdGhpcy5vcHRpb25zLmR1cmF0aW9uKTp0aGlzLnBvcz1lPXQsdGhpcy5ub3c9KHRoaXMuZW5kLXRoaXMuc3RhcnQpKmUrdGhpcy5zdGFydCx0aGlzLm9wdGlvbnMuc3RlcCYmdGhpcy5vcHRpb25zLnN0ZXAuY2FsbCh0aGlzLmVsZW0sdGhpcy5ub3csdGhpcyksbiYmbi5zZXQ/bi5zZXQodGhpcyk6RS5wcm9wSG9va3MuX2RlZmF1bHQuc2V0KHRoaXMpLHRoaXN9fSxFLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZT1FLnByb3RvdHlwZSxFLnByb3BIb29rcz17X2RlZmF1bHQ6e2dldDpmdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gbnVsbD09dC5lbGVtW3QucHJvcF18fHQuZWxlbS5zdHlsZSYmbnVsbCE9dC5lbGVtLnN0eWxlW3QucHJvcF0/KGU9bHQuY3NzKHQuZWxlbSx0LnByb3AsIiIpLGUmJiJhdXRvIiE9PWU/ZTowKTp0LmVsZW1bdC5wcm9wXX0sc2V0OmZ1bmN0aW9uKHQpe2x0LmZ4LnN0ZXBbdC5wcm9wXT9sdC5meC5zdGVwW3QucHJvcF0odCk6dC5lbGVtLnN0eWxlJiYobnVsbCE9dC5lbGVtLnN0eWxlW2x0LmNzc1Byb3BzW3QucHJvcF1dfHxsdC5jc3NIb29rc1t0LnByb3BdKT9sdC5zdHlsZSh0LmVsZW0sdC5wcm9wLHQubm93K3QudW5pdCk6dC5lbGVtW3QucHJvcF09dC5ub3d9fX0sRS5wcm9wSG9va3Muc2Nyb2xsVG9wPUUucHJvcEhvb2tzLnNjcm9sbExlZnQ9e3NldDpmdW5jdGlvbih0KXt0LmVsZW0ubm9kZVR5cGUmJnQuZWxlbS5wYXJlbnROb2RlJiYodC5lbGVtW3QucHJvcF09dC5ub3cpfX0sbHQuZWFzaW5nPXtsaW5lYXI6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LHN3aW5nOmZ1bmN0aW9uKHQpe3JldHVybi41LU1hdGguY29zKHQqTWF0aC5QSSkvMn19LGx0LmZ4PUUucHJvdG90eXBlLmluaXQsbHQuZnguc3RlcD17fTt2YXIgd2UseGUsYmU9L14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLF9lPW5ldyBSZWdFeHAoIl4oPzooWystXSk9fCkoIitBdCsiKShbYS16JV0qKSQiLCJpIiksdmU9L3F1ZXVlSG9va3MkLyx5ZT1bTV0sa2U9eyIqIjpbZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmNyZWF0ZVR3ZWVuKHQsZSksaT1uLmN1cigpLG89X2UuZXhlYyhlKSxhPW8mJm9bM118fChsdC5jc3NOdW1iZXJbdF0/IiI6InB4Iikscj0obHQuY3NzTnVtYmVyW3RdfHwicHgiIT09YSYmK2kpJiZfZS5leGVjKGx0LmNzcyhuLmVsZW0sdCkpLHM9MSxsPTIwO2lmKHImJnJbM10hPT1hKXthPWF8fHJbM10sbz1vfHxbXSxyPStpfHwxO2RvIHM9c3x8Ii41IixyLz1zLGx0LnN0eWxlKG4uZWxlbSx0LHIrYSk7d2hpbGUocyE9PShzPW4uY3VyKCkvaSkmJjEhPT1zJiYtLWwpfXJldHVybiBvJiYocj1uLnN0YXJ0PStyfHwraXx8MCxuLnVuaXQ9YSxuLmVuZD1vWzFdP3IrKG9bMV0rMSkqb1syXTorb1syXSksbn1dfTtsdC5BbmltYXRpb249bHQuZXh0ZW5kKCQse3R3ZWVuZXI6ZnVuY3Rpb24odCxlKXtsdC5pc0Z1bmN0aW9uKHQpPyhlPXQsdD1bIioiXSk6dD10LnNwbGl0KCIgIik7Zm9yKHZhciBuLGk9MCxvPXQubGVuZ3RoO2k8bztpKyspbj10W2ldLGtlW25dPWtlW25dfHxbXSxrZVtuXS51bnNoaWZ0KGUpfSxwcmVmaWx0ZXI6ZnVuY3Rpb24odCxlKXtlP3llLnVuc2hpZnQodCk6eWUucHVzaCh0KX19KSxsdC5zcGVlZD1mdW5jdGlvbih0LGUsbil7dmFyIGk9dCYmIm9iamVjdCI9PXR5cGVvZiB0P2x0LmV4dGVuZCh7fSx0KTp7Y29tcGxldGU6bnx8IW4mJmV8fGx0LmlzRnVuY3Rpb24odCkmJnQsZHVyYXRpb246dCxlYXNpbmc6biYmZXx8ZSYmIWx0LmlzRnVuY3Rpb24oZSkmJmV9O3JldHVybiBpLmR1cmF0aW9uPWx0LmZ4Lm9mZj8wOiJudW1iZXIiPT10eXBlb2YgaS5kdXJhdGlvbj9pLmR1cmF0aW9uOmkuZHVyYXRpb24gaW4gbHQuZnguc3BlZWRzP2x0LmZ4LnNwZWVkc1tpLmR1cmF0aW9uXTpsdC5meC5zcGVlZHMuX2RlZmF1bHQsbnVsbCE9aS5xdWV1ZSYmaS5xdWV1ZSE9PSEwfHwoaS5xdWV1ZT0iZngiKSxpLm9sZD1pLmNvbXBsZXRlLGkuY29tcGxldGU9ZnVuY3Rpb24oKXtsdC5pc0Z1bmN0aW9uKGkub2xkKSYmaS5vbGQuY2FsbCh0aGlzKSxpLnF1ZXVlJiZsdC5kZXF1ZXVlKHRoaXMsaS5xdWV1ZSl9LGl9LGx0LmZuLmV4dGVuZCh7ZmFkZVRvOmZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybiB0aGlzLmZpbHRlcihJdCkuY3NzKCJvcGFjaXR5IiwwKS5zaG93KCkuZW5kKCkuYW5pbWF0ZSh7b3BhY2l0eTplfSx0LG4saSl9LGFuaW1hdGU6ZnVuY3Rpb24odCxlLG4saSl7dmFyIG89bHQuaXNFbXB0eU9iamVjdCh0KSxhPWx0LnNwZWVkKGUsbixpKSxyPWZ1bmN0aW9uKCl7dmFyIGU9JCh0aGlzLGx0LmV4dGVuZCh7fSx0KSxhKTsob3x8bHQuX2RhdGEodGhpcywiZmluaXNoIikpJiZlLnN0b3AoITApfTtyZXR1cm4gci5maW5pc2g9cixvfHxhLnF1ZXVlPT09ITE/dGhpcy5lYWNoKHIpOnRoaXMucXVldWUoYS5xdWV1ZSxyKX0sc3RvcDpmdW5jdGlvbih0LGUsbil7dmFyIGk9ZnVuY3Rpb24odCl7dmFyIGU9dC5zdG9wO2RlbGV0ZSB0LnN0b3AsZShuKX07cmV0dXJuInN0cmluZyIhPXR5cGVvZiB0JiYobj1lLGU9dCx0PXZvaWQgMCksZSYmdCE9PSExJiZ0aGlzLnF1ZXVlKHR8fCJmeCIsW10pLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBlPSEwLG89bnVsbCE9dCYmdCsicXVldWVIb29rcyIsYT1sdC50aW1lcnMscj1sdC5fZGF0YSh0aGlzKTtpZihvKXJbb10mJnJbb10uc3RvcCYmaShyW29dKTtlbHNlIGZvcihvIGluIHIpcltvXSYmcltvXS5zdG9wJiZ2ZS50ZXN0KG8pJiZpKHJbb10pO2ZvcihvPWEubGVuZ3RoO28tLTspYVtvXS5lbGVtIT09dGhpc3x8bnVsbCE9dCYmYVtvXS5xdWV1ZSE9PXR8fChhW29dLmFuaW0uc3RvcChuKSxlPSExLGEuc3BsaWNlKG8sMSkpOyFlJiZufHxsdC5kZXF1ZXVlKHRoaXMsdCl9KX0sZmluaXNoOmZ1bmN0aW9uKHQpe3JldHVybiB0IT09ITEmJih0PXR8fCJmeCIpLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBlLG49bHQuX2RhdGEodGhpcyksaT1uW3QrInF1ZXVlIl0sbz1uW3QrInF1ZXVlSG9va3MiXSxhPWx0LnRpbWVycyxyPWk/aS5sZW5ndGg6MDtmb3Iobi5maW5pc2g9ITAsbHQucXVldWUodGhpcyx0LFtdKSxvJiZvLnN0b3AmJm8uc3RvcC5jYWxsKHRoaXMsITApLGU9YS5sZW5ndGg7ZS0tOylhW2VdLmVsZW09PT10aGlzJiZhW2VdLnF1ZXVlPT09dCYmKGFbZV0uYW5pbS5zdG9wKCEwKSxhLnNwbGljZShlLDEpKTtmb3IoZT0wO2U8cjtlKyspaVtlXSYmaVtlXS5maW5pc2gmJmlbZV0uZmluaXNoLmNhbGwodGhpcyk7ZGVsZXRlIG4uZmluaXNofSl9fSksbHQuZWFjaChbInRvZ2dsZSIsInNob3ciLCJoaWRlIl0sZnVuY3Rpb24odCxlKXt2YXIgbj1sdC5mbltlXTtsdC5mbltlXT1mdW5jdGlvbih0LGksbyl7cmV0dXJuIG51bGw9PXR8fCJib29sZWFuIj09dHlwZW9mIHQ/bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk6dGhpcy5hbmltYXRlKEQoZSwhMCksdCxpLG8pfX0pLGx0LmVhY2goe3NsaWRlRG93bjpEKCJzaG93Iiksc2xpZGVVcDpEKCJoaWRlIiksc2xpZGVUb2dnbGU6RCgidG9nZ2xlIiksZmFkZUluOntvcGFjaXR5OiJzaG93In0sZmFkZU91dDp7b3BhY2l0eToiaGlkZSJ9LGZhZGVUb2dnbGU6e29wYWNpdHk6InRvZ2dsZSJ9fSxmdW5jdGlvbih0LGUpe2x0LmZuW3RdPWZ1bmN0aW9uKHQsbixpKXtyZXR1cm4gdGhpcy5hbmltYXRlKGUsdCxuLGkpfX0pLGx0LnRpbWVycz1bXSxsdC5meC50aWNrPWZ1bmN0aW9uKCl7dmFyIHQsZT1sdC50aW1lcnMsbj0wO2Zvcih3ZT1sdC5ub3coKTtuPGUubGVuZ3RoO24rKyl0PWVbbl0sdCgpfHxlW25dIT09dHx8ZS5zcGxpY2Uobi0tLDEpO2UubGVuZ3RofHxsdC5meC5zdG9wKCksd2U9dm9pZCAwfSxsdC5meC50aW1lcj1mdW5jdGlvbih0KXtsdC50aW1lcnMucHVzaCh0KSx0KCk/bHQuZnguc3RhcnQoKTpsdC50aW1lcnMucG9wKCl9LGx0LmZ4LmludGVydmFsPTEzLGx0LmZ4LnN0YXJ0PWZ1bmN0aW9uKCl7eGV8fCh4ZT1zZXRJbnRlcnZhbChsdC5meC50aWNrLGx0LmZ4LmludGVydmFsKSl9LGx0LmZ4LnN0b3A9ZnVuY3Rpb24oKXtjbGVhckludGVydmFsKHhlKSx4ZT1udWxsfSxsdC5meC5zcGVlZHM9e3Nsb3c6NjAwLGZhc3Q6MjAwLF9kZWZhdWx0OjQwMH0sbHQuZm4uZGVsYXk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1sdC5meD9sdC5meC5zcGVlZHNbdF18fHQ6dCxlPWV8fCJmeCIsdGhpcy5xdWV1ZShlLGZ1bmN0aW9uKGUsbil7dmFyIGk9c2V0VGltZW91dChlLHQpO24uc3RvcD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChpKX19KX0sZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxvO2U9eHQuY3JlYXRlRWxlbWVudCgiZGl2IiksZS5zZXRBdHRyaWJ1dGUoImNsYXNzTmFtZSIsInQiKSxlLmlubmVySFRNTD0iICA8bGluay8+PHRhYmxlPjwvdGFibGU+PGEgaHJlZj0nL2EnPmE8L2E+PGlucHV0IHR5cGU9J2NoZWNrYm94Jy8+IixpPWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImEiKVswXSxuPXh0LmNyZWF0ZUVsZW1lbnQoInNlbGVjdCIpLG89bi5hcHBlbmRDaGlsZCh4dC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKSksdD1lLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJpbnB1dCIpWzBdLGkuc3R5bGUuY3NzVGV4dD0idG9wOjFweCIscnQuZ2V0U2V0QXR0cmlidXRlPSJ0IiE9PWUuY2xhc3NOYW1lLHJ0LnN0eWxlPS90b3AvLnRlc3QoaS5nZXRBdHRyaWJ1dGUoInN0eWxlIikpLHJ0LmhyZWZOb3JtYWxpemVkPSIvYSI9PT1pLmdldEF0dHJpYnV0ZSgiaHJlZiIpLHJ0LmNoZWNrT249ISF0LnZhbHVlLHJ0Lm9wdFNlbGVjdGVkPW8uc2VsZWN0ZWQscnQuZW5jdHlwZT0hIXh0LmNyZWF0ZUVsZW1lbnQoImZvcm0iKS5lbmN0eXBlLG4uZGlzYWJsZWQ9ITAscnQub3B0RGlzYWJsZWQ9IW8uZGlzYWJsZWQsdD14dC5jcmVhdGVFbGVtZW50KCJpbnB1dCIpLHQuc2V0QXR0cmlidXRlKCJ2YWx1ZSIsIiIpLHJ0LmlucHV0PSIiPT09dC5nZXRBdHRyaWJ1dGUoInZhbHVlIiksdC52YWx1ZT0idCIsdC5zZXRBdHRyaWJ1dGUoInR5cGUiLCJyYWRpbyIpLHJ0LnJhZGlvVmFsdWU9InQiPT09dC52YWx1ZX0oKTt2YXIgemU9L1xyL2c7bHQuZm4uZXh0ZW5kKHt2YWw6ZnVuY3Rpb24odCl7dmFyIGUsbixpLG89dGhpc1swXTt7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gaT1sdC5pc0Z1bmN0aW9uKHQpLHRoaXMuZWFjaChmdW5jdGlvbihuKXt2YXIgbzsxPT09dGhpcy5ub2RlVHlwZSYmKG89aT90LmNhbGwodGhpcyxuLGx0KHRoaXMpLnZhbCgpKTp0LG51bGw9PW8/bz0iIjoibnVtYmVyIj09dHlwZW9mIG8/bys9IiI6bHQuaXNBcnJheShvKSYmKG89bHQubWFwKG8sZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/IiI6dCsiIn0pKSxlPWx0LnZhbEhvb2tzW3RoaXMudHlwZV18fGx0LnZhbEhvb2tzW3RoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0sZSYmInNldCJpbiBlJiZ2b2lkIDAhPT1lLnNldCh0aGlzLG8sInZhbHVlIil8fCh0aGlzLnZhbHVlPW8pKX0pO2lmKG8pcmV0dXJuIGU9bHQudmFsSG9va3Nbby50eXBlXXx8bHQudmFsSG9va3Nbby5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpXSxlJiYiZ2V0ImluIGUmJnZvaWQgMCE9PShuPWUuZ2V0KG8sInZhbHVlIikpP246KG49by52YWx1ZSwic3RyaW5nIj09dHlwZW9mIG4/bi5yZXBsYWNlKHplLCIiKTpudWxsPT1uPyIiOm4pfX19KSxsdC5leHRlbmQoe3ZhbEhvb2tzOntvcHRpb246e2dldDpmdW5jdGlvbih0KXt2YXIgZT1sdC5maW5kLmF0dHIodCwidmFsdWUiKTtyZXR1cm4gbnVsbCE9ZT9lOmx0LnRyaW0obHQudGV4dCh0KSl9fSxzZWxlY3Q6e2dldDpmdW5jdGlvbih0KXtmb3IodmFyIGUsbixpPXQub3B0aW9ucyxvPXQuc2VsZWN0ZWRJbmRleCxhPSJzZWxlY3Qtb25lIj09PXQudHlwZXx8bzwwLHI9YT9udWxsOltdLHM9YT9vKzE6aS5sZW5ndGgsbD1vPDA/czphP286MDtsPHM7bCsrKWlmKG49aVtsXSwobi5zZWxlY3RlZHx8bD09PW8pJiYocnQub3B0RGlzYWJsZWQ/IW4uZGlzYWJsZWQ6bnVsbD09PW4uZ2V0QXR0cmlidXRlKCJkaXNhYmxlZCIpKSYmKCFuLnBhcmVudE5vZGUuZGlzYWJsZWR8fCFsdC5ub2RlTmFtZShuLnBhcmVudE5vZGUsIm9wdGdyb3VwIikpKXtpZihlPWx0KG4pLnZhbCgpLGEpcmV0dXJuIGU7ci5wdXNoKGUpfXJldHVybiByfSxzZXQ6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4saSxvPXQub3B0aW9ucyxhPWx0Lm1ha2VBcnJheShlKSxyPW8ubGVuZ3RoO3ItLTspaWYoaT1vW3JdLGx0LmluQXJyYXkobHQudmFsSG9va3Mub3B0aW9uLmdldChpKSxhKT49MCl0cnl7aS5zZWxlY3RlZD1uPSEwfWNhdGNoKHMpe2kuc2Nyb2xsSGVpZ2h0fWVsc2UgaS5zZWxlY3RlZD0hMTtyZXR1cm4gbnx8KHQuc2VsZWN0ZWRJbmRleD0tMSksb319fX0pLGx0LmVhY2goWyJyYWRpbyIsImNoZWNrYm94Il0sZnVuY3Rpb24oKXtsdC52YWxIb29rc1t0aGlzXT17c2V0OmZ1bmN0aW9uKHQsZSl7aWYobHQuaXNBcnJheShlKSlyZXR1cm4gdC5jaGVja2VkPWx0LmluQXJyYXkobHQodCkudmFsKCksZSk+PTB9fSxydC5jaGVja09ufHwobHQudmFsSG9va3NbdGhpc10uZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT09dC5nZXRBdHRyaWJ1dGUoInZhbHVlIik/Im9uIjp0LnZhbHVlfSl9KTt2YXIgamUsQ2UsU2U9bHQuZXhwci5hdHRySGFuZGxlLFBlPS9eKD86Y2hlY2tlZHxzZWxlY3RlZCkkL2ksVGU9cnQuZ2V0U2V0QXR0cmlidXRlLEFlPXJ0LmlucHV0O2x0LmZuLmV4dGVuZCh7YXR0cjpmdW5jdGlvbih0LGUpe3JldHVybiBCdCh0aGlzLGx0LmF0dHIsdCxlLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZUF0dHI6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2x0LnJlbW92ZUF0dHIodGhpcyx0KX0pfX0pLGx0LmV4dGVuZCh7YXR0cjpmdW5jdGlvbih0LGUsbil7dmFyIGksbyxhPXQubm9kZVR5cGU7aWYodCYmMyE9PWEmJjghPT1hJiYyIT09YSlyZXR1cm4gdHlwZW9mIHQuZ2V0QXR0cmlidXRlPT09U3Q/bHQucHJvcCh0LGUsbik6KDE9PT1hJiZsdC5pc1hNTERvYyh0KXx8KGU9ZS50b0xvd2VyQ2FzZSgpLGk9bHQuYXR0ckhvb2tzW2VdfHwobHQuZXhwci5tYXRjaC5ib29sLnRlc3QoZSk/Q2U6amUpKSx2b2lkIDA9PT1uP2kmJiJnZXQiaW4gaSYmbnVsbCE9PShvPWkuZ2V0KHQsZSkpP286KG89bHQuZmluZC5hdHRyKHQsZSksbnVsbD09bz92b2lkIDA6byk6bnVsbCE9PW4/aSYmInNldCJpbiBpJiZ2b2lkIDAhPT0obz1pLnNldCh0LG4sZSkpP286KHQuc2V0QXR0cmlidXRlKGUsbisiIiksbik6dm9pZCBsdC5yZW1vdmVBdHRyKHQsZSkpfSxyZW1vdmVBdHRyOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxvPTAsYT1lJiZlLm1hdGNoKGt0KTtpZihhJiYxPT09dC5ub2RlVHlwZSlmb3IoO249YVtvKytdOylpPWx0LnByb3BGaXhbbl18fG4sbHQuZXhwci5tYXRjaC5ib29sLnRlc3Qobik/QWUmJlRlfHwhUGUudGVzdChuKT90W2ldPSExOnRbbHQuY2FtZWxDYXNlKCJkZWZhdWx0LSIrbildPXRbaV09ITE6bHQuYXR0cih0LG4sIiIpLHQucmVtb3ZlQXR0cmlidXRlKFRlP246aSl9LGF0dHJIb29rczp7dHlwZTp7c2V0OmZ1bmN0aW9uKHQsZSl7aWYoIXJ0LnJhZGlvVmFsdWUmJiJyYWRpbyI9PT1lJiZsdC5ub2RlTmFtZSh0LCJpbnB1dCIpKXt2YXIgbj10LnZhbHVlO3JldHVybiB0LnNldEF0dHJpYnV0ZSgidHlwZSIsZSksbiYmKHQudmFsdWU9biksZX19fX19KSxDZT17c2V0OmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZT09PSExP2x0LnJlbW92ZUF0dHIodCxuKTpBZSYmVGV8fCFQZS50ZXN0KG4pP3Quc2V0QXR0cmlidXRlKCFUZSYmbHQucHJvcEZpeFtuXXx8bixuKTp0W2x0LmNhbWVsQ2FzZSgiZGVmYXVsdC0iK24pXT10W25dPSEwLG59fSxsdC5lYWNoKGx0LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goL1x3Ky9nKSxmdW5jdGlvbih0LGUpe3ZhciBuPVNlW2VdfHxsdC5maW5kLmF0dHI7U2VbZV09QWUmJlRlfHwhUGUudGVzdChlKT9mdW5jdGlvbih0LGUsaSl7dmFyIG8sYTtyZXR1cm4gaXx8KGE9U2VbZV0sU2VbZV09byxvPW51bGwhPW4odCxlLGkpP2UudG9Mb3dlckNhc2UoKTpudWxsLFNlW2VdPWEpLG99OmZ1bmN0aW9uKHQsZSxuKXtpZighbilyZXR1cm4gdFtsdC5jYW1lbENhc2UoImRlZmF1bHQtIitlKV0/ZS50b0xvd2VyQ2FzZSgpOm51bGx9fSksQWUmJlRlfHwobHQuYXR0ckhvb2tzLnZhbHVlPXtzZXQ6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBsdC5ub2RlTmFtZSh0LCJpbnB1dCIpP3ZvaWQodC5kZWZhdWx0VmFsdWU9ZSk6amUmJmplLnNldCh0LGUsbil9fSksVGV8fChqZT17c2V0OmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10LmdldEF0dHJpYnV0ZU5vZGUobik7aWYoaXx8dC5zZXRBdHRyaWJ1dGVOb2RlKGk9dC5vd25lckRvY3VtZW50LmNyZWF0ZUF0dHJpYnV0ZShuKSksaS52YWx1ZT1lKz0iIiwidmFsdWUiPT09bnx8ZT09PXQuZ2V0QXR0cmlidXRlKG4pKXJldHVybiBlfX0sU2UuaWQ9U2UubmFtZT1TZS5jb29yZHM9ZnVuY3Rpb24odCxlLG4pe3ZhciBpO2lmKCFuKXJldHVybihpPXQuZ2V0QXR0cmlidXRlTm9kZShlKSkmJiIiIT09aS52YWx1ZT9pLnZhbHVlOm51bGx9LGx0LnZhbEhvb2tzLmJ1dHRvbj17Z2V0OmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5nZXRBdHRyaWJ1dGVOb2RlKGUpO2lmKG4mJm4uc3BlY2lmaWVkKXJldHVybiBuLnZhbHVlfSxzZXQ6amUuc2V0fSxsdC5hdHRySG9va3MuY29udGVudGVkaXRhYmxlPXtzZXQ6ZnVuY3Rpb24odCxlLG4pe2plLnNldCh0LCIiIT09ZSYmZSxuKX19LGx0LmVhY2goWyJ3aWR0aCIsImhlaWdodCJdLGZ1bmN0aW9uKHQsZSl7bHQuYXR0ckhvb2tzW2VdPXtzZXQ6ZnVuY3Rpb24odCxuKXtpZigiIj09PW4pcmV0dXJuIHQuc2V0QXR0cmlidXRlKGUsImF1dG8iKSxufX19KSkscnQuc3R5bGV8fChsdC5hdHRySG9va3Muc3R5bGU9e2dldDpmdW5jdGlvbih0KXtyZXR1cm4gdC5zdHlsZS5jc3NUZXh0fHx2b2lkIDB9LHNldDpmdW5jdGlvbih0LGUpe3JldHVybiB0LnN0eWxlLmNzc1RleHQ9ZSsiIn19KTt2YXIgTmU9L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdCkkL2ksSWU9L14oPzphfGFyZWEpJC9pO2x0LmZuLmV4dGVuZCh7cHJvcDpmdW5jdGlvbih0LGUpe3JldHVybiBCdCh0aGlzLGx0LnByb3AsdCxlLGFyZ3VtZW50cy5sZW5ndGg+MSl9LHJlbW92ZVByb3A6ZnVuY3Rpb24odCl7cmV0dXJuIHQ9bHQucHJvcEZpeFt0XXx8dCx0aGlzLmVhY2goZnVuY3Rpb24oKXt0cnl7dGhpc1t0XT12b2lkIDAsZGVsZXRlIHRoaXNbdF19Y2F0Y2goZSl7fX0pfX0pLGx0LmV4dGVuZCh7cHJvcEZpeDp7ImZvciI6Imh0bWxGb3IiLCJjbGFzcyI6ImNsYXNzTmFtZSJ9LHByb3A6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8sYSxyPXQubm9kZVR5cGU7aWYodCYmMyE9PXImJjghPT1yJiYyIT09cilyZXR1cm4gYT0xIT09cnx8IWx0LmlzWE1MRG9jKHQpLGEmJihlPWx0LnByb3BGaXhbZV18fGUsbz1sdC5wcm9wSG9va3NbZV0pLHZvaWQgMCE9PW4/byYmInNldCJpbiBvJiZ2b2lkIDAhPT0oaT1vLnNldCh0LG4sZSkpP2k6dFtlXT1uOm8mJiJnZXQiaW4gbyYmbnVsbCE9PShpPW8uZ2V0KHQsZSkpP2k6dFtlXX0scHJvcEhvb2tzOnt0YWJJbmRleDp7Z2V0OmZ1bmN0aW9uKHQpe3ZhciBlPWx0LmZpbmQuYXR0cih0LCJ0YWJpbmRleCIpO3JldHVybiBlP3BhcnNlSW50KGUsMTApOk5lLnRlc3QodC5ub2RlTmFtZSl8fEllLnRlc3QodC5ub2RlTmFtZSkmJnQuaHJlZj8wOi0xfX19fSkscnQuaHJlZk5vcm1hbGl6ZWR8fGx0LmVhY2goWyJocmVmIiwic3JjIl0sZnVuY3Rpb24odCxlKXtsdC5wcm9wSG9va3NbZV09e2dldDpmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXRBdHRyaWJ1dGUoZSw0KX19fSkscnQub3B0U2VsZWN0ZWR8fChsdC5wcm9wSG9va3Muc2VsZWN0ZWQ9e2dldDpmdW5jdGlvbih0KXt2YXIgZT10LnBhcmVudE5vZGU7cmV0dXJuIGUmJihlLnNlbGVjdGVkSW5kZXgsZS5wYXJlbnROb2RlJiZlLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleCksbnVsbH19KSxsdC5lYWNoKFsidGFiSW5kZXgiLCJyZWFkT25seSIsIm1heExlbmd0aCIsImNlbGxTcGFjaW5nIiwiY2VsbFBhZGRpbmciLCJyb3dTcGFuIiwiY29sU3BhbiIsInVzZU1hcCIsImZyYW1lQm9yZGVyIiwiY29udGVudEVkaXRhYmxlIl0sZnVuY3Rpb24oKXtsdC5wcm9wRml4W3RoaXMudG9Mb3dlckNhc2UoKV09dGhpc30pLHJ0LmVuY3R5cGV8fChsdC5wcm9wRml4LmVuY3R5cGU9ImVuY29kaW5nIik7dmFyIEJlPS9bXHRcclxuXGZdL2c7bHQuZm4uZXh0ZW5kKHthZGRDbGFzczpmdW5jdGlvbih0KXt2YXIgZSxuLGksbyxhLHIscz0wLGw9dGhpcy5sZW5ndGgsYz0ic3RyaW5nIj09dHlwZW9mIHQmJnQ7aWYobHQuaXNGdW5jdGlvbih0KSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGUpe2x0KHRoaXMpLmFkZENsYXNzKHQuY2FsbCh0aGlzLGUsdGhpcy5jbGFzc05hbWUpKX0pO2lmKGMpZm9yKGU9KHR8fCIiKS5tYXRjaChrdCl8fFtdO3M8bDtzKyspaWYobj10aGlzW3NdLGk9MT09PW4ubm9kZVR5cGUmJihuLmNsYXNzTmFtZT8oIiAiK24uY2xhc3NOYW1lKyIgIikucmVwbGFjZShCZSwiICIpOiIgIikpe2ZvcihhPTA7bz1lW2ErK107KWkuaW5kZXhPZigiICIrbysiICIpPDAmJihpKz1vKyIgIik7cj1sdC50cmltKGkpLG4uY2xhc3NOYW1lIT09ciYmKG4uY2xhc3NOYW1lPXIpfXJldHVybiB0aGlzfSxyZW1vdmVDbGFzczpmdW5jdGlvbih0KXt2YXIgZSxuLGksbyxhLHIscz0wLGw9dGhpcy5sZW5ndGgsYz0wPT09YXJndW1lbnRzLmxlbmd0aHx8InN0cmluZyI9PXR5cGVvZiB0JiZ0O2lmKGx0LmlzRnVuY3Rpb24odCkpcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbihlKXtsdCh0aGlzKS5yZW1vdmVDbGFzcyh0LmNhbGwodGhpcyxlLHRoaXMuY2xhc3NOYW1lKSl9KTtpZihjKWZvcihlPSh0fHwiIikubWF0Y2goa3QpfHxbXTtzPGw7cysrKWlmKG49dGhpc1tzXSxpPTE9PT1uLm5vZGVUeXBlJiYobi5jbGFzc05hbWU/KCIgIituLmNsYXNzTmFtZSsiICIpLnJlcGxhY2UoQmUsIiAiKToiIikpe2ZvcihhPTA7bz1lW2ErK107KWZvcig7aS5pbmRleE9mKCIgIitvKyIgIik+PTA7KWk9aS5yZXBsYWNlKCIgIitvKyIgIiwiICIpO3I9dD9sdC50cmltKGkpOiIiLG4uY2xhc3NOYW1lIT09ciYmKG4uY2xhc3NOYW1lPXIpfXJldHVybiB0aGlzfSx0b2dnbGVDbGFzczpmdW5jdGlvbih0LGUpe3ZhciBuPXR5cGVvZiB0O3JldHVybiJib29sZWFuIj09dHlwZW9mIGUmJiJzdHJpbmciPT09bj9lP3RoaXMuYWRkQ2xhc3ModCk6dGhpcy5yZW1vdmVDbGFzcyh0KTpsdC5pc0Z1bmN0aW9uKHQpP3RoaXMuZWFjaChmdW5jdGlvbihuKXtsdCh0aGlzKS50b2dnbGVDbGFzcyh0LmNhbGwodGhpcyxuLHRoaXMuY2xhc3NOYW1lLGUpLGUpfSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7aWYoInN0cmluZyI9PT1uKWZvcih2YXIgZSxpPTAsbz1sdCh0aGlzKSxhPXQubWF0Y2goa3QpfHxbXTtlPWFbaSsrXTspby5oYXNDbGFzcyhlKT9vLnJlbW92ZUNsYXNzKGUpOm8uYWRkQ2xhc3MoZSk7ZWxzZSBuIT09U3QmJiJib29sZWFuIiE9PW58fCh0aGlzLmNsYXNzTmFtZSYmbHQuX2RhdGEodGhpcywiX19jbGFzc05hbWVfXyIsdGhpcy5jbGFzc05hbWUpLHRoaXMuY2xhc3NOYW1lPXRoaXMuY2xhc3NOYW1lfHx0PT09ITE/IiI6bHQuX2RhdGEodGhpcywiX19jbGFzc05hbWVfXyIpfHwiIil9KX0saGFzQ2xhc3M6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPSIgIit0KyIgIixuPTAsaT10aGlzLmxlbmd0aDtuPGk7bisrKWlmKDE9PT10aGlzW25dLm5vZGVUeXBlJiYoIiAiK3RoaXNbbl0uY2xhc3NOYW1lKyIgIikucmVwbGFjZShCZSwiICIpLmluZGV4T2YoZSk+PTApcmV0dXJuITA7cmV0dXJuITF9fSksbHQuZWFjaCgiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IGxvYWQgcmVzaXplIHNjcm9sbCB1bmxvYWQgY2xpY2sgZGJsY2xpY2sgbW91c2Vkb3duIG1vdXNldXAgbW91c2Vtb3ZlIG1vdXNlb3ZlciBtb3VzZW91dCBtb3VzZWVudGVyIG1vdXNlbGVhdmUgY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBlcnJvciBjb250ZXh0bWVudSIuc3BsaXQoIiAiKSxmdW5jdGlvbih0LGUpe2x0LmZuW2VdPWZ1bmN0aW9uKHQsbil7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg+MD90aGlzLm9uKGUsbnVsbCx0LG4pOnRoaXMudHJpZ2dlcihlKX19KSxsdC5mbi5leHRlbmQoe2hvdmVyOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMubW91c2VlbnRlcih0KS5tb3VzZWxlYXZlKGV8fHQpfSxiaW5kOmZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5vbih0LG51bGwsZSxuKX0sdW5iaW5kOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMub2ZmKHQsbnVsbCxlKX0sZGVsZWdhdGU6ZnVuY3Rpb24odCxlLG4saSl7cmV0dXJuIHRoaXMub24oZSx0LG4saSl9LHVuZGVsZWdhdGU6ZnVuY3Rpb24odCxlLG4pe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLm9mZih0LCIqKiIpOnRoaXMub2ZmKGUsdHx8IioqIixuKX19KTt2YXIgcWU9bHQubm93KCksT2U9L1w/LyxFZT0vKCwpfChcW3x7KXwofXxdKXwiKD86W14iXFxcclxuXXxcXFsiXFxcL2JmbnJ0XXxcXHVbXGRhLWZBLUZdezR9KSoiXHMqOj98dHJ1ZXxmYWxzZXxudWxsfC0/KD8hMFxkKVxkKyg/OlwuXGQrfCkoPzpbZUVdWystXT9cZCt8KS9nO2x0LnBhcnNlSlNPTj1mdW5jdGlvbih0KXtpZihvLkpTT04mJm8uSlNPTi5wYXJzZSlyZXR1cm4gby5KU09OLnBhcnNlKHQrIiIpO3ZhciBlLG49bnVsbCxpPWx0LnRyaW0odCsiIik7cmV0dXJuIGkmJiFsdC50cmltKGkucmVwbGFjZShFZSxmdW5jdGlvbih0LGksbyxhKXtyZXR1cm4gZSYmaSYmKG49MCksMD09PW4/dDooZT1vfHxpLG4rPSFhLSFvLCIiKX0pKT9GdW5jdGlvbigicmV0dXJuICIraSkoKTpsdC5lcnJvcigiSW52YWxpZCBKU09OOiAiK3QpfSxsdC5wYXJzZVhNTD1mdW5jdGlvbih0KXt2YXIgZSxuO2lmKCF0fHwic3RyaW5nIiE9dHlwZW9mIHQpcmV0dXJuIG51bGw7dHJ5e28uRE9NUGFyc2VyPyhuPW5ldyBET01QYXJzZXIsZT1uLnBhcnNlRnJvbVN0cmluZyh0LCJ0ZXh0L3htbCIpKTooZT1uZXcgQWN0aXZlWE9iamVjdCgiTWljcm9zb2Z0LlhNTERPTSIpLGUuYXN5bmM9ImZhbHNlIixlLmxvYWRYTUwodCkpfWNhdGNoKGkpe2U9dm9pZCAwfXJldHVybiBlJiZlLmRvY3VtZW50RWxlbWVudCYmIWUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInBhcnNlcmVycm9yIikubGVuZ3RofHxsdC5lcnJvcigiSW52YWxpZCBYTUw6ICIrdCksZX07dmFyIExlLERlLEZlPS8jLiokLyxNZT0vKFs/Jl0pXz1bXiZdKi8sUmU9L14oLio/KTpbIFx0XSooW15cclxuXSopXHI/JC9nbSwkZT0vXig/OmFib3V0fGFwcHxhcHAtc3RvcmFnZXwuKy1leHRlbnNpb258ZmlsZXxyZXN8d2lkZ2V0KTokLyxIZT0vXig/OkdFVHxIRUFEKSQvLFdlPS9eXC9cLy8sVWU9L14oW1x3ListXSs6KSg/OlwvXC8oPzpbXlwvPyNdKkB8KShbXlwvPyM6XSopKD86OihcZCspfCl8KS8sWWU9e30sR2U9e30sWGU9IiovIi5jb25jYXQoIioiKTt0cnl7RGU9bG9jYXRpb24uaHJlZn1jYXRjaChKZSl7RGU9eHQuY3JlYXRlRWxlbWVudCgiYSIpLERlLmhyZWY9IiIsRGU9RGUuaHJlZn1MZT1VZS5leGVjKERlLnRvTG93ZXJDYXNlKCkpfHxbXSxsdC5leHRlbmQoe2FjdGl2ZTowLGxhc3RNb2RpZmllZDp7fSxldGFnOnt9LGFqYXhTZXR0aW5nczp7dXJsOkRlLHR5cGU6IkdFVCIsaXNMb2NhbDokZS50ZXN0KExlWzFdKSxnbG9iYWw6ITAscHJvY2Vzc0RhdGE6ITAsYXN5bmM6ITAsY29udGVudFR5cGU6ImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOCIsYWNjZXB0czp7IioiOlhlLHRleHQ6InRleHQvcGxhaW4iLGh0bWw6InRleHQvaHRtbCIseG1sOiJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sIixqc29uOiJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQifSxjb250ZW50czp7eG1sOi94bWwvLGh0bWw6L2h0bWwvLGpzb246L2pzb24vfSxyZXNwb25zZUZpZWxkczp7eG1sOiJyZXNwb25zZVhNTCIsdGV4dDoicmVzcG9uc2VUZXh0Iixqc29uOiJyZXNwb25zZUpTT04ifSxjb252ZXJ0ZXJzOnsiKiB0ZXh0IjpTdHJpbmcsInRleHQgaHRtbCI6ITAsInRleHQganNvbiI6bHQucGFyc2VKU09OLCJ0ZXh0IHhtbCI6bHQucGFyc2VYTUx9LGZsYXRPcHRpb25zOnt1cmw6ITAsY29udGV4dDohMH19LGFqYXhTZXR1cDpmdW5jdGlvbih0LGUpe3JldHVybiBlP1UoVSh0LGx0LmFqYXhTZXR0aW5ncyksZSk6VShsdC5hamF4U2V0dGluZ3MsdCl9LGFqYXhQcmVmaWx0ZXI6SChZZSksYWpheFRyYW5zcG9ydDpIKEdlKSxhamF4OmZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbih0LGUsbixpKXt2YXIgbyxwLHcseCxfLHk9ZTsyIT09YiYmKGI9MixzJiZjbGVhclRpbWVvdXQocyksYz12b2lkIDAscj1pfHwiIix2LnJlYWR5U3RhdGU9dD4wPzQ6MCxvPXQ+PTIwMCYmdDwzMDB8fDMwND09PXQsbiYmKHg9WShkLHYsbikpLHg9RyhkLHgsdixvKSxvPyhkLmlmTW9kaWZpZWQmJihfPXYuZ2V0UmVzcG9uc2VIZWFkZXIoIkxhc3QtTW9kaWZpZWQiKSxfJiYobHQubGFzdE1vZGlmaWVkW2FdPV8pLF89di5nZXRSZXNwb25zZUhlYWRlcigiZXRhZyIpLF8mJihsdC5ldGFnW2FdPV8pKSwyMDQ9PT10fHwiSEVBRCI9PT1kLnR5cGU/eT0ibm9jb250ZW50IjozMDQ9PT10P3k9Im5vdG1vZGlmaWVkIjooeT14LnN0YXRlLHA9eC5kYXRhLHc9eC5lcnJvcixvPSF3KSk6KHc9eSwhdCYmeXx8KHk9ImVycm9yIix0PDAmJih0PTApKSksdi5zdGF0dXM9dCx2LnN0YXR1c1RleHQ9KGV8fHkpKyIiLG8/bS5yZXNvbHZlV2l0aChoLFtwLHksdl0pOm0ucmVqZWN0V2l0aChoLFt2LHksd10pLHYuc3RhdHVzQ29kZShnKSxnPXZvaWQgMCxsJiZ1LnRyaWdnZXIobz8iYWpheFN1Y2Nlc3MiOiJhamF4RXJyb3IiLFt2LGQsbz9wOnddKSxmLmZpcmVXaXRoKGgsW3YseV0pLGwmJih1LnRyaWdnZXIoImFqYXhDb21wbGV0ZSIsW3YsZF0pLC0tbHQuYWN0aXZlfHxsdC5ldmVudC50cmlnZ2VyKCJhamF4U3RvcCIpKSl9Im9iamVjdCI9PXR5cGVvZiB0JiYoZT10LHQ9dm9pZCAwKSxlPWV8fHt9O3ZhciBpLG8sYSxyLHMsbCxjLHAsZD1sdC5hamF4U2V0dXAoe30sZSksaD1kLmNvbnRleHR8fGQsdT1kLmNvbnRleHQmJihoLm5vZGVUeXBlfHxoLmpxdWVyeSk/bHQoaCk6bHQuZXZlbnQsbT1sdC5EZWZlcnJlZCgpLGY9bHQuQ2FsbGJhY2tzKCJvbmNlIG1lbW9yeSIpLGc9ZC5zdGF0dXNDb2RlfHx7fSx3PXt9LHg9e30sYj0wLF89ImNhbmNlbGVkIix2PXtyZWFkeVN0YXRlOjAsZ2V0UmVzcG9uc2VIZWFkZXI6ZnVuY3Rpb24odCl7dmFyIGU7aWYoMj09PWIpe2lmKCFwKWZvcihwPXt9O2U9UmUuZXhlYyhyKTspcFtlWzFdLnRvTG93ZXJDYXNlKCldPWVbMl07ZT1wW3QudG9Mb3dlckNhc2UoKV19cmV0dXJuIG51bGw9PWU/bnVsbDplfSxnZXRBbGxSZXNwb25zZUhlYWRlcnM6ZnVuY3Rpb24oKXtyZXR1cm4gMj09PWI/cjpudWxsfSxzZXRSZXF1ZXN0SGVhZGVyOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC50b0xvd2VyQ2FzZSgpO3JldHVybiBifHwodD14W25dPXhbbl18fHQsd1t0XT1lKSx0aGlzfSxvdmVycmlkZU1pbWVUeXBlOmZ1bmN0aW9uKHQpe3JldHVybiBifHwoZC5taW1lVHlwZT10KSx0aGlzfSxzdGF0dXNDb2RlOmZ1bmN0aW9uKHQpe3ZhciBlO2lmKHQpaWYoYjwyKWZvcihlIGluIHQpZ1tlXT1bZ1tlXSx0W2VdXTtlbHNlIHYuYWx3YXlzKHRbdi5zdGF0dXNdKTtyZXR1cm4gdGhpc30sYWJvcnQ6ZnVuY3Rpb24odCl7dmFyIGU9dHx8XztyZXR1cm4gYyYmYy5hYm9ydChlKSxuKDAsZSksdGhpc319O2lmKG0ucHJvbWlzZSh2KS5jb21wbGV0ZT1mLmFkZCx2LnN1Y2Nlc3M9di5kb25lLHYuZXJyb3I9di5mYWlsLGQudXJsPSgodHx8ZC51cmx8fERlKSsiIikucmVwbGFjZShGZSwiIikucmVwbGFjZShXZSxMZVsxXSsiLy8iKSxkLnR5cGU9ZS5tZXRob2R8fGUudHlwZXx8ZC5tZXRob2R8fGQudHlwZSxkLmRhdGFUeXBlcz1sdC50cmltKGQuZGF0YVR5cGV8fCIqIikudG9Mb3dlckNhc2UoKS5tYXRjaChrdCl8fFsiIl0sbnVsbD09ZC5jcm9zc0RvbWFpbiYmKGk9VWUuZXhlYyhkLnVybC50b0xvd2VyQ2FzZSgpKSxkLmNyb3NzRG9tYWluPSEoIWl8fGlbMV09PT1MZVsxXSYmaVsyXT09PUxlWzJdJiYoaVszXXx8KCJodHRwOiI9PT1pWzFdPyI4MCI6IjQ0MyIpKT09PShMZVszXXx8KCJodHRwOiI9PT1MZVsxXT8iODAiOiI0NDMiKSkpKSxkLmRhdGEmJmQucHJvY2Vzc0RhdGEmJiJzdHJpbmciIT10eXBlb2YgZC5kYXRhJiYoZC5kYXRhPWx0LnBhcmFtKGQuZGF0YSxkLnRyYWRpdGlvbmFsKSksVyhZZSxkLGUsdiksMj09PWIpcmV0dXJuIHY7bD1sdC5ldmVudCYmZC5nbG9iYWwsbCYmMD09PWx0LmFjdGl2ZSsrJiZsdC5ldmVudC50cmlnZ2VyKCJhamF4U3RhcnQiKSxkLnR5cGU9ZC50eXBlLnRvVXBwZXJDYXNlKCksZC5oYXNDb250ZW50PSFIZS50ZXN0KGQudHlwZSksYT1kLnVybCxkLmhhc0NvbnRlbnR8fChkLmRhdGEmJihhPWQudXJsKz0oT2UudGVzdChhKT8iJiI6Ij8iKStkLmRhdGEsZGVsZXRlIGQuZGF0YSksZC5jYWNoZT09PSExJiYoZC51cmw9TWUudGVzdChhKT9hLnJlcGxhY2UoTWUsIiQxXz0iK3FlKyspOmErKE9lLnRlc3QoYSk/IiYiOiI/IikrIl89IitxZSsrKSksZC5pZk1vZGlmaWVkJiYobHQubGFzdE1vZGlmaWVkW2FdJiZ2LnNldFJlcXVlc3RIZWFkZXIoIklmLU1vZGlmaWVkLVNpbmNlIixsdC5sYXN0TW9kaWZpZWRbYV0pLGx0LmV0YWdbYV0mJnYuc2V0UmVxdWVzdEhlYWRlcigiSWYtTm9uZS1NYXRjaCIsbHQuZXRhZ1thXSkpLChkLmRhdGEmJmQuaGFzQ29udGVudCYmZC5jb250ZW50VHlwZSE9PSExfHxlLmNvbnRlbnRUeXBlKSYmdi5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LVR5cGUiLGQuY29udGVudFR5cGUpLHYuc2V0UmVxdWVzdEhlYWRlcigiQWNjZXB0IixkLmRhdGFUeXBlc1swXSYmZC5hY2NlcHRzW2QuZGF0YVR5cGVzWzBdXT9kLmFjY2VwdHNbZC5kYXRhVHlwZXNbMF1dKygiKiIhPT1kLmRhdGFUeXBlc1swXT8iLCAiK1hlKyI7IHE9MC4wMSI6IiIpOmQuYWNjZXB0c1siKiJdKTtmb3IobyBpbiBkLmhlYWRlcnMpdi5zZXRSZXF1ZXN0SGVhZGVyKG8sZC5oZWFkZXJzW29dKTtpZihkLmJlZm9yZVNlbmQmJihkLmJlZm9yZVNlbmQuY2FsbChoLHYsZCk9PT0hMXx8Mj09PWIpKXJldHVybiB2LmFib3J0KCk7Xz0iYWJvcnQiO2ZvcihvIGlue3N1Y2Nlc3M6MSxlcnJvcjoxLGNvbXBsZXRlOjF9KXZbb10oZFtvXSk7aWYoYz1XKEdlLGQsZSx2KSl7di5yZWFkeVN0YXRlPTEsbCYmdS50cmlnZ2VyKCJhamF4U2VuZCIsW3YsZF0pLGQuYXN5bmMmJmQudGltZW91dD4wJiYocz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7di5hYm9ydCgidGltZW91dCIpfSxkLnRpbWVvdXQpKTt0cnl7Yj0xLGMuc2VuZCh3LG4pfWNhdGNoKHkpe2lmKCEoYjwyKSl0aHJvdyB5O24oLTEseSl9fWVsc2UgbigtMSwiTm8gVHJhbnNwb3J0Iik7cmV0dXJuIHZ9LGdldEpTT046ZnVuY3Rpb24odCxlLG4pe3JldHVybiBsdC5nZXQodCxlLG4sImpzb24iKX0sZ2V0U2NyaXB0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGx0LmdldCh0LHZvaWQgMCxlLCJzY3JpcHQiKX19KSxsdC5lYWNoKFsiZ2V0IiwicG9zdCJdLGZ1bmN0aW9uKHQsZSl7bHRbZV09ZnVuY3Rpb24odCxuLGksbyl7cmV0dXJuIGx0LmlzRnVuY3Rpb24obikmJihvPW98fGksaT1uLG49dm9pZCAwKSxsdC5hamF4KHt1cmw6dCx0eXBlOmUsZGF0YVR5cGU6byxkYXRhOm4sc3VjY2VzczppfSl9fSksbHQuX2V2YWxVcmw9ZnVuY3Rpb24odCl7cmV0dXJuIGx0LmFqYXgoe3VybDp0LHR5cGU6IkdFVCIsZGF0YVR5cGU6InNjcmlwdCIsYXN5bmM6ITEsZ2xvYmFsOiExLCJ0aHJvd3MiOiEwfSl9LGx0LmZuLmV4dGVuZCh7d3JhcEFsbDpmdW5jdGlvbih0KXtpZihsdC5pc0Z1bmN0aW9uKHQpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oZSl7bHQodGhpcykud3JhcEFsbCh0LmNhbGwodGhpcyxlKSl9KTtpZih0aGlzWzBdKXt2YXIgZT1sdCh0LHRoaXNbMF0ub3duZXJEb2N1bWVudCkuZXEoMCkuY2xvbmUoITApO3RoaXNbMF0ucGFyZW50Tm9kZSYmZS5pbnNlcnRCZWZvcmUodGhpc1swXSksZS5tYXAoZnVuY3Rpb24oKXtmb3IodmFyIHQ9dGhpczt0LmZpcnN0Q2hpbGQmJjE9PT10LmZpcnN0Q2hpbGQubm9kZVR5cGU7KXQ9dC5maXJzdENoaWxkO3JldHVybiB0fSkuYXBwZW5kKHRoaXMpfXJldHVybiB0aGlzfSx3cmFwSW5uZXI6ZnVuY3Rpb24odCl7cmV0dXJuIGx0LmlzRnVuY3Rpb24odCk/dGhpcy5lYWNoKGZ1bmN0aW9uKGUpe2x0KHRoaXMpLndyYXBJbm5lcih0LmNhbGwodGhpcyxlKSl9KTp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1sdCh0aGlzKSxuPWUuY29udGVudHMoKTtuLmxlbmd0aD9uLndyYXBBbGwodCk6ZS5hcHBlbmQodCl9KX0sd3JhcDpmdW5jdGlvbih0KXt2YXIgZT1sdC5pc0Z1bmN0aW9uKHQpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24obil7bHQodGhpcykud3JhcEFsbChlP3QuY2FsbCh0aGlzLG4pOnQpfSl9LHVud3JhcDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnBhcmVudCgpLmVhY2goZnVuY3Rpb24oKXtsdC5ub2RlTmFtZSh0aGlzLCJib2R5Iil8fGx0KHRoaXMpLnJlcGxhY2VXaXRoKHRoaXMuY2hpbGROb2Rlcyl9KS5lbmQoKX19KSxsdC5leHByLmZpbHRlcnMuaGlkZGVuPWZ1bmN0aW9uKHQpe3JldHVybiB0Lm9mZnNldFdpZHRoPD0wJiZ0Lm9mZnNldEhlaWdodDw9MHx8IXJ0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cygpJiYibm9uZSI9PT0odC5zdHlsZSYmdC5zdHlsZS5kaXNwbGF5fHxsdC5jc3ModCwiZGlzcGxheSIpKX0sbHQuZXhwci5maWx0ZXJzLnZpc2libGU9ZnVuY3Rpb24odCl7cmV0dXJuIWx0LmV4cHIuZmlsdGVycy5oaWRkZW4odCl9O3ZhciBaZT0vJTIwL2csVmU9L1xbXF0kLyxLZT0vXHI/XG4vZyxRZT0vXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksdG49L14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO2x0LnBhcmFtPWZ1bmN0aW9uKHQsZSl7dmFyIG4saT1bXSxvPWZ1bmN0aW9uKHQsZSl7ZT1sdC5pc0Z1bmN0aW9uKGUpP2UoKTpudWxsPT1lPyIiOmUsaVtpLmxlbmd0aF09ZW5jb2RlVVJJQ29tcG9uZW50KHQpKyI9IitlbmNvZGVVUklDb21wb25lbnQoZSl9O2lmKHZvaWQgMD09PWUmJihlPWx0LmFqYXhTZXR0aW5ncyYmbHQuYWpheFNldHRpbmdzLnRyYWRpdGlvbmFsKSxsdC5pc0FycmF5KHQpfHx0LmpxdWVyeSYmIWx0LmlzUGxhaW5PYmplY3QodCkpbHQuZWFjaCh0LGZ1bmN0aW9uKCl7byh0aGlzLm5hbWUsdGhpcy52YWx1ZSl9KTtlbHNlIGZvcihuIGluIHQpWChuLHRbbl0sZSxvKTtyZXR1cm4gaS5qb2luKCImIikucmVwbGFjZShaZSwiKyIpfSxsdC5mbi5leHRlbmQoe3NlcmlhbGl6ZTpmdW5jdGlvbigpe3JldHVybiBsdC5wYXJhbSh0aGlzLnNlcmlhbGl6ZUFycmF5KCkpfSxzZXJpYWxpemVBcnJheTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe3ZhciB0PWx0LnByb3AodGhpcywiZWxlbWVudHMiKTtyZXR1cm4gdD9sdC5tYWtlQXJyYXkodCk6dGhpc30pLmZpbHRlcihmdW5jdGlvbigpe3ZhciB0PXRoaXMudHlwZTtyZXR1cm4gdGhpcy5uYW1lJiYhbHQodGhpcykuaXMoIjpkaXNhYmxlZCIpJiZ0bi50ZXN0KHRoaXMubm9kZU5hbWUpJiYhUWUudGVzdCh0KSYmKHRoaXMuY2hlY2tlZHx8IXF0LnRlc3QodCkpfSkubWFwKGZ1bmN0aW9uKHQsZSl7dmFyIG49bHQodGhpcykudmFsKCk7cmV0dXJuIG51bGw9PW4/bnVsbDpsdC5pc0FycmF5KG4pP2x0Lm1hcChuLGZ1bmN0aW9uKHQpe3JldHVybntuYW1lOmUubmFtZSx2YWx1ZTp0LnJlcGxhY2UoS2UsIlxyXG4iKX19KTp7bmFtZTplLm5hbWUsdmFsdWU6bi5yZXBsYWNlKEtlLCJcclxuIil9fSkuZ2V0KCl9fSksbHQuYWpheFNldHRpbmdzLnhocj12b2lkIDAhPT1vLkFjdGl2ZVhPYmplY3Q/ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5pc0xvY2FsJiYvXihnZXR8cG9zdHxoZWFkfHB1dHxkZWxldGV8b3B0aW9ucykkL2kudGVzdCh0aGlzLnR5cGUpJiZKKCl8fFooKX06Sjt2YXIgZW49MCxubj17fSxvbj1sdC5hamF4U2V0dGluZ3MueGhyKCk7by5hdHRhY2hFdmVudCYmby5hdHRhY2hFdmVudCgib251bmxvYWQiLGZ1bmN0aW9uKCl7Zm9yKHZhciB0IGluIG5uKW5uW3RdKHZvaWQgMCwhMCl9KSxydC5jb3JzPSEhb24mJiJ3aXRoQ3JlZGVudGlhbHMiaW4gb24sb249cnQuYWpheD0hIW9uLG9uJiZsdC5hamF4VHJhbnNwb3J0KGZ1bmN0aW9uKHQpe2lmKCF0LmNyb3NzRG9tYWlufHxydC5jb3JzKXt2YXIgZTtyZXR1cm57c2VuZDpmdW5jdGlvbihuLGkpe3ZhciBvLGE9dC54aHIoKSxyPSsrZW47aWYoYS5vcGVuKHQudHlwZSx0LnVybCx0LmFzeW5jLHQudXNlcm5hbWUsdC5wYXNzd29yZCksdC54aHJGaWVsZHMpZm9yKG8gaW4gdC54aHJGaWVsZHMpYVtvXT10LnhockZpZWxkc1tvXTt0Lm1pbWVUeXBlJiZhLm92ZXJyaWRlTWltZVR5cGUmJmEub3ZlcnJpZGVNaW1lVHlwZSh0Lm1pbWVUeXBlKSx0LmNyb3NzRG9tYWlufHxuWyJYLVJlcXVlc3RlZC1XaXRoIl18fChuWyJYLVJlcXVlc3RlZC1XaXRoIl09IlhNTEh0dHBSZXF1ZXN0Iik7Zm9yKG8gaW4gbil2b2lkIDAhPT1uW29dJiZhLnNldFJlcXVlc3RIZWFkZXIobyxuW29dKyIiKTthLnNlbmQodC5oYXNDb250ZW50JiZ0LmRhdGF8fG51bGwpLGU9ZnVuY3Rpb24obixvKXt2YXIgcyxsLGM7aWYoZSYmKG98fDQ9PT1hLnJlYWR5U3RhdGUpKWlmKGRlbGV0ZSBubltyXSxlPXZvaWQgMCxhLm9ucmVhZHlzdGF0ZWNoYW5nZT1sdC5ub29wLG8pNCE9PWEucmVhZHlTdGF0ZSYmYS5hYm9ydCgpO2Vsc2V7Yz17fSxzPWEuc3RhdHVzLCJzdHJpbmciPT10eXBlb2YgYS5yZXNwb25zZVRleHQmJihjLnRleHQ9YS5yZXNwb25zZVRleHQpO3RyeXtsPWEuc3RhdHVzVGV4dH1jYXRjaChwKXtsPSIifXN8fCF0LmlzTG9jYWx8fHQuY3Jvc3NEb21haW4/MTIyMz09PXMmJihzPTIwNCk6cz1jLnRleHQ/MjAwOjQwNH1jJiZpKHMsbCxjLGEuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpfSx0LmFzeW5jPzQ9PT1hLnJlYWR5U3RhdGU/c2V0VGltZW91dChlKTphLm9ucmVhZHlzdGF0ZWNoYW5nZT1ubltyXT1lOmUoKX0sYWJvcnQ6ZnVuY3Rpb24oKXtlJiZlKHZvaWQgMCwhMCl9fX19KSxsdC5hamF4U2V0dXAoe2FjY2VwdHM6e3NjcmlwdDoidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHQifSxjb250ZW50czp7c2NyaXB0Oi8oPzpqYXZhfGVjbWEpc2NyaXB0L30sY29udmVydGVyczp7InRleHQgc2NyaXB0IjpmdW5jdGlvbih0KXtyZXR1cm4gbHQuZ2xvYmFsRXZhbCh0KSx0fX19KSxsdC5hamF4UHJlZmlsdGVyKCJzY3JpcHQiLGZ1bmN0aW9uKHQpe3ZvaWQgMD09PXQuY2FjaGUmJih0LmNhY2hlPSExKSx0LmNyb3NzRG9tYWluJiYodC50eXBlPSJHRVQiLHQuZ2xvYmFsPSExKX0pLGx0LmFqYXhUcmFuc3BvcnQoInNjcmlwdCIsZnVuY3Rpb24odCl7aWYodC5jcm9zc0RvbWFpbil7dmFyIGUsbj14dC5oZWFkfHxsdCgiaGVhZCIpWzBdfHx4dC5kb2N1bWVudEVsZW1lbnQ7cmV0dXJue3NlbmQ6ZnVuY3Rpb24oaSxvKXtlPXh0LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLGUuYXN5bmM9ITAsdC5zY3JpcHRDaGFyc2V0JiYoZS5jaGFyc2V0PXQuc2NyaXB0Q2hhcnNldCksZS5zcmM9dC51cmwsZS5vbmxvYWQ9ZS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24odCxuKXsobnx8IWUucmVhZHlTdGF0ZXx8L2xvYWRlZHxjb21wbGV0ZS8udGVzdChlLnJlYWR5U3RhdGUpKSYmKGUub25sb2FkPWUub25yZWFkeXN0YXRlY2hhbmdlPW51bGwsZS5wYXJlbnROb2RlJiZlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZSksZT1udWxsLG58fG8oMjAwLCJzdWNjZXNzIikpfSxuLmluc2VydEJlZm9yZShlLG4uZmlyc3RDaGlsZCl9LGFib3J0OmZ1bmN0aW9uKCl7ZSYmZS5vbmxvYWQodm9pZCAwLCEwKX19fX0pO3ZhciBhbj1bXSxybj0vKD0pXD8oPz0mfCQpfFw/XD8vO2x0LmFqYXhTZXR1cCh7anNvbnA6ImNhbGxiYWNrIixqc29ucENhbGxiYWNrOmZ1bmN0aW9uKCl7dmFyIHQ9YW4ucG9wKCl8fGx0LmV4cGFuZG8rIl8iK3FlKys7cmV0dXJuIHRoaXNbdF09ITAsdH19KSxsdC5hamF4UHJlZmlsdGVyKCJqc29uIGpzb25wIixmdW5jdGlvbih0LGUsbil7dmFyIGksYSxyLHM9dC5qc29ucCE9PSExJiYocm4udGVzdCh0LnVybCk/InVybCI6InN0cmluZyI9PXR5cGVvZiB0LmRhdGEmJiEodC5jb250ZW50VHlwZXx8IiIpLmluZGV4T2YoImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpJiZybi50ZXN0KHQuZGF0YSkmJiJkYXRhIik7aWYoc3x8Impzb25wIj09PXQuZGF0YVR5cGVzWzBdKXJldHVybiBpPXQuanNvbnBDYWxsYmFjaz1sdC5pc0Z1bmN0aW9uKHQuanNvbnBDYWxsYmFjayk/dC5qc29ucENhbGxiYWNrKCk6dC5qc29ucENhbGxiYWNrLHM/dFtzXT10W3NdLnJlcGxhY2Uocm4sIiQxIitpKTp0Lmpzb25wIT09ITEmJih0LnVybCs9KE9lLnRlc3QodC51cmwpPyImIjoiPyIpK3QuanNvbnArIj0iK2kpLHQuY29udmVydGVyc1sic2NyaXB0IGpzb24iXT1mdW5jdGlvbigpe3JldHVybiByfHxsdC5lcnJvcihpKyIgd2FzIG5vdCBjYWxsZWQiKSxyWzBdfSx0LmRhdGFUeXBlc1swXT0ianNvbiIsYT1vW2ldLG9baV09ZnVuY3Rpb24oKXtyPWFyZ3VtZW50c30sbi5hbHdheXMoZnVuY3Rpb24oKXtvW2ldPWEsdFtpXSYmKHQuanNvbnBDYWxsYmFjaz1lLmpzb25wQ2FsbGJhY2ssYW4ucHVzaChpKSksciYmbHQuaXNGdW5jdGlvbihhKSYmYShyWzBdKSxyPWE9dm9pZCAwfSksInNjcmlwdCJ9KSxsdC5wYXJzZUhUTUw9ZnVuY3Rpb24odCxlLG4pe2lmKCF0fHwic3RyaW5nIiE9dHlwZW9mIHQpcmV0dXJuIG51bGw7ImJvb2xlYW4iPT10eXBlb2YgZSYmKG49ZSxlPSExKSxlPWV8fHh0O3ZhciBpPWZ0LmV4ZWModCksbz0hbiYmW107cmV0dXJuIGk/W2UuY3JlYXRlRWxlbWVudChpWzFdKV06KGk9bHQuYnVpbGRGcmFnbWVudChbdF0sZSxvKSxvJiZvLmxlbmd0aCYmbHQobykucmVtb3ZlKCksbHQubWVyZ2UoW10saS5jaGlsZE5vZGVzKSl9O3ZhciBzbj1sdC5mbi5sb2FkO2x0LmZuLmxvYWQ9ZnVuY3Rpb24odCxlLG4pe2lmKCJzdHJpbmciIT10eXBlb2YgdCYmc24pcmV0dXJuIHNuLmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgaSxvLGEscj10aGlzLHM9dC5pbmRleE9mKCIgIik7cmV0dXJuIHM+PTAmJihpPWx0LnRyaW0odC5zbGljZShzLHQubGVuZ3RoKSksdD10LnNsaWNlKDAscykpLGx0LmlzRnVuY3Rpb24oZSk/KG49ZSxlPXZvaWQgMCk6ZSYmIm9iamVjdCI9PXR5cGVvZiBlJiYoYT0iUE9TVCIpLHIubGVuZ3RoPjAmJmx0LmFqYXgoe3VybDp0LHR5cGU6YSxkYXRhVHlwZToiaHRtbCIsZGF0YTplfSkuZG9uZShmdW5jdGlvbih0KXtvPWFyZ3VtZW50cyxyLmh0bWwoaT9sdCgiPGRpdj4iKS5hcHBlbmQobHQucGFyc2VIVE1MKHQpKS5maW5kKGkpOnQpfSkuY29tcGxldGUobiYmZnVuY3Rpb24odCxlKXtyLmVhY2gobixvfHxbdC5yZXNwb25zZVRleHQsZSx0XSl9KSx0aGlzfSxsdC5lYWNoKFsiYWpheFN0YXJ0IiwiYWpheFN0b3AiLCJhamF4Q29tcGxldGUiLCJhamF4RXJyb3IiLCJhamF4U3VjY2VzcyIsImFqYXhTZW5kIl0sZnVuY3Rpb24odCxlKXsKbHQuZm5bZV09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMub24oZSx0KX19KSxsdC5leHByLmZpbHRlcnMuYW5pbWF0ZWQ9ZnVuY3Rpb24odCl7cmV0dXJuIGx0LmdyZXAobHQudGltZXJzLGZ1bmN0aW9uKGUpe3JldHVybiB0PT09ZS5lbGVtfSkubGVuZ3RofTt2YXIgbG49by5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7cmV0dXJuIGx0Lm9mZnNldD17c2V0T2Zmc2V0OmZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvLGEscixzLGwsYyxwPWx0LmNzcyh0LCJwb3NpdGlvbiIpLGQ9bHQodCksaD17fTsic3RhdGljIj09PXAmJih0LnN0eWxlLnBvc2l0aW9uPSJyZWxhdGl2ZSIpLHM9ZC5vZmZzZXQoKSxhPWx0LmNzcyh0LCJ0b3AiKSxsPWx0LmNzcyh0LCJsZWZ0IiksYz0oImFic29sdXRlIj09PXB8fCJmaXhlZCI9PT1wKSYmbHQuaW5BcnJheSgiYXV0byIsW2EsbF0pPi0xLGM/KGk9ZC5wb3NpdGlvbigpLHI9aS50b3Asbz1pLmxlZnQpOihyPXBhcnNlRmxvYXQoYSl8fDAsbz1wYXJzZUZsb2F0KGwpfHwwKSxsdC5pc0Z1bmN0aW9uKGUpJiYoZT1lLmNhbGwodCxuLHMpKSxudWxsIT1lLnRvcCYmKGgudG9wPWUudG9wLXMudG9wK3IpLG51bGwhPWUubGVmdCYmKGgubGVmdD1lLmxlZnQtcy5sZWZ0K28pLCJ1c2luZyJpbiBlP2UudXNpbmcuY2FsbCh0LGgpOmQuY3NzKGgpfX0sbHQuZm4uZXh0ZW5kKHtvZmZzZXQ6ZnVuY3Rpb24odCl7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdm9pZCAwPT09dD90aGlzOnRoaXMuZWFjaChmdW5jdGlvbihlKXtsdC5vZmZzZXQuc2V0T2Zmc2V0KHRoaXMsdCxlKX0pO3ZhciBlLG4saT17dG9wOjAsbGVmdDowfSxvPXRoaXNbMF0sYT1vJiZvLm93bmVyRG9jdW1lbnQ7aWYoYSlyZXR1cm4gZT1hLmRvY3VtZW50RWxlbWVudCxsdC5jb250YWlucyhlLG8pPyh0eXBlb2Ygby5nZXRCb3VuZGluZ0NsaWVudFJlY3QhPT1TdCYmKGk9by5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSksbj1WKGEpLHt0b3A6aS50b3ArKG4ucGFnZVlPZmZzZXR8fGUuc2Nyb2xsVG9wKS0oZS5jbGllbnRUb3B8fDApLGxlZnQ6aS5sZWZ0KyhuLnBhZ2VYT2Zmc2V0fHxlLnNjcm9sbExlZnQpLShlLmNsaWVudExlZnR8fDApfSk6aX0scG9zaXRpb246ZnVuY3Rpb24oKXtpZih0aGlzWzBdKXt2YXIgdCxlLG49e3RvcDowLGxlZnQ6MH0saT10aGlzWzBdO3JldHVybiJmaXhlZCI9PT1sdC5jc3MoaSwicG9zaXRpb24iKT9lPWkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk6KHQ9dGhpcy5vZmZzZXRQYXJlbnQoKSxlPXRoaXMub2Zmc2V0KCksbHQubm9kZU5hbWUodFswXSwiaHRtbCIpfHwobj10Lm9mZnNldCgpKSxuLnRvcCs9bHQuY3NzKHRbMF0sImJvcmRlclRvcFdpZHRoIiwhMCksbi5sZWZ0Kz1sdC5jc3ModFswXSwiYm9yZGVyTGVmdFdpZHRoIiwhMCkpLHt0b3A6ZS50b3Atbi50b3AtbHQuY3NzKGksIm1hcmdpblRvcCIsITApLGxlZnQ6ZS5sZWZ0LW4ubGVmdC1sdC5jc3MoaSwibWFyZ2luTGVmdCIsITApfX19LG9mZnNldFBhcmVudDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1hcChmdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLm9mZnNldFBhcmVudHx8bG47dCYmIWx0Lm5vZGVOYW1lKHQsImh0bWwiKSYmInN0YXRpYyI9PT1sdC5jc3ModCwicG9zaXRpb24iKTspdD10Lm9mZnNldFBhcmVudDtyZXR1cm4gdHx8bG59KX19KSxsdC5lYWNoKHtzY3JvbGxMZWZ0OiJwYWdlWE9mZnNldCIsc2Nyb2xsVG9wOiJwYWdlWU9mZnNldCJ9LGZ1bmN0aW9uKHQsZSl7dmFyIG49L1kvLnRlc3QoZSk7bHQuZm5bdF09ZnVuY3Rpb24oaSl7cmV0dXJuIEJ0KHRoaXMsZnVuY3Rpb24odCxpLG8pe3ZhciBhPVYodCk7cmV0dXJuIHZvaWQgMD09PW8/YT9lIGluIGE/YVtlXTphLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFtpXTp0W2ldOnZvaWQoYT9hLnNjcm9sbFRvKG4/bHQoYSkuc2Nyb2xsTGVmdCgpOm8sbj9vOmx0KGEpLnNjcm9sbFRvcCgpKTp0W2ldPW8pfSx0LGksYXJndW1lbnRzLmxlbmd0aCxudWxsKX19KSxsdC5lYWNoKFsidG9wIiwibGVmdCJdLGZ1bmN0aW9uKHQsZSl7bHQuY3NzSG9va3NbZV09QShydC5waXhlbFBvc2l0aW9uLGZ1bmN0aW9uKHQsbil7aWYobilyZXR1cm4gbj1hZSh0LGUpLHNlLnRlc3Qobik/bHQodCkucG9zaXRpb24oKVtlXSsicHgiOm59KX0pLGx0LmVhY2goe0hlaWdodDoiaGVpZ2h0IixXaWR0aDoid2lkdGgifSxmdW5jdGlvbih0LGUpe2x0LmVhY2goe3BhZGRpbmc6ImlubmVyIit0LGNvbnRlbnQ6ZSwiIjoib3V0ZXIiK3R9LGZ1bmN0aW9uKG4saSl7bHQuZm5baV09ZnVuY3Rpb24oaSxvKXt2YXIgYT1hcmd1bWVudHMubGVuZ3RoJiYobnx8ImJvb2xlYW4iIT10eXBlb2YgaSkscj1ufHwoaT09PSEwfHxvPT09ITA/Im1hcmdpbiI6ImJvcmRlciIpO3JldHVybiBCdCh0aGlzLGZ1bmN0aW9uKGUsbixpKXt2YXIgbztyZXR1cm4gbHQuaXNXaW5kb3coZSk/ZS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbImNsaWVudCIrdF06OT09PWUubm9kZVR5cGU/KG89ZS5kb2N1bWVudEVsZW1lbnQsTWF0aC5tYXgoZS5ib2R5WyJzY3JvbGwiK3RdLG9bInNjcm9sbCIrdF0sZS5ib2R5WyJvZmZzZXQiK3RdLG9bIm9mZnNldCIrdF0sb1siY2xpZW50Iit0XSkpOnZvaWQgMD09PWk/bHQuY3NzKGUsbixyKTpsdC5zdHlsZShlLG4saSxyKX0sZSxhP2k6dm9pZCAwLGEsbnVsbCl9fSl9KSxsdC5mbi5zaXplPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGVuZ3RofSxsdC5mbi5hbmRTZWxmPWx0LmZuLmFkZEJhY2ssaT1mdW5jdGlvbigpe3JldHVybiBsdH0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpLGx0fSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3QuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciB0PW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goLyg/Ok1TSUUgfFRyaWRlbnRcLy4qOyBydjopKFxkKykvKTtyZXR1cm4gdCYmKGVbIklFIitwYXJzZUludCh0WzFdKV09ITApLG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmRleE9mKCJtc2llIik+LTF8fChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigiZWRnZSIpPi0xfHwodD9wYXJzZUludCh0WzFdKTp2b2lkIDApKX19KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO24oNyksdC5leHRlbmQoe2NyYzY0OiEwLHVuaW9uOiJ1bmlvbl9nd2RhbmciLHNob3dfdGlwOjEsc2hvd193aXNobGlzdDoxLHNob3dfZ3Vlc3M6MSxzaG93X21haW5iYXI6MSxzaG93X3Byb21vOjEsc2V0X2ZvcmNlOiExLGRlZmF1bHRfc3R5bGU6InRvcCIsdXQ6IiZ0cmFucz0xIixmcm9tX2RldmljZToiZGVmYXVsdCIsZXh0QnJhbmQ6Imd3ZCIsZXh0TmFtZToiZ3dkYW5nIixnb191bmlvbjoiaHR0cDovL3UuZ3dkYW5nLmNvbS91bmlvbi9nbyIscF9pZDoiIixpc19vcGVuOjAscG9zaXRpb246MCxzdHlsZToiIixub3RpY2U6MCxmaXJzdDowLGZvbGQ6MCxwX2ZvbGQ6MCxwb3Bfc2hhcmU6MSxlbWFpbDoiIixzdWJzaXRlX2lkOiIiLGZvcmNlOltdLG9uX2J1aWxkaW5nOiEwLGJ1aWx0X2NvdW50ZXI6MCxjb2xsZWN0aW9uQ2hhbmdlZDohMCxnd2RfYnJvd3Nlcl90eXBlOjEsZ3dkX2Nueno6bG9jYXRpb24ucHJvdG9jb2wrIi8vczExLmNuenouY29tL3pfc3RhdC5waHA/aWQ9MTI1Njc5MzI5MCZ3ZWJfaWQ9MTI1Njc5MzI5MCIsaXNfc2l0ZV9wYWdlOm51bGwsaHJlZjp3aW5kb3cubG9jYXRpb24/d2luZG93LmxvY2F0aW9uLmhyZWY6IiIsY29sbGVjdEluZm86e2RwX2lkOiIiLHRpdGxlOiIiLHNpdGVfaWQ6MCx1cmw6IiIsaW1nOiIiLHByaWNlOiIiLGNvbW1lbnQ6IiJ9LG5vd19kcF9pZDoiIix3aGVyZV9idXlfZHBzOiIiLHdpZHRoOmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aD4wP2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDpkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoLHRpbWVyOm51bGwsdGltZXIyOm51bGwsdGltZXIzOm51bGwsdGltZXI0Om51bGwsdGltZXI1Om51bGwsdGltZXI1X211dGV4OiEwLGhlaWdodDowLHNjcm9sbFRvcDowLHBhZ2Vfc2l6ZTo2LHBhZ2Vfc2l6ZV9taW5pOjQscGFnZV9ub3c6e2IyYzoxLHRhb2JhbzoxLHRtYWxsOjEsYWxzb19idXk6MSxwcm9tb3Rpb246MSxiMmNfZnV6enk6MX0scGFnZV90b3RhbDp7YjJjOjEsdGFvYmFvOjEsdG1hbGw6MSxhbHNvX2J1eToxLHByb21vdGlvbjoxLGIyY19mdXp6eToxfSx0b3RhbF9udW06e2IyYzo2LHRhb2Jhbzo2LHRtYWxsOjYsYWxzb19idXk6Nixwcm9tb3Rpb246NixiMmNfZnV6enk6Nn0sbW9kdWxlX25hbWU6WyJiMmMiLCJ0YW9iYW8iLCJ0bWFsbCIsImFsc29fYnV5IiwicHJvbW90aW9uIiwiYjJjX2Z1enp5Il0sZHBJc0Jvb2s6ITEsaGlkZGVuRmF2b3JCdXR0b246ITEsc2F2ZV90YnJlc19kYXRhOm51bGwsc2F2ZV9wcm9tb19sZW46MCxzYXZlX3ByaWNlX3RyZW5kX2RhdGE6bnVsbCxzYXZlX3Byb21vX2RhdGE6bnVsbCx0b3BSZXNpemVUaW1lcjpudWxsLGJvdHRvbVJlc2l6ZVRpbWVyOm51bGx9KTt2YXIgZT1uYXZpZ2F0b3IudXNlckFnZW50O2UuaW5kZXhPZigiRmlyZWZveCIpPi0xJiYodC5nd2RfY256ej0iIil9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPSJodHRwczoiPT09bG9jYXRpb24ucHJvdG9jb2w/Imh0dHBzOiI6Imh0dHA6IjtpZih0LmV4dGVuZCh7c2VydmVyOiJodHRwczovL2Jyb3dzZXIuZ3dkYW5nLmNvbSIsY19zZXJ2ZXI6Imh0dHBzOi8vd3d3Lmd3ZGFuZy5jb20iLHNfc2VydmVyOmUrIi8vY2RuLmd3ZGFuZy5jb20iLHZfc2VydmVyOiJodHRwOi8vdi5nd2RhbmcuY29tIix1X3NlcnZlcjoiaHR0cHM6Ly91Lmd3ZGFuZy5jb20iLHVfc2VydmVyMjoiaHR0cHM6Ly91Lmd3ZGFuZy5jb20iLHVfaG91c2U6ZSsiLy93d3cubHVmYW5namlhLmNvbSIsdGpfc2VydmVyOmUrIi8vdi5nd2RhbmcuY29tIixzcGVjaWFsVW5pb246ZSsiLy91LnNtYXJ0bGlua2NsaWNrLmNvbS91bmlvbi9nby8iLGltZ19zZXJ2ZXI6Imh0dHA6Ly9mNjdkZmU3ZWU3ZTYzLmNkbi5zb2h1Y3MuY29tIixpbWc2NF9zZXJ2ZXI6Imh0dHA6Ly82NDU1NjhiNzFkNmI2LmNkbi5zb2h1Y3MuY29tIixwcm9kdWN0X2tleXdvcmQ6ZSsiLy9rZXl3b3JkLmd3ZGFuZy5jb20iLHRvTW9iaWxlVXJsOmUrIi8vbS5nd2RhbmcuY29tIixpbWdIb3N0OiJodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy8iLG5vSW1nOmUrIi8vY2RuLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvZ3dkLW5vaW1nLnBuZyIsaW1nTG9hZDplKyIvL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci8xMjAuZ2lmIix1X2tleToiZ3dkYW5nIixkdmFsOiIjdGJzYi1ub3RpZmllcnMiLG1iYXI6Imd3ZGFuZy1tYWluIix3aXNoZG9tOiJiamRfcGx0X2JnIix3aXNoZG9tMjoiZ3dkX3dpc2hsaXN0X2RpdiIscF9rOiJwaW5nbHVudHVhbjEyMzQ1Iixkb21haW46ImJyb3dzZXIifSksbG9jYXRpb24uaG9zdC5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8bG9jYXRpb24uaG9zdC5pbmRleE9mKCJ0bWFsbCIpPi0xfHxsb2NhdGlvbi5ob3N0LmluZGV4T2YoIjE2ODgiKT4tMSl7Zm9yKHZhciBuPSJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5eiIsaT0iIyIsbz0wO288ODtvKyspaSs9bltwYXJzZUludCgyNipNYXRoLnJhbmRvbSgpKV07dC5kdmFsPWksdC53aXNoZG9tPWkucmVwbGFjZSgiIyIsIiIpKyJfYmciO3ZhciBhPW5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKSxyPS93ZWJraXQvaS50ZXN0KGEpJiYhKC9jaHJvbWUvaS50ZXN0KGEpJiYvd2Via2l0L2kudGVzdChhKSYmL21vemlsbGEvaS50ZXN0KGEpKTsoYS5pbmRleE9mKCJtYXh0aG9uIik+LTF8fGEuaW5kZXhPZigiMjM0NWV4cGxvcmVyIik+LTF8fHIpJiYodC53aXNoZG9tMj0ibWF4X2d3ZF93aXNobGlzdF9kaXYiLHQubWJhcj0ibWF4X2d3ZGFuZy1tYWluIil9fSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsbil7InVzZSBzdHJpY3QiO3ZhciBpLG89d2luZG93LmxvY2F0aW9uLmhyZWYsYT13aW5kb3cubG9jYXRpb24uaG9zdDt0LmV4cG9ydHMuaXNBdmFpbGFibGVQYWdlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0IGluIGMpaWYoYS5tYXRjaChuZXcgUmVnRXhwKHQsImkiKSkpcmV0dXJuIGNbdF07cmV0dXJuITF9LHQuZXhwb3J0cy5pc1Byb2R1Y3RQYWdlPWZ1bmN0aW9uKHQpe3Q9dHx8bztmb3IodmFyIGUgaW4gcCl7dmFyIG49dC5tYXRjaChuZXcgUmVnRXhwKGUsImkiKSk7aWYobil7dmFyIGk9cFtlXTtpZigiYW1hem9uIj09PWkmJiJ3d3cuYW1hem9uLmNuIiE9PWxvY2F0aW9uLmhvc3QmJm5bMV0pe3ZhciBhPW5bMV07cmV0dXJuIGEuaW5kZXhPZigiLiIpPi0xJiYoYT1hLnNwbGl0KCIuIilbMV0pLGE9ImFtYXpvbi0iK2F9cmV0dXJuIHBbZV19fXJldHVybiExfTt2YXIgcj1mdW5jdGlvbih0KXt2YXIgbjtzd2l0Y2godCl7ZGVmYXVsdDplKCIjY29udGVudCBoMiIpLnRleHQoKS5pbmRleE9mKCLmgqjmn6XnnIvnmoTllYblk4Hmib7kuI3liLDkuoYiKT4tMSYmKG49ITApfXJldHVybiBufTt0LmV4cG9ydHMuaXNJbkJhbkxpc3Q9ZnVuY3Rpb24oKXtpZihuLmRjbUV4dClyZXR1cm4hMTtpZighbi5pZnJhbWUpe3ZhciB0PW8ubWF0Y2goL1smXD9dbm9fdXJsLyk7aWYoIXQmJihzZWxmLmxvY2F0aW9uIT10b3AubG9jYXRpb258fHNlbGYuZnJhbWVFbGVtZW50JiYiSUZSQU1FIj09c2VsZi5mcmFtZUVsZW1lbnQudGFnTmFtZXx8d2luZG93LnRvcCE9d2luZG93LnNlbGYpKXJldHVybiEwfXZhciBlPW87cmV0dXJuIGxvY2F0aW9uLmhyZWYuaW5kZXhPZigiPyIpPjAmJihlPW8uc3Vic3RyKDAsby5pbmRleE9mKCI/IikpKSwhZS5tYXRjaCgvXC5rYWx1bGkuY29tLykmJihudWxsPT1lLm1hdGNoKC8oPzpjYXJ0cmlkZ2V8Q2FtY29yZGVyfGNhcnRlcnN8ZmVpZmVpXC5jb21cL29yZGVyXC98cmVmPW9yZF9jYXJ0X3NocikvKSYmKGxvY2F0aW9uLmhvc3QuaW5kZXhPZihuLmV4dE5hbWUrIi5jb20iKT4tMXx8IWUubWF0Y2goL2RldGFpbFwuem9sXC5jb21cLmNuLykmJm51bGwhPWUubWF0Y2goLyg/OmNhcnR8bWVtYmVyfG9yZGVyfG15aG9tZXxwaWN0dXJlX2luZGV4fGhhbmRsZS1idXktYm94fGNoYXR8dC5zaW5hLmNvbS5jbnxkaXNjdXNzaW9ufHVuaW9uLmRhbmdkYW5nfGV2ZS4zNjBidXl8YmFuay52bWFsbHxjaGVja291dHxjb25maXJtfGdhdGV3YXl8dHJhZGV8aHR0cDpcL1wvaS50YW9iYW8uY29tfHdlLnRhb2Jhby5jb218cGFzc3BvcnQueW91Z291LmNvbSkvZ2kpKSl9O3ZhciBzPWZ1bmN0aW9uKHQpe3JldHVybiJzd2Fyb3Zza2kiPT09dCYmbG9jYXRpb24uaHJlZi5tYXRjaCgvV2ViX0dCXC9lbi8pJiYodD0ic3dhcm92c2tpLWVuIiksdH0sbD1mdW5jdGlvbigpe2lmKGkpcmV0dXJuIGk7dmFyIGU9IiI7cmV0dXJuIHQuZXhwb3J0cy5pc0luQmFuTGlzdCgpP2k9e3R5cGU6MCxzaXRlTmFtZTplfTooZT10LmV4cG9ydHMuaXNQcm9kdWN0UGFnZSgpKT8oInN0cmluZyIhPXR5cGVvZiBlJiYobi5oaWRlYmFyPWUuaGlkZWJhcixlPWUubmFtZSksbi5zaXRlPWUsbi5sb2dzaXRlPWUsZS5pbmRleE9mKCJhbWF6b24iKT4tMSYmKG4uc2l0ZT0iYW1hem9uIiksaT1yKGUpP3t0eXBlOjAsc2l0ZU5hbWU6ZX06e3R5cGU6MixzaXRlTmFtZTplfSk6KGU9dC5leHBvcnRzLmlzQXZhaWxhYmxlUGFnZSgpLGU/KCJzdHJpbmciIT10eXBlb2YgZSYmKG4uaGlkZWJhcj1lLmhpZGViYXIsZT1lLm5hbWUpLGU9cyhlKSxuLnNpdGU9ZSxuLmxvZ3NpdGU9ZSxpPXt0eXBlOjEsc2l0ZU5hbWU6ZX0pOmk9e3R5cGU6MCxzaXRlTmFtZToiIn0pfSxjPXsid3d3XFwua2p0XFwuY29tIjoia2p0Iiwid3d3XFwubGlmZXZjLmNvbSI6ImxpZmV2YyIsInd3d1xcLmNvb2NhYVxcLmNvbSI6ImNvb2NhYSIsIig/Ond3d3xzaG9wKVxcLm51YmlhXFwuKD86Y258Y29tKSI6Im51YmlhIiwid3d3XFwua3pqMzY1XFwuY29tIjoia3pqMzY1Iiwid3d3XFwua2FvbGFcXC5jb20iOiJrYW9sYSIsInd3d1xcLnltYXRvdVxcLmNvbSI6InltYXRvdSIsInd3d1xcLm1ldGFvXFwuY29tIjoibWV0YW8iLCJzaG9wXFwucGhpbGlwc1xcLmNvbVxcLmNuIjoicGhpbGlwcyIsInd3d1xcLnRjbFxcLmNvbSI6InRjbCIsInd3d1xcLmUtY2hhbmdob25nXFwuY29tIjoiY2hhbmdob25nIiwic2hvcFxcLmtvbmthXFwuY29tIjoia29ua2EiLCJzaG9wXFwuaGlzZW5zZVxcLmNvbSI6Imhpc2Vuc2UiLCJ3d3dcXC5pbmVpZ29cXC5jb20iOiJpbmVpZ28iLCJ3d3dcXC5za2dcXC5jb20iOiJza2ciLCJ3d3dcXC5rLXRvdWNoXFwuY24iOiJrLXRvdWNoIiwiXFwuZ2lvbmVlXFwuY29tIjoiZ2lvbmVlIiwiKD86d3d3fHN0b3JlKVxcLm9wcG9cXC5jb20iOiJvcHBvIiwiZ2ZpdmVcXC5iMmNcXC5lcWltaW5neGluZ1xcLmNvbSI6ImdmaXZlIiwic2hvcFxcLnZpdm9cXC5jb21cXC5jbiI6InZpdm8iLCJ3d3dcXC5ncmFpbmdlclxcLmNuIjoiZ3JhaW5nZXIiLCIoPzptYWxsfHBpYW8pXFwuMTYzXFwuY29tIjoid3kxNjMiLCJ0XFwuZGlhbnBpbmdcXC5jb20iOiJkaWFucGluZyIsIlxcLm51b21pXFwuY29tIjoibnVvbWkiLCJcXC5tZWl0dWFuXFwuY29tIjoibWVpdHVhbiIsInd3d1xcLmViYXlcXC5jb20iOiJlYmF5IiwieWFvXFwuOTUwOTVcXC5jb20iOntuYW1lOiJ0YW9iYW8iLGhpZGViYXI6ITB9LCJcXC5mZWluaXVcXC5jb20iOiJmZWluaXUiLCJpdGVtXFwuZmVpbml1XFwuY29tIjoiZmVpbml1IiwiXFwuZmVpZmVpXFwuKD86Y258Y29tKSI6ImZlaWZlaSIsIlxcLmd1YW5nXFwuY29tIjoiZ3VhbmciLCJcXC5tZWlsaXNodW9cXC5jb20iOiJtZWlsaXNodW8iLCJcXC5tb2d1amllXFwuY29tIjoibW9ndWppZSIsInNob3BcXC5jb29scGFkXFwuY24iOiJjb29scGFkIiwiXFwuc2VwaG9yYVxcLmNuIjoic2VwaG9yYWNwcyIsImNuXFxkKlxcLnN0cmF3YmVycnluZXRcXC5jb20iOiJzdHJhd2JlcnJ5bmV0IiwiXFwueWVzbXl3aW5lXFwuY29tIjoieWVzbXl3aW5lIiwiKFxcLik/eWlndW9cXC5jb20iOiJ5aWd1byIsIlxcLndhbmdnb3VcXC5jb20iOiJ3YW5nZ291IiwibWFsbFxcLmppYVxcLmNvbSI6ImppYSIsIndlaWdvdVxcLmJhaWR1XFwuY29tIjoiYmFpZHUtd2VpZ291IiwiXFwuKHhpYW8pP21pXFwuY29tIjoieGlhb21pIiwic2hvcFxcLmxldHZcXC5jb20iOiJsZW1hbGwiLCJcXC5oYW5kdVxcLmNvbSI6ImhhbmR1IiwiKD86d3d3XFwufF4pdGFvc2h1XFwuY29tIjoidGFvc2h1IiwiXFwub3VrdVxcLmNvbSI6Im91a3UiLCJcXC5qMVxcLmNvbSI6ImoxIiwiXFwuem03XFwuY24iOiJ6bTciLCJcXC4xNjg4XFwuY29tIjp7bmFtZToiMTY4OCIsaGlkZWJhcjohMH0sIlxcLnlpd3Vnb3VcXC5jb20iOiJ5aXd1Z291IiwiXFwuemhpd29cXC5jb20iOiJ6aGl3byIsIlxcLm11eWluZ3poaWppYVxcLmNvbSI6Im11eWluZ3poaWppYSIsIlxcLnZtYWxsXFwuY29tIjoidm1hbGwiLCJcXC5kaWRhbWFsbFxcLmNvbSI6ImRpZGFtYWxsIiwiXFwueGlqaS5jb20iOiJ4aWppIiwiXFwueGlqaWUuY29tIjoieGlqaWUiLCJcXC5taXFpXFwuY24iOiJtaXFpIiwiXFwuem9sXFwuY29tKD86JHwvfFxcPykiOiJ6b2wiLCJ6b2xcXC5jb21cXC5jbiI6InpvbCIsIlxcLmNhbWVsXFwuY29tXFwuY24iOiJjYW1lbCIsImNhbWVsLmNvbS5jbiI6ImNhbWVsIiwiKFxcLik/aG9tZXZ2XFwuY29tIjoiaG9tZXZ2IiwiXFwucGFpeGllXFwubmV0IjoicGFpeGllIiwiXFwudGFvM2NcXC5jb20iOiJ0YW8zYyIsIlxcLmFtYXpvblxcLmNuIjoiYW1hem9uIiwiXFwuZGFuZ2RhbmdcXC5jb20iOiJkYW5nZGFuZyIsInM4XFwudGFvYmFvXFwuY29tIjoiczgiLCJ0YW9iYW9cXC4oPzpjb218aGspIjp7bmFtZToidGFvYmFvIixoaWRlYmFyOiEwfSwiXFwuKD86MzYwYnV5fGpkKVxcLmNvbSI6IjM2MGJ1eSIsIlxcLig/OjM2MGJ1eXxqZClcXC5oayI6IjM2MGJ1eSIsIlxcLnlpeWFvamQuY29tIjoiMzYwYnV5IiwiXFwubmV3ZWdnKFxcLmNvbSk/XFwuY24iOiJuZXdlZ2ciLCJcXC5yZWRiYWJ5XFwuY29tXFwuY24iOiJyZWRiYWJ5IiwiXFwuNTFidXlcXC5jb20iOiI1MWJ1eSIsIlxcLnlpeHVuXFwuY29tIjoiNTFidXkiLCJcXC5va2J1eVxcLmNvbSI6Im9rYnV5IiwiXFwuc3VuaW5nXFwuY29tIjoic3VuaW5nIiwiXFwuY29vOFxcLmNvbSI6ImNvbzgiLCJcXC5sdXNlblxcLmNvbSI6Imx1c2VuIiwiXFwuZ29tZVxcLmNvbVxcLmNuIjoiZ29tZSIsIlxcLmdvbWVob21lXFwuY29tIjoiZ29tZSIsIlxcLmdvbWVoaWdvXFwuaGsiOiJnb21laGlnbyIsIlxcLnloZFxcLmNvbSI6InlpaGFvZGlhbiIsIlxcLnlpaGFvZGlhblxcLmNvbSI6InlpaGFvZGlhbiIsIlxcLjFtYWxsXFwuY29tIjoieWloYW9kaWFuIiwiXFwud29tYWlcXC5jb20iOiJ3b21haSIsIlxcLmxleW91XFwuY29tXFwuY24iOiJsZXlvdSIsIlxcLnNob3BpblxcLm5ldCI6InNob3BpbiIsIlxcLm5vNVxcLmNvbVxcLmNuIjoibm81IiwiXFwueGl1XFwuY29tIjoieGl1IiwiXFwubWJhb2Jhb1xcLmNvbSI6Im1iYW9iYW8iLCJcXC4zNjBreHJcXC5jb20iOiIzNjBreHIiLCJcXC5tNmdvXFwuY29tIjoibTZnbyIsIlxcLmdvdVxcLmNvbSI6Im02Z28iLCJcXC45OXJlYWRcXC5jb20iOiI5OXJlYWQiLCJcXC5jaGluYS1wdWJcXC5jb20iOiJjaGluYS1wdWIiLCJcXC5ib29rc2NoaW5hXFwuY29tIjoiYm9va3NjaGluYSIsIlxcLmVmZWlodVxcLmNvbSI6ImVmZWlodSIsIlxcLnlpbnRhaVxcLmNvbSI6InlpbnRhaSIsIlxcLnF1d2FuXFwuY29tIjoicXV3YW4iLCJcXC5rMTIxXFwuY29tIjoiazEyMSIsIlxcLmhhcHBpZ29cXC5jb20iOiJoYXBwaWdvIiwiXFwuZ2FwXFwuY24iOiJnYXAiLCJcXC5iaW5nZ29cXC5jb20vIjoiYmluZ2dvIiwiXFwueW91Z291XFwuY29tIjoieW91Z291IiwiXFwuanhkeWZcXC5jb20iOiJqeGR5ZiIsIlxcLndpbnh1YW5cXC5jb20iOiJ3aW54dWFuIiwiXFwuYm9va3V1XFwuY29tIjoiYm9va3V1IiwiXFwuaml1eGlhblxcLmNvbSI6ImppdXhpYW4iLCJcXC52YW5jbFxcLmNvbSI6InZhbmNsIiwiXFwuMTExXFwuY29tXFwuY24iOiIxMTEiLCJcXC5zZmJlc3RcXC4oPzpoa3xjb20pIjoic2ZiZXN0IiwiXFwudmlwKHNob3ApP1xcLmNvbSI6InZpcHNob3AiLCJcXC5qdW1laVxcLmNvbSI6Imp1bWVpIiwianVtZWlnbG9iYWxcXC5jb20iOiJqdW1laWdsb2JhbCIsIlxcLmxlZmVuZ1xcLmNvbSI6ImxlZmVuZyIsInd3d1xcLmJlbmxhaVxcLmNvbSI6ImJlbmxhaSIsIig/OlxcLnxeKWxldGFvXFwuY29tIjoibGV0YW8iLCJcXC4xMzlzaG9wXFwuY29tIjoiMTM5c2hvcCIsIig/OlxcLnxeKXp6bDM2NVxcLmNvbSI6Inp6bDM2NSIsIlxcLnRpYW50aWFuXFwuY29tIjoidGlhbnRpYW4iLCJcXC50YW94aWVcXC5jb20iOiJ0YW94aWUiLCJcXC5nandcXC5jb20iOiJnanciLCJ3d3dcXC5kMVxcLmNvbVxcLmNuIjoiZDEiLCJcXC5paHVzaFxcLmNvbSI6ImlodXNoIiwid3d3XFwuc1xcLmNuIjoicyIsIlxcLig/Om1vb25iYXNhfGtvcmlybHxydXRpc2hlcnxzdW9yYW5nfGFsYXZlc3xpbmcyaW5nfDAtMTAwc3xxamhlcmJ8bW9udGVhbW9yKVxcLmNvbSI6Im1vb25iYXNhIiwiXFwud2FuZ2ppdVxcLmNvbSI6IndhbmdqaXUiLCJcXC5saWVib1xcLmNvbSI6ImxpZWJvIiwiXFwuZXNwcml0XFwuY24iOiJlc3ByaXQiLCIoPzpcXC58XilsYW1pdVxcLmNvbSI6ImxhbWl1IiwiXFwuYWltZXJcXC5jb21cXC5jbiI6ImFpbWVyIiwid3d3XFwua2FkYW5nXFwuY29tIjoia2FkYW5nIiwid3d3XFwubGl6aVxcLmNvbSI6ImxpemkiLCJ3d3dcXC5tZXRyb21hbGxcXC5jbiI6Im1ldHJvbWFsbCIsInd3d1xcLnBiYVxcLmNuIjoicGJhIiwiXFwuc2hhbmdwaW5cXC5jb20iOiJzaGFuZ3BpbiIsIlxcLndiaWFvXFwuY24iOiJ3YmlhbyIsIlxcLmhhbmR1eWlzaGVcXC5jb20iOiJoYW5kdXlpc2hlIiwiXFwuZWhhaWVyXFwuY29tIjoiZWhhaWVyIiwiXFwuc2Vjb29cXC5jb20iOiJzZWNvbyIsIig/OnZpdmlhbnxsaW5rbWFzYXxtYXNhbWFzbylcXC4oPzpjb218Y24pIjoibWFzYW1hc28iLCJ3d3dcXC5uYXJ1a29cXC5jbiI6Im5hcnVrdSIsInd3d1xcLnNwb3J0aWNhXFwuY24iOiJzcG9ydGljYSIsIig/OlxcLnxeKXhpZnVxdWFuXFwuY29tIjoieGlmdXF1YW4iLCJ3d3dcXC5taWxpZXJcXC5jb20iOiJtaWxpZXIiLCJ3d3dcXC5ub3BcXC5jbiI6Im5vcCIsIlxcLmxlbm92b1xcLmNvbSI6Imxlbm92byIsInNob3BcXC5sZW5vdm9cXC5jb21cXC5jbiI6Imxlbm92byIsInNob3BcXC5sZW5vdm9tb2JpbGVcXC5jb20iOiJsZW5vdm8iLCJcXC4xODlcXC5jbiI6IjE4OSIsIlxcLmhpY2RtYVxcLmNvbSI6ImhpY2RtYSIsIlxcLmUxMDBcXC5jbiI6ImUxMDAiLCJzdG9yZVxcLnNhbXN1bmdcXC5jb20iOiJzYW1zdW5nIiwid3d3LmFwcGxlXFwuY29tIjoiYXBwbGUiLCJzdG9yZS5hcHBsZVxcLmNvbSI6ImFwcGxlIiwiXFwubWVpenVcXC5jb20iOiJtZWl6dSIsIlxcLjk1OHNob3BcXC5jb20iOiI5NThzaG9wIiwiXFwub2tocWJcXC5jb20iOiJva2hxYiIsIlxcLnp0ZWRldmljZVxcLmNvbVxcLmNuIjoienRlZGV2aWNlIiwiXFwua3VhaXNodWJhb1xcLmNvbSI6Imt1YWlzaHViYW8iLCJcXC5sdnlvdW1hbGxcXC5jb20iOiJsdnlvdW1hbGwiLCIoPzp3d3dcXC58Xil4XFwuY29tXFwuY24iOiJ4IiwiXFwubGluZ3NoaVxcLmNvbSI6ImxpbmdzaGkiLCJ3d3dcXC5jdHJpcFxcLmNvbSI6ImN0cmlwIiwiXFwuenVpcGluXFwuY24iOiJ6dWlwaW4iLCJ3d3dcXC54Z2JhYnlcXC5jb20iOiJiYnJlYWR5IiwiXFwueW9ob2J1eVxcLmNvbSI6InlvaG9idXkiLCJcXC5sdm1hbWFcXC5jb20iOiJsdm1hbWEiLCIoPzpcXC58XilxbWFuZ29cXC5jb20iOiJxbWFuZ28iLCJ3d3dcXC4yMjhjYWlcXC5jb20iOiIyMjhjYWkiLCJcXC5pa2p0YW9cXC5jb20iOiJpa2p0YW8iLCJ3d3dcXC5iZXN0a2VlcFxcLmNuIjoiaWtqdGFvIiwiXFwuYmFndHJlZVxcLmNuIjoiYmFndHJlZSIsInlpY2hlbmdwaW5cXC5jb20iOiJ5aWNoZW5ncGluIiwiemd6Y3dcXC5jb20iOntuYW1lOiJ6Z3pjdyIsaGlkZWJhcjohMH0sInd3d1xcLm1pYVxcLmNvbSI6Im1peWFiYW9iZWkiLCJcXC5taXlhYmFvYmVpLmhrIjoibWl5YWJhb2JlaSIsIlxcLnVsZVxcLmNvbSI6InVsZSIsIm1pbnNoZW5nZWNcXC5jb20iOiJtaW5zaGVuZ2VjIiwid2FuZ2Z1amluZ1xcLmNvbSI6IndhbmdmdWppbmciLCJcXC5xdW5hclxcLmNvbSI6InF1bmFyIiwiXFwubWVpbGVsZVxcLmNvbSI6Im1laWxlbGUiLCJ3d3dcXC41NXR1YW5cXC5jb20iOiI1NXR1YW4iLCJqaW5qaWFuZ2lubnNcXC5jb20iOiJqaW5qaWFuZ2lubnMiLCJcXC5lbG9uZ1xcLmNvbSI6ImVsb25nIiwicG9kaW5uc1xcLmNvbSI6InBvZGlubnMiLCJtYW5nb2NpdHlcXC5jb20iOiJtYW5nb2NpdHkiLCJcXC41MDBcXC5jb20iOiI1MDAiLCJ3d3dcXC5seVxcLmNvbSI6Imx5IiwiZS1saW5pbmdcXC5jb20iOiJlLWxpbmluZyIsIlxcLmxpbmluZ1xcLmNvbSI6ImxpbmluZyIsIlxcLmtvb2xlYXJuXFwuY29tIjoia29vbGVhcm4iLCJcXC5zcHJpbmd0b3VyXFwuY29tIjoic3ByaW5ndG91ciIsIlxcLnFpbnFpbmJhYnlcXC5jb20iOiJxaW5xaW5iYWJ5Iiwid2luZW5pY2VcXC5jb20iOiJ3aW5lbmljZSIsIlxcLnNhc2FcXC5jb20iOiJzYXNhIiwiKD86XFwufF4pNWx1eFxcLmNvbSI6IjVsdXgiLCJcXC4yMjhcXC5jb21cXC5jbiI6IjIyOCIsIlxcLnJyc1xcLmNvbSI6InJycyIsIlxcLnJyc2prLmNvbSI6InJycyIsIig/OlxcLnxeKWJ1eVxcLmNjYlxcLmNvbSI6ImNjYiIsIlxcLmJhbmdnb1xcLmNvbSI6ImJhbmdnbyIsInd3d1xcLmFtYXpvblxcLmNvbSI6ImFtYXpvbi1jb20iLCJ3d3dcXC5hbWF6b25cXC5jb1xcLmpwIjoiYW1hem9uLWpwIiwid3d3XFwuYW1hem9uXFwuaW4iOiJhbWF6b24taW4iLCJ3d3dcXC5hbWF6b25cXC5mciI6ImFtYXpvbi1mciIsInd3d1xcLmFtYXpvblxcLmRlIjoiYW1hem9uLWRlIiwid3d3XFwuYW1hem9uXFwuaXQiOiJhbWF6b24taXQiLCJ3d3dcXC5hbWF6b25cXC5jby51ayI6ImFtYXpvbi11ayIsInd3d1xcLmFtYXpvblxcLm5sIjoiYW1hem9uLW5sIiwid3d3XFwuYW1hem9uXFwuZXMiOiJhbWF6b24tZXMiLCJ3d3dcXC5hbWF6b25cXC5jYSI6ImFtYXpvbi1jYSIsInd3d1xcLmFtYXpvblxcLmNvbVxcLm14IjoiYW1hem9uLW14Iiwid3d3XFwuYW1hem9uXFwuY29tXFwuYnIiOiJhbWF6b24tYnIiLCJ3d3dcXC5hbWF6b25cXC5jb21cXC5hdSI6ImFtYXpvbi1hdSIsInN0b3JlXFwubG9naXRlY2hcXC5jb21cXC5jbiI6ImxvZ2l0ZWNoIiwiXFwuYm9vaGVlXFwuY29tIjoiYm9vaGVlIiwibmlrZVxcLmNvbSI6Im5pa2UiLCJcXC5qaWFua2VcXC5jb20iOiJqaWFua2UiLCJcXC4zNjBrYWRcXC5jb20iOiIzNjBrYWQiLCJcXC5sYnhjblxcLmNvbSI6ImxieGNuIiwiXFwubWVpY2lcXC5jb20iOiJtZWljaSIsIlxcLmJlaWJlaVxcLmNvbSI6ImJlaWJlaSIsIlxcLmFsaWV4cHJlc3MuY29tIjp7bmFtZToiYWxpZXhwcmVzcyIsaGlkZWJhcjohMH0sIlxcLjZwbVxcLmNvbSI6IjZwbSIsIlxcLmduY1xcLmNvbSI6ImduYyIsIlxcLm15aGFiaXRcXC5jb20iOiJteWhhYml0IiwiXFwuc2hvcGJvcFxcLmNvbSI6InNob3Bib3AiLCJcXC5kcnVnc3RvcmVcXC5jb20iOiJkcnVnc3RvcmUiLCJ3d3dcXC53YWxncmVlbnNcXC5jb20iOiJ3YWxncmVlbnMiLCJzaWVycmF0cmFkaW5ncG9zdFxcLmNvbSI6InNpZXJyYXRyYWRpbmdwb3N0IiwiXFwubmV3ZWdnXFwuY29tIjoibmV3ZWdnLXVzIiwiXFwuam9tYXNob3BcXC5jb20iOiJqb21hc2hvcCIsIlxcLmFzaGZvcmRcXC5jb20iOiJhc2hmb3JkIiwibG9va2ZhbnRhc3RpY1xcLmNvbSI6Imxvb2tmYW50YXN0aWMtY29tIiwiXFwucmVpXFwuY29tIjoicmVpIiwiXFwuaWhlcmJcXC5jb20iOiJpaGVyYiIsIlxcLmNhcnRlcnNcXC5jb20iOiJjYXJ0ZXJzIiwid3d3XFwuZW5kY2xvdGhpbmdcXC5jb20iOiJlbmRjbG90aGluZyIsIlxcLmNhbXBzYXZlclxcLmNvbSI6ImNhbXBzYXZlciIsImdsb2JhbFxcLnJha3V0ZW5cXC5jb20iOiJyYWt1dGVuIiwiKD86XFwufF4pMTAweXVlXFwuY29tIjoiMTAweXVlIiwid3d3XFwud29vdFxcLmNvbSI6Indvb3QiLCJ3d3dcXC5oYWl0YW9jaGVuZ1xcLmNvbSI6ImhhaXRhb2NoZW5nIiwiam9lc25ld2JhbGFuY2VvdXRsZXRcXC5jb20iOiJqb2VzbmV3YmFsYW5jZW91dGxldCIsIlxcLmZpbmlzaGxpbmVcXC5jb20iOiJmaW5pc2hsaW5lIiwiXFwudml0YWNvc3RcXC5jb20iOiJ2aXRhY29zdCIsIlxcLmdyb3Vwb24uY29tIjoiZ3JvdXBvbiIsIlxcLnN1cHVtYWxsXFwuY29tIjoic3VwdW1hbGwiLCJ3d3cxXFwubWFjeXNcXC5jb20iOiJtYWN5cyIsInd3d1xcLm1vb3NlamF3XFwuY29tIjoibW9vc2VqYXciLCJ3d3dcXC5sZW1hbGxcXC5jb20iOiJsZW1hbGwiLCJ3d3dcXC5qaXVtZWlcXC5jb20iOiJqaXVtZWkiLCIoPzpcXC58XiljaHVuc2h1aXRhbmdcXC5jb20iOiJjaHVuc2h1aXRhbmciLCJ3d3dcXC5kYWxpbmcuY29tIjoiZGFsaW5nIiwid3d3XFwub3llYWhcXC5jb20iOiJveWVhaCIsInd3d1xcLm1vcmVmb29kXFwuY29tIjoibW9yZWZvb2QiLCJ3d3dcXC55dW1teTc3XFwuY29tIjoieXVtbXk3NyIsInd3d1xcLmZydWl0ZGF5XFwuY29tIjoiZnJ1aXRkYXkiLCJ3d3dcXC5naWx0XFwuY29tIjoiZ2lsdCIsInd3d1xcLmZlbmdxdVxcLmNvbSI6ImZlbmdxdSIsInd3d1xcLm1laVxcLmNvbSI6Im1laSIsIlxcLnZzaWdvXFwuY24iOiJ2c2lnbyIsInd3d1xcLmtlZWRlXFwuY29tIjoia2VlZGUiLCJ3d3dcXC5rZWRlXFwuY29tIjoia2VlZGUiLCJ3d3dcXC5zaG93am95XFwuY29tIjoic2hvd2pveSIsIlxcLm9jalxcLmNvbVxcLmNuIjoib2NqIiwiXFwub2NqXFwua3IiOiJvY2oiLCJcXC50bWFsbFxcLig/OmNvbXxoaykiOntuYW1lOiJ0bWFsbCIsaGlkZWJhcjohMH0sInd3d1xcLnN1bmRhblxcLmNvbSI6InN1bmRhbiIsInd3d1xcLmppYWVcXC5jb20iOiJqaWFlIiwiKD86XFwufF4pemF6aGlwdVxcLmNvbSI6InphemhpcHUiLCJ3d3dcXC5lYXNlZXllc1xcLmNvbSI6ImVhc2VleWVzIiwibWljcm9zb2Z0c3RvcmVcXC5jb21cXC5jbiI6Im1pY3Jvc29mdHN0b3JlIiwiKD86XFwufF4peGdkcVxcLmNvbSI6InhnZHEiLCJcXC5iZXN0Y2FrZVxcLmNvbSI6ImJlc3RjYWtlIiwiXFwubG92b1xcLmNuIjoibG92byIsInd3d1xcLmh1YVxcLmNvbSI6Imh1YSIsInd3d1xcLnh0ZXBcXC5jb21cXC5jbiI6Inh0ZXAiLCJ3d3dcXC5zdGFwbGVzXFwuY24iOiJzdGFwbGVzIiwiKD86XFwufF4pZWZvdGlsZVxcLmNvbSI6ImVmb3RpbGUiLCJ3d3dcXC56aGU4MDBcXC5jb20iOiJ6aGU4MDAiLCJ3d3dcXC5haWRhaVxcLmNvbSI6ImFpZGFpIiwid3d3XFwuYmZ0dlxcLmNvbSI6ImJmdHYiLCJcXC50dWppYVxcLmNvbSI6InR1amlhIiwiXFwuY29zbWVcXC5jb20iOiJjb3NtZSIsInd3d1xcLmRpYXBlcnNcXC5jb20iOiJkaWFwZXJzIiwid3d3XFwud2luZGVsblxcLmRlIjoid2luZGVsbiIsInd3d1xcLmJhYnluZW9cXC5kZSI6ImJhYnluZW8iLCJ3d3dcXC5lc2NlbnR1YWxcXC5jb20iOiJlc2NlbnR1YWwiLCJ3d3dcXC50aGV3YXRjaGVyeVxcLmNvbSI6InRoZXdhdGNoZXJ5IiwiXFwuYmljY2FtZXJhLmNvbSI6ImJpY2NhbWVyYSIsIlxcLnR1aHUuKD86Y258Y29tKSI6InR1aHUiLCJlc2hvcFxcLmh0Y1xcLmNvbSI6Imh0YyIsInJvc2Vvbmx5XFwuY29tXFwuY24iOiJyb3Nlb25seSIsIlxcLnJvbmczNjAuY29tIjoicm9uZzM2MCIsIlxcLm5pd29kYWkuY29tIjoibml3b2RhaSIsInd3d1xcLmVzdGVlbGF1ZGVyLmNvbSI6ImVzdGVlbGF1ZGVyIiwiXFwuc2Frc2ZpZnRoYXZlbnVlLmNvbSI6InNha3NmaWZ0aGF2ZW51ZSIsIlxcLnRhcXUuY24iOiJ0YXF1IiwiXFwucXllci5jb20iOiJxeWVyIiwiXFwuYXhtYWxsXFwuY29tXFwuYXUiOiJheG1hbGwiLCJcXC5tdWppLm5ldCI6Im11amkiLCIoPzpcXC58XilnbWFya2V0LmNvLmtyIjoiZ21hcmtldCIsImVuZ2xpc2guMTFzdC5jby5rciI6IjExc3QiLCJcXC5zbWFydGJhcmdhaW5zXFwuY29tIjoic21hcnRiYXJnYWlucyIsIlxcLnNob3BwaW5nXFwueWFob29cXC5jb1xcLmpwIjoieWFob29zaG9wIiwiXFwuYmxvb21pbmdkYWxlc1xcLmNvbSI6ImJsb29taW5nZGFsZXMiLCJcXC5taWtpaG91c2VcXC5qcCI6Im1pa2lob3VzZSIsIlxcLnRveXNydXNcXC5jb1xcLmpwIjoidG95c3J1cyIsIlxcLmNvbWZvcnRmaXJzdFxcLmNvbSI6ImNvbWZvcnRmaXJzdCIsIlxcLmd5bWJvcmVlXFwuY29tIjoiZ3ltYm9yZWUiLCJcXC5hbGJlZWJhYnkuY29tIjoiYWxiZWViYWJ5IiwiXFwuYmFieW1hcmt0LmRlIjoiYmFieW1hcmt0IiwiXFwudWdnYXVzdHJhbGlhLmNvLnVrIjoidWdnYXVzdHJhbGlhIiwid3d3XFwudWdnXFwuY29tIjoidWdnIiwibmVpbWFubWFyY3VzXFwuY29tIjoibmVpbWFubWFyY3VzIiwid3d3XFwuc2hvZWJ1eS5jb20iOiJzaG9lYnV5Iiwid3d3XFwuc3p1bFxcLmNvbSI6InN6dWwiLCJ3d3dcXC50aW1leC5jb20iOiJ0aW1leCIsIlxcLnRpbWV4LmNvbSI6InRpbWV4Iiwid3d3XFwua2F5LmNvbSI6ImtheSIsIlxcLmV3YXRjaGVzLmNvbSI6ImV3YXRjaGVzIiwiXFwuc3dhcm92c2tpLmNvbSI6InN3YXJvdnNraSIsIlxcLndvcmxkb2Z3YXRjaGVzLmNvbSI6Indvcmxkb2Z3YXRjaGVzIiwid3d3LmRhbmllbHdlbGxpbmd0b24uY29tIjoiZGFuaWVsd2VsbGluZ3RvbiIsIlxcLmRhbmllbHdlbGxpbmd0b25cXC5jbiI6ImRhbmllbHdlbGxpbmd0b24tY24iLCJcXC5iZWF1dHliYXkuY29tIjoiYmVhdXR5YmF5IiwiXFwuYmVhdXR5LmNvbSI6ImJlYXV0eSIsInd3dy5iZWF1dHliYXIuY29tIjoiYmVhdXR5YmFyIiwic2tpbnN0b3JlLmNvbSI6InNraW5zdG9yZSIsInd3dy5sYW5laWdlLmNvbSI6ImxhbmVpZ2UiLCIoPzpcXC58Xilib3NlLmNvbSI6ImJvc2UiLCIoPzpcXC58XiliZXN0YnV5LmNvbSI6ImJlc3RidXkiLCJiaHBob3RvdmlkZW8uY29tIjoiYmhwaG90b3ZpZGVvIiwiKD86XFwufF4pc29ueS5qcCI6InNvbnkiLCJcXC5ibFxcLmNvbSI6ImJsIiwiKD86XFwufF4peW91LjE2My5jb20iOiJ5b3UxNjMiLCIoPzpcXC58XilqaW5qaWFuZy5jb20iOiJqaW5qaWFuZyIsIig/OlxcLnxeKWJlc3RpbmZvb2RzLmNvbSI6ImJlc3RpbmZvb2RzIiwiKD86XFwufF4pamlueGlhbmcuY29tIjoiamlueGlhbmciLCIoPzpcXC58XilndW9qaW1hbWkuY29tIjoiZ3VvamltYW1pIiwiKD86XFwufF4pYmFpeWFuZ3dhbmcuY29tIjoiYmFpeWFuZ3dhbmciLCJcXC5hb3lvdS5jb20iOiJhb3lvdSIsIig/OlxcLnxeKXJveXlvdW5nY2hlbWlzdC5jb20uYXUiOiJyb3l5b3VuZ2NoZW1pc3QiLCIoPzpcXC58XiltZWRpaGVhbHNob3AuY29tIjoibWVkaWhlYWxzaG9wIiwiKD86XFwufF4pMTAwMXBoYXJtYWNpZXMuY29tIjoiMTAwMXBoYXJtYWNpZXMiLCIoPzpcXC58Xilsb29rZmFudGFzdGljLmNuIjoibG9va2ZhbnRhc3RpYy1jbiIsIig/OlxcLnxeKTFcXC4xNjNcXC5jb20iOiIxLTE2MyIsInd3d1xcLmthaXhpbmJhby5jb20iOiJrYWl4aW5iYW8iLCIoPzpcXC58Xilib29raW5nLmNvbSI6ImJvb2tpbmciLCIoPzpcXC58XilqdWFucGkuY29tIjoianVhbnBpIiwiKD86XFwufF4pcGhhcm1hY3lvbmxpbmUuY29tIjoicGhhcm1hY3lvbmxpbmUiLCIoPzpcXC58Xilib2R5Z3VhcmRhcG90aGVrZS5jb20iOiJib2R5Z3VhcmRhcG90aGVrZSIsIig/OlxcLnxeKXB1cmNvdHRvbi5jb20iOiJwdXJjb3R0b24iLCIoPzpcXC58Xil3c3R4LmNvbSI6IndzdHgiLCJ3d3dcXC5taWRlYVxcLmNvbSI6Im1pZGVhIiwibWFsbFxcLm1pZGVhXFwuY29tIjoibWlkZWEiLCJcXC5rYWx1bGkuY29tIjoia2FsdWxpIiwiKD86XFwufF4peXVuaG91XFwuY29tIjoieXVuaG91IiwiKD86XFwufF4paGFpdHVuY3VuXFwuY29tIjoiaGFpdHVuY3VuIiwiKD86XFwufF4pdm1laVxcLmNvbSI6InZtZWkiLCIoPzpcXC58XilqZ2JcXC5jbiI6ImpnYiIsIig/OlxcLnxeKTUxZGluXFwuY29tIjoiNTFkaW4iLCIoPzpcXC58Xilib3FpaVxcLmNvbSI6ImJvcWlpIiwiY24udG91cnNmb3JmdW5cXC5jb20iOiJ0b3Vyc2ZvcmZ1biIsIig/OlxcLnxeKWx1bHV0cmlwXFwuY29tIjoibHVsdXRyaXAiLCIoPzpcXC58XilzcGlkZXJcXC5jb21cXC5jbiI6InNwaWRlciIsIig/OlxcLnxeKXdhbG1hcnRcXC5jb20iOiJ3YWxtYXJ0IiwibWFsbC50bzh0by5jb20iOiJ0bzh0byIsInd3dy5vcHBvc2hvcC5jbiI6Im9wcG9zaG9wIiwiYmFvYmVpZ2V6aS5jb20iOiJiYW9iZWlnZXppIiwid3d3LnlhbzEyMy5jb20iOiJ5YW8xMjMiLCJ3d3cubWVuZ2x1LmNvbSI6Im1lbmdsdSIsInd3dy5ndW9waS5jb20iOiJndW9waSIsInd3dy5saWtlZmFjZS5jb20iOiJsaWtlZmFjZSIsInd3dy5tYWxsdnYuY29tIjoiaG9tZXZ2Iiwid3d3Lm1hcmttYWxsLmNvbSI6Im1hcmttYWxsIiwid3d3XFwuYmFpY2hlbmdcXC5jb20iOiJiYWljaGVuZyIsInd3d1xcLnN1YW5qdXppXFwuY29tIjoic3Vhbmp1emkiLCJcXC5qaW54aWFuZ1xcLmNvbSI6ImppbnhpYW5nIiwiXFwuYW9teWdvZFxcLmNvbSI6ImFvbXlnb2QiLCIoPzpcXC58XilsdW9sYWlcXC5jbiI6Imx1b2xhaSIsIlxcLnZpdm9cXC5jb21cXC5jbiI6InZpdm8iLCJcXC5kaXhpbnRvbmdcXC5jb20iOiJkaXhpbnRvbmciLCJcXC5jb29scGFkXFwuY29tIjoiY29vbHBhZCIsIlxcLnNrZ1xcLmNvbSI6InNrZyIsInZpcFxcLmlxaXlpXFwuY29tIjoiaXFpeWkiLCJcXGFvbGFpZ29cXC5jb20iOiJhb2xhaWdvIiwidmlwXFwubWlzc2ZyZXNoXFwuY24iOiJtaXNzZnJlc2giLCJcXC5wdXNoZW5rdWFqaW5nXFwuY29tIjoicHVzaGVua3VhamluZyIsImNuXFwuZmVlbHVuaXF1ZVxcLmNvbSI6ImZlZWx1bmlxdWUtY24iLCJcXC5jaGVtaXN0ZGlyZWN0XFwuY29tXFwuYXUiOiJjaGVtaXN0ZGlyZWN0IiwiXFwubmV0cGhhcm1hY3lcXC5jb1xcLm56IjoibmV0cGhhcm1hY3kiLCJcXC5waGFybWFjeTRsZXNzXFwuY29tXFwuYXUiOiJwaGFybWFjeTRsZXNzIiwiXFwucGhhcm1hY3lkaXJlY3RcXC5jb1xcLm56IjoicGhhcm1hY3lkaXJlY3QiLCJcXC5hbWNhbFxcLmNvbVxcLmF1IjoiYW1jYWwiLCJcXC5sYXJlZG91dGVcXC5jbiI6ImxhcmVkb3V0ZSIsImNuXFwudW5zZXJla2xlaW5lYXBvdGhla2VcXC5kZSI6InVuc2VyZWtsZWluZWFwb3RoZWtlIiwiXFwuZXJ3aW5tdWVsbGVyXFwuY29tXFwuY24iOiJlcndpbm11ZWxsZXIiLCJcXC5raXdpZGlzY292ZXJ5XFwuY29cXC5ueiI6Imtpd2lkaXNjb3ZlcnkiLCJcXC5zcHJpbmdsYW5lXFwuZGUiOiJzcHJpbmdsYW5lIiwiXFwuamFrby1vXFwuY29tIjoiamFrby1vIiwiXFwuZWFzeXRveXNcXC5jbiI6ImVhc3l0b3lzIiwiXFwudGxjcGhhcm1hY3lcXC5jblxcLmNvbSI6InRsY3BoYXJtYWN5IiwiXFwuYmllbm1hbmdlclxcLmNuIjoiYmllbm1hbmdlciIsIlxcLmRld2FyZW5cXC5jb20iOiJkZXdhcmVuIiwiXFwuZGlzY291bnQtYXBvdGhla2VcXC5kZSI6ImRpc2NvdW50LWFwb3RoZWtlIiwiXFwuaG9sbGFuZC1hdC1ob21lXFwuY29tIjoiaG9sbGFuZC1hdC1ob21lIiwiXFwueW91eXVcXC5jb20iOiJ5b3V5dSIsIlxcLmtpd2lzdGFyY2FyZVxcLmNvbSI6Imtpd2lzdGFyY2FyZSIsIlxcLmxlbm92b21vYmlsZVxcLmNvbSI6Imxlbm92b21vYmlsZSIsIlxcLjUxdGFvdWtcXC5jb20iOiI1MXRhb3VrIiwiXFwua2llaGxzXFwuY29tIjoia2llaGxzIiwiXFwuemFwcG9zXFwuY29tIjoiemFwcG9zIiwiXFwuY29hY2hcXC5jb20iOiJjb2FjaCIsIlxcLnlvb3hcXC5jbiI6Inlvb3giLCJcXC4xMXN0cmVldFxcLmNvbVxcLmNuIjoiMTFzdHJlZXQiLCJcXC5iYVxcLmRlIjoiYmEiLCJ3d3dcXC5ocWhhaXJcXC5jb20iOiJocWhhaXIiLCJ3d3dcXC5rYXRlc3BhZGVcXC5jb1xcLnVrIjoia2F0ZXNwYWRlIiwiY25cXC52aXRhZnlcXC5kZSI6InZpdGFmeSIsInd3d1xcLnlvb3hcXC5jbiI6Inlvb3giLCJcXC5tMThcXC5jb20iOiJtMTgiLCJjb21mb3J0Zmlyc3RcXC5jb20iOiJjb21mb3J0Zmlyc3QiLCJjaGluYVxcLmxvdHRlXFwuY29tIjoibG90dGUiLCJcXC5jYXJyZWZvdXJcXC5jbiI6ImNhcnJlZm91ciIsInd3d1xcLnRlYTdcXC5jb20iOiJ0ZWE3IiwiXFwuemhvbmdqaXUuY24iOiJ6aG9uZ2ppdSIsIlxcLnB1emV5ZlxcLmNvbSI6InB1emV5ZiIsInd3d1xcLmtvaGxzXFwuY29tIjoia29obHMiLCJ3d3dcXC5ib2R5YnVpbGRpbmdcXC5jb20iOiJib2R5YnVpbGRpbmciLCJcXC5ub3Jkc3Ryb21cXC5jb20iOiJub3Jkc3Ryb20iLCJ3d3dcXC5jb3N0Y29cXC5jb20iOiJjb3N0Y28iLCJ3d3dcXC50YXJnZXRcXC5jb20iOiJ0YXJnZXQiLCJ3d3dcXC5rbWFydFxcLmNvbSI6ImttYXJ0Iiwid3d3XFwub3ZlcnN0b2NrXFwuY29tIjoib3ZlcnN0b2NrIiwid3d3XFwuc2VhcnNcXC5jb20iOiJzZWFycyIsInd3d1xcLnNob3Byb2JhbVxcLmNvbSI6InNob3Byb2JhbSIsIm1hbGxcXC5nb3VtaW5cXC5jb20iOiJnb3VtaW4iLCJ3d3dcXC5mbHljb1xcLmNvbSI6ImZseWNvIiwid3d3XFwub3BwbGVzdG9yZVxcLmNvbSI6Im9wcGxlc3RvcmUiLCJ3d3dcXC5zeXNob3BcXC5jb20iOiJzeXNob3AiLCJ3d3dcXC55ZmR5ZlxcLmNvbSI6InlmZHlmIiwic3NsXFwuaG90ZWxzXFwuY24iOiJob3RlbHMiLCJhaWh1aXNob3VcXC5jb20iOiJhaWh1aXNob3UiLCJ3d3dcXC50aGViZWFzdHNob3BcXC5jb20iOiJ0aGViZWFzdHNob3AiLCJ3d3dcXC5qb21vb3Nob3BcXC5jb20iOiJqb21vb3Nob3AiLCJ3d3dcXC5zZXB0d29sdmVzXFwuY24iOiJzZXB0d29sdmVzIiwiXFwubGlhbmppYVxcLmNvbSI6e25hbWU6ImxpYW5qaWEiLGhpZGViYXI6ITB9LCJcXC5tYWl0aWFuXFwuY24iOntuYW1lOiJtYWl0aWFuIixoaWRlYmFyOiEwfSwiXFwuNWk1alxcLmNvbSI6e25hbWU6IjVpNWoiLGhpZGViYXI6ITB9LCJcXC5rZVxcLmNvbSI6e25hbWU6ImtlIixoaWRlYmFyOiEwfSwiXFwuNlxcLmNuIjoiaG9tZTYiLCJ3d3dcXC44MDBwaGFybVxcLmNvbSI6IjgwMHBoYXJtIiwid3d3XFwudWppcGluXFwuY29tIjoidWppcGluIiwicGNcXC5tbWJcXC5jbiI6Im1tYiIsInd3d1xcLmloYXZldVxcLmNvbSI6ImloYXZldSIsIm1hbGxcXC5pa2FuZ1xcLmNvbSI6ImlrYW5nIiwid3d3XFwud3luODhcXC5jb20iOiJ3eW44OCIsInd3d1xcLm1jYWtlXFwuY29tIjoibWNha2UiLCJ3d3dcXC54bWVpc2VcXC5jb20iOiJ4bWVpc2UiLCJ3d3dcXC5sZWNha2VcXC5jb20iOiJsZWNha2UiLCJ3d3dcXC5qZDEwMFxcLmNvbSI6ImpkMTAwIiwid3d3XFwuamluZ2h1YVxcLmNvbSI6ImppbmdodWEiLCJ3d3dcXC50YW9od3VcXC5jb20iOiJ0YW9od3UiLCJ3d3dcXC56YmlyZFxcLmNvbSI6InpiaXJkIiwid3d3XFwua20xODE4XFwuY29tIjoia20xODE4Iiwid3d3XFwuem9jYWlcXC5jb20iOiJ6b2NhaSIsInd3d1xcLnRhb3NodVxcLmNvbSI6InRhb3NodSIsInd3d1xcLmFpemhpZ3VcXC5jb21cXC5jbiI6ImFpemhpZ3UiLCJ3d3dcXC50aWV5b3VcXC5jb20iOiJ0aWV5b3UiLCJ3d3dcXC5maWVsZHNjaGluYVxcLmNvbSI6ImZpZWxkc2NoaW5hIiwid3d3XFwud2RtY2FrZVxcLmNuIjoid2RtY2FrZSIsIm1hbGxcXC5scXhzaG9wXFwuY29tIjoibHF4c2hvcCIsInd3d1xcLnVzYXNob3BjblxcLmNvbSI6InVzYXNob3BjbiIsInd3d1xcLndpbmU5XFwuY29tIjoid2luZTkiLCJ3d3dcXC5xaXBhaW1hbGxcXC5jb20iOiJxaXBhaW1hbGwiLCJ3d3dcXC55b2RvZG9cXC5jbiI6InlvZG9kbyIsInd3d1xcLnlvZ2VyXFwuY29tXFwuY24iOiJ5b2dlciIsInd3d1xcLmRhcHVcXC5kYXB1IjoiZGFwdSIsInd3d1xcLndpbm9uYVxcLmNuIjoid2lub25hIiwid3d3XFwud2xcXC5jbiI6IndsIiwid3d3XFwuc2hhbm1haVxcLmNuIjoic2hhbm1haSIsInd3d1xcLnpnc2hvZXNcXC5jb20iOiJ6Z3Nob2VzIiwid3d3XFwubWFpY2hhd2FuZ1xcLmNvbSI6Im1haWNoYXdhbmciLCJ3d3dcXC51ZW1hbGxcXC5jb20iOiJ1ZW1hbGwiLCJcXC41MXlvdVxcLmNvbSI6IjUxeW91IiwiXFwuYmVpZmFib29rXFwuY29tIjoiYmVpZmFib29rIiwid3d3XFwuanBlZW5cXC5jb20iOiJqcGVlbiIsInd3d1xcLmh1YXR1b3lmXFwuY29tIjoiaHVhdHVveWYiLCJ3d3dcXC5mZW5nYnV5XFwuY29tIjoiZmVuZ2J1eSIsIlxcLnVpeWlcXC5jb20iOiJ1aXlpIiwid3d3XFwuaGVjaGFcXC5jbiI6ImhlY2hhIiwid3d3XFwudDEwXFwuY29tIjoidDEwIiwid3d3XFwucXdcXC5jYyI6InF3IiwiXFwubWl1dG91clxcLmNvbSI6Im1pdXRvdXIiLCJ3d3dcXC5laGFveWFvXFwuY29tIjoiZWhhb3lhbyIsInd3d1xcLmlkeFxcLmNvbVxcLmNuIjoiaWR4Iiwid3d3XFwudXlhMTAwXFwuY29tIjoidXlhMTAwIiwid3d3XFwuc3NuZXd5b3JrXFwuY29tIjoic3NuZXd5b3JrIiwid3d3XFwuY2xpbmlxdWVcXC5jb20iOiJjbGluaXF1ZSIsInd3d1xcLmh4ZXBhd25cXC5jb20iOiJoeGVwYXduIiwid3d3XFwuYnJvb2tzYnJvdGhlcnNcXC5jb20iOiJicm9va3Nicm90aGVycyIsInd3d1xcLm9tdGFvXFwuY29tIjoib210YW8iLCJ3d3dcXC5lcDM2NVxcLmNvbSI6ImVwMzY1Iiwid3d3XFwuY29sdW1iaWFzcG9ydHNcXC5jbiI6ImNvbHVtYmlhc3BvcnRzIiwiXFwuYnN0YXBwXFwuY24iOiJic3RhcHAiLCJ3d3dcXC5uZXdiYWxhbmNlXFwuY29tIjoibmV3YmFsYW5jZSIsIlxcLndqaWtlXFwuY29tIjoid2ppa2UiLCJ3d3dcXC5iYWxseVxcLmNvXFwudWsiOiJiYWxseSIsIlxcLjFoYWlcXC5jbiI6IjFoYWkiLCJ3d3dcXC5qaWFsaWNoXFwuY24iOiJqaWFsaWNoIiwiXFwudGFrZXlhXFwuY29cXC5qcCI6InRha2V5YSIsInd3d1xcLmZvcmV2ZXIyMVxcLmNvbSI6ImZvcmV2ZXIyMSIsInd3d1xcLm1vZGVybmF2ZW51ZVxcLmNvbSI6Im1vZGVybmF2ZW51ZSIsInd3d1xcLm11bmlhb1xcLmNvbSI6Im11bmlhbyIsIlxcLmNlbnRhbmV0XFwuY29tIjoiY2VudGFuZXQiLCJ3d3dcXC56dWlodWl5b3VcXC5jb20iOiJ6dWlodWl5b3UiLCJ3d3dcXC5ib2JiaWJyb3duY29zbWV0aWNcXC5jb20iOiJib2JiaWJyb3duY29zbWV0aWNzIiwid3d3XFwuc3VwZXItaW5cXC5jb20iOiJzdXBlci1pbiIsInd3d1xcLmhhbmdvd2FcXC5jb20iOiJoYW5nb3dhIiwid3d3XFwubGV2aVxcLmNvbSI6ImxldmkiLCJ3d3dcXC5maWxhXFwuY24iOiJmaWxhIiwid3d3XFwuY29udmVyc2VcXC5jb21cXC5jbiI6ImNvbnZlcnNlIiwidXNcXC5uZXh0ZGlyZWN0XFwuY29tIjoibmV4dGRpcmVjdCIsInd3d1xcLml0cmlwXFwuY29tIjoiaXRyaXAiLCJ3d3dcXC5sYXNob3VcXC5jb20iOiJsYXNob3UiLCJ3d3dcXC5saXVmZW5nXFwuY29tIjoibGl1ZmVuZyIsInd3d1xcLnRydFxcLmhrIjoidHJ0Iiwid3d3MVxcLndvZGluZ2h1YVxcLmNvbSI6IndvZGluZ2h1YSIsIlxcLnd1bGl3dWxpXFwuY24iOiJ3dWxpd3VsaSIsInd3d1xcLmZvcmVzdGZvb2RcXC5jb20iOiJmb3Jlc3Rmb29kIiwiXFwuYm9uam91cmhrXFwuY29tIjoiYm9uam91cmhrIiwid3d3XFwudml0YWdvdVxcLmhrIjoidml0YWdvdSIsIlxcLmtpbmhvbVxcLmNvbSI6ImtpbmhvbSIsInd3d1xcLjM2MGxqXFwuY29tIjoiMzYwbGoiLCJ2XFwuY2hhbmdiYVxcLmNvbSI6ImNoYW5nYmEiLCJ3d3dcXC5vYWtsZXlcXC5jb20iOiJvYWtsZXkiLCJ3d3dcXC5qcHlvb1xcLmNvbSI6ImpweW9vIiwid3d3XFwuY2xhcmtzdXNhXFwuY29tIjoiY2xhcmtzdXNhIiwid3d3XFwuc3Rhcndvb2Rob3RlbHNcXC5jb20iOiJzdGFyd29vZGhvdGVscyIsInd3d1xcLm1hcnJpb3R0XFwuY29tXFwuY24iOiJtYXJyaW90dC1jbiIsInd3d1xcLnllc3N0eWxlXFwuY29tIjoieWVzc3R5bGUiLCJeZXZpc3VcXC5jb20iOiJldmlzdSIsIl5saWZlc2Vhc3lcXC5jb21cXC5jbiI6ImxpZmVzZWFzeSIsInd3d1xcLmNjeHBldFxcLmNvbSI6ImNjeHBldCIsInd3d1xcLjAwNjFcXC5jb21cXC5hdSI6IngwMDYxIiwid3d3XFwua2tndWFuXFwuY29tIjoia2tndWFuIiwid3d3XFwuc3R5bGUtb2Nsb2NrXFwuY29tIjoic3R5bGUtb2Nsb2NrIiwid3d3XFwucGVpa3VhXFwuY29tIjoicGVpa3VhIiwid3d3XFwuYWlyZnJhbmNlXFwuKD86dXN8Y29tKSI6ImFpcmZyYW5jZSIsInd3d1xcLmFjY29yaG90ZWxzXFwuY29tIjoiYWNjb3Job3RlbHMiLCJ3d3dcXC5zcGFjZW5rXFwuY29tIjoic3BhY2VuayIsInd3d1xcLmhhaWNodWZhbmdcXC5jb20iOiJoYWljaHVmYW5nIiwidXNcXC53Y29uY2VwdFxcLmNvbSI6Indjb25jZXB0Iiwid3d3XFwuZ2FudFxcLmNvXFwudWsiOiJnYW50Iiwid3d3XFwuY2F0Zm9vdHdlYXJcXC5jb20iOiJjYXRmb290d2VhciIsInd3d1xcLnNhdWNvbnlcXC5jb20iOiJzYXVjb255Iiwid3d3XFwuemFvenVvXFwuY29tIjoiemFvenVvIiwiXFwubGl0dGxlc3dhblxcLmNvbSI6ImxpdHRsZXN3YW4iLCJ3d3dcXC5jYW5cXC50diI6ImNhbiIsInd3d1xcLnNzcmpcXC5jb20iOiJzc3JqIiwic2hvcFxcLmd1ZXNzXFwubmV0XFwuYXUiOiJndWVzcyIsInd3d1xcLmV0aWhhZFxcLmNvbSI6ImV0aWhhZCIsInN0b3JlXFwuZmlpbFxcLmNvbSI6ImZpaWwiLCJ3d3dcXC5taWFuc2h1aTM2NVxcLmNvbSI6Im1pYW5zaHVpMzY1Iiwid3d3XFwudGVnb3VzaGVcXC5jb20iOiJ0ZWdvdXNoZSIsInd3d1xcLndpZ2dsZVxcLmNuIjoid2lnZ2xlIiwid3d3XFwubWRyZWFtc1xcLmNvbSI6Im1kcmVhbXMiLCJcXC5lY292YWNzXFwuY24iOiJlY292YWNzIiwid3d3XFwuY2Fsdmlua2xlaW5cXC5jbiI6ImNhbHZpbmtsZWluIiwiY25cXC5tZW1lYm94XFwuY29tIjoibWVtZWJveCIsInd3dzNcXC5oaWx0b25cXC5jb20iOiJoaWx0b24iLCJ3d3dcXC5yZXZvbHZlXFwuY29tIjoicmV2b2x2ZSIsInd3d1xcLnNoaXNlaWRvXFwuY29tIjoic2hpc2VpZG8iLCJ3d3dcXC5jbGFyaW5zdXNhXFwuY29tIjoiY2xhcmluc3VzYSIsInN0b3JlXFwuc3RhcmJ1Y2tzXFwuY29tIjoic3RhcmJ1Y2tzIiwid3d3XFwucmF5LWJhblxcLmNvbSI6InJheS1iYW4iLCJ1c1xcLnB1bWFcXC5jb20iOiJwdW1hIiwid3d3XFwubmF1dGljYVxcLmNvbSI6Im5hdXRpY2EiLCJ3d3dcXC5jcmVtZWRlbGFtZXJcXC5jb20iOiJjcmVtZWRlbGFtZXIiLCJ3d3dcXC5raXBsaW5nLXVzYVxcLmNvbSI6ImtpcGxpbmctdXNhIiwid3d3XFwuanVybGlxdWVcXC5jb20iOiJqdXJsaXF1ZSIsInd3d1xcLmh1c2hwdXBwaWVzXFwuY29tIjoiaHVzaHB1cHBpZXMiLCJ3d3dcXC5vcmlnaW5zXFwuY29tIjoib3JpZ2lucyIsInd3d1xcLmZvbGxpZm9sbGllXFwudXNcXC5jb20iOiJmb2xsaWZvbGxpZSIsInVzYVxcLmxvY2NpdGFuZVxcLmNvbSI6ImxvY2NpdGFuZSIsIlxcLmhwc3RvcmVcXC5jbiI6Imhwc3RvcmUiLCJcXC4wMWhvbWVcXC5jb20iOiIwMWhvbWUiLCJ3d3dcXC5oZWFsdGhwb3N0XFwuY29cXC5ueiI6ImhlYWx0aHBvc3QiLCJcXC5pbWVuZ3hpYW5nXFwuY24iOiJpbWVuZ3hpYW5nIiwid3d3XFwuaHlzalxcLmNvbSI6Imh5c2oiLCJcXC5zYW9odW83XFwuY29tIjoic2FvaHVvNyIsIlxcLnJlcGFpXFwuY29tIjoicmVwYWkiLCJ3d3dcXC5tYXlpXFwuY29tIjoibWF5aSIsIlxcLnlpbnBpYW9cXC5jb20iOiJ5aW5waWFvIiwiXFwuaWhvbWUtaW5zLmNvbSI6Imlob21lLWlucyIsIlxcLmluY2FrZVxcLm5ldCI6ImluY2FrZSIsIlxcLmt1d29cXC5jbiI6Imt1d28iLCJ3d3dcXC55d2FydFxcLmNvbSI6Inl3YXJ0Iiwid3d3XFwuY2N0XFwuY24iOiJjY3QiLCJ3d3dcXC5hbnNnb1xcLmNvbSI6ImFuc2dvIiwid3d3XFwucGlsaWJhYmFcXC5jb20iOiJwaWxpYmFiYSIsInd3d1xcLnhpYW9uaXU4OFxcLmNvbSI6InhpYW9uaXU4OCIsInd3d1xcLmFoYXZhXFwuY29tIjoiYWhhdmEiLCJcXC41LWZpZnRoXFwuY29tIjoiNS1maWZ0aCIsIlxcLnRoZXdhdGNoaHV0XFwuY29cXC51ayI6InRoZXdhdGNoaHV0IiwiXFwuYmFieWhhdmVuXFwuY29tIjoiYmFieWhhdmVuIiwiY25cXC5jb3NtZS1kZVxcLmNvbSI6ImNvc21lLWRlIiwiY25cXC5nZXR0aGVsYWJlbFxcLmNvbSI6ImdldHRoZWxhYmVsIiwiY25cXC5tYXRzdXlhXFwuY29tIjoibWF0c3V5YSIsInd3d1xcLnRpbWJlcmxhbmRcXC5jb20iOiJ0aW1iZXJsYW5kIiwiXFwudG9wbWFuXFwuY29tIjoidG9wbWFuIiwid3d3XFwuaG9tZWF3YXlcXC5jb20iOiJob21lYXdheSIsInd3d1xcLmJlYXV0eWV4cGVydFxcLmNvbSI6ImJlYXV0eWV4cGVydCIsIlxcLmhhaW1pXFwuY29tIjoiaGFpbWkiLCJ3d3dcXC5tYW5raW5kXFwuY29cXC51ayI6Im1hbmtpbmQiLCJ3d3dcXC50aGVodXRcXC5jb20iOiJ0aGVodXQiLCJ3d3dcXC50b3BzaG9wXFwuY29tIjoidG9wc2hvcCIsIm1hbWFsYWRlblxcLmNvbSI6Im1hbWFsYWRlbiIsInd3d1xcLnRyYXZlbGVyLXN0b3JlXFwuY29tIjoidHJhdmVsZXItc3RvcmUiLCJ3d3dcXC50cmF2ZWx6b29cXC5jb20iOiJ0cmF2ZWx6b28iLCJ3d3dcXC51bWlzaG9lc1xcLmNvbSI6InVtaXNob2VzIiwic3RvcmVcXC5mZXJyYXJpXFwuY29tIjoiZmVycmFyaSIsIndpbGxlcmV4cHJlc3NcXC5jb20iOiJ3aWxsZXJleHByZXNzIiwid3d3XFwudW5pbmVlZFxcLmNvbSI6InVuaW5lZWQiLCJ3d3dcXC5hY25lc3R1ZGlvc1xcLmNvbSI6ImFjbmVzdHVkaW9zIiwid3d3XFwuYWVyb3Bvc3RhbGVcXC5jb20iOiJhZXJvcG9zdGFsZSIsInd3d1xcLmFnb2RhXFwuY29tIjoiYWdvZGEiLCJ3d3dcXC5hbGJhbW9kYVxcLmRlIjoiYWxiYW1vZGEiLCJ3d3dcXC5hbGxiZWF1dHlcXC5jb20iOiJhbGxiZWF1dHkiLCJ3d3dcXC5hbGxzYWludHNcXC5jb20iOiJhbGxzYWludHMiLCJ3d3dcXC5hbGxzb2xlXFwuY29tIjoiYWxsc29sZSIsInd3d1xcLnVyYmFub3V0Zml0dGVyc1xcLmNvbSI6InVyYmFub3V0Zml0dGVycyIsInd3d1xcLnZpdGFiaW90aWNzXFwuY29tIjoidml0YWJpb3RpY3MiLCJ3d3dcXC5iZWxsZW1haXNvblxcLmpwIjoiYmVsbGVtYWlzb24iLCJ3d3dcXC5iZW5lZml0Y29zbWV0aWNzXFwuY29tIjoiYmVuZWZpdGNvc21ldGljcyIsInd3d1xcLmJoY29zbWV0aWNzXFwuY29tIjoiYmhjb3NtZXRpY3MiLCJ3d3dcXC5iam15bGlrZXNcXC5jb20iOiJiam15bGlrZXMiLCJ3d3dcXC52aXRhbWluYmF5XFwuY29tIjoidml0YW1pbmJheSIsInd3d1xcLndhaXRyb3NlXFwuY29tIjoid2FpdHJvc2UiLCJ3d3dcXC53b2xmb3Jkc2hvcFxcLmNvXFwudWsiOiJ3b2xmb3Jkc2hvcCIsInd3d1xcLmJvb2hvb1xcLmNvbSI6ImJvb2hvbyIsInd3d1xcLmJvb3RzXFwuY29tIjoiYm9vdHMiLCJ3d3dcXC5icml0aXNoY29ybmVyc2hvcFxcLmNvXFwudWsiOiJicml0aXNoY29ybmVyc2hvcCIsInd3d1xcLnlpcmVuZGFpXFwuY29tIjoieWlyZW5kYWkiLCJ3d3dcXC55czdcXC5jb20iOiJ5czciLCJ3d3dcXC5jb2dnbGVzXFwuY29tIjoiY29nZ2xlcyIsInd3d1xcLmNvcnNldGRlYWxcXC5jb20iOiJjb3JzZXRkZWFsIiwiXmNvdHRvbm9uXFwuY29tIjoiY290dG9ub24iLCJ3d3dcXC5jcm9jc1xcLmNvXFwudWsiOiJjcm9jcyIsInd3d1xcLmNydWlzZWZhc2hpb25cXC5jb20iOiJjcnVpc2VmYXNoaW9uIiwid3d3XFwuZGVsbFxcLmNvbSI6ImRlbGwiLCJ3d3dcXC5kZXJtc3RvcmVcXC5jb20iOiJkZXJtc3RvcmUiLCJ3d3dcXC5kaXNuZXlzdG9yZVxcLmNvbSI6ImRpc25leXN0b3JlIiwid3d3XFwuZG9yb3RoeXBlcmtpbnNcXC5jb20iOiJkb3JvdGh5cGVya2lucyIsInd3d1xcLmRvdWRvdWthbmdcXC5jb20iOiJkb3Vkb3VrYW5nIiwid3d3XFwuZHVqaWFrZVxcLmNvbSI6ImR1amlha2UiLCJ3d3dcXC5kdW5lbG9uZG9uXFwuY29tIjoiZHVuZWxvbmRvbiIsInd3d1xcLmVhc3RiYXlcXC5jb20iOiJlYXN0YmF5Iiwid3d3XFwuZWFzdGRhbmVcXC5jb20iOiJlYXN0ZGFuZSIsInd3d1xcLnphZnVsXFwuY29tIjoiemFmdWwiLCJ3d3dcXC56YXZ2aVxcLmNvbSI6InphdnZpIiwiY25cXC5mZWlua2VpdFxcLmRlIjoiZmVpbmtlaXQiLCJ3d3dcXC5laWJtYXJrdFxcLmNvbSI6ImVpYm1hcmt0Iiwid3d3XFwuYmVsbHVuYVxcLmNuIjoiYmVsbHVuYSIsInd3d1xcLmVtaXJhdGVzXFwuY29tIjoiZW1pcmF0ZXMiLCJ3d3dcXC5lbXNcXC5jb20iOiJlbXMiLCJ3d3dcXC5ldGVybmFcXC5kZSI6ImV0ZXJuYSIsInd3d1xcLmV1cmFpbFxcLmNvbSI6ImV1cmFpbCIsInd3d1xcLmV4YW50ZWRpZXRcXC5jb20iOiJleGFudGVkaWV0Iiwid3d3XFwuZXhwZWRpYVxcLmNvXFwudWsiOiJleHBlZGlhIiwid3d3XFwuZmFsa2VcXC5jb20iOiJmYWxrZSIsInd3d1xcLmZhbW91c2Zvb3R3ZWFyXFwuY29tIjoiZmFtb3VzZm9vdHdlYXIiLCJ3d3dcXC5mb3Jlb1xcLmNvbSI6ImZvcmVvIiwid3d3XFwud2FuZ3hpbmxpY2FpXFwuY29tIjoid2FuZ3hpbmxpY2FpIiwid3d3XFwuZm9yZXZlcnVuaXF1ZVxcLmNvXFwudWsiOiJmb3JldmVydW5pcXVlIiwid3d3XFwuYXVcXC5mb3J6aWVyaVxcLmNvbSI6ImZvcnppZXJpIiwid3d3XFwuZnJlZWNvdW50cnlcXC5jb20iOiJmcmVlY291bnRyeSIsInd3d1xcLmZyZW5jaGNvbm5lY3Rpb25cXC5jb20iOiJmcmVuY2hjb25uZWN0aW9uIiwid3d3XFwuZ2lmdC1sYW5kXFwuY29tIjoiZ2lmdC1sYW5kIiwiY25cXC5ncm93Z29yZ2VvdXNcXC5jb20iOiJncm93Z29yZ2VvdXMiLCJ3d3dcXC5ob3RlbFxcLmluZm8iOiJob3RlbCIsInd3d1xcLmhvdXNlb2ZmcmFzZXJcXC5jb1xcLnVrIjoiaG91c2VvZmZyYXNlciIsInd3d1xcLmh1aXp1Y2hlXFwuY29tIjoiaHVpenVjaGUiLCJ3d3dcXC5pd2FudG9uZW9mdGhvc2VcXC5jb20iOiJpd2FudG9uZW9mdGhvc2UiLCJ3d3dcXC5qamdsb2JhbFxcLmNvbSI6ImpqZ2xvYmFsIiwid3d3XFwuanVpY3ljb3V0dXJlXFwuY29tIjoianVpY3ljb3V0dXJlIiwid3d3XFwua2Vua29cXC5jb20iOiJrZW5rbyIsInd3d1xcLmtpa29jb3NtZXRpY3NcXC5jb20iOiJraWtvY29zbWV0aWNzIiwid3d3XFwubGFuY2Vyc2tpbmNhcmVcXC5jb1xcLnVrIjoibGFuY2Vyc2tpbmNhcmUiLCJzaG9wXFwubGVnb1xcLmNvbSI6ImxlZ28iLCJ3d3dcXC5sb3JkYW5kdGF5bG9yXFwuY29tIjoibG9yZGFuZHRheWxvciIsInd3d1xcLm1haXpoaVxcLmNvbSI6Im1haXpoaSIsInd3d1xcLm1hdGNoZXNmYXNoaW9uXFwuY29tIjoibWF0Y2hlc2Zhc2hpb24iLCJ3d3dcXC5tYXRzdWtpeW9cXC5jb1xcLmpwIjoibWF0c3VraXlvIiwid3d3XFwubWljcm9zb2Z0XFwuY29tIjoibWljcm9zb2Z0IiwiY25cXC5taW9za2luY2FyZVxcLmNvbSI6Im1pb3NraW5jYXJlIiwid3d3XFwubWlzc3NlbGZyaWRnZVxcLmNvbSI6Im1pc3NzZWxmcmlkZ2UiLCJ3d3dcXC5tb3VudGFpbmdlYXJcXC5jb20iOiJtb3VudGFpbmdlYXIiLCJ3d3dcXC5teWJhZ1xcLmNvbSI6Im15YmFnIiwid3d3XFwubXlwcm90ZWluXFwuY29tIjoibXlwcm90ZWluLWNvbSIsInd3d1xcLm15dml0YW1pbnNcXC5jb20iOiJteXZpdGFtaW5zIiwid3d3XFwubmV0LWEtcG9ydGVyXFwuY29tIjoibmV0LWEtcG9ydGVyIiwid3d3XFwubmV3YmFsYW5jZVxcLmNvXFwudWsiOiJuZXdiYWxhbmNlLXVrIiwid3d3XFwubmV3bG9va1xcLmNvbSI6Im5ld2xvb2siLCJ3d3dcXC5uaWtlXFwuY29tXFwuYnIiOiJuaWtlLWJyIiwid3d3XFwubmlrZVxcLmNvbVxcLmhrIjoibmlrZS1oayIsInd3d1xcLm55YW5kY29tcGFueVxcLmNvbSI6Im55YW5kY29tcGFueSIsInd3d1xcLm9hc2lzLXN0b3Jlc1xcLmNvbSI6Im9hc2lzLXN0b3JlcyIsInd3d1xcLm9yYml0elxcLmNvbSI6Im9yYml0eiIsInd3d1xcLm9yY2hpcmFcXC5jb1xcLnVrIjoib3JjaGlyYSIsInd3d1xcLm9yaWdpbnNcXC5jb1xcLnVrIjoib3JpZ2lucy11ayIsInd3d1xcLnBldHNtYXJ0XFwuY29tIjoicGV0c21hcnQiLCJ3d3dcXC5wcm9iaWtla2l0XFwuY29cXC51ayI6InByb2Jpa2VraXQiLCJ3d3dcXC5xYXRhcmFpcndheXNcXC5jb20iOiJxYXRhcmFpcndheXMiLCJ3d3dcXC5yYWRsZXlcXC5jb1xcLnVrIjoicmFkbGV5Iiwid3d3XFwucmFscGhsYXVyZW5cXC5jbiI6InJhbHBobGF1cmVuIiwid3d3XFwucmViZWNjYW1pbmtvZmZcXC5jb20iOiJyZWJlY2NhbWlua29mZiIsInd3d1xcLnJlbnRhbGNhcnNcXC5jb20iOiJyZW50YWxjYXJzIiwid3d3XFwucmljYXVkXFwuY29tIjoicmljYXVkIiwid3d3XFwucm9ja3BvcnRcXC5jb20iOiJyb2NrcG9ydCIsInd3d1xcLnJ1ZWxhbGFcXC5jb20iOiJydWVsYWxhIiwid3d3XFwuc2Frc29mZjV0aFxcLmNvbSI6InNha3NvZmY1dGgiLCJ3d3dcXC5zYzI0XFwuY29tIjoic2MyNCIsInd3d1xcLnNob2VzXFwuY29tIjoic2hvZXMiLCJ3d3dcXC5zaG9wc3ByaW5nXFwuY29tIjoic2hvcHNwcmluZyIsInd3d1xcLnNpbXBseXN1cHBsZW1lbnRzXFwuY29cXC51ayI6InNpbXBseXN1cHBsZW1lbnRzIiwid3d3XFwuc3NlbnNlXFwuY29tIjoic3NlbnNlIiwid3d3XFwuc3RldmVtYWRkZW5cXC5jb20iOiJzdGV2ZW1hZGRlbiIsInd3d1xcLnRhb2RvXFwuY29tIjoidGFvZG8iLCJ3d3dcXC5taWNoYWVsa29yc1xcLmNuIjoibWljaGFlbGtvcnMiLCJ3d3dcXC50dGNqXFwudHYiOiJ0dGNqIiwid3d3XFwudWYtY2x1YlxcLmNvbSI6InVmLWNsdWIiLCJ3d3dcXC56aGFpZG91XFwuY29tIjoiemhhaWRvdSIsInd3d1xcLjE2M3l1blxcLmNvbSI6IjE2M3l1biIsImNuXFwuYXBvXFwuY29tIjoiYXBvIiwibG9hbi1tXFwuamltdVxcLmNvbSI6ImppbXUiLCJ3d3dcXC5oYW8yNFxcLmNvbSI6ImhhbzI0IiwibVxcLnNlYWdvb3JcXC5jb20iOiJzZWFnb29yIiwid3d3XFwud2FubmFyXFwuY29tIjoid2FubmFyIiwid3d3XFwuY2FpaGFuZ1xcLmNvbSI6ImNhaWhhbmciLCJ3d3dcXC5jc21hbGxcXC5jb20iOiJjc21hbGwiLCJ3d3dcXC5rdWFqaW5nXFwuY29tIjoia3VhamluZyIsInd3d1xcLm1pbGxlbm5pdW1ob3RlbHNcXC5jb20iOiJtaWxsZW5uaXVtaG90ZWxzIiwid3d3XFwucmVlYm9uelxcLmNuIjoicmVlYm9ueiIsImNuXFwud2VtYWtlcHJpY2VcXC5jb20iOiJ3ZW1ha2VwcmljZSIsInd3d1xcLnd6aG91aHVpXFwuY29tIjoid3pob3VodWkiLCJ3d3dcXC5odWlqaWF5b3VcXC5jbiI6Imh1aWppYXlvdSIsCiJ3d3dcXC5tZWxpbWVsb1xcLmNuIjoibWVsaW1lbG8iLCJ3d3dcXC45MXhjbVxcLmNvbSI6IjkxeGNtIiwiemhcXC5hc2hmb3JkXFwuY29tIjoiYXNoZm9yZC16aCIsImNqb25tYXJ0XFwuY24iOiJjam9ubWFydCIsInd3d1xcLmNueXRvXFwubWUiOiJjbnl0byIsInd3d1xcLmdyYW5kZGZzXFwuY29tIjoiZ3JhbmRkZnMiLCJ3d3dcXC5vZmZpY2VkZXBvdFxcLmNvbSI6Im9mZmljZWRlcG90Iiwid3d3XFwudGlhbmhvbmdcXC5jbiI6InRpYW5ob25nIiwid3d3XFwueWlsaW5nc2hvcFxcLmNvbSI6InlpbGluZ3Nob3AiLCJ3d3dcXC5rbG9va1xcLmNvbSI6Imtsb29rIiwibVxcLmRka3lcXC5jb20iOiJkZGt5Iiwid3d3XFwuY2hpbmFhY2NcXC5jb20iOiJjaGluYWFjYyIsInd3d1xcLmJtYWlcXC5jb20iOiJibWFpIiwibVxcLmlua2VcXC5jbiI6Imlua2UiLCJ3d3dcXC5qdW5yb25nZGFpXFwuY29tIjoianVucm9uZ2RhaSIsInd3d1xcLm5hcGFpXFwuY24iOiJuYXBhaSIsIm1hbGxcXC5ncmVlXFwuY29tIjoiZ3JlZSIsInNhbGVzXFwuYWxsaWFuelxcLmNvbSI6ImFsbGlhbnoiLCJ2XFwueW91bWlcXC5jbiI6InlvdW1pIiwid3d3XFwuMjFjYWtlXFwuY29tIjoiMjFjYWtlIiwid3d3XFwuNTZyZW5cXC5jb20iOiI1NnJlbiIsInd3d1xcLmFuYW50YXJhXFwuY29tIjoiYW5hbnRhcmEiLCJ3d3dcXC5jaGVzdWRpXFwuY29tIjoiY2hlc3VkaSIsInd3d1xcLmVobWFsbFxcLmNvbSI6ImVobWFsbCIsInd3d1xcLmZhcmZldGNoXFwuY24iOiJmYXJmZXRjaCIsInd3d1xcLmZyZWVwZW9wbGVcXC5jb20iOiJmcmVlcGVvcGxlIiwid3d3XFwuZ2Fvc291eWlcXC5jb20iOiJnYW9zb3V5aSIsInd3d1xcLmNoYXJtLWNvbG9yXFwuIjoiY2hhcm0tY29sb3IiLCJ3d3dcXC5mZWxpc3NpbW9cXC5jb1xcLmpwIjoiZmVsaXNzaW1vIiwid3d3XFwuc3VyZnN0aXRjaFxcLmNvbSI6InN1cmZzdGl0Y2giLCJ3d3dcXC5sb3JuYWphbmVcXC5zZyI6Imxvcm5hamFuZSIsInd3d1xcLnJlaXNzXFwuY29tIjoicmVpc3MiLCJ3d3dcXC5nemxcXC5jb21cXC5jbiI6Imd6bCIsInd3d1xcLjlkcnVnXFwuY29tIjoiOWRydWciLCJ3d3dcXC55dW5nb3Vic1xcLmNvbSI6Inl1bmdvdWJzIiwid3d3XFwueWVuY2l0eVxcLmNvbSI6InllbmNpdHkiLCJjbGFzc1xcLmh1amlhbmdcXC5jb20iOiJodWppYW5nIiwiaXBoeFxcLm1laXR1YW5cXC5jb20iOiJtZWl0dWFuLWlwaHgiLCJ3d3dcXC5zdmdvdXd1XFwuY29tIjoic3Znb3V3dSIsImxpbmt0ZWNoXFwuaHF3eFxcLmNvbSI6Imhxd3giLCJjblxcLmloZXJiXFwuY29tIjoiaWhlcmIiLCJcXC5oeXNqZ1xcLmNvbSI6Imh5c2pnIiwiXFwubWFpbWFpY25cXC5jb20iOiJtYWltYWljbiIsIlxcLnR5Zm9cXC5jb20iOiJ0eWZvIiwid3d3XFwudHRoaWdvXFwuY29tIjoidHRoaWdvIiwid3d3XFwubWF5blxcLmNvbVxcLmNuIjoibWF5biIsIlxcLmhhcnJvZHNcXC5jb20iOiJoYXJyb2RzIiwiXFwudGhldW5kb25lXFwuY29tIjoidGhldW5kb25lIiwid3d3XFwuaW1vbW9rb1xcLmNvbSI6Imltb21va28iLCJ3d3dcXC5wZXJmdW1lc2NsdWJcXC5jbiI6InBlcmZ1bWVzY2x1YiIsInd3d1xcLmdvZGFkZHlcXC5jb20iOiJnb2RhZGR5Iiwid3d3XFwubXl0aGVyZXNhXFwuY29tIjoibXl0aGVyZXNhIiwid3d3XFwuYmFja2NvdW50cnlcXC5jb20iOiJiYWNrY291bnRyeSIsInd3d1xcLm1hcnJpb3R0XFwuY29tIjoibWFycmlvdHQiLCJ3d3dcXC5tcnBvcnRlclxcLmNvbSI6Im1ycG9ydGVyIiwid3d3XFwucHJpY2VsaW5lXFwuY29tIjoicHJpY2VsaW5lIiwiZW5nbGlzaFxcLmN0cmlwXFwuY29tIjoiY3RyaXAtZW4iLCJjblxcLm1vbm5pZXJmcmVyZXNcXC5jb20iOiJtb25uaWVyZnJlcmVzIiwid3d3XFwubXlwcm90ZWluXFwuY24iOiJteXByb3RlaW4iLCJ3d3dcXC50b3J5YnVyY2hcXC5jb20iOiJ0b3J5YnVyY2gtY29tIiwid3d3XFwuaXRhbGlzdFxcLmNvbSI6Iml0YWxpc3QiLCJ3d3dcXC5hc2tkZXJtXFwuY29tIjoiYXNrZGVybSIsInd3d1xcLnRhdGNoYVxcLmNvbSI6InRhdGNoYSIsInd3d1xcLmhvbGxhbmRhbmRiYXJyZXR0XFwuY29tIjoiaG9sbGFuZGFuZGJhcnJldHQiLCJ3d3dcXC5uaW5ld2VzdFxcLmNvbSI6Im5pbmV3ZXN0Iiwid3d3XFwuYmVyZ2RvcmZnb29kbWFuXFwuY29tIjoiYmVyZ2RvcmZnb29kbWFuIiwid3d3XFwuaWhnXFwuY29tIjoiaWhnIiwid3d3XFwuZm9vdGxvY2tlclxcLmNvbSI6ImZvb3Rsb2NrZXIiLCJ3d3dcXC5yb2RpYWxcXC5jbyI6InJvZGlhbCIsInd3d1xcLmZlZWx1bmlxdWVcXC5jb20iOiJmZWVsdW5pcXVlIiwid3d3XFwuamFja3dpbGxzXFwuY29tIjoiamFja3dpbGxzIiwid3d3XFwua2lkc3Jvb21cXC5kZSI6ImtpZHNyb29tIiwiY25cXC5kb2RcXC5ubCI6ImRvZCIsInd3d1xcLmthcmVubWlsbGVuXFwuY29tIjoia2FyZW5taWxsZW4iLCJjblxcLmlsbGljb3BoYXJtYVxcLmNvbSI6ImlsbGljb3BoYXJtYSIsInd3d1xcLnRlZGJha2VyXFwuY29tIjoidGVkYmFrZXIiLCJ3d3dcXC5iLWdsb3dpbmdcXC5jb20iOiJiLWdsb3dpbmciLCJ3d3dcXC5hZGlleHByZXNzXFwuY29tIjoiYWRpZXhwcmVzcyIsInd3d1xcLmZyYWdyYW5jZXhcXC5jb20iOiJmcmFncmFuY2V4Iiwid3d3XFwucGV0ZXJ0aG9tYXNyb3RoXFwuY29tIjoicGV0ZXJ0aG9tYXNyb3RoIiwid3d3XFwuZ2FwXFwuY29tIjoiZ2FwLWNvbSIsInd3d1xcLmNlY2lsZVxcLmNvIjoiY2VjaWxlIiwid3d3XFwuYmFybmV5c1xcLmNvbSI6ImJhcm5leXMiLCJ3d3dcXC5kZWJ1eWNuXFwuY29tIjoiZGVidXljbiIsInd3d1xcLnNtYXNoYm94XFwuY29tIjoic21hc2hib3giLCJ3d3dcXC5sYXN0Y2FsbFxcLmNvbSI6Imxhc3RjYWxsIiwid3d3XFwuc3VwZXJkcnVnXFwuY29tIjoic3VwZXJkcnVnIiwid3d3XFwubGliZXJ0eWxvbmRvblxcLmNvbSI6ImxpYmVydHlsb25kb24iLCJ3d3dcXC5jaGVtaXN0ZGlyZWN0XFwuY29cXC51ayI6ImNoZW1pc3RkaXJlY3QtdWsiLCJ3d3dcXC5za2luY2FyZXJ4XFwuY29tIjoic2tpbmNhcmVyeCIsInd3d1xcLmhhYmFcXC5jbyI6ImhhYmEiLCJzaG9wXFwucGFuYXNvbmljXFwuY29tIjoicGFuYXNvbmljIiwid3d3XFwuYmVhdXRpZmllZHlvdVxcLmNvbSI6ImJlYXV0aWZpZWR5b3UiLCJzdG9yZVxcLm5iYVxcLmNvbSI6Im5iYSIsInd3d1xcLmVsZmNvc21ldGljc1xcLmNvbSI6ImVsZmNvc21ldGljcyIsInd3d1xcLnVuaXFsb1xcLmNvbSI6InVuaXFsbyIsInd3d1xcLmNvbGVoYWFuXFwuY29tIjoiY29sZWhhYW4iLCJ3d3dcXC5jYXJ0ZXJzXFwuY29tIjoiY2FydGVycyIsInd3d1xcLnNwb3J0c2RpcmVjdFxcLmNvbSI6InNwb3J0c2RpcmVjdCIsInd3d1xcLmFkb3JhbWFcXC5jb20iOiJhZG9yYW1hIiwid3d3XFwuYWVcXC5jb20iOiJhZSIsInVzXFwuYW1vcmVwYWNpZmljXFwuY29tIjoiYW1vcmVwYWNpZmljIiwid3d3XFwuYW5udGF5bG9yXFwuY29tIjoiYW5udGF5bG9yIiwiY2xlYXJhbmNlXFwuYXNpY3NcXC5jb20iOiJhc2ljcyIsInd3d1xcLmFzb3NcXC5jb20iOiJhc29zIiwid3d3XFwuYXZlbmV1c2FcXC5jb20iOiJhdmVuZXVzYSIsInd3d1xcLmJhcm5leXN3YXJlaG91c2VcXC5jb20iOiJiYXJuZXlzd2FyZWhvdXNlIiwiYmVuc2hlcm1hblxcLmNvbSI6ImJlbnNoZXJtYW4iLCJ3d3dcXC5ibGlzc3dvcmxkXFwuY29tIjoiYmxpc3N3b3JsZCIsInd3d1xcLmJsdWVhbmRjcmVhbVxcLmNvbSI6ImJsdWVhbmRjcmVhbSIsInd3d1xcLmJvbmRzXFwuY29tIjoiYm9uZHMiLCJ3d3dcXC5jb29raWVza2lkc1xcLmNvbSI6ImNvb2tpZXNraWRzIiwid3d3XFwuY29zbWVsYW5kXFwuanAiOiJjb3NtZWxhbmQiLCJ3d3dcXC5jcmFidHJlZS1ldmVseW5cXC5jb20iOiJjcmFidHJlZS1ldmVseW4iLCJ3d3dcXC5jcm9jc1xcLmNhIjoiY3JvY3MtY2EiLCJ3d3dcXC5kYXJwaGluXFwuY29tIjoiZGFycGhpbiIsInd3d1xcLmRhdmlkc2Nvb2tpZXNcXC5jb20iOiJkYXZpZHNjb29raWVzIiwid3d3XFwuZGlja2llc3N0b3JlXFwuY28iOiJkaWNraWVzc3RvcmUiLCJ1c1xcLmRvY2tlcnNcXC5jb20iOiJkb2NrZXJzIiwid3d3XFwuZWFzeXNwaXJpdFxcLmNvbSI6ImVhc3lzcGlyaXQiLCJ3d3dcXC5lYmFnc1xcLmNvbSI6ImViYWdzIiwid3d3XFwuZWNoZW1pc3RcXC5jbyI6ImVjaGVtaXN0Iiwid3d3XFwuZWRkaWViYXVlclxcLmNvbSI6ImVkZGllYmF1ZXIiLCJ3d3dcXC5lbGVtaXNcXC5jb20iOiJlbGVtaXMiLCJ3d3dcXC5lbGl6YWJldGhhcmRlblxcLmNvIjoiZWxpemFiZXRoYXJkZW4iLCJ3d3dcXC5lbmFcXC50cmF2ZWwiOiJlbmEiLCJ3d3dcXC5ldml0YW1pbnNcXC5jb20iOiJldml0YW1pbnMiLCJ3d3dcXC5mYXNoaW9uZXN0YVxcLmNvbSI6ImZhc2hpb25lc3RhIiwid3d3XFwuZmlnbGVhdmVzXFwuY29tIjoiZmlnbGVhdmVzIiwid3d3XFwuZm9saWNhXFwuY29tIjoiZm9saWNhIiwid3d3XFwuZnJhZ3JhbmNlbmV0XFwuY29tIjoiZnJhZ3JhbmNlbmV0Iiwid3d3XFwuZ2xhbWdsb3dcXC5jb1xcLnVrIjoiZ2xhbWdsb3ctdWsiLCJ3d3dcXC5nb2RpdmFjaG9jb2xhdGVzXFwuY28iOiJnb2RpdmFjaG9jb2xhdGVzIiwid3d3XFwuZ29sZHNtaXRoc1xcLmNvIjoiZ29sZHNtaXRocyIsInd3d1xcLmdyb3dnb3JnZW91c1xcLmNvXFwudWsiOiJncm93Z29yZ2VvdXMtdWsiLCJ3d3dcXC5oYXBweXNvY2tzXFwuY29tIjoiaGFwcHlzb2NrcyIsInd3d1xcLmhhcnZleW5pY2hvbHNcXC5jb20iOiJoYXJ2ZXluaWNob2xzIiwid3d3XFwuaGF0bGV5XFwuY29tIjoiaGF0bGV5Iiwid3d3XFwuaGVyYnNwcm9cXC5jb20iOiJoZXJic3BybyIsInd3d1xcLmhvdXNlb2Zob2xsYW5kXFwuY28iOiJob3VzZW9maG9sbGFuZCIsInd3d1xcLmpheWpheXNcXC5jb20iOiJqYXlqYXlzIiwid3d3XFwuamV0YWlyd2F5c1xcLmNvbSI6ImpldGFpcndheXMiLCJ3d3dcXC5qb3VybmV5c1xcLmNvbSI6ImpvdXJuZXlzIiwid3d3XFwua2FybWFsb29wXFwuY29tIjoia2FybWFsb29wIiwid3d3XFwua2Vkc1xcLmNvbSI6ImtlZHMiLCJ3d3dcXC5sYWJzZXJpZXNcXC5jbyI6ImxhYnNlcmllcyIsImxlZWplYW5zXFwuY29tIjoibGVlamVhbnMiLCJsaXZpbmdzb2NpYWxcXC5jb20iOiJsaXZpbmdzb2NpYWwiLCJ3d3dcXC53a3p1Y2hlXFwuY29tIjoid2t6dWNoZSIsInd3d1xcLnV6aXNlXFwuY29tIjoidXppc2UiLCJtXFwubGFpeWlmZW5cXC5jb20iOiJsYWl5aWZlbiIsInd3d1xcLmF2YXN0XFwuY29tIjoiYXZhc3QiLCJ1c2FcXC5rYXNwZXJza3lcXC5jb20iOiJrYXNwZXJza3kiLCJ3d3dcXC5zdGVlcGFuZGNoZWFwXFwuY29tIjoic3RlZXBhbmRjaGVhcCIsInd3d1xcLmdsYW1nbG93XFwuY29tIjoiZ2xhbWdsb3ctY29tIiwid3d3XFwuY2xlZGVwZWF1YmVhdXRlXFwuY29tIjoiY2xlZGVwZWF1YmVhdXRlIiwid3d3XFwua2lja3N1c2FcXC5jb20iOiJraWNrc3VzYSIsInd3d1xcLmxhY29zdGVcXC5jb20iOiJsYWNvc3RlIiwid3d3XFwucGVycmljb25lbWRcXC5jb20iOiJwZXJyaWNvbmVtZCIsInd3d1xcLmdlbXZhcmFcXC5jb20iOiJnZW12YXJhIiwid3d3XFwuYmx1ZW5pbGVcXC5jb20iOiJibHVlbmlsZSIsInd3d1xcLm1vZGFvcGVyYW5kaVxcLmNvbSI6Im1vZGFvcGVyYW5kaSIsInd3d1xcLnBhcnJvdFxcLmNvbSI6InBhcnJvdCIsImNuXFwuZmFzaGlvbmJ1bmtlclxcLmNvbSI6ImZhc2hpb25idW5rZXIiLCJ3d3dcXC5maW5hbC1zY29yZVxcLmNvbSI6ImZpbmFsLXNjb3JlIiwid3d3XFwuZGtueVxcLmNvbSI6ImRrbnkiLCJzaG9wXFwubWFuZ29cXC5jb20iOiJtYW5nbyIsInd3d1xcLmNoYXJsb3R0ZXRpbGJ1cnlcXC5jb20iOiJjaGFybG90dGV0aWxidXJ5Iiwid3d3XFwudm13YXJlXFwuY29tIjoidm13YXJlIiwid3d3XFwuYXZpcmFcXC5jb20iOiJhdmlyYSIsInd3d1xcLmpld2VscnlcXC5jb20iOiJqZXdlbHJ5Iiwid3d3XFwuZXNldFxcLmNvbSI6ImVzZXQiLCJidXlcXC5ub3J0b25cXC5jb20iOiJub3J0b24iLCJ3d3dcXC5qaW1teWphenpcXC5jb20iOiJqaW1teWphenoiLCJ3d3dcXC5yb3h5XFwuY29tIjoicm94eSIsInd3d1xcLm5hc3R5Z2FsXFwuY29tIjoibmFzdHlnYWwiLCJ3d3dcXC5tYXJjamFjb2JzXFwuY29tIjoibWFyY2phY29icyIsIig/Ol58d3d3XFwuKWJlYXN0c21vZGVcXC5jbiI6ImJlYXN0c21vZGUiLCJ3d3dcXC50aGVhcG9sbG9ib3hcXC5jb20iOiJ0aGVhcG9sbG9ib3giLCJ3d3dcXC55YW1pYnV5XFwuY29tIjoieWFtaWJ1eSIsInd3d1xcLmhieFxcLmNvbSI6ImhieCIsInd3d1xcLmhvcmNob3dcXC5jb20iOiJob3JjaG93Iiwid3d3XFwuYmx1ZWZseVxcLmNvbSI6ImJsdWVmbHkiLCJ3d3dcXC5zd2Fuc29udml0YW1pbnNcXC5jb20iOiJzd2Fuc29udml0YW1pbnMiLCJ3d3dcXC5qY3Jld1xcLmNvbSI6ImpjcmV3Iiwid3d3XFwuYmViZVxcLmNvbSI6ImJlYmUiLCJ3d3dcXC5tdWNmY1xcLmNvbSI6Im11Y2ZjIiwid3d3XFwub25seVxcLmNuIjoib25seSIsInd3d1xcLnZlcm9tb2RhXFwuY29tIjoidmVyb21vZGEiLCJ3d3dcXC5qYWNram9uZXNcXC5jb20iOiJqYWNram9uZXMiLCJ3d3dcXC5zZWxlY3RlZFxcLmNvbSI6InNlbGVjdGVkIiwid3d3XFwuaGFuZXNcXC5jb20iOiJoYW5lcyIsInd3d1xcLmFsZ2VuaXN0XFwuY29tIjoiYWxnZW5pc3QiLCIoPzpefHd3d1xcLilmYWN0b3J5XFwuamNyZXdcXC5jb20iOiJqY3Jldy1mYWN0b3J5Iiwid3d3XFwubG9sZXdvbWVuXFwuY29tIjoibG9sZXdvbWVuIiwid3d3XFwudW5kZXJhcm1vdXJcXC5jb20iOiJ1bmRlcmFybW91ci1jb20iLCJ3d3dcXC50aGVvcnlcXC5jb20iOiJ0aGVvcnkiLCJ3d3dcXC5pbnRpbWluYVxcLmNvbSI6ImludGltaW5hIiwid3d3XFwubnlkalxcLmNvbSI6Im55ZGoiLCJ3d3dcXC5qbnlcXC5jb20iOiJqbnkiLCJib25vYm9zXFwuY29tIjoiYm9ub2JvcyIsInd3d1xcLmFscGhhaW5kdXN0cmllc1xcLmNvbSI6ImFscGhhaW5kdXN0cmllcyIsInZlbnVla2luZ3NcXC5jb20iOiJ2ZW51ZWtpbmdzIiwiKD86Xnx3d3dcXC4pZ29vcFxcLmNvbSI6Imdvb3AiLCJ3d3dcXC5zaWxreXNjZW50c1xcLmNvbSI6InNpbGt5c2NlbnRzIiwid3d3XFwuc2hvcHNreVxcLmNvbSI6InNob3Bza3kiLCJ3d3dcXC52aXRhbWlud29ybGRcXC5jb20iOiJ2aXRhbWlud29ybGQiLCJ3d3dcXC5idW1ibGVhbmRidW1ibGVcXC5jb20iOiJidW1ibGVhbmRidW1ibGUiLCJtYXR0YW5kbmF0XFwuY29tIjoibWF0dGFuZG5hdCIsInd3d1xcLmxhZHlmb290bG9ja2VyXFwuY29tIjoibGFkeWZvb3Rsb2NrZXIiLCJ3d3dcXC5hbGljZWFuZG9saXZpYVxcLmNvbSI6ImFsaWNlYW5kb2xpdmlhIiwid3d3XFwubGFuY29tZS11c2FcXC5jb20iOiJsYW5jb21lLXVzYSIsInd3d1xcLnNrLWlpXFwuY29tIjoic2staWkiLCJ3d3dcXC5iZWF1dGlmdWxoYWxvXFwuY29tIjoiYmVhdXRpZnVsaGFsbyIsInd3d1xcLmZvb3RhY3Rpb25cXC5jb20iOiJmb290YWN0aW9uIiwid3d3XFwudml0YW1pbnNob3BwZVxcLmNvbSI6InZpdGFtaW5zaG9wcGUiLCJ3d3dcXC5yZWVib2tcXC5jb20iOiJyZWVib2siLCIoPzpefHd3d1xcLilqZXRcXC5jb20iOiJqZXQiLCJ3d3dcXC5idXJ0c2JlZXNiYWJ5XFwuY29tIjoiYnVydHNiZWVzYmFieSIsInd3d1xcLnlvaW5zXFwuY29tIjoieW9pbnMiLCJ3d3dcXC5za2VjaGVyc1xcLmNvbSI6InNrZWNoZXJzIiwid3d3XFwudG9vZmFjZWRcXC5jb20iOiJ0b29mYWNlZCIsImVsZXZ0ZFxcLnNob2VidXlcXC5jb20iOiJzaG9lYnV5LWVsZXZ0ZCIsInd3d1xcLmthdHZvbmRiZWF1dHlcXC5jb20iOiJrYXR2b25kYmVhdXR5Iiwid3d3XFwubW91bnRhaW5zdGVhbHNcXC5jb20iOiJtb3VudGFpbnN0ZWFscyIsInd3d1xcLnRvdXJzNGZ1blxcLmNvbSI6InRvdXJzNGZ1biIsInd3d1xcLmpld2VscnlhZmZhaXJzXFwuY29tIjoiamV3ZWxyeWFmZmFpcnMiLCJ3d3dcXC5wZXJmdW1lXFwuY29tIjoicGVyZnVtZSIsInd3d1xcLnRnd1xcLmNvbSI6InRndyIsInd3d1xcLnByZXNjcmlwdGl2ZXNcXC5jb20iOiJwcmVzY3JpcHRpdmVzIiwid3d3XFwucGVycnllbGxpc1xcLmNvbSI6InBlcnJ5ZWxsaXMiLCJ3d3dcXC5vcmlnaW5hbHBlbmd1aW5cXC5jb20iOiJvcmlnaW5hbHBlbmd1aW4iLCJ3d3dcXC5uYXR1cmFsaXplclxcLmNvbSI6Im5hdHVyYWxpemVyIiwid3d3XFwubHVpc2F2aWFyb21hXFwuY29tIjoibHVpc2F2aWFyb21hIiwid3d3XFwuZ2lvcmdpb2FybWFuaWJlYXV0eS11c2FcXC5jb20iOiJnaW9yZ2lvYXJtYW5pYmVhdXR5LXVzYSIsInVzXFwuY2F1ZGFsaWVcXC5jb20iOiJjYXVkYWxpZSIsInd3d1xcLm11cmFkXFwuY29tIjoibXVyYWQiLCJ3d3dcXC5iZXRzZXlqb2huc29uXFwuY29tIjoiYmV0c2V5am9obnNvbiIsInd3d1xcLnRoZWJvZHlzaG9wXFwuY29tIjoidGhlYm9keXNob3AiLCJoYW1wZGVuY2xvdGhpbmdcXC5jb20iOiJoYW1wZGVuY2xvdGhpbmciLCJ3d3dcXC5hbnRocm9wb2xvZ2llXFwuY29tIjoiYW50aHJvcG9sb2dpZSIsInd3d1xcLmFybWFuaVxcLmNvbSI6ImFybWFuaSIsInVzXFwuc2hvcFxcLmVjY29cXC5jb20iOiJlY2NvLXVzIiwid3d3XFwubG9mdFxcLmNvbSI6ImxvZnQiLCJ3d3dcXC5zaHV1ZW11cmEtdXNhXFwuY29tIjoic2h1dWVtdXJhLXVzYSIsInd3d1xcLnRoZXJlYWxyZWFsXFwuY29tIjoidGhlcmVhbHJlYWwiLCJ3d3dcXC5jMjFzdG9yZXNcXC5jb20iOiJjMjFzdG9yZXMiLCJ3d3dcXC5jdHNoaXJ0c1xcLmNvbSI6ImN0c2hpcnRzIiwid3d3XFwuc3VwZXJqZXdlbGVyXFwuY29tIjoic3VwZXJqZXdlbGVyIiwidXNcXC5qaW1teWNob29cXC5jb20iOiJqaW1teWNob28iLCJ3d3dcXC5md3JkXFwuY29tIjoiZndyZCIsInd3d1xcLmF2ZWRhXFwuY29tIjoiYXZlZGEiLCJuYS1rZFxcLmNvbSI6Im5hLWtkIiwid3d3XFwubmFuY3ltZXllclxcLmNvbSI6Im5hbmN5bWV5ZXIiLCJ3d3dcXC5iYXVibGViYXJcXC5jb20iOiJiYXVibGViYXIiLCJ1c1xcLmVsZXZlbnBhcmlzXFwuY29tIjoiZWxldmVucGFyaXMiLCJ3d3dcXC5saW5kdHVzYVxcLmNvbSI6ImxpbmR0dXNhIiwid3d3XFwubmFyc2Nvc21ldGljc1xcLmNvbSI6Im5hcnNjb3NtZXRpY3MiLCJ3d3dcXC5qYWNrcmFiYml0XFwuY29tIjoiamFja3JhYmJpdCIsInd3d1xcLm1hY21hbGxcXC5jb20iOiJtYWNtYWxsIiwid3d3XFwuY2hhbXBzc3BvcnRzXFwuY29tIjoiY2hhbXBzc3BvcnRzIiwic3RvcmVcXC5kamlcXC5jb20iOiJkamkiLCJ3d3dcXC5ib2RlbnVzYVxcLmNvbSI6ImJvZGVudXNhIiwid3d3XFwuY3Jhenk4XFwuY29tIjoiY3Jhenk4Iiwid3d3XFwubW9sdG9uYnJvd25cXC5jb20iOiJtb2x0b25icm93biIsIm5lZWRzdXBwbHlcXC5jb20iOiJuZWVkc3VwcGx5Iiwid3d3XFwuc29sZXNvY2lldHlcXC5jb20iOiJzb2xlc29jaWV0eSIsInd3d1xcLmNoaWxkcmVuc3BsYWNlXFwuY29tIjoiY2hpbGRyZW5zcGxhY2UiLCJ3d3dcXC5zaWdtYWJlYXV0eVxcLmNvbSI6InNpZ21hYmVhdXR5Iiwid3d3XFwuYWRpZGFzXFwuY29tIjoiYWRpZGFzIiwid3d3XFwudmVyb25pY2FiZWFyZFxcLmNvbSI6InZlcm9uaWNhYmVhcmQiLCJ3d3dcXC5jcm9zc1xcLmNvbSI6ImNyb3NzIiwid3d3XFwubW9uc3RlcnByb2R1Y3RzXFwuY29tIjoibW9uc3RlcnByb2R1Y3RzIiwid3d3XFwudGhlb3V0bmV0XFwuY29tIjoidGhlb3V0bmV0Iiwid3d3XFwuY2xhcmlzb25pY1xcLmNvbSI6ImNsYXJpc29uaWMiLCJ3d3dcXC5kZXJtYWRvY3RvclxcLmNvbSI6ImRlcm1hZG9jdG9yIiwid3d3XFwuc29sc3RpY2VzdW5nbGFzc2VzXFwuY29tIjoic29sc3RpY2VzdW5nbGFzc2VzIiwid3d3XFwucGl4aWVtYXJrZXRcXC5jb20iOiJwaXhpZW1hcmtldCIsInZpcFxcLnl1bmlmYW5nXFwuY29tIjoieXVuaWZhbmciLCJhcGlcXC5nbG9iYWx3aW5uZXJcXC5jbiI6Imdsb2JhbHdpbm5lciIsInd3d1xcLmJpb3RoZXJtLXVzYVxcLmNvbSI6ImJpb3RoZXJtLXVzYSIsInd3d1xcLmpvbWFsb25lXFwuY29tIjoiam9tYWxvbmUiLCJ3d3dcXC55dmVzcm9jaGVydXNhXFwuY29tIjoieXZlc3JvY2hlcnVzYSIsInd3d1xcLm1vdW50YWluaGFyZHdlYXJcXC5jb20iOiJtb3VudGFpbmhhcmR3ZWFyIiwid3d3XFwuYm9zY292c1xcLmNvbSI6ImJvc2NvdnMiLCJ3d3dcXC5wdXRtZWludGhlc3RvcnlcXC5jb20iOiJwdXRtZWludGhlc3RvcnkiLCJ3d3dcXC5wZXRpdC1iYXRlYXVcXC51cyI6InBldGl0LWJhdGVhdSIsInd3d1xcLnN0cmlkZXJpdGVcXC5jb20iOiJzdHJpZGVyaXRlIiwid3d3XFwuYmNiZ1xcLmNvbSI6ImJjYmciLCJ3d3dcXC5tYXJpc3NhY29sbGVjdGlvbnNcXC5jb20iOiJtYXJpc3NhY29sbGVjdGlvbnMiLCJ3d3dcXC5jaGluZXNlbGF1bmRyeVxcLmNvbSI6ImNoaW5lc2VsYXVuZHJ5Iiwid3d3XFwueWxhbmcyM1xcLmNvbSI6InlsYW5nMjMiLCJ3d3dcXC50aGV3YWxraW5nY29tcGFueVxcLmNvbSI6InRoZXdhbGtpbmdjb21wYW55Iiwid3d3XFwucGVyZnVtYW5pYVxcLmNvbSI6InBlcmZ1bWFuaWEiLCJ3d3dcXC5waGlsb3NvcGh5XFwuY29tIjoicGhpbG9zb3BoeSIsInd3d1xcLnVuZGVyYXJtb3VyXFwuY24iOiJ1bmRlcmFybW91ciIsInd3d1xcLmJlc3RneW1lcXVpcG1lbnRcXC5jbyI6ImJlc3RneW1lcXVpcG1lbnQiLCJ0aGVzcG9ydHNlZGl0XFwuY29tIjoidGhlc3BvcnRzZWRpdCIsInd3d1xcLnRyZWRzXFwuY28iOiJ0cmVkcyIsInd3d1xcLnNlbGZyaWRnZXNcXC5jb20iOiJzZWxmcmlkZ2VzIiwid3d3XFwudG9yeWJ1cmNoXFwuY29cXC51ayI6InRvcnlidXJjaC11ayIsInpoXFwudmlyZ2luYXRsYW50aWNcXC5jb20iOiJ2aXJnaW5hdGxhbnRpYyIsInd3dy5cXGNob3dzYW5nc2FuZ1xcLmNvbSI6ImNob3dzYW5nc2FuZyIsInd3dy5zcGVlZG8uY29tLmNuIjoic3BlZWRvIiwiXFwucGluZHVvZHVvXFwuY29tIjoicGluZHVvZHVvIiwiXFwueWFuZ2tlZHVvXFwuY29tIjoieWFuZ2tlZHVvIiwiXFwucmFrdXRlblxcLmNvXFwuanAiOiJyYWt1dGVuIiwiXFwuY29tcHV0ZXJ1bml2ZXJzZVxcLm5ldCI6ImNvbXB1dGVydW5pdmVyc2UiLCJcXC5wcm9kaXJlY3Rzb2NjZXJcXC5jb20iOiJwcm9kaXJlY3Rzb2NjZXIiLCJcXC5wcm9kaXJlY3RydW5uaW5nXFwuY29tIjoicHJvZGlyZWN0cnVubmluZyIsIlxcLmRib3hcXC5jb1xcLm56IjoiZGJveCIsIlxcLm1vdG9yb2xhXFwuY29tXFwuY24iOiJtb3Rvcm9sYSIsIlxcLmhhaWVyc2h1aVxcLmNvbSI6ImhhaWVyc2h1aSIsIlxcLndhbmRvdWdvbmd6aHVcXC5jbiI6IndhbmRvdWdvbmd6aHUiLCJ3d3dcXC54aWFvbWl5b3VwaW5cXC5jb20iOiJ5b3VwaW4tbWkiLCJiYW5hbmFyZXB1YmxpY1xcLmdhcFxcLmNvbSI6ImJhbmFuYXJlcHVibGljLWdhcCJ9LHA9eyJkZXN0L3Rlc3RcXC5odG1sIjoidGVzdCIsIl4oPzpodHRwfGh0dHBzKTovL2NuXFwuaWhlcmJcXC5jb20vcHIvW2EtejAtOUEtWi1dKy9cXGQrIjoiaWhlcmIiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5ocWhhaXJcXC5jb20vW2EtejAtOS1dKy9cXGQrXFwuaHRtbCI6ImhxaGFpciIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLndsXFwuY24vXFxkKyI6IndsIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuY29sdW1iaWFcXC5jb20vW2EtejAtOUEtWi1dK1xcLmh0bWxcXD9jZ2lkPSI6ImNvbHVtYmlhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuY29sdW1iaWFzcG9ydHNcXC5jbi9wcm9kdWN0LVxcZCtcXC5odG1sIjoiY29sdW1iaWFzcG9ydHMiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5laGFveWFvXFwuY29tL3Byb2R1Y3QtXFxkK1xcLmh0bWwiOiJlaGFveWFvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYmhwaG90b3ZpZGVvXFwuY29tL2MvcHJvZHVjdC9cXGQrIjoiYmhwaG90b3ZpZGVvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc2hvZXNcXC5jb20vW2EtejAtOS1dKy9cXGQrL1xcZCsiOiJzaG9lcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmpvbWFzaG9wXFwuY29tL1thLXowLTktXStcXC5odG1sIjoiam9tYXNob3AiLCJeKD86aHR0cHxodHRwcyk6Ly9jblxcLnBoYXJtYWN5ZGlyZWN0XFwuY29cXC5uei9cXGQrXFwuaHRtbCI6InBoYXJtYWN5ZGlyZWN0IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuaG9sbGFuZC1hdC1ob21lXFwuY29tL2NuLyhcXHcrLyl7MSw1fVxcdytcXC5odG1sIjoiaG9sbGFuZC1hdC1ob21lIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwucmVpXFwuY29tL3Byb2R1Y3QvXFxkKyI6InJlaSIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC5hb215Z29kXFwuY29tL1xcZCtcXC5odG1sIjoiYW9teWdvZCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmh1YXR1b3lmXFwuY29tL3Byb2R1Y3QvXFxkK1xcLmh0bSI6Imh1YXR1b3lmIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZm9yZXZlcjIxXFwuY29tL3VrL3Nob3AvY2F0YWxvZy9wcm9kdWN0IjoiZm9yZXZlcjIxIiwiXig/Omh0dHB8aHR0cHMpOi8vemhcXC5hc2hmb3JkXFwuY29tLyhbYS16MC05LV0rLyl7MSw2fVthLXpBLVowLTldK1xcLnBpZCI6ImFzaGZvcmQtemgiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5iZXN0YnV5XFwuY29tL1thLXpdKy9bYS16MC05LV0rL1xcZCtcXC5wXFw/c2t1SWQ9XFxkKyI6ImJlc3RidXkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC50YXJnZXRcXC5jb20vcC9bYS16MC0wLV0rIjoidGFyZ2V0IiwiXig/Omh0dHB8aHR0cHMpOi8vY25cXC5jaGVtaXN0ZGlyZWN0XFwuY29tXFwuYXUvXFxkK1xcLmh0bWwiOiJjaGVtaXN0ZGlyZWN0IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYmFcXC5kZS9wcm9kdWN0L1xcZCtcXC5odG1sIjoiYmEiLCJeKD86aHR0cHxodHRwcyk6Ly9tXFwud2FuZG91Z29uZ3podVxcLmNuL3Byb2R1Y3QvXFxkK1xcLmh0bWwiOiJ3YW5kb3Vnb25nemh1IiwiXig/Omh0dHB8aHR0cHMpOi8vY25cXC5mZWVsdW5pcXVlXFwuY29tL1xcZCtcXC5odG1sIjoiZmVlbHVuaXF1ZSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC5kaXhpbnRvbmdcXC5jb20vcHJvZHVjdHMtWzAtOS1dK1xcLmh0bWwiOiJkaXhpbnRvbmciLCJeKD86aHR0cHxodHRwcyk6Ly9jblxcLnBoYXJtYWN5b25saW5lXFwuY29tXFwuYXUvXFxkK1xcLmh0bWwiOiJwaGFybWFjeW9ubGluZSIsIl4oPzpodHRwfGh0dHBzKTovL2NuXFwuZGlzY291bnQtYXBvdGhla2VcXC5kZS9cXGQrXFwuaHRtbCI6ImRpc2NvdW50LWFwb3RoZWtlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuY2FydGVyc1xcLmNvbS9bYS16MC05LV0rL1tBLVpdX1xcZCtcXC5odG1sXFw/IjoiY2FydGVycyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmthdGVzcGFkZVxcLmNvXFwudWsvW2Etei1dKy8oW2EtejAtOS1dKy8pezEsM31bQS1aYS16MC05XStcXC5odG1sIjoia2F0ZXNwYWRlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYmVhdXR5YmF5XFwuY29tL3AvXFx3KyI6ImJlYXV0eWJheSIsIl4oPzpodHRwfGh0dHBzKTovL2NuXFwucGhhcm1hY3k0bGVzc1xcLmNvbVxcLmF1L1xcZCtcXC5odG1sIjoicGhhcm1hY3k0bGVzcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm5ld2VnZ1xcLmNvbS9Qcm9kdWN0L1Byb2R1Y3RcXC5hc3B4IjoibmV3ZWdnLXVzIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubmV3YmFsYW5jZVxcLmNvbS9wZC9cXHcrIjoibmV3YmFsYW5jZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmJvZHlidWlsZGluZ1xcLmNvbS9zdG9yZS9bYS16MC05LV0rL1thLXowLTktXStcXC5odG1sXFw/c2t1SWQ9IjoiYm9keWJ1aWxkaW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc3NuZXd5b3JrXFwuY29tL2dvb2QvZGV0YWlsL1xcZCsiOiJzc25ld3lvcmsiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC53aW5lOVxcLmNvbS9cXGQrXFwuaHRtbCI6IndpbmU5IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwua29obHNcXC5jb20vcHJvZHVjdC9wcmQtXFxkKyI6ImtvaGxzIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZ25jXFwuY29tL1thLXowLTktXSsvXFxkK1xcLmh0bWxcXD9jZ2lkPSI6ImduYyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnF3XFwuY2MvZ29vZHMtXFxkK1xcLmh0bWwiOiJxdyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmhhaWVyc2h1aVxcLmNvbS9wcm9kdWN0L1xcZCtcXC5odG1sIjoiaGFpZXJzaHVpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudWdnXFwuY29tL1thLXowLTktXSsvW2EtejAtOS1dKy9cXGQrXFwuaHRtbCI6InVnZyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnlvZ2VyXFwuY29tXFwuY24vcHJvZHVjdC9cXGQrXFwuaHRtbCI6InlvZ2VyIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZmx5Y29cXC5jb20vZ29vZHMtW2EtekEtWjAtOS1fXStcXC5odG1sIjoiZmx5Y28iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC55ZmR5ZlxcLmNvbS9wcm9kdWN0LVxcZCtcXC5odG1sIjoieWZkeWYiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5qb2VzbmV3YmFsYW5jZW91dGxldFxcLmNvbS9wcm9kdWN0LyI6ImpvZXNuZXdiYWxhbmNlb3V0bGV0IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuam9tb29cXC5jb21cXC5jbi9pdGVtL1thLXowLTktXStcXC5odG0iOiJqb21vb3Nob3AiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5kYXB1XFwuY29tL3Byb2R1Y3QtXFxkK1xcLmh0bWwiOiJkYXB1IiwiXig/Omh0dHB8aHR0cHMpOi8vY2hpbmFcXC5jb2FjaFxcLmNvbS9wcm9kdWN0L1xcZCsiOiJjb2FjaCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNoYW5tYWlcXC5jbi9wcm9kdWN0LVxcZCtcXC5odG1sIjoic2hhbm1haSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmZlbmdidXlcXC5jb20vW2EtejAtOS1dK1xcLmh0bWwiOiJmZW5nYnV5IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudDEwXFwuY29tL1xcdystXFxkKy8iOiJ0MTAiLCJeKD86aHR0cHxodHRwcyk6Ly9jblxcLmFtY2FsXFwuY29tXFwuYXUvXFxkK1xcLmh0bWwiOiJhbWNhbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjUxdGFvdWtcXC5jb20vW0EtWjAtOV0rJCI6IjUxdGFvdWsiLCJeKD86aHR0cHxodHRwcyk6Ly9zaG9wXFwudXNhc2hvcGNuXFwuY29tL2dvb2RzXFwucGhwXFw/aWQ9XFxkKyI6InVzYXNob3BjbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnBldGl0LWJhdGVhdVxcLnVzL1thLXowLTktXSsvZC9bMC05QS1aXStcXD9DYXRlZ29yeUlkIjoicGV0aXQtYmF0ZWF1IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudGxjcGhhcm1hY3lcXC5jblxcLmNvbS9cXGQrXFwuaHRtbCI6ImJpZW5tYW5nZXIiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5rbTE4MThcXC5jb20vcHJvZHVjdHMvXFxkK1xcLmh0bWwiOiJrbTE4MTgiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5iaWVubWFuZ2VyXFwuY24vXFxkK1xcLmh0bWwiOiJiaWVubWFuZ2VyIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc3lzaG9wXFwuY29tL2dvb2RzL2dvb2RkZXRhaWwvXFxkK1xcLmh0bWwiOiJzeXNob3AiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5xaXBhaW1hbGxcXC5jb20vZ29vZHMvXFw/Z29vZHNfc249IjoicWlwYWltYWxsIiwiXig/Omh0dHB8aHR0cHMpOi8vbWFsbFxcLmdvdW1pblxcLmNvbS9tYWxsL3ZpZXcvXFxkKyI6ImdvdW1pbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnRhb2h3dVxcLmNvbS9nb29kcy1cXGQrXFwuaHRtbCI6InRhb2h3dSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnhtZWlzZVxcLmNvbS9nb29kcy1cXGQrXFwuaHRtbCI6InhtZWlzZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNlcHR3b2x2ZXNcXC5jbi9pc2hvcC93ZWIvdGhlbWUvZGVmYXVsdC9Jc2hvcF9wYy9kaXN0LyMvZ29vZHNfZGV0YWlsc1xcP2dvb2RzX2lkPVxcZCsiOiJzZXB0d29sdmVzIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwua2llaGxzXFwuY29tL1thLXpdKy9bYS16MC05LV0rL1thLXowLTktXSsvXFxkK1xcLmh0bWwiOiJraWVobHMiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5wdXpleWZcXC5jb20vZGV0YWlsL1xcZCtcXC5odG1sIjoicHV6ZXlmIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYWl6aGlndVxcLmNvbVxcLmNuL3Byb2R1Y3RcXC5cXGQrXFwuaHRtbCI6ImFpemhpZ3UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5oZWNoYVxcLmNuL3Nnb29kcy1cXGQrXFwuaHRtbCI6ImhlY2hhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuemdzaG9lc1xcLmNvbS9nb29kcy1cXGQrXFwuaHRtbCI6Inpnc2hvZXMiLCJeKD86aHR0cHxodHRwcyk6Ly9jblxcLnRha2V5YVxcLmNvXFwuanAvXFxkK1xcLmh0bWwvIjoidGFrZXlhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc2hvcHJvYmFtXFwuY29tL0hvbWUvUHJvZHVjdHMvZGV0YWlsL2dpZC9cXGQrIjoic2hvcHJvYmFtIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwub3BwbGVzdG9yZVxcLmNvbS9pdGVtXFwuaHRtbFxcP2l0ZW1JZD1cXGQrIjoib3BwbGVzdG9yZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm1haWNoYXdhbmdcXC5jb20vZ29vZHMtXFxkK1xcLmh0bWwiOiJtYWljaGF3YW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYm9zZVxcLmNvbS9lbl91cy9wcm9kdWN0cy8iOiJib3NlIiwiXig/Omh0dHB8aHR0cHMpOi8vZGV3YXJlblxcLmNvbS9jbi9bYS16QS1aMC05XSsvW2EtekEtWjAtOS1dKy9cXHcrL1swLTldK1xcLmh0bWwiOiJkZXdhcmVuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwud2lub25hXFwuY24vcHJvZHVjdC9bMC05XStcXC5odG1sIjoid2lub25hIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubW90b3JvbGFcXC5jb21cXC5jbi9zdG9yZS9bMC05X10rXFwuaHRtbCI6Im1vdG9yb2xhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubW90b3JvbGFcXC5jb21cXC5jbi9bYS16MC05XSsvW2EtejAtOV0rL2luZGV4XFwuaHRtbCI6Im1vdG9yb2xhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZGFuaWVsd2VsbGluZ3RvblxcLmNuL1thLXowLTktXStbXlxcL10kIjoiZGFuaWVsd2VsbGluZ3Rvbi1jbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmRhbmllbHdlbGxpbmd0b25cXC5jb20vdXMvW2EtejAtOS1dK1teXFwvXSQiOiJkYW5pZWx3ZWxsaW5ndG9uIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZGFuaWVsd2VsbGluZ3RvblxcLmNvbS9nbG9iYWwvW2EtejAtOS1dK1teXFwvXSQiOiJkYW5pZWx3ZWxsaW5ndG9uIiwiXig/Omh0dHB8aHR0cHMpOi8veW91aHVpXFwucGluZHVvZHVvXFwuY29tL2dvb2RzL2dvb2RzLWRldGFpbFxcP2dvb2RzSWQ9XFxkKyI6InBpbmR1b2R1byIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5paGVyYi5jb20vcHIvW2EtejAtOUEtWi1dKy9cXGQrIjoiaWhlcmIiLCJeKD86aHR0cHxodHRwcyk6Ly9tb2JpbGUueWFuZ2tlZHVvLmNvbS9nb29kc1xcLmh0bWxcXD9nb29kc19pZD1cXGQrIjoieWFuZ2tlZHVvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmZpbmlzaGxpbmUuY29tL3N0b3JlL3Byb2R1Y3QvIjoiZmluaXNobGluZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5za2luc3RvcmUuY29tL1thLXowLTlBLVotXSsvXFxkK1xcLmh0bWwiOiJza2luc3RvcmUiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtLndqaWtlLmNvbS9cXGQrXFwuaHRtbCI6IndqaWtlIiwiXig/Omh0dHB8aHR0cHMpOi8veW91cGluLm1pLmNvbS9kZXRhaWxcXD9naWQ9XFxkKyI6InlvdXBpbi1taSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnhpYW9taXlvdXBpblxcLmNvbS9kZXRhaWxcXD9naWQ9XFxkKyI6InlvdXBpbi1taSIsIl4oPzpodHRwfGh0dHBzKTovL3N0b3JlXFwuc3RlYW1wb3dlcmVkXFwuY29tL2FwcC9cXGQrIjoic3RlYW1wb3dlcmVkIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmZvcmV2ZXIyMS5jb20vVUsvUHJvZHVjdC9Qcm9kdWN0XFwuYXNweCI6ImZvcmV2ZXIyMSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5qaWFsaWNoLmNuL2dvb2RzXFwucGhwXFw/aWQ9XFxkKyI6ImppYWxpY2giLCJeKD86aHR0cHxodHRwcyk6Ly93d3cudHRoaWdvLmNvbS9wcm9kdWN0L1xcdysiOiJ0dGhpZ28iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tb2Rlcm5hdmVudWVcXC5jb20vcHJvZHVjdC1cXGQrXFwuaHRtbCI6Im1vZGVybmF2ZW51ZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnRjbFxcLmNvbS9cXHcrL1xcdysiOiJ0Y2wiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5ib25qb3VyaGtcXC5jb20vXFxkKyI6ImJvbmpvdXJoayIsIl4oPzpodHRwfGh0dHBzKTovL21cXC5ib25qb3VyaGtcXC5jb20vW2Etel0rL1xcZCsiOiJib25qb3VyaGsiLCIoPzpodHRwOnxodHRwczopLy93d3dcXC50cnRcXC5oay9wYWdlL3Byb2R1Y3RzL1xcZCtcXC5odG1sIjoidHJ0IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZm9yZXN0Zm9vZFxcLmNvbS9nb29kc1xcLnBocFxcP2lkPVxcZCsiOiJmb3Jlc3Rmb29kIiwiKD86aHR0cDp8aHR0cHM6KS8vd3d3XFwuY29udmVyc2VcXC5jb21cXC5jbi9bYS16LV9dKy9cXGQrL2l0ZW0iOiJjb252ZXJzZSIsIig/Omh0dHA6fGh0dHBzOikvL3d3d1xcLmNvbnZlcnNlXFwuY29tXFwuY24vW2EtejAtOS1fXSsvXFx3Ky9pdGVtXFwuaHRtIjoiY29udmVyc2UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5maWxhXFwuY24vaXRlbS1pbmRleC1bYS16MC05XStcXC5odG1sIjoiZmlsYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmZpbGFcXC5jbi9maWxhLVtBLVphLXowLTldK1xcLmh0bWwiOiJmaWxhIiwiKD86aHR0cDp8aHR0cHM6KS8vd3d3XFwubGV2aVxcLmNvbVxcLmNuLyg/Om1lbnx3b21lbikvW2Etei1dKy9bMC05LV0rL2l0ZW0iOiJsZXZpIiwiKD86aHR0cDp8aHR0cHM6KS8vd3d3XFwubGV2aVxcLmNvbS9bQS1aXSsvW2EtekEtWl9dKy9bYS16XSsvW2EtejAtOS1dKy9wL1xcZCsiOiJsZXZpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuaGFuZ293YVxcLmNvbS9pdGVtLVxcZCtcXC5odG1sIjoiaGFuZ293YSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnN1cGVyLWluXFwuY29tL3Byb2R1Y3QvXFxkK1xcLmh0bWwiOiJzdXBlci1pbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmNjeHBldFxcLmNvbS9Qcm9kdWN0L0RldGFpbCI6ImNjeHBldCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjM2MGxqXFwuY29tL3Byb2R1Y3QvXFxkK1xcLmh0bWwiOiIzNjBsaiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmh5c2pnXFwuY29tL2dvb2RzXFwucGhwXFw/aWQ9XFxkKyI6Imh5c2pnIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuMDA2MVxcLmNvbVxcLmF1L3Byb2R1Y3QvY29udGVudC9cXGQrIjoieDAwNjEiLCJeKD86aHR0cHxodHRwcyk6Ly9tYWxsXFwuZWNvdmFjc1xcLmNuL3Byb2R1Y3QtXFxkK1xcLmh0bWwiOiJlY292YWNzIiwiXig/Omh0dHB8aHR0cHMpOi8vbWFsbFxcLmxpdHRsZXN3YW5cXC5jb20vZGV0YWlsL2luZGV4KD86L3NhbGV8KVxcP2l0ZW1pZCI6ImxpdHRsZXN3YW4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC52aXRhZ291XFwuaGsvcHJvZHVjdHMvaWQvXFxkKyI6InZpdGFnb3UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC52aXRhZ291XFwuaGsvcHJvZHVjdC1cXGQrXFwuaHRtbCI6InZpdGFnb3UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5ocHN0b3JlXFwuY24vYWNjZXNzYXJ5L1xcdysiOiJocHN0b3JlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuaHBzdG9yZVxcLmNuLyg/OmhwfG9tZW4pLSI6Imhwc3RvcmUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5ra2d1YW5cXC5jb20vZ29vZHMtXFxkK1xcLmh0bWwiOiJra2d1YW4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tYXluXFwuY29tXFwuY24vaHRtbC9cXGQrL1xcZCsiOiJtYXluIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwucGVpa3VhXFwuY29tL3Byb2R1Y3QtXFxkK1xcLmh0bWwiOiJwZWlrdWEiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwua2luaG9tXFwuY29tL1xcZCtcXC5odG1sIjoia2luaG9tIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LjlkcnVnLmNvbS9nb29kcy1cXGQrXFwuaHRtbCI6IjlkcnVnIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LnRlYTcuY29tL2l0ZW0vXFxkK1xcLmh0bWwiOiJ0ZWE3IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LjAxaG9tZS5jb20vcHJvZHVjdC9bYS16MC05LV0rXFwuaHRtbCI6IjAxaG9tZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5ocHN0b3JlLmNuL3dhc2QtaWktW2EtejAtOS1dK1xcLmh0bWwiOiJocHN0b3JlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuaHBzdG9yZS5jbi8oPzpbYS16MC05LV0rL3wpW2EtejAtOS1dK1xcLmh0bWwiOiJocHN0b3JlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmFsaWV4cHJlc3MuY29tL3N0b3JlL3Byb2R1Y3QvIjoiYWxpZXhwcmVzcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5hbGlleHByZXNzLmNvbS9pdGVtL1xcdysiOiJhbGlleHByZXNzIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmVhc3l0b3lzLmNuL1xcZCtcXC5odG1sIjoiZWFzeXRveXMiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cua2l3aXN0YXJjYXJlLmNvbS9nb29kcy1cXGQrXFwuaHRtbCI6Imtpd2lzdGFyY2FyZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5jYXJyZWZvdXIuY24vcHJvZHVjdC9cXGQrIjoiY2FycmVmb3VyIiwiXig/Omh0dHB8aHR0cHMpOi8vY2hpbmEubG90dGUuY29tL2dvb2RzL3ZpZXdHb29kc0RldGFpbFxcLmxvdHRlIjoibG90dGUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuZXdhdGNoZXMuY29tL2RldGFpbFxcLmFzcCI6ImV3YXRjaGVzIiwiXig/Omh0dHB8aHR0cHMpOi8vZ2xvYmFsLnRpbWV4LmNvbS9ub2RlL1xcZCsiOiJ0aW1leCIsIl4oPzpodHRwfGh0dHBzKTovL2NvbWZvcnRmaXJzdC5jb20vW2EtejAtOS1dKy9bYS16MC05LV0rL1thLXowLTktXStcXC5odG1sIjoiY29tZm9ydGZpcnN0IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3Lmx1b2xhaS5jbi9wcm9kdWN0LVxcZCtcXC5odG1sIjoibHVvbGFpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LnlvdXl1LmNvbS9nb29kc1xcP3NuPVxcZCsiOiJ5b3V5dSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy55b294LmNuLyg/OmNuLylbYS16MC05QS1aXSsvaXRlbSI6Inlvb3giLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuc3Vhbmp1emkuY29tL3Byb2R1Y3QtXFxkK1xcLmh0bWwiOiJzdWFuanV6aSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy55YW8xMjMuY29tL3Byb2R1Y3QvXFx3KyI6InlhbzEyMyIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW0uYmFvYmVpZ2V6aS5jb20vcHJvZHVjdC9cXGQrXFwuaHRtbCI6ImJhb2JlaWdlemkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuYmFvYmVpZ2V6aS5jb20vcHJvZHVjdC9cXGQrXFwuaHRtbCI6ImJhb2JlaWdlemkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cub3Bwb3Nob3AuY24vcHJvZHVjdHMvXFxkK1xcLmh0bWwiOiJvcHBvc2hvcCIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5vcHBvc2hvcC5jbi9wcm9kdWN0cy9cXGQrIjoib3Bwb3Nob3AiLCJeKD86aHR0cHxodHRwcyk6Ly9zdG9yZVxcLm9wcG9cXC5jb20vKD86Z29vZHN8cHJvZHVjdHMpL1xcZCsiOiJvcHBvc2hvcCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm9wcG9cXC5jb20vY24vcHJvZHVjdCI6Im9wcG9zaG9wIiwiXig/Omh0dHB8aHR0cHMpOi8vaGQub3Bwby5jb20vYWN0L1xcZCsvb3Bwb1I5cyI6Im9wcG9zaG9wIiwiXig/Omh0dHB8aHR0cHMpOi8vbWFsbC50bzh0by5jb20vdGVtYWkvXFxkKy5odG1sIjoidG84dG8iLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwueXVuaG91XFwuY29tL1xcZCtcXC5odG1sIjoieXVuaG91IiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLnloZFxcLmNvbSI6InlpaGFvZGlhbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmhhaXR1bmN1blxcLmNvbS9bYS16XSsvW2EtejAtOV0rL1xcZCsvIjoiaGFpdHVuY3VuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwud2FsbWFydFxcLmNvbS9pcC9bYS16QS1aMC05LV0rL1xcZCsiOiJ3YWxtYXJ0IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudm1laVxcLmNvbS9wcm9kdWN0L1swLTldKyI6InZtZWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5qZ2JcXC5jbi9wL1thLXowLTlfXStcXC5odG1sIjoiamdiIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuNTFkaW5cXC5jb20vcHJvZHVjdC9bMC05XSsvWzAtOV0rXFwuaHRtbCI6IjUxZGluIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LjUxZGluLmNvbS9wcm9kdWN0Lyg/IWxpc3QpL1swLTldKy5qaHRtbCI6IjUxZGluIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYWlkYWlcXC5jb20vUHJvZHVjdFswLTldK1xcLmh0bWwiOiJhaWRhaSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC5ib3FpaVxcLmNvbS9wcm9kdWN0LVswLTldK1xcLmh0bWwiOiJib3FpaSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNwaWRlclxcLmNvbS5jbi9bYS16XSsvWzAtOV0rXFwuaHRtbCI6InNwaWRlciIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNwaWRlclxcLmNvbS5jbi9hdWN0aW9uLmh0bWw/YXVjdGlvbmlkPVswLTldKyAiOiJzcGlkZXIiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5qaWFlXFwuY29tL3Byb2R1Y3RkZXRhaWw/cHJvZHVjdElkPVswLTldKyI6ImppYWUiLCJeKD86aHR0cHxodHRwcyk6Ly8oPzppdGVtfHd3dylcXC56YXpoaXB1XFwuY29tL1swLTldK1xcLmh0bWwiOiJ6YXpoaXB1IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwud2FsbWFydFxcLmNvbS9pcC9cXGQrIjoid2FsbWFydCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNob3BcXC5waGlsaXBzXFwuY29tXFwuY24vaXRlbS9bYS16MC05LV0rIjoicGhpbGlwcyIsIl4oPzpodHRwfGh0dHBzKTovL3R1YW4uemhvbmdqaXUuY24vcHJvZHVjdC9kZXRhaWwvXFxkKy5odG0iOiJ6aG9uZ2ppdSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy56aG9uZ2ppdS5jbi9wcm9kdWN0ZGV0YWlsL1xcZCsuaHRtIjoiemhvbmdqaXUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cua2FsdWxpLmNvbS9wcm9kdWN0L1xcZCsuaHRtbCI6ImthbHVsaSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3Aud3N0eC5jb20vaXRlbS9cXGQrIjoid3N0eCIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5wdXJjb3R0b24uY29tL2RldGFpbC9cXGQrL1swLTktXStcXC5odG1sIjoicHVyY290dG9uIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcC5qdWFucGkuY29tL1thLXpdKy9cXGQrIjoianVhbnBpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmduYy5jb20vW0EtWmEtejAtOS1dKy9wcm9kdWN0LmpzcCI6ImduYyIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5qaW54aWFuZy5jb20vcHJvZHVjdC9cXGQrXFwuaHRtbCI6ImppbnhpYW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vMS4xNjMuY29tL2RldGFpbC9cXGQrLVxcZCtcXC5odG1sIjoiMS0xNjMiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuZ3VvamltYW1pLmNvbS9nb29kcy1cXGQrXFwuaHRtbCI6Imd1b2ppbWFtaSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5iYWl5YW5nd2FuZy5jb20vcHJvZHVjdC9cXGQrXFwuaHRtbCI6ImJhaXlhbmd3YW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmJhaXlhbmd3YW5nLmNvbS9pdGVtLVxcZCtcXC5odG1sIjoiYmFpeWFuZ3dhbmciLCJeKD86aHR0cHxodHRwcyk6Ly9jbi5yb3l5b3VuZ2NoZW1pc3QuY29tLmF1L1xcZCtcXC5odG1sIjoicm95eW91bmdjaGVtaXN0IiwiXig/Omh0dHB8aHR0cHMpOi8vY24ubWVkaWhlYWxzaG9wLmNvbS9cXGQrIjoibWVkaWhlYWxzaG9wIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86d3d3XFwufCltZWRpaGVhbHNob3AuY29tL3Nob3Avc2hvcGRldGFpbFxcLmh0bWxcXD8iOiJtZWRpaGVhbHNob3AiLCJeKD86aHR0cHxodHRwcyk6Ly9jbi4xMDAxcGhhcm1hY2llcy5jb20vXFxkK1xcLmh0bWwiOiIxMDAxcGhhcm1hY2llcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5sb29rZmFudGFzdGljLmNuL1thLXowLTktLl0rL1xcZCsiOiJsb29rZmFudGFzdGljLWNuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3Lmxvb2tmYW50YXN0aWMuY29tL1thLXowLTktLl0rL1xcZCsiOiJsb29rZmFudGFzdGljLWNvbSIsIl4oPzpodHRwfGh0dHBzKTovL3lvdS4xNjMuY29tL2l0ZW0vZGV0YWlsIjoieW91MTYzIiwiXig/Omh0dHB8aHR0cHMpOi8vcHJvZHVjdC5ibC5jb20vXFxkK1xcLmh0bWwiOiJibCIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5iZXN0aW5mb29kcy5jb20vKD86XFw/fClwcm9kdWN0LVswLTldK1xcLmh0bWwiOiJiZXN0aW5mb29kcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5tdWppLm5ldC9zdG9yZS9cXHcrL2RldGFpbC9bMC05XSsiOiJtdWppIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZWFzZWV5ZXNcXC5jb20vZ29vZHNbMC05XStcXC5odG1sIjoiZWFzZWV5ZXMiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5saW5nc2hpXFwuY29tL3Byb2R1Y3QvbGluZ3NoaS1cXGQrXFwuaHRtIjoibGluZ3NoaSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm51YmlhXFwuY29tLyg/Om51YmlhbjF8bnViaWFteXByYWd1ZXxwcmFndWVzfG51YmlhejltYXJrfG51Ymlhejl8bnViaWF6OW1heHxudWJpYXo5bWF4fG51YmlhejltYXh8bnViaWF6MTFtaW5pfG51YmlhWjExbWluaXxudWJpYXoxMW1heHxudWJpYXoxMW1heHxudWJpYXoxMW1heHxudWJpYXoxMXxudWJpYXoxMXxudWJpYXoxMSkiOiJudWJpYSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC5udWJpYVxcLmNvbS9hY3RpdmUvXFx3K1xcLmh0bWwiOiJudWJpYSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC5udWJpYVxcLmNvbS9wcm9kdWN0XFwucGhwXFw/KD86c3wpaWQ9XFxkKyI6Im51YmlhIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86d3d3fHNob3ApXFwubnViaWFcXC5jbi9wcm9kdWN0XFwucGhwXFw/c2lkPVxcZCsiOiJudWJpYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy5udWJpYS5jb20vKCg/IS5waHApLikqJCI6Im51YmlhIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcC5udWJpYS5jb20vYnV5Lyg/Om51YmlhbjF8bnViaWFteXByYWd1ZXxwcmFndWVzfG51YmlhejltYXJrfG51Ymlhejl8bnViaWF6OW1heHxudWJpYXo5bWF4fG51YmlhejltYXh8bnViaWF6MTFtaW5pfG51YmlhWjExbWluaXxudWJpYXoxMW1heHxudWJpYXoxMW1heHxudWJpYXoxMW1heHxudWJpYXoxMXxudWJpYXoxMXxudWJpYXoxMXxudWJpYVxcdyspIjoibnViaWEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5remozNjVcXC5jb20vZ29vZHMtXFxkK1xcLmh0bWwiOiJremozNjUiLCJeKD86aHR0cHxodHRwcyk6Ly8oPzp3d3d8Z29vZHMpXFwua2FvbGFcXC5jb20vcHJvZHVjdC9cXGQrXFwuaHRtbCI6Imthb2xhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwua2FvbGFcXC5jb20uaGsvcHJvZHVjdC9cXGQrXFwuaHRtbCI6Imthb2xhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueW1hdG91XFwuY29tL3Byb2R1Y3QvW2EtekEtWjAtOS1dK1xcLmh0bWwiOiJ5bWF0b3UiLCJeKD86aHR0cHxodHRwcyk6Ly9kZXRhaWxcXC5tZXRhb1xcLmNvbS9wcm9kdWN0cy9cXGQrIjoibWV0YW8iLCJeKD86aHR0cHxodHRwcyk6dHZcXC5jb29jYWFcXC5jb20vZ29vZHMvXFxkKy5odG0iOiJjb29jYWEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5jb29jYWFcXC5jb20vZ29vZHMvZ2V0X1swLTldK1xcLmh0bWwiOiJjb29jYWEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5saWZldmNcXC5jb20vaXRlbS9cXGQrIjoibGlmZXZjIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc3VwdXlcXC5jb20vcHJvZHVjdHMvXFxkK1xcLmh0bWwiOiJzdXB1eSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnN1cHVtYWxsXFwuY29tL0dvb2RzL2dvb2RzaW5mby9nb29kc0NvZGUvWzAtOV0rIjoic3VwdXkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5taWFcXC5jb20vaXRlbS1cXGQrXFwuaHRtbCI6Im1peWFiYW9iZWkiLCJeKD86aHR0cHxodHRwcyk6Ly9taXlhYmFvYmVpLmhrL2l0ZW0tWzAtOV0rLmh0bWwiOiJtaXlhYmFvYmVpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3Lm1peWFiYW9iZWkuaGsvaXRlbS1bMC05XSsuaHRtbCI6Im1peWFiYW9iZWkiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtLmdvbWVoaWdvLmhrL1swLTlhLXpBLVpdKy0uKiI6ImdvbWVoaWdvIiwiaHR0cDovL3d3d1xcLndhbmdmdWppbmdcXC5jb20vaXRlbS9bMC05QS1aXSsiOiJ3YW5nZnVqaW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vZ2xvYmFsXFwuZ291XFwuY29tL3Byb2R1Y3RfWzAtOV0rXFwuaHRtbCI6ImdvdSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmdvdVxcLmNvbS9bYS16MC05X10rXFwuaHRtbCI6ImdvdSIsIl4oPzpodHRwfGh0dHBzKTovLyg/Ond3d1xcLnwpaWtqdGFvXFwuY29tL2dvb2RzLVswLTldK1xcLmh0bWwiOiJpa2p0YW8iLCJeKD86aHR0cHxodHRwcyk6Ly8oPzp3d3dcXC58KWJlc3RrZWVwXFwuY24vaXRlbS9cXGQrIjoiaWtqdGFvIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86aXRlbXxucClcXC51bGVcXC5jb20vaXRlbS9bMC05LV0rXFwuaHRtbCI6InVsZSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC5waGlsaXBzXFwuY29tXFwuY24vcHJvZHVjdC9cXHcrL2RldGFpbFxcLmh0bSI6InBoaWxpcHMiLCJeKD86aHR0cHxodHRwcyk6Ly9zaG9wXFwudGNsXFwuY29tL1Byb2R1Y3REZXRhaWwvaW5kZXgvaWQvXFxkK1xcLmh0bWwiOiJ0Y2wiLCJeKD86aHR0cHxodHRwcyk6Ly9tYWxsXFwudGNsXFwuY29tL2Zyb250L3Byb2R1Y3QvdG9Qcm9kdWN0L1thLXowLTldKyI6InRjbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmUtY2hhbmdob25nXFwuY29tL3dlYmFwcC93Y3Mvc3RvcmVzL3NlcnZsZXQvUHJvZHVjdFtcXHdfLV0rIjoiY2hhbmdob25nIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLmtvbmthXFwuY29tL2dvb2RzXFwucGhwXFw/aWQ9XFxkKyI6ImtvbmthIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLmtvbmthXFwuY29tL3Byb2R1Y3QtWzAtOV0rXFwuaHRtbCI6ImtvbmthIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLmhpc2Vuc2VcXC5jb20vSG9tZS9Qcm9kdWN0cy9kZXRhaWwvZ2lkL1xcZCsiOiJoaXNlbnNlIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86d3d3fHNob3ApXFwuaGlzZW5zZVxcLmNvbS8oPzpwcm9kdWN0fGl0ZW1zKS9bYS16MC05LV0rIjoiaGlzZW5zZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmluZWlnb1xcLmNvbS9Qcm9kdWN0L3Byb2R1Y3QuYXNweFxcPyY/aWQ9XFxkKyI6ImluZWlnbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNrZ1xcLmNvbS9cXGQrXFwuaHRtbCI6InNrZyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNrZ1xcLmNvbS9wcm9kdWN0L1swLTldK1xcLmh0bSI6InNrZyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm95ZWFoXFwuY29tL2dpdmVhd2F5LVswLTlhLXotXSsiOiJveWVhaCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm1vcmVmb29kXFwuY29tL3Byb2R1Y3RzL2luZm8vWzAtOV0rXFwuaHRtbCI6Im1vcmVmb29kIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuemhlblxcLmNvbS9wcm9kdWN0LVswLTldK1xcLmh0bWwiOiJ6aGVuIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLnZpdm9cXC5jb21cXC5jbi9pbmRleFxcLnBocC9wcm9kdWN0LVxcZCtcXC5odG1sIjoidml2byIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC52aXZvXFwuY29tXFwuY24vcHJvZHVjdC1bMC05XSsiOiJ2aXZvIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLnZpdm9cXC5jb21cXC5jbi9wcm9kdWN0L1swLTldKyI6InZpdm8iLCJeKD86aHR0cHxodHRwcyk6Ly9nZml2ZVxcLmIyY1xcLmVxaW1pbmd4aW5nXFwuY29tL3Byb2R1Y3QtXFxkK1xcLmh0bWwiOiJnZml2ZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjZwbVxcLmNvbS9wcm9kdWN0LyI6IjZwbSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjZwbVxcLmNvbS9wL1thLXowLTktXSsvcHJvZHVjdC8iOiI2cG0iLCJeKD86aHR0cHxodHRwcyk6Ly9zaG9wXFwuZ2lvbmVlXFwuY29tL2dvb2RzL1xcZCsiOiJnaW9uZWUiLCJeKD86aHR0cHxodHRwcyk6Ly96XFwuZ2lvbmVlXFwuY29tL2RldGFpbHMtcGMvXFx3Ky9pbmRleFxcLmh0bWwiOiJnaW9uZWUiLCJeKD86aHR0cHxodHRwcyk6Ly9zdG9yZVxcLmxpbmluZ1xcLmNvbS9zaG9wL2dvb2RzLVswLTldKyI6ImxpbmluZyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm1mOTEwXFwuY29tL3Byb2R1Y3QtWzAtOV0rXFwuaHRtbCI6Im1mOTEwIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuay10b3VjaFxcLmNuL3Byb2R1Y3QvZGV0YWlsL3Byb2RfaWQvXFxkK1xcLmh0bWwiOiJrLXRvdWNoIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuay10b3VjaFxcLmNuL1Byb2R1Y3QvUHJvZHVjdERldGFpbFxcP3Byb2R1Y3RpZCI6ImstdG91Y2giLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwuZ3JhaW5nZXJcXC5jbi9nL1xcZCsiOiJncmFpbmdlciIsIl4oPzpodHRwfGh0dHBzKTovL3BpYW9cXC4xNjNcXC5jb20vXFx3Ky9tb3ZpZS9cXGQrXFwuaHRtbCI6Ind5MTYzIiwiXig/Omh0dHB8aHR0cHMpOi8vbWFsbFxcLjE2M1xcLmNvbS9wL3Byb2R1Y3QvXFxkK1xcLmh0bWwiOiJ3eTE2MyIsIl4oPzpodHRwfGh0dHBzKTovL2RldGFpbFxcLnlhby5cXDk1MDk1XFwuY29tL2l0ZW1cXC5odG0iOiJ0YW9iYW8tOTUwOTUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5lYmF5XFwuY29tL2l0bS9bMC05YS16QS1aXSsiOiJlYmF5IiwiXig/Omh0dHB8aHR0cHMpOi8vKD86d3d3XFwufCkxMDB5dWVcXC5jb20vcHJvZHVjdC1bMC05XStcXC5odG1sIjoiMTAweXVlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZmVpbml1XFwuY29tL2l0ZW0vWy1cXHddKyI6ImZlaW5pdSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxlbWFsbFxcLmNvbS9wcm9kdWN0LyI6ImxlbWFsbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxlbWFsbFxcLmNvbS9jbi8oPzp0dnxzYWxlfHBob25lKS9cXHcrIjoibGVtYWxsIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubGVtYWxsXFwuY29tLyg/OmxlXzJ8bGVfbWF4fGxlXzFwcm98eDU1cHJvfHg2NXx4NTV8eDQzc3x4NDBzfHVtYXgxMjB8Y2hhbzRtYXg3MCkiOiJsZW1hbGwiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5sZW1hbGxcXC5jb20vKD86Y2hhbzR8bGVfbWF4fGxlX21heDJ8bGVfMnByb3xsZV8yfGxlX21heDJ8eDQwc3g0MHMpLyg/OlxcdysvfClcXHcrXFwuaHRtbCI6ImxlbWFsbCIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC5mZWluaXVcXC5jb20vWzAtOV0rIjoiZmVpbml1IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueGdiYWJ5XFwuY29tL3Byb2R1Y3QvWzAtOV0rIjoiYmJyZWFkeSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnp1aXBpblxcLmNuL1swLTlhLXotXStcXC5odG1sIjoienVpcGluIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuenVpcGluXFwuY24vZ29vZHNcXD9pZD1cXGQrIjoienVpcGluIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLmZlaWZlaVxcLig/OmNufGNvbSkvXFx3K1xcLmh0bWwiOiJmZWlmZWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5mZWlmZWlcXC5jb20vb3JkZXIvLS9wcm9kdWN0LWluZm8vcHJvZHVjdG5hbWUvWzAtOV0rXFwuaHRtbCI6ImZlaWZlaSIsIl4oPzpodHRwfGh0dHBzKTovL2d1YW5nXFwuY29tL2Jhb2JlaS9cXGQrIjoiZ3VhbmciLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5oYWl0YW9jaGVuZ1xcLmNvbS9Qcm9kdWN0L0RldGFpbC1cXGQrXFwuaHRtbCI6ImhhaXRhb2NoZW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwucnJzKD86amt8KVxcLmNvbS9wcm9kdWN0L1swLTldK1xcLmh0bWwiOiJycnMiLCJeKD86aHR0cHxodHRwcyk6Ly9zaG9wXFwuY2NiXFwuY29tL3Byb2R1Y3RzL3BkX1swLTldK1xcLmpodG1sIjoiY2NiIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubWVpbGlzaHVvXFwuY29tLyg/OnByb218c2hhcmUpL2l0ZW0vXFxkKyI6Im1laWxpc2h1byIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm1laWxpc2h1b1xcLmNvbS9zaGFyZS9bXFxkXSsiOiJtZWlsaXNodW8iLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwubWVpbGlzaHVvXFwuY29tL2RldGFpbC8iOiJtZWlsaXNodW8iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tb2d1amllXFwuY29tL3R1YW4vZGV0YWlsL1xcdysiOiJtb2d1amllIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLm1vZ3VqaWVcXC5jb20vZGV0YWlsL1xcdysiOiJtb2d1amllIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubW9ndWppZVxcLmNvbS9ub3RlLy4qP3Nob3d0eXBlPWdvb2QiOiJtb2d1amllIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc3VwdW1hbGxcXC5jb20vcHJvZHVjdHMvWzAtOV0rXFwuaHRtbCI6InN1cHVtYWxsIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLmNvb2xwYWRcXC4oPzpjb218Y24pL2dvb2RzL1xcZCtcXC5odG0iOiJjb29scGFkIiwiXig/Omh0dHB8aHR0cHMpOi8vKHd3d1xcLik/eWlndW9cXC5jb20vcHJvZHVjdC9cXGQrXFwuaHRtbCI6InlpZ3VvIiwiXig/Omh0dHB8aHR0cHMpOi8vKHd3d1xcLik/eWlndW9cXC5jb20vQ29tbW9kaXR5RGV0YWlsXFwuYXNweFxcP0NvbW1vZGl0eUlkPSI6InlpZ3VvIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLndhbmdnb3VcXC5jb20vIjoid2FuZ2dvdSIsIl4oPzpodHRwfGh0dHBzKTovL21hbGxcXC5qaWFcXC5jb20vaXRlbS8iOiJqaWEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5qaXVtZWlcXC5jb20vcHJvZHVjdC9bYS16MC05Xy1dK1xcLnNodG1sIjoiaml1bWVpIiwiXig/Omh0dHB8aHR0cHMpOi8vd2VpZ291XFwuYmFpZHVcXC5jb20vaXRlbSI6ImJhaWR1LXdlaWdvdSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC5sZXR2XFwuY29tL3Byb2R1Y3QvIjoibGV0diIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLih4aWFvKT9taVxcLmNvbS8oZ29vZHN8aXRlbSkvIjoieGlhb21pIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLm1pXFwuY29tL1swLTldK1xcLmh0bWwiOiJ4aWFvbWkiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwubWlcXC5jb20vcHJvZHVjdC9bMC05XStcXC5odG1sIjoieGlhb21pIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLm1pXFwuY29tL2J1eSg/OnBob25lfG1pdHZ8bWl0dlxcdyspL1thLXowLTldKyI6InhpYW9taSIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC5taVxcLmNvbS9zdGF0aWMvW2EtejAtOV0rIjoieGlhb21pIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLm1pXFwuY29tL2J1eS9bYS16MC05XSsiOiJ4aWFvbWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5taVxcLmNvbS8oPzptaTV8bWltYXh8cmVkbWlub3RlNHxub3RlM3xob25nbWkzc3xyZWRtaXByb3xob25nbWkzfGhvbmdtaTN4fG1pYm9va2FpcnxtaXBhZDJ8bWl0djNzfG1pdHYzc3xtaXR2M3N8bWl0djN8bWl0djN8bWl0djN8dHZ6anxoZXppM3N8aGV6aTN8aGV6aW1pbml8c2hifG1pdnIxY3xtaXdpZmkzfHNjb290ZXJ8bWliaWN5Y2xlfGtldHRsZXxkaWFuZmFuYmFvfG1pY2FtZXJhfHhpYW95aXxhaXIyfHdhdGVyfHdhdGVyMnxpaGVhbHRoMnxpaGVhbHRofG1qc21hcnRsYW1wfGRlc2tsYW1wfG1pdHV8Y3V0ZXx3YW5nZ3VhbnxzaG91aHVhbjJ8c2hvdWh1YW58c2NhbGV8bWl0dXdhdGNofG1pd2lmaW1pbml8bWl3aWZpbGl0ZXxtaXdpZmkzY3xtaXdpZml8ZGlhbnl1YW4xMDAwMHxkaWFueXVhbjEwMDAwfGRpYW55dWFuNTAwMHxjaGF4aWFuYmFuMnxwb3dlcnN0cmlwfHJlY2hhcmdlcnxjaG9uZ2RpYW5xaTRrb3V8aGVhZHBob25lfHF1YW50aWV8Y2Fwc3VsZWVhcnBob25lfHBvY2tldGF1ZGlvfGxpdHRsZWF1ZGlvfHlpbnhpYW5nfHNwZWFrZXJ8cmFkaW98bWltb3NkZ2V8Z2VscGVufHBpbGxvd1oxfHBpbGxvd1oyfHJvb21yb2JvdHxyZWNoYXJnZXI3fGNoYXJnZXJ8Ymx1ZXRvb3RoLWhlYWRzZXR8c3VpdGNhc2V8cmVkbWlcXHcrfG1pNXNwbHVzfG1pNXN8bWl4fG1pbm90ZVxcdyt8bWk1Y3xtYXhcXHcrfG1pNnxtaXBhZDN8bWl0dlxcdyspLyI6InhpYW9taSIsCiJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5oYW5kdVxcLmNvbS9nb29kcy0iOiJoYW5kdSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnl1bW15NzdcXC5jb20vcHJvZHVjdC9bMC05XStcXC5odG1sIjoieXVtbXk3NyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmZydWl0ZGF5XFwuY29tL3dlYi9wcm8vWzAtOV0rIjoiZnJ1aXRkYXkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5mcnVpdGRheVxcLmNvbS9wcm9kZXRhaWwvaW5kZXgvWzAtOV0rIjoiZnJ1aXRkYXkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5iZW5sYWlcXC5jb20vaXRlbXM/LVxcZCsiOiJiZW5sYWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5iZW5sYWlcXC5jb20vW2Etei9dKy9pdGVtLVswLTldK1xcLmh0bWwiOiJiZW5sYWkiLCJeKD86aHR0cHxodHRwcyk6Ly90YW9zaHVcXC5jb20vXFxkK1xcLmh0bWwiOiJ0YW9zaHUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tZWlsZWxlXFwuY29tL2NhdGVnb3J5LVthLXpdKy9nb29kcy1bMC05XStcXC5odG1sIjoibWVpbGVsZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm1laWxlbGVcXC5jb20vdHVhbmdvdS9pbmZvLVswLTldKy5odG1sIjoibWVpbGVsZS10dWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubWVpbGVsZVxcLmNvbS9taWFvc2hhL21zLVswLTldKy5odG1sIjoibWVpbGVsZS1tcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmdqd1xcLmNvbS9wcm9kdWN0L2l0ZW0iOiJnanciLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5nandcXC5jb20vSG9tZS9UdWFuSXRlbS9cXGQrXFwuaHRtIjoiZ2p3IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZ2p3XFwuY29tL1RyeURyaW5rL2l0ZW0taWQtWzAtOV0rXFwuaHRtIjoiZ2p3IiwiXig/Omh0dHB8aHR0cHMpOi8vc3RvcmVcXC5hcHBsZVxcLmNvbS9jbi9wcm9kdWN0LyI6ImFwcGxlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYXBwbGVcXC5jb20vY24vKD86bWFjYm9va3xpcGFkLXByb3xpcGFkfGlwYWQtbWluaS00fGlwaG9uZS03fGlwaG9uZS1cXHcrfGlwb2Qtc2h1ZmZsZSkvIjoiYXBwbGUiLCJeKD86aHR0cHxodHRwcyk6Ly9zdG9yZVxcLmFwcGxlXFwuY29tL2NuL2J1eS1pcGhvbmUvaXBob25lXFx3KyI6ImFwcGxlIiwiXig/Omh0dHB8aHR0cHMpOi8vc3RvcmVcXC5hcHBsZVxcLmNvbS9jbi9idXktbWFjL1xcdystXFx3K1xcP3Byb2R1Y3Q9XFx3Ky9cXHcrIjoiYXBwbGUiLCJeKD86aHR0cHxodHRwcyk6Ly9zdG9yZVxcLmFwcGxlXFwuY29tL2NuL2J1eS1pcGFkL2lwYWQtXFx3Ky1cXHcrIjoiYXBwbGUiLCJeKD86aHR0cHxodHRwcyk6Ly9zdG9yZVxcLmFwcGxlXFwuY29tL2NuL2J1eS1pcG9kL2lwb2QtXFx3Ky1cXHcrIjoiYXBwbGUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5hcHBsZVxcLmNvbS9jbi9zaG9wL2J1eS1bYS16XSsvW2EtejAtOS1dKyI6ImFwcGxlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuajFcXC5jb20vcHJvZHVjdC8iOiJqMSIsIl4oPzpodHRwfGh0dHBzKTovL21pYW9cXC5qMVxcLmNvbS9wcm9kdWN0LyI6ImoxLW1pYW8iLCJeKD86aHR0cHxodHRwcyk6Ly8oPzp3d3dcXC58KXp6bDM2NVxcLmNvbS9wcm9kdWN0LVxcZCsiOiJ6emwzNjUiLCJeKD86aHR0cHxodHRwcyk6Ly9tb2JpbGVcXC4xMzlzaG9wXFwuY29tLy4qPy9cXGQrL1xcZCtcXC5odG0iOiIxMzlzaG9wIiwiXig/Omh0dHB8aHR0cHMpOi8vMTM5c2hvcFxcLmNvbS9bYS16MC05LV0rL1thLXowLTldKy9bYS16MC05XStcXC5odG0iOiIxMzlzaG9wIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueWl3dWdvdVxcLmNvbS9wcm9kdWN0L2RldGFpbC9bMC05XStcXC5odG1sIjoieWl3dWdvdSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnpoaXdvXFwuY29tL3Byb2R1Y3QvXFxkKyI6InpoaXdvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuemhpd29cXC5jb20vZ3JvdXAvXFxkKyI6InpoaXdvLXR1YW4iLCJeKD86aHR0cHxodHRwcyk6Ly9bXlxcLl0rXFwubWlxaVxcLmNuL1teL10rL3BcXGQrIjoibWlxaSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm1pcWlcXC5jbi9bYS16XSsvWzAtOV0rXFwuaHRtbCI6Im1pcWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5jYW1lbFxcLmNvbVxcLmNuL1thLXpBLVowLTldKyhfW2EtekEtWjAtOV0rKSsvW1xcd10rXFwuc2h0bWwiOiJjYW1lbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmNhbWVsXFwuY29tXFwuY24vW2EtekEtWjAtOV9dKy9bQS1aYS16MC05XStcXC5zaHRtbCI6ImNhbWVsIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwua3VhaXNodWJhb1xcLmNvbS9cXGQrL1xcZCsiOiJrdWFpc2h1YmFvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3Lmt1YWlzaHViYW8uY29tL2cvIjoia3VhaXNodWJhbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmp1ZWdnXFwuY29tL3RlbXBsZXRzL0RlZmF1bHRHcmVlbi9Qcm9kdWN0XFwuanNwIjoianVlZ2ciLCJeKD86aHR0cHxodHRwcyk6Ly9tYWxsXFwuMTAwMTBcXC5jb20vZ29vZHNkZXRhaWwvW1xcZF0rXFwuaHRtbCI6Im1hbGwxMDAxMCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLndvd3NhaVxcLmNvbS9nb29kcy8iOiJ3b3dzYWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC50aWFucGluXFwuY29tL2l0ZW0vIjoidGlhbnBpbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnRvb3Rvb1xcLmNuL3Byb2R1Y3QtIjoidG9vdG9vIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudG9vdG9vXFwuY24vW2Etel0rL2RldGFpbC9bMC05XSsiOiJ0b290b28iLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwubWluc2hlbmdlY1xcLmNvbS9bYS16XS0oPzp8W2EtekEtWiUwLTldKykvW2EtejAtOS1dK1xcLmpodG1sIjoibWluc2hlbmdlYyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNmYmVzdFxcLmNvbS9odG1sLyhzZnYpP3Byb2R1Y3RzLyI6InNmYmVzdCIsIl4oPzpodHRwfGh0dHBzKTovL2h0XFwuc2ZiZXN0XFwuaGsvWzAtOWEtel9dK1xcLmh0bSI6InNmYmVzdCIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3BcXC5sZW5vdm9cXC5jb21cXC5jbi9wcm9kdWN0LSI6Imxlbm92byIsIl4oPzpodHRwfGh0dHBzKTovLyg/Oml0ZW18XFx3KylcXC5sZW5vdm9cXC5jb21cXC5jbi9wcm9kdWN0L1xcZCtcXC5odG1sIjoibGVub3ZvIiwiXig/Omh0dHB8aHR0cHMpOi8vc2hvcFxcLmxlbm92b21vYmlsZVxcLmNvbS9TaG93UGhvbmUuYXNweFxcP0dkc0lEPSI6Imxlbm92byIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxlbm92b21vYmlsZVxcLmNvbS9zdG9yZS9cXGQrXFwuaHRtbCI6Imxlbm92byIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxlbm92b1xcLmNvbVxcLmNuL3Byb2R1Y3QvWzAtOV0rXFwuaHRtbCI6Imxlbm92byIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxlbm92b1xcLmNvbVxcLmNuL2FidGVzdC9bMC05X10rXFwuc2h0bWwiOiJsZW5vdm8iLCJeKD86aHR0cHxodHRwcyk6Ly90aGlua3BhZFxcLmxlbm92b1xcLmNvbVxcLmNuL3Byb2R1Y3QvWzAtOV0rXFwuaHRtbCI6Imxlbm92byIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnZtYWxsXFwuY29tL2l0ZW0vXFxkKy8oPzppbmRleHxidXkpIjoidm1hbGwiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC52bWFsbFxcLmNvbS9wcm9kdWN0L1xcZCtcXC5odG1sIjoidm1hbGwiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5paHVzaFxcLmNvbS9wcm9kdWN0IjoiaWh1c2giLCJeKD86aHR0cHxodHRwcyk6Ly8oPzp3d3dcXC4pP2ZjbHViXFwuY24vZ29vZHMiOiJmY2x1YiIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC55b2hvYnV5XFwuY29tL3Byb2R1Y3QvXFx3Ky9cXHcrXFwuaHRtbCI6InlvaG9idXkiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwueW9ob2J1eVxcLmNvbS9cXHcrXFwuaHRtbCI6InlvaG9idXkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC55b2hvYnV5XFwuY29tL3Byb2R1Y3QvXFxkK1xcLmh0bWwiOiJ5b2hvYnV5IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZmNsdWJcXC5jbi90dWFuZ291RGV0YWlsXFwuaHRtbCI6ImZjbHViIiwiXig/Omh0dHB8aHR0cHMpOi8vanVcXC50YW9iYW9cXC5jb20vdGcvaG9tZVxcLmh0bS4qKGl0ZW1fKT9pZD1bXFxkXSsiOiJ0YW9iYW8tanUiLCJeKD86aHR0cHxodHRwcyk6Ly9kZXRhaWxcXC50bWFsbFxcLmNvbS9pdGVtXFwuaHRtIjoidG1hbGwiLCJeKD86aHR0cHxodHRwcyk6Ly93b3JsZFxcLnRtYWxsXFwuY29tL2l0ZW0vWzAtOV0rLmh0bSI6InRtYWxsIiwiXig/Omh0dHB8aHR0cHMpOi8vZGV0YWlsXFwudG1hbGxcXC5oay9oay9pdGVtLmh0bSI6InRtYWxsIiwiXig/Omh0dHB8aHR0cHMpOi8vZGV0YWlsXFwudG1hbGxcXC5oay9pdGVtXFwuaHRtIjoidG1hbGwiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwudGFvYmFvXFwuY29tL2l0ZW0uaHRtIjoidGFvYmFvIiwiXig/Omh0dHB8aHR0cHMpOi8vMlxcLnRhb2Jhb1xcLmNvbS9pdGVtXFwuaHRtIjoidGFvYmFvLXhpYW55dSIsIl4oPzpodHRwfGh0dHBzKTovL2FpXFwudGFvYmFvXFwuY29tL2F1Y3Rpb24iOiJhaS10YW9iYW8iLCJeKD86aHR0cHxodHRwcyk6Ly9jaGFvc2hpXFwuZGV0YWlsXFwudG1hbGxcXC5jb20vaXRlbVxcLmh0bSI6InRtYWxsIiwiXig/Omh0dHB8aHR0cHMpOi8vZGV0YWlsXFwuanVcXC50YW9iYW9cXC5jb20vaG9tZVxcLmh0bSI6InRhb2Jhby1qdSIsIl4oPzpodHRwfGh0dHBzKTovLyg/OmFyY2hpdmUtc2hvcHxzaG9wfHd3d3xkYXl8bHV4KVxcLnZpcChzaG9wKT9cXC5jb20vZGV0YWlsIjoidmlwc2hvcCIsIig/Omh0dHBzfGh0dHApOlxcL1xcL2RldGFpbFxcLnZpcFxcLmNvbVxcL2RldGFpbC1cXGQrIjoidmlwc2hvcCIsIl4oPzpodHRwfGh0dHBzKTovL3R1YW5cXC5sZWZlbmdcXC5jb20vLio/L1xcZCtfXFxkK1xcLmh0bWwiOiJsZWZlbmciLCJeKD86aHR0cHxodHRwcyk6Ly8oPzp3d3d8cHJvZHVjdClcXC5sZWZlbmdcXC5jb20vKHByb2R1Y3R8cGtsaXN0KS8iOiJsZWZlbmciLCJeKD86aHR0cHxodHRwcyk6Ly8oPzp3d3d8MWhvdXIpXFwuanhkeWZcXC5jb20vcHJvZHVjdFstL11bXFxkXSsiOiJqeGR5ZiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmp4ZHlmXFwuY29tL1Byb2R1Y3RDb250ZW50IjoianhkeWYiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC50bmljZVxcLmNvbS9wcm9kdWN0LyI6InRuaWNlIiwiXig/Omh0dHB8aHR0cHMpOi8vYXVjdGlvbjFcXC5wYWlwYWlcXC5jb20vIjoicGFpcGFpIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLnhpbmJhaWdvXFwuY29tL0dvb2RzL1N0eWxlRGV0YWlsIjoieGluYmFpZ28iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5vcmJpc1xcLmNvbVxcLmNuLipwcm9kdWN0XFwtW1xcZF0rIjoib3JiaXMiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5zZmh0XFwuY29tL2RldGFpbC9bMC05XStcXC5odG1sIjoic2ZodCIsIl4oPzpodHRwfGh0dHBzKTovLyg/Ond3d3xjb3NtZXRpYylcXC5kMVxcLmNvbVxcLmNuL3Byb2R1Y3QvIjoiZDEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5jaGF6dW9cXC5jb20vUHJvZHVjdC9wXFwtW1xcZF0rIjoiY2hhenVvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudTFiYWJ5XFwuY29tL3Byb2R1Y3RcXC1bXFxkXSsiOiJ1MWJhYnkiLCJeKD86aHR0cHxodHRwcyk6Ly8od3d3XFwuKT9ob21ldnZcXC5jb20vdnZzaG9wUHJvZHVjdFZpZXcvcGlkXFwtW1xcZF0rXFwuamh0bWwiOiJob21ldnYiLCJeKD86aHR0cHxodHRwcyk6Ly8od3d3XFwuKT9ob21ldnZcXC5jb20vdnZzaG9wUHJvZHVjdFZpZXdcXC5qaHRtbCI6ImhvbWV2diIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnBhaXhpZVxcLm5ldC9zaG9lXFwtLitcXC5odG1sIjoicGFpeGllIiwiXig/Omh0dHB8aHR0cHMpOi8vdHVhblxcLnBhaXhpZVxcLm5ldC9bMC05XStcXC5odG1sIjoicGFpeGllLXR1YW4iLCJeKD86aHR0cHxodHRwcyk6Ly9mYXhpYW5cXC5wYWl4aWVcXC5uZXQvWzAtOV0rXFwuaHRtbCI6InBhaXhpZS1mYXhpYW4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC50YW8zY1xcLmNvbS8ob3V0bGV0cy8pP3Byb2R1Y3QvW1xcZF0rXFwuaHRtbCI6InRhbzNjIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuem03XFwuY24vZ29vZHMiOiJ6bTciLCJeKD86aHR0cHxodHRwcyk6Ly9zXFwuZXRhb1xcLmNvbS9pdGVtL1tcXGRdK1xcLmh0bWwiOiJldGFvIiwiXig/Omh0dHB8aHR0cHMpOi8vc1xcLmV0YW9cXC5jb20vc2VhcmNoXFw/ZXBpZD1bXFxkXSsiOiJldGFvIiwiXig/Omh0dHB8aHR0cHMpOi8vcHJvZHVjdFxcLnBjaG91c2VcXC5jb21cXC5jbi9pdGVtL1tcXGRdK1xcLmh0bWwiOiJwY2hvdXNlIiwiXig/Omh0dHB8aHR0cHMpOi8vYnV5XFwuZGFwaG5lXFwuY24vZ29vZHNcXC5waHAiOiJkYXBobmUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5sdWNlbWFsbFxcLmNvbVxcLmNuLy4rL1tcXGRdK1xcLmh0bWwiOiJsdWNlbWFsbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxpZmV2Y1xcLmNvbS9kZXRhaWwvIjoibGlmZXZjIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZWFzeTM2MVxcLmNvbS9bXlxcP10qZ29vZHMtW1xcZF0rXFwuaHRtbCI6ImVhc3kzNjEiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwuMzYwaHFiXFwuY29tL3NwdVxcLVtcXGRdK1xcLmh0bWwiOiIzNjBocWIiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwuMzYwaHFiXFwuY29tL1tcXGRdK1xcLmh0bWwiOiIzNjBocWIiLCJeKD86aHR0cHxodHRwcyk6Ly9xXFwuMzYwaHFiXFwuY29tL2RldGFpbC9bXFxkXFxfXStcXC5odG1sIjoiMzYwaHFiIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZ291aml1d2FuZ1xcLmNvbS9wcm9kdWN0L2l0ZW1cXC1pZFxcLVtcXGRdK1xcLmh0bSI6ImdvdWppdXdhbmciLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5odWltYWkzNjVcXC5jb20vZ29vZHNcXC1bXFxkXStcXC5odG1sIjoiaHVpbWFpMzY1IiwiXig/Omh0dHB8aHR0cHMpOi8vKHd3d3x0dWFufGRpbmd6aGkpXFwuaml1eGlhblxcLmNvbS8oZ29vZHN8dHVhbl9kZXRhaWwpXFwtLitcXC5odG0iOiJqaXV4aWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwud2luZW5pY2VcXC5jb20vcF9bXFxkXStcXC5zaHRtbCI6IndpbmVuaWNlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueWVzbXl3aW5lXFwuY29tL2dvb2RzL1tcXGRdK1xcLmh0bWwiOiJ5ZXNteXdpbmUiLCJeKD86aHR0cHxodHRwcyk6Ly9tYWxsXFwueWVzbXl3aW5lXFwuY29tL3Nob3AvanVua2FuZy9pdGVtLVtcXGRdKyI6Inllc215d2luZSIsIl4oPzpodHRwfGh0dHBzKTovL21hbGxcXC55ZXNteXdpbmVcXC5jb20vc2hvcC9bXFx3XSsvaXRlbS1bXFxkXSsiOiJ5ZXNteXdpbmUiLCJeKD86aHR0cHxodHRwcyk6Ly9tYWxsXFwueWVzbXl3aW5lXFwuY29tL2dyb3VwYnV5L1xcZCtcXC5odG1sIjoieWVzbXl3aW5lIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYmFuZ2dvXFwuY29tL0dvb2RzL1tcXGRdK1xcLnNodG1sIjoiYmFuZ2dvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYmFuZ2dvXFwuY29tL2dvb2RzX1swLTldK1xcLnNodG1sIjoiYmFuZ2dvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYmFuZ2dvXFwuY29tL2dvb2RzL1swLTlBLVphLXpdK1xcLnNodG1sIjoiYmFuZ2dvIiwiXig/Omh0dHB8aHR0cHMpOi8vcGxveVxcLmJhbmdnb1xcLmNvbS9zZWNvbmQvWzAtOS1fXStcXC5zaHRtbCI6ImJhbmdnbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnlhbnl1ZVxcLmNuL3Ntb2tlXFwtcHJvZHVjdFxcLVtcXGRdK1xcLmh0bWwiOiJ5YW55dWUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5iZWFyYnV5XFwuY29tXFwuY24vZ29vZHNcXC5waHBcXD9pZD1bXFxkXSsiOiJiZWFyYnV5IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYW1hem9uXFwuY24vLio/KD86ZHAvfGdwL3Byb2R1Y3QvfGRldGFpbEFwcCkiOiJhbWF6b24iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5hbWF6b25cXC4oY29tfGNvXFwudWt8ZGV8Y29cXC5qcHxmcnxjYXxjbnxpdHxlcykvLio/KD86ZHAvfGdwL3Byb2R1Y3QvfGRldGFpbEFwcCkoPyFzZWFyY2gpIjoiYW1hem9uIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86cHJvZHVjdFxcLmRhbmdkYW5nXFwuY29tL1teXFw/XSpwcm9kdWN0LmFzcHh8cmVjb1xcLmRhbmdkYW5nXFwuY29tL3JlY29fcHViXFwucGhwKVxcP3Byb2R1Y3RfaWQ9XFxkKyI6ImRhbmdkYW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86cHJvZHVjdHxkZXRhaWwpXFwuZGFuZ2RhbmdcXC5jb20vW1xcZF0rIjoiZGFuZ2RhbmciLCJeKD86aHR0cHxodHRwcyk6Ly8oPzpwcm9kdWN0fGRldGFpbClcXC5nbG9iYWxkYW5nZGFuZ1xcLmhrL1tcXGRdK1xcLmh0bWwiOiJkYW5nZGFuZyIsIl4oPzpodHRwfGh0dHBzKTovL3pcXC5qZFxcLmNvbS9wcm9qZWN0L2RldGFpbHMvXFxkK1xcLmh0bWwiOiIzNjBidXkiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwuamRcXC5jb20vXFxkK1xcLmh0bWwiOiIzNjBidXkiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwueWl5YW9qZFxcLmNvbS9cXGQrXFwuaHRtbCI6IjM2MGJ1eSIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC5qZFxcLmhrL1xcZCtcXC5odG1sIjoiMzYwYnV5IiwiXig/Omh0dHB8aHR0cHMpOi8vcGFpbWFpXFwuamRcXC5jb20vXFxkKyI6IjM2MGJ1eS1wYWltYWkiLCJeKD86aHR0cHxodHRwcyk6Ly9kYXlcXC5qZFxcLmNvbS9pdGVtLy4qXFwuaHRtbCI6IjM2MGJ1eS1kYXkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC4oPzozNjBidXl8amQpXFwuY29tL3Byb2R1Y3QvXFxkK1xcLmh0bWwiOiIzNjBidXkiLCJeKD86aHR0cHxodHRwcyk6Ly8oPzpib29rfGUpXFwuKD86MzYwYnV5fGpkKVxcLmNvbS9cXGQrXFwuaHRtbCI6IjM2MGJ1eS1ib29rIiwiXig/Omh0dHB8aHR0cHMpOi8vcmVcXC5qZFxcLmNvbS9jcHMvaXRlbS9bMC05XStcXC5odG1sIjoiMzYwYnV5LXJlIiwiXig/Omh0dHB8aHR0cHMpOi8vYXVjdGlvblxcLmpkXFwuY29tL1swLTldKyI6IjM2MGJ1eS1hdWN0aW9uIiwiXig/Omh0dHB8aHR0cHMpOi8vbXZkXFwuKD86MzYwYnV5fGpkKVxcLmNvbS9cXGQrXFwuaHRtbCI6IjM2MGJ1eS1tdmQiLCJeKD86aHR0cHxodHRwcyk6Ly90dWFuXFwuKD86MzYwYnV5fGpkKVxcLmNvbS90ZWFtXFwtXFxkK1xcLmh0bWwiOiIzNjBidXktdHVhbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLig/OjM2MGJ1eXxqZClcXC5jb20vdHVhbi9bXFxkXStcXC1bXFxkXStcXC5odG1sIjoiMzYwYnV5LXR1YW4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC4oPzozNjBidXl8amQpXFwuY29tL2JpZ2ltYWdlXFwuYXNweFxcP2lkPVxcZCsiOiIzNjBidXktYmlnaW1hZ2UiLCJeKD86aHR0cHxodHRwcyk6Ly9jbHViXFwuamRcXC5jb20vYmJzRGV0YWlsL1thLXowLTlfLV0rXFwuaHRtbCI6IjM2MGJ1eS1jbHViIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuMzYwdG9wXFwuY29tL3Byb2R1Y3QvXFxkK1xcLmh0bWwiOiIzNjB0b3AiLCJeKD86aHR0cHxodHRwcyk6Ly9kZXRhaWxcXC56b2xcXC5jb21cXC5jbi8uKj8oPzppbmRleCkuKj9cXC5zaHRtbCI6InpvbCIsIl4oPzpodHRwfGh0dHBzKTovL2RldGFpbFxcLnpvbFxcLmNvbVxcLmNuL1tcXGRdKy9bXFxkXSsvW2EtekEtWl0rXFwuc2h0bWwiOiJ6b2wiLCJeKD86aHR0cHxodHRwcyk6Ly9kZWFsZXJcXC56b2xcXC5jb21cXC5jbi9kZXRhaWwvW1xcZF0rL1tcXGRdK19bXFxkXSsuaHRtbCI6InpvbCIsIl4oPzpodHRwfGh0dHBzKTovLyg/Ond3d3xtYWxsKVxcLnpvbFxcLmNvbS9kZXRhaWwiOiJ6b2wiLCJeKD86aHR0cHxodHRwcyk6Ly9kZXRhaWxcXC56b2xcXC5jb21cXC5jbi9zZXJpZXMvWzAtOV0rL1swLTlfXStcXC5odG1sIjoiem9sIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZmdsYWR5XFwuY24vQk1zZ0wiOiJmZ2xhZHkiLCJeKD86aHR0cHxodHRwcyk6Ly8od3d3Lnwpb3VrdVxcLmNvbS8oPzpnb29kc3xwcm9kdWN0KSI6Im91a3UiLCJeKD86aHR0cHxodHRwcyk6Ly8od3d3Lnwpb3VrdVxcLmNvbS9jbi9bMC05YS16LV9dK1xcLmh0bWwiOiJvdWt1IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubmV3ZWdnKFxcLmNvbSk/XFwuY24vUHJvZHVjdC8uKj9cXC5odG0iOiJuZXdlZ2ciLCJeKD86aHR0cHxodHRwcyk6Ly96aGFkYW5cXC5uZXdlZ2coXFwuY29tKT9cXC5jbi9Cb21iLVxcZCtcXC5odG0iOiJuZXdlZ2ciLCJeKD86aHR0cHxodHRwcyk6Ly96aGFkYW5cXC5uZXdlZ2dcXC5jbiI6Im5ld2VnZy16aGFkYW4iLCJeKD86aHR0cHxodHRwcyk6Ly90dWFuXFwubmV3ZWdnXFwuY24vZGVhbC9bMC05XStcXC5odG0iOiJuZXdlZ2ctdHVhbiIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC5raW1pc3NcXC5jb20vcHJvZHVjdC8iOiJraW1pc3MiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5yZWRiYWJ5XFwuY29tXFwuY24vLio/L1xcZHs3fVxcZCtcXC5odG1sIjoicmVkYmFieSIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC5tMThcXC5jb20vIjoibTE4IiwiXig/Omh0dHB8aHR0cHMpOi8vbGlzdFxcLm0xOFxcLmNvbS9pdGVtLyI6Im0xOCIsIl4oPzpodHRwfGh0dHBzKTovL2xpc3RcXC5tMThcXC5jb20vZy8iOiJtMTgiLCJeKD86aHR0cHxodHRwcyk6Ly9saXN0XFwubTE4XFwuY29tLy4qR29vZHMuYXNweCI6Im0xOCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm0xOFxcLmNvbS9pdGVtLyI6Im0xOCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLncxXFwuY24vZ29vZHMiOiJ3MSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmFzaGZvcmRcXC5jb20vdXMvd2F0Y2hlcy9bYS16MC05LV0rL1thLXowLTktXSsiOiJhc2hmb3JkIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc2VwaG9yYVxcLmNuL3Byb2R1Y3REZXRhaWxBY3Rpb24vIjoic2VwaG9yYWNwcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNlcGhvcmFcXC5jbi9wcm9kdWN0L1xcZCtcXC5odG1sIjoic2VwaG9yYWNwcyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNlcGhvcmFcXC5jbi90cnlvdXQvXFxkK1xcLmh0bWwiOiJzZXBob3JhY3BzIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubGFmYXNvXFwuY29tLyg/OnByb2R1Y3QvfGdvb2RzL3Byb2R1Y3RfZGV0YWlsKSI6ImxhZmFzbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNcXC5jbi8oPyFwYWdlKVxcd3syLH1cXC1bQS1aYS16MC05XSs/WzAtOV0rP1tBLVphLXowLTldKz9bXFwtXypcXC5dLio/aHRtbCI6InMiLCJeKD86aHR0cHxodHRwcyk6Ly93P2l0ZW1cXC4oPzo1MWJ1eXx5aXh1bilcXC5jb20vIjoiNTFidXkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5va2J1eVxcLmNvbS8uKj8vZGV0YWlsLSI6Im9rYnV5IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwub2tidXlcXC5jb20vLio/LVtcXGRdKy5odG1sIjoib2tidXkiLCJeKD86aHR0cHxodHRwcyk6Ly8od3d3XFwuKT9sZXRhb1xcLmNvbS9bXlxcP10qc2hvZVxcLVteXFx+XSokIjoibGV0YW8iLCJeKD86aHR0cHxodHRwcyk6Ly8od3d3XFwuKT9sZXRhb1xcLmNvbS9bYS16MC05XSsvZGV0YWlsXFwuZG9cXD9pZD0iOiJsZXRhbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmJ1eTAwN1xcLmNvbS8uKj8vLio/L1tBLVphLXpcXGRcXF9cXC1dKj9cXC5odG1sIjoiYnV5MDA3IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudGFveGllXFwuY29tL2NvbW1vZGl0eSI6InRhb3hpZSIsIl4oPzpodHRwfGh0dHBzKTovL2p1XFwuc3VuaW5nXFwuY29tL3Byb2R1Y3QtW2EtekEtWjAtOV0rXFwuaHRtIjoic3VuaW5nLWp1IiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLnN1bmluZ1xcLmNvbS9bMC05XStcXC5odG1sIjoic3VuaW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLnN1bmluZ1xcLmNvbS9bMC05XSsvWzAtOV0rXFwuaHRtbCI6InN1bmluZyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnN1bmluZ1xcLig/OmNvbXxjbikvd2ViYXBwL3djcy9zdG9yZXMvc2VydmxldC8oUHJvZHxwcmQpIjoic3VuaW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vcGFpXFwuc3VuaW5nXFwuKD86Y29tfGNuKS9zaGFucGFpL2RldGFpbC8iOiJzdW5pbmctcGFpIiwiXig/Omh0dHB8aHR0cHMpOi8vcGFpXFwuc3VuaW5nXFwuKD86Y29tfGNuKS9zaGFucGFpL1swLTldL2RldGFpbC9kL1swLTldKy1bMC05XSI6InN1bmluZy1wYWkiLCJeKD86aHR0cHxodHRwcyk6Ly9bXFx3XStcXC5zdW5pbmdcXC4oPzpjb218Y24pL2VtYWxsL2RnZiI6InN1bmluZy1kZ2YiLCJeKD86aHR0cHxodHRwcyk6Ly9xaWFuZ1xcLnN1bmluZ1xcLmNvbS9ycHMtd2ViL3JwL3Nob3dBY3Rpdml0eV9bXFxkXStcXC5odG0iOiJzdW5pbmctcWlhbmciLCJeKD86aHR0cHxodHRwcyk6Ly9wcm9kdWN0XFwuc3VuaW5nXFwuY29tL1xcZCsiOiJzdW5pbmciLCJeKD86aHR0cHxodHRwcyk6Ly9wcm9kdWN0XFwuc3VuaW5nXFwuY29tL2RldGFpbFswLTlfXStcXC5odG1sIjoic3VuaW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc3VuaW5nXFwuY29tL2RldGFpbC8iOiJzdW5pbmctYm9vay1uZXciLCJeKD86aHR0cHxodHRwcyk6Ly9zbmJvb2tcXC5zdW5pbmdcXC4oPzpjb218Y24pL3dlYi9wcmQvIjoic3VuaW5nLXNuYm9vayIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmNvbzhcXC5jb20vcHJvZHVjdC8iOiJjb284IiwiXig/Omh0dHB8aHR0cHMpOi8vKHd3dy58KWx1c2VuXFwuY29tL3Byb2R1Y3QvcHJvZHVjdGluZm8iOiJsdXNlbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmx1c2VuXFwuY29tL1R1YW4vQ29taXR5SW5mb1xcLmFzcHhcXD9pZD1bMC05XSsiOiJsdXNlbiIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC5nb21lXFwuY29tXFwuY24vW15cXD9dIjoiZ29tZSIsIl4oPzpodHRwfGh0dHBzKTovL3Rhb1xcLmdvbWVcXC5jb21cXC5jbi9wXFwtRFswLTldKyI6ImdvbWUtdGFvIiwiXig/Omh0dHB8aHR0cHMpOi8vcVxcLmdvbWVcXC5jb21cXC5jbi9pdGVtL1xcd1swLTldK1xcLmh0bWwiOiJnb21lLXEiLCJeKD86aHR0cHxodHRwcyk6Ly90dWFuXFwuZ29tZVxcLmNvbVxcLmNuL2RlYWwvXFx3K1xcLmh0bWwiOiJnb21lLXR1YW4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5nb21laG9tZVxcLmNvbS9wcm9kdWN0L3Byb2R1Y3RpbmZvXFw/cD1bMC05LV0rIjoiZ29tZS1ob21lIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZ29tZVxcLmNvbVxcLmNuL2VjL3J1c2hidXkvbGltaXRidXkvaXRlbWRldGFpbCI6ImdvbWUtcnVzaGJ1eSIsIl4oPzpodHRwfGh0dHBzKTovLyg/Ond3d3xpdGVtfHMpXFwuKHloZHx5aWhhb2RpYW58MW1hbGwpXFwuY29tLyg/OnByb2R1Y3R8aXRlbSkvXFxkKyI6InlpaGFvZGlhbiIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC55aGRcXC5jb20vaXRlbS9scC9bMC05X10rIjoieWloYW9kaWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vdHJ5XFwueWhkXFwuY29tLyhmcmVlfGZlZSkvXFxkezQsNn1fXFxkKy8iOiJ5aWhhb2RpYW4iLCJeKD86aHR0cHxodHRwcyk6Ly90XFwuKHloZHx5aWhhb2RpYW58MW1hbGwpXFwuY29tL2RldGFpbC9cXGQrIjoieWloYW9kaWFuLXR1YW4iLCJeKD86aHR0cHxodHRwcyk6Ly9bYS16QS1aXStcXC53b21haVxcLmNvbS8oLiopUHJvZHVjdCg/OlxcLXxcXC5kb1xcP20/aWQpIjoid29tYWkiLCJeKD86aHR0cHxodHRwcyk6Ly8od3d3fHNofGd6fHpzKVxcLndvbWFpXFwuY29tL3JlbGF0ZWQtIjoid29tYWktcmVsYXRlZCIsIl4oPzpodHRwfGh0dHBzKTovLyh3d3dcXC4pP2xleW91XFwuY29tXFwuY24vcHJvZHVjdC9zaW5nbGUvIjoibGV5b3UiLCJeKD86aHR0cHxodHRwcyk6Ly9oYWl0YW9cXC5sZXlvdVxcLmNvbVxcLmNuL2l0ZW0vc2luZ2xlL3NrdS8iOiJsZXlvdSIsIl4oPzpodHRwfGh0dHBzKTovL2xlbGVzaGFuXFwubGV5b3VcXC5jb21cXC5jbi9wcm9kdWN0L3NpbmdsZS9bQS1aMC05XSsiOiJsZXlvdS1sZWxlc2hhbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNob3BpblxcLm5ldC9wcm9kdWN0LyI6InNob3BpbiIsIl4oPzpodHRwfGh0dHBzKTovLyg/Oml0ZW18d3d3fGViYXkpXFwueGl1XFwuY29tL3Byb2R1Y3QvIjoieGl1IiwiXig/Omh0dHB8aHR0cHMpOi8vb3V0bGV0c1xcLnhpdVxcLmNvbS9bXFxkXStcXC5zaHRtbCI6InhpdSIsIl4oPzpodHRwfGh0dHBzKTovL2ZlcnJhZ2Ftb1xcLnhpdVxcLmNvbS9bXFxkXXs2LDEwfVxcLnNodG1sIjoieGl1IiwiXig/Omh0dHB8aHR0cHMpOi8vdHVhblxcLnhpdVxcLmNvbS90ZWFtX1tcXGRdKyI6InhpdS10dWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLm1iYW9iYW9cXC5jb20vcHNob3ciOiJtYmFvYmFvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubWJhb2Jhb1xcLmNvbS9pdGVtLyI6Im1iYW9iYW8iLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwudmppYVxcLmNvbS9bXFxkXSo/XFwuaHRtbCI6InZqaWEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC43Y3ZcXC5jb20vcHJvZHVjdC8iOiI3Y3YiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5xaW5xaW5iYWJ5XFwuY29tL3Byb2R1Y3QvIjoicWlucWluYmFieSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnFpbnFpbmJhYnlcXC5jb20vZ29vZHMvWzAtOV0rIjoicWlucWluYmFieSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmNodW5zaHVpdGFuZ1xcLmNvbS9bYS16XSsvWzAtOV0rXFwuaHRtbCI6ImNodW5zaHVpdGFuZyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnhcXC5jb21cXC5jbi9uX3Byb2R1Y3QvW1xcd10rXFwuc2h0bWwiOiJ4IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueFxcLmNvbVxcLmNuL3Byb2R1Y3QiOiJ4IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZ3VvcGlcXC5jb20vcFxcLmpzcCI6Imd1b3BpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubm81XFwuY29tXFwuY24vZ29vZHMvIjoibm81IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubm81XFwuY29tXFwuY24vcHJvZHVjdC9bMC05XStcXC5odG1sIjoibm81IiwiXig/Omh0dHB8aHR0cHMpOi8vd2ViW1xcZF0rXFwuc2FzYVxcLmNvbS9TYXNhV2ViL3NjaC9wcm9kdWN0L3ZpZXdQcm9kdWN0RGV0YWlsIjoic2FzYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNhc2FcXC5jb20vW2Etel0rL1thLXpBLVowLTlfLV0rIjoic2FzYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNhc2FcXC5jb20vW2Etel0rLVxcZCtcXC5odG1sIjoic2FzYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmRoY1xcLm5ldFxcLmNuL2dkcy8oPzpkZXRhaWx8Y3NlYXJjaFxcLmpzcFxcP2NjZD1bXFxkXSspIjoiZGhjIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuOWRhZGFvXFwuY29tL3Byb2R1Y3QvIjoiOWRhZGFvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuMzYwa3hyXFwuY29tL3Byb2R1Y3QvIjoiMzYwa3hyIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubTZnb1xcLmNvbS9wcm9kdWN0IjoibTZnbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmdvdVxcLmNvbS9wcm9kdWN0IjoibTZnbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm02Z29cXC5jb20vcWcvcHJvZHVjdCI6Im02Z28iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5nb3VcXC5jb20vcWcvcHJvZHVjdCI6Im02Z28iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5saWtlZmFjZVxcLmNvbS9wcm9kdWN0IjoibGlrZWZhY2UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5xeGlhblxcLmNvbS8uKj9bMC05XSo/XFwuaHRtbCI6InF4aWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZGlkYW1hbGxcXC5jb20vKD86cHJvZHVjdHN8bGliYW8pL2luZm8vIjoiZGlkYW1hbGwiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC55YW9kaWFuMTAwXFwuY29tL2VjbWFsbC9wcm9kdWN0IjoieWFvZGlhbjEwMCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnlhb2ZhbmdcXC5jbi9nb29kcyI6Inlhb2ZhbmciLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5saWppYWJhYnlcXC5jb21cXC5jbi8oPzplc2hvcC9wcm9kdWN0fENsb3RoaW5nLy4qPy9Qcm9kdWN0X2l0ZW1cXC5hc3B4KSI6ImxpamlhYmFieSIsIl4oPzpodHRwfGh0dHBzKTovLzk5cmVhZFxcLmNvbS9Qcm9kdWN0L1thLXpBLVpdKlxcZCtbYS16QS1aXSpcXC5hc3B4IjoiOTlyZWFkIiwiXig/Omh0dHB8aHR0cHMpOi8vcHJvZHVjdFxcLmNoaW5hLXB1YlxcLmNvbS9cXGQrIjoiY2hpbmEtcHViIiwiXig/Omh0dHB8aHR0cHMpOi8vKHd3dy58KWJvb2tzY2hpbmFcXC5jb20vW1xcZF0rXFwuaHRtIjoiYm9va3NjaGluYSIsIl4oPzpodHRwfGh0dHBzKTovLyh3d3cufClib29rc2NoaW5hXFwuY29tL0dST1VQQlVZL2dyb3VwYnV5LmFzcHhcXD9ncm91cGlkXFw9WzAtOV0rIjoiYm9va3NjaGluYS10dWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86fHd3d1xcLillZmVpaHVcXC5jb20vKD86UHJvZHVjdC98UGFnZXMvUHJvZHVjdFNob3cvUHJvZHVjdERldGFpbHNcXC5hc3B4KSI6ImVmZWlodSIsIl4oPzpodHRwfGh0dHBzKTovL3R1YW5cXC5lZmVpaHVcXC5jb20vWzAtOWEtekEtWl0rL0RldGlhbHMuYXNweFxcP2lkPVswLTldKyI6ImVmZWlodSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjM2MG1hcnRcXC5jb20vcHJvZHVjdFtzXT8vLio/XFwuaHRtbCI6IjM2MG1hcnQiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC55aW50YWlcXC5jb20vcHJvZHVjdC9wcm9kdWN0ZGV0YWlsIjoieWludGFpIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLnlpbnRhaVxcLmNvbS8iOiJ5aW50YWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5xdXdhblxcLmNvbS9nb29kcyI6InF1d2FuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwudXJjb3NtZVxcLmNvbS9zZWFyY2gvZmluYWwiOiJ1cmNvc21lIiwiXig/Omh0dHB8aHR0cHMpOi8vY25cXGQqXFwuc3RyYXdiZXJyeW5ldFxcLmNvbS8uKj8vWzAtOV0rLyI6InN0cmF3YmVycnluZXQiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5sdWNlXFwuY29tXFwuY24vcHJvZHVjdC8iOiJsdWNlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuazEyMVxcLmNvbS9pdGVtIjoiazEyMSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmhhcHBpZ29cXC5jb20vW1xcd10rL1tcXHddKy9bXFx3XSsvW1xcZF0rXFwuaHRtbCI6ImhhcHBpZ28iLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuaGFwcGlnby5jb20vaXRlbS1bMC05XSsuaHRtbCI6ImhhcHBpZ28iLCJeKD86aHR0cHxodHRwcyk6Ly9tYWxsXFwuaGFwcGlnb1xcLmNvbS9nb29kcy1bXFxkXStcXC5odG1sIjoiaGFwcGlnbyIsIl4oPzpodHRwfGh0dHBzKTovL21hbGxcXC5oYXBwaWdvXFwuY29tL2dyb3VwYnV5LVswLTktXStcXC5odG1sIjoiaGFwcGlnbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmdhcFxcLmNuL1teXFw/XSpwcm9kdWN0L1tcXGRdK1xcLmh0bWwiOiJnYXAiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5taXNzbGVsZVxcLmNvbS8uK1tcXGRdK1xcLmh0bWwiOiJtaXNzbGVsZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjVsdXhcXC5jb20vZ29vZHMiOiI1bHV4IiwiXig/Omh0dHB8aHR0cHMpOi8vKD86d3d3fGh1aSlcXC41bHV4LmNvbS9nb29kL2RldGFpbC9bMC05XSsiOiI1bHV4IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueGlhb3podXJlblxcLmNvbS8oRGlzbmV5Lyk/Z29vZHNcXC5waHAiOiJ4aWFvemh1cmVuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYWxsM2NcXC5jb20vcHJvZHVjdC8iOiJhbGwzYyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmlkYXBobmVcXC5jb20vZ29vZHMiOiJpZGFwaG5lIiwiXig/Omh0dHB8aHR0cHMpOi8vcHJvZHVjdFxcLnBjYmFieVxcLmNvbVxcLmNuL2EvIjoicGNiYWJ5IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYmluZ2dvXFwuY29tLy4qPy9cXGR7N31cXGQrXFwuaHRtbCI6ImJpbmdnbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnRpYW50aWFuXFwuY29tLy4rL1thLXpBLVpdP1tcXGRdK1xcLmh0bWwiOiJ0aWFudGlhbiIsIl4oPzpodHRwfGh0dHBzKTovL3R1YW5cXC50aWFudGlhblxcLmNvbS9TYWxlLyg/OkRldGFpbHN8Rmxhc2hEZXRhaWxzKS9bYS16QS1aMC05XSsiOiJ0aWFudGlhbi10dWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueGlqaVxcLmNvbS9wcm9kdWN0LVswLTldK1xcLmh0bWwiOiJ4aWppIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueGlqaWVcXC5jb20vcHJvZCI6InhpamllIiwiXig/Omh0dHB8aHR0cHMpOi8vbWFsbFxcLmp1bWVpXFwuY29tW15cXD9dKi9wcm9kdWN0XyI6Imp1bWVpIiwiXig/Omh0dHB8aHR0cHMpOi8vcG9wXFwuanVtZWlcXC5jb20vaS9kZWFsL1xcdytcXC5odG1sIjoianVtZWkiLCJeKD86aHR0cHxodHRwcyk6Ly8oZ3p8Ymp8c2gpXFwuanVtZWlcXC5jb20vaS9kZWFsL1xcdytcXC5odG1sIjoianVtZWkiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwuanVtZWlcXC5jb20vWzAtOWEtekEtWl0rXFwuaHRtbCI6Imp1bWVpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuanVtZWlnbG9iYWxcXC5jb20vZGVhbC9cXHcrXFwuaHRtbCI6Imp1bWVpZ2xvYmFsIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLmp1bWVpZ2xvYmFsXFwuY29tL1swLTlhLXpBLVpdK1xcLmh0bWwiOiJqdW1laWdsb2JhbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmp1bWVpZ2xvYmFsXFwuY29tL0RlYWwvQ29tYmluYXRpb25cXD8iOiJqdW1laWdsb2JhbCIsIl4oPzpodHRwfGh0dHBzKTovL2J1eVxcLmNhb21laXBhaVxcLmNvbS9nb29kcyI6ImNhb21laXBhaSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmRhaHVvemhhblxcLmNvbS9wcm9kdWN0LyI6ImRhaHVvemhhbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmRhemhlXFwuY24vZ29vZHNkZXRhaWwiOiJkYXpoZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmh1b2xpZGFcXC5jb20vcHJvZHVjdC8iOiJodW9saWRhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuMTJkaWFuXFwuY29tL3Byb2R1Y3QiOiIxMmRpYW4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC55b3Vnb3VcXC5jb20vY18iOiJ5b3Vnb3UiLCJeKD86aHR0cHxodHRwcyk6Ly8oPzpvdXRsZXRzfHd3dylcXC55b3Vnb3VcXC5jb20vW14/XStza3UtW1xcd10rIjoieW91Z291IiwiXig/Omh0dHB8aHR0cHMpOi8vKD86b3V0bGV0c3xzZW91bHx3d3cpXFwueW91Z291XFwuY29tL1thLXotXSsvc2t1LVthLXowLTktXStcXC5zaHRtbCI6InlvdWdvdSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjExMVxcLmNvbVxcLmNuLyg/OnByb2R1Y3R8aXRlbSkvIjoiMTExIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZGFveWFvXFwuY29tL3Byb2R1Y3QiOiJkYW95YW8iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5qaWFua2VcXC5jb20vcHJvZHVjdC8iOiJqaWFua2UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5qaWFua2VcXC5jb20vdHVhbi9wcm9kdWN0L1swLTldK1xcLmh0bWwiOiJqaWFua2UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC4zNjBrYWRcXC5jb20vcHJvZHVjdC9bMC05YS16XStcXC5zaHRtbCI6IjM2MGthZCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxieGNuLmNvbS8oPzpQcm9kdWN0fGl0ZW0pL1swLTldKy5odG1sIjoibGJ4Y24iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5sYnhjbi5jb20vaGVwc3RvcmVmcm9udC9sYngvemgvTEJYLy4qL3AvWzAtOV0rIjoibGJ4Y24iLCJeKD86aHR0cHxodHRwcyk6Ly9ib29rXFwuZG91YmFuXFwuY29tL3N1YmplY3QvW1xcZF0rIjoiZG91YmFuIiwiXig/Omh0dHB8aHR0cHMpOi8vZG9uZ3hpXFwuZG91YmFuXFwuY29tL3Nob3cvW1xcZF0rIjoiZG91YmFuLWRvbmd4aSIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC5pdDE2OFxcLmNvbS9kZXRhaWwvZG9jL1swLTldKy9pbmRleFxcLnNodG1sIjoiaXQxNjgiLCJeKD86aHR0cHxodHRwcyk6Ly9wcm9kdWN0XFwucGNvbmxpbmVcXC5jb21cXC5jbi9bXi9dKj8vW14vXSo/L1swLTldK1xcLmh0bWwiOiJwY29ubGluZSIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC5wY3BvcFxcLmNvbS9bMC05XSsvSW5kZXhcXC5odG1sIjoicGNwb3AiLCJeKD86aHR0cHxodHRwcyk6Ly9jb3NtZVxcLnBjbGFkeVxcLmNvbVxcLmNuL3Byb2R1Y3QvWzAtOV0rXFwuaHRtbCI6InBjbGFkeSIsIl4oPzpodHRwfGh0dHBzKTovL2JyYW5kXFwueW9rYVxcLmNvbS9jb3NtZXRpY3MvLio/L2RldGFpbFswLTldK1xcLmh0bSI6Inlva2EiLCJeKD86aHR0cHxodHRwcyk6Ly9kZXRhaWxcXC41NWJic1xcLmNvbS8uKj8vaW5kZXhbMC05XStcXC5zaHRtbCI6IjU1YmJzIiwiXig/Omh0dHB8aHR0cHMpOi8vaHpwXFwub25seWxhZHkuY29tLy4qPy9bMC05XSsvIjoib25seWxhZHkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC4yNGRxLmNvbS9wcm9kdWN0Lio/aHRtbCI6IjI0ZHEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tdXlpbmd6aGlqaWFcXC5jb20vU2hvcHBpbmcvUHJvZHVjdERldGFpbFxcLmFzcHgiOiJtdXlpbmd6aGlqaWEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tdXlpbmd6aGlqaWFcXC5jb20vcHJvZHVjdC9cXGQrXFwuaHRtbCI6Im11eWluZ3poaWppYSIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC5tdXlpbmd6aGlqaWFcXC5jb20vXFxkK1xcLmh0bWwiOiJtdXlpbmd6aGlqaWEiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5ob3VtYXJ0XFwuY29tL3BcXC1bXFxkXStcXC5odG1sIjoiaG91bWFydCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm9ubHl0c1xcLmNuL2dvb2RzIjoib25seXRzIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwud2lueHVhblxcLmNvbS9wcm9kdWN0Ly4qP1swLTldKj8iOiJ3aW54dWFuIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLndpbnh1YW5cXC5jb20vWzAtOV0rIjoid2lueHVhbiIsIl4oPzpodHRwfGh0dHBzKTovL2RldGFpbFxcLmJvb2t1dVxcLmNvbS9bMC05XSo/XFwuaHRtbCI6ImJvb2t1dSIsIl4oPzpodHRwfGh0dHBzKTovL2VcXC5ib29rdXVcXC5jb20vZGV0YWlsXFwucGhwXFw/aWQ9XFxkKyI6ImJvb2t1dSIsIl4oPzpodHRwfGh0dHBzKTovL3dlbmp1XFwuYm9va3V1XFwuY29tL2RldGFpbFxcLnBocFxcP2lkPVxcZCsiOiJib29rdXUiLCJeKD86aHR0cHxodHRwcyk6Ly9ib29rXFwuYmVpZmFib29rXFwuY29tL1Byb2R1Y3QvQm9va0RldGFpbC5hc3B4IjoiYmVpZmFib29rIiwiXig/Omh0dHB8aHR0cHMpOi8vcHJvZHVjdFxcLnllc2t5XFwuY29tL3Byb2R1Y3QvLio/WzAtOV0qPy8iOiJ5ZXNreSIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC5wY2hvbWVcXC5uZXQvLio/WzAtOV0qP1xcLmh0bWwiOiJwY2hvbWUiLCJeKD86aHR0cHxodHRwcyk6Ly9wcm9kdWN0XFwuZW5ldFxcLmNvbVxcLmNuL1thLXpBLVpcXC1dLio/W1xcZF0uKj9cXC5odG1sIjoiZW5ldCIsIl4oPzpodHRwfGh0dHBzKTovLyh3d3dcXC4pPyg/OnJ1aXlpfHJheWkpXFwuKD86Y29tfGNufGNvbVxcLmNuKS9cXD9wcm9kdWN0LVtcXGRdLio/XFwuaHRtbCI6InJ1aXlpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubm9wXFwuY24vcHJvZHVjdC1bXFxkXSo/XFwuaHRtbCI6Im5vcCIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC5pbW9iaWxlXFwuY29tXFwuY24vc2hvdy9bXFxkXS4qP1xcLmh0bWwiOiJpbW9iaWxlIiwiXig/Omh0dHB8aHR0cHMpOi8vcHJvZHVjdFxcLmNubW9cXC5jb20vY2VsbF9waG9uZS9pbmRleFtcXGRdLio/XFwuc2h0bWwiOiJjbm1vIiwiXig/Omh0dHB8aHR0cHMpOi8vcGhvbmVcXC5zaG91amlcXC5jb21cXC5jbi9bXFxkXSsvZGV0YWlsL1tcXGRdKyI6InNob3VqaSIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC50b21wZGFcXC5jb20vW2EtekEtWl0vW2EtekEtWl0vW1xcZF0rL1tcXGRdKyI6InRvbXBkYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLjM1MzNcXC5jb20vcGhvbmUvcGhvbmUuK1xcLmh0bSI6InBob25lMzUzMyIsIl4oPzpodHRwfGh0dHBzKTovL3Byb2R1Y3RcXC5pbnRvemdjXFwuY29tL1thLXpBLVpcXF9dK1xcX1tcXGRdKyI6ImludG96Z2MiLCJeKD86aHR0cHxodHRwcyk6Ly9wcm9kdWN0XFwuY2hpbmFieXRlXFwuY29tL3Byb2R1Y3QvW1xcZF0rL1tcXGRdKyI6ImNoaW5hYnl0ZSIsIl4oPzpodHRwfGh0dHBzKTovL2FwcFxcLnRlY2hcXC5pZmVuZ1xcLmNvbS9bYS16QS1aXFwtXFxfXSsvW2EtekEtWlxcLVxcX10rL1thLXpBLVowLTlcXC1cXF9dKyI6ImlmZW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vYXBwXFwudGVjaFxcLmlmZW5nXFwuY29tL1thLXpBLVpcXC1cXF9dKy9kZXRhaWxcXC1pbmRleFxcLVswLTldK1xcLmh0bWwiOiJpZmVuZyIsIl4oPzpodHRwfGh0dHBzKTovL3d3dzJcXC54aXRla1xcLmNvbS9wcm9kdWN0aW9uL3Byb2R1Y3QucGhwIjoieGl0ZWsiLCJeKD86aHR0cHxodHRwcyk6Ly9wcm9kdWN0XFwuaW1wM1xcLm5ldC9wcm9kdWN0XFwucGhwIjoiaW1wMyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm1lbmdsdVxcLmNvbS9wcm9kdWN0L1tcXGRdK1xcLmh0bWwiOiJtZW5nbHUiLCJeKD86aHR0cHxodHRwcyk6Ly8oPzpsYWR5fGxpbmdlcmllfHd3d3xmYXNoaW9ufHNoaXBpbnxpdGVtKVxcLm1vb25iYXNhXFwuY29tL1thLXpBLVpdXFwtW1xcZF0rXFwuaHRtbCI6Im1vb25iYXNhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuKD86aW5nMmluZ3xxamhlcmJ8a29yaXJsfGFsYXZlc3wwLTEwMHN8Y2hlcnJpZXNwaWV8Y2xhZmllbGR8YmFveWVhaHxzdW9yYW5nfG1vbnRlYW1vcnxydXRpc2hlcilcXC5jb20vcFxcLVtcXGRdK1xcLmh0bWwiOiJtb29uYmFzYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmtlZWRlXFwuY29tKFxcLmNuKT8vW2EtekEtWl0rW1xcZF0rXFwuaHRtbCI6ImtlZWRlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwua2VkZVxcLmNvbShcXC5jbik/L1thLXpBLVpdK1tcXGRdK1xcLmh0bWwiOiJrZWVkZSIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW0oXFwudnQpP1xcLnZhbmNsXFwuY29tL1tcXGRdK1xcLmh0bWwiOiJ2YW5jbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmRhemhvbmdkaWFucWlcXC5jb21cXC5jbi9kYXpob25nL3Byb2R1Y3RbXFwtXFxkXStcXC5odG0iOiJkYXpob25nZGlhbnFpIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc2tpbnN0b3JlY2hpbmFcXC5jb20vLisvLitbXFxkXStcXC1wXFwuaHRtbCI6InNraW5zdG9yZWNoaW5hIiwiXig/Omh0dHB8aHR0cHMpOi8vaXRlbVxcLmJ1eVxcLnFxXFwuY29tL2l0ZW0vIjoicXEiLCJeKD86aHR0cHxodHRwcyk6Ly8uKlxcLnpvbFxcLmNvbVxcLmNuL1xcZCsvXFxkK1xcLmh0bWwiOiJ6b2wtYXJ0aWNsZSIsIl4oPzpodHRwfGh0dHBzKTovLy4qXFwucGNvbmxpbmVcXC5jb21cXC5jbi9cXGQrL1xcZCtcXC5odG1sIjoicGNvbmxpbmUtYXJ0aWNsZSIsIl4oPzpodHRwfGh0dHBzKTovLy4qXFwueWVza3lcXC5jb20vXFxkKy9cXGQrXFwuc2h0bWwiOiJ5ZXNreS1hcnRpY2xlIiwiXig/Omh0dHB8aHR0cHMpOi8vLipcXC5pdDE2OFxcLmNvbS9bYS16XVxcZCsvXFxkKy9cXGQrL1xcZCtcXC5zaHRtbCI6Iml0MTY4LWFydGljbGUiLCJeKD86aHR0cHxodHRwcyk6Ly8uKlxcLnBjcG9wXFwuY29tL2RvYy9cXGQrL1xcZCsvXFxkK1xcLnNodG1sIjoicGNwb3AtYXJ0aWNsZSIsIl4oPzpodHRwfGh0dHBzKTovLy4qXFwucGNob21lXFwubmV0L2NvbnRlbnQtXFxkK1xcLmh0bWwiOiJwY2hvbWUtYXJ0aWNsZSIsIl4oPzpodHRwfGh0dHBzKTovLy4qXFwuMTM5c2hvcFxcLmNvbS8uKj8vXFxkKy9cXGQrXFwuaHRtIjoiMTM5c2hvcC1hcnRpY2xlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubWlsaWVyXFwuY29tL3Byb2R1Y3QvIjoibWlsaWVyIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc3BvcnRpY2FcXC5jbi9nb29kcyI6InNwb3J0aWNhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuemhlbnBpblxcLmNvbS9wcm9kdWN0IjoiemhlbnBpbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmdhb2ppZVxcLmNvbS9wcm9kdWN0LyI6Imdhb2ppZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm5hcnVrb1xcLmNvbVxcLmNuL3Nob3AvcHJvZHVjdC9Hb29kc1xcLmFzcHgiOiJuYXJ1a28iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC4oPzp2aXZpYW58bWFzYW1hc298bGlua21hc2EpXFwuKD86Y29tfGNuKS9nb29kc18iOiJtYXNhbWFzbyIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC5zZWNvb1xcLmNvbS8iOiJzZWNvbyIsIl4oPzpodHRwfGh0dHBzKTovL3BhaW1haVxcLnNlY29vXFwuY29tL1swLTldK1xcLnNodG1sIjoic2Vjb28iLCJeKD86aHR0cHxodHRwcyk6Ly9zYWxlXFwuc2Vjb29cXC5jb20vWzAtOV0rXFwuc2h0bWwiOiJzZWNvbyIsIl4oPzpodHRwfGh0dHBzKTovLyg/Ond3d3x0dWFuKVxcLmVoYWllclxcLmNvbS9wcm9kdWN0LyI6ImVoYWllciIsIl4oPzpodHRwfGh0dHBzKTovL3FpamlcXC5laGFpZXJcXC5jb20vbmV3L25ld0V4cGxvcmVNYW5hZ2VyL2RhdGVpbC9bMC05XSsiOiJlaGFpZXIiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5oYW5kdXlpc2hlXFwuY29tL2dvb2RzIjoiaGFuZHV5aXNoZSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLndiaWFvXFwuY24vW2EtejAtOS1dK1xcLmh0bWwiOiJ3YmlhbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLndiaWFvXFwuY24vZ29vZHNcXC5waHBcXD9nb29kc19pZD1bMC05XSsiOiJ3YmlhbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLndiaWFvXFwuY24vdmFuLWRlci1iYXV3ZWRlLVxcd1swLTldK1xcLmh0bWwiOiJ3YmlhbyIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnNoYW5ncGluXFwuY29tKFxcLmhrKSovLio/cHJvZHVjdC8iOiJzaGFuZ3BpbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnBiYVxcLmNuLyg/OnByb2R1Y3R8c3ApIjoicGJhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubWV0cm9tYWxsXFwuY24vUHJvZHVjdC8iOiJtZXRyb21hbGwiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5saXppXFwuY29tL3Byb2R1Y3QiOiJsaXppIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwua2FkYW5nXFwuY29tL1thLXpBLVowLTkvXSpkZXRhaWxcXGQrIjoia2FkYW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwua2FkYW5nXFwuY29tL3Byb2R1Y3QvWzAtOV0rIjoia2FkYW5nIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuYWltZXJcXC5jb21cXC5jbi9nb29kcy8iOiJhaW1lciIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxhbWl1XFwuY29tL2dvb2RzXyI6ImxhbWl1IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubGFtaXVcXC5jb20vKD86Z29vZHNffHByb2R1Y3QtKSI6ImxhbWl1IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZXNwcml0XFwuY24vKD86cHJvZHVjdHxpdGVtKS8iOiJlc3ByaXQiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5saWVib1xcLmNvbS9wcm9kdWN0LyI6ImxpZWJvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwud2FuZ2ppdVxcLmNvbS9wcm9kdWN0Lyg/IWZsYXNoUHJvbW90aW9uKSI6IndhbmdqaXUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cud2FuZ2ppdS5jb20vbWFsbC9pdGVtLXBpZC1bYS16QS1aMC05XStcXC5odG1sIjoid2FuZ2ppdSIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLnhpZnVxdWFuXFwuY29tL3Byb2R1Y3QvIjoieGlmdXF1YW4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC4xODlcXC5jbi9wcm9kdWN0cy8iOiIxODkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5oaWNkbWFcXC5jb20vcHJvZHVjdF9kZXRhaWxfIjoiaGljZG1hIiwiXig/Omh0dHB8aHR0cHMpOi8vbWFsbFxcLjEwMDEwXFwuY29tL2dvb2RzZGV0YWlsLyI6IjEwMDEwIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZTEwMFxcLmNuL2ViaXovY2hhbm5lbC8oLiovKStcXGQrXFwuaHRtbCI6ImUxMDAiLCJeKD86aHR0cHxodHRwcyk6Ly9zdG9yZVxcLnNhbXN1bmdcXC5jb20vY24vLiovcC8uKiI6InNhbXN1bmciLCJeKD86aHR0cHxodHRwcyk6Ly9zdG9yZVxcLm1laXp1XFwuY29tL3Byb2R1Y3QvIjoibWVpenUiLCJeKD86aHR0cHxodHRwcyk6Ly9kZXRhaWxcXC5tZWl6dVxcLmNvbS9pdGVtL1xcdysiOiJtZWl6dSIsIl4oPzpodHRwfGh0dHBzKTovL2IyY1xcLjk1OHNob3BcXC5jb20vLiovXFxkK1xcLmh0bWwiOiI5NThzaG9wIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwub2tocWJcXC5jb20vaXRlbS9cXGQrXFwuaHRtbCI6Im9raHFiIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwub2tocWJcXC5jb20vcWlhbmcvXFxkKy9cXGQrXFwuaHRtbCI6Im9raHFiIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuenRlZGV2aWNlXFwuY29tXFwuY24vcHJvZHVjdC8iOiJ6dGVkZXZpY2UiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5kYWxpbmdcXC5jb20vZGV0YWlsLVswLTldK1xcLmh0bWwiOiJkYWxpbmciLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtXFwuc2hvd2pveVxcLmNvbS9za3UvWzAtOV0rXFwuaHRtbCI6InNob3dqb3kiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5vY2pcXC5jb21cXC5jbi9kZXRhaWwvWzAtOV0rIjoib2NqIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwub2NqXFwua3IvZGV0YWlsL1swLTldKyI6Im9jai1rciIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLm9jalxcLmNvbVxcLmNuL290dWFucy9bYS16XSsvWzAtOV0rIjoib2NqLXR1YW4iLCJeaHR0cDovL3d3d1xcLmx2eW91bWFsbFxcLmNvbS8odHVhbi9nb29kcy18dG1oL2dvb2RzLXxnb29kcy8pXFxkKyI6Imx2eW91bWFsbCIsImh0dHA6Ly93d3dcXC5ranRcXC5jb20vcHJvZHVjdC9kZXRhaWwvXFxkKyI6ImtqdCIsIl4oPzpodHRwfGh0dHBzKTovL3N0b3JlXFwubG9naXRlY2hcXC5jb21cXC5jbi9wcm8vcHJvRGV0YWlsL1xcZCsiOiJsb2dpdGVjaCIsIl4oPzpodHRwfGh0dHBzKTovL3N0b3JlXFwubG9naXRlY2hcXC5jb21cXC5jbi9wcm9kdWN0L1BvaW50RGV0YWlsL1xcZCsiOiJsb2dpdGVjaCIsImh0dHA6Ly9zaG9wXFwuYm9vaGVlXFwuY29tL3N0b3JlL2dvb2RzL1xcdysiOiJib29oZWUiLCJodHRwOi8vd3d3XFwubWVpY2lcXC5jb20vcHJvZHVjdC1bYS16QS1aMC05LV0rXFwuaHRtbCI6Im1laWNpIiwiaHR0cDovL3d3d1xcLm1laWNpXFwuY29tL3Byb2R1Y3QuKiI6Im1laWNpIiwiaHR0cDovLyg/Omdsb2JhbHx5b3V8d3d3KVxcLmJlaWJlaVxcLmNvbS9kZXRhaWwvWzAtOS1dK1xcLmh0bWwiOiJiZWliZWkiLCJodHRwOi8vc3RvcmVcXC5uaWtlXFwuY29tL2NuL3poX2NuL3BkL1thLXpBLVowLTlcXHU0ZTAwLVxcdTlmYTUtXSsiOiJuaWtlIiwiaHR0cDovL3N0b3JlXFwubmlrZVxcLmNvbS9jbi96aF9jbi9wcm9kdWN0L1thLXpBLVowLTlcXHU0ZTAwLVxcdTlmYTUtXSsiOiJuaWtlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubmlrZVxcLmNvbS9jbi90L1thLXpBLVowLTlcXHU0ZTAwLVxcdTlmYTUtXSsiOiJuaWtlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuZmVuZ3F1XFwuY29tL2RldGFpbC8iOiJmZW5ncXUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tZWlcXC5jb20vc2lsby8uKi1ldmVudC1ldmVudC8uKlxcLmh0bWwiOiJtZWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5tZWlcXC5jb20vaXRlbVxcLmh0bWxcXD8iOiJtZWkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC52c2lnb1xcLmNuLy4qXFwuaHRtbCI6InZzaWdvIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuc3VuZGFuXFwuY29tL3Byb2R1Y3QtWzAtOV0rIjoic3VuZGFuIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwuamlhZVxcLmNvbS9wcm9kdWN0ZGV0YWlsIjoiamlhZSIsIl4oPzpodHRwfGh0dHBzKTovL2hkXFwuemF6aGlwdVxcLmNvbS8uKlxcLmFzcFxcP2lkPVswLTldKyI6InphemhpcHUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5taWNyb3NvZnRzdG9yZVxcLmNvbVxcLmNuLyVFNyVCMSVCQiVFNSU4OCVBQi8uKi9wLy4qIjoibWljcm9zb2Z0c3RvcmUiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5taWNyb3NvZnRzdG9yZVxcLmNvbVxcLmNuL1thLXowLTlBLVotXSsvW2EtejAtOUEtWi1dKy9wLyI6Im1pY3Jvc29mdHN0b3JlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueGdkcVxcLmNvbS9wcm9kdWN0LVswLTldK1xcLmh0bWwiOiJ4Z2RxIiwiXig/Omh0dHB8aHR0cHMpOi8vKD86d3d3XFwufCl4dGVwXFwuY29tXFwuY24vZ29vZHMvZG9faW5kZXgiOiJ4dGVwIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwueHRlcFxcLmNvbVxcLmNuL3RlYW0tWzAtOV0rXFwuaHRtbCI6Inh0ZXAiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC54dGVwXFwuY29tXFwuY24vc3Bpa2UtWzAtOV0rXFwuaHRtbCI6Inh0ZXAiLCJeKD86aHR0cHxodHRwcyk6Ly93d3dcXC5zdGFwbGVzXFwuY24vcHJvZHVjdC9bMC05YS16QS1aXSsiOiJzdGFwbGVzIiwiXig/Omh0dHB8aHR0cHMpOi8vbWFsbFxcLm1pZGVhXFwuY29tL2RldGFpbC9pbmRleCI6Im1pZGVhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3XFwubWlkZWFcXC5jbi9kZXRhaWwvaW5kZXgiOiJtaWRlYSIsIl4oPzpodHRwfGh0dHBzKTovL3d3dzFcXC5tYWN5c1xcLmNvbS9zaG9wL3Byb2R1Y3QvXFx3KyI6Im1hY3lzIiwiXig/Omh0dHB8aHR0cHMpOi8vY24uc2hvcGJvcC5jb20vW2EtejAtOS1dKy92cC9cXHcrIjoic2hvcGJvcCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmh1YVxcLmNvbS9wcm9kdWN0L1swLTldK1xcLmh0bWwiOiJodWEiLCJeKD86aHR0cHxodHRwcyk6Ly9zaG9wLnpoZTgwMC5jb20vcHJvZHVjdHMvWzAtOWEtel0rIjoiemhlODAwIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmNvc21lLmNvbS9wcm9kdWN0cy9kZXRhaWwucGhwXFw/cHJvZHVjdF9pZCI6ImNvc21lIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmRpYXBlcnMuY29tL3AvIjoiZGlhcGVycyIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy53aW5kZWxuLmRlL3poL1xcdystIjoid2luZGVsbiIsIl4oPzpodHRwfGh0dHBzKTovL3d3dy53aW5kZWxuLmNvbVxcLmNuL3Byb2R1Y3QvXFxkKyI6IndpbmRlbG4iLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuZXNjZW50dWFsLmNvbS9bYS16XStbMC05XSsvIjoiZXNjZW50dWFsIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmJpY2NhbWVyYS5jb20vYmMvZGlzcC9cXHcrIjoiYmljY2FtZXJhIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmVzdGVlbGF1ZGVyLmNvbS9wcm9kdWN0L1xcZCsvXFxkKy9cXHcrIjoiZXN0ZWVsYXVkZXIiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuc2Frc2ZpZnRoYXZlbnVlLmNvbS9tYWluL1Byb2R1Y3REZXRhaWwuanNwIjoic2Frc2ZpZnRoYXZlbnVlIiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LnRoZXdhdGNoZXJ5LmNvbS9kZXRhaWwuYXNwIjoidGhld2F0Y2hlcnkiLCJeKD86aHR0cHxodHRwcyk6Ly9pdGVtLnR1aHUuKGNufGNvbSkvUHJvZHVjdHMvIjoidHVodSIsIl4oPzpodHRwfGh0dHBzKTovL2l0ZW1cXC50dWh1XFwuY24vUHJvZHVjdHMvW0EtWi1dKy9cXGQrXFwuaHRtbCI6InR1aHUiLCJeKD86aHR0cHxodHRwcyk6Ly9lc2hvcC5odGMuY29tL21hbGwvemgtQ04vaHRjL1thLXowLTktXSsiOiJodGMiLCJeKD86aHR0cHxodHRwcyk6Ly9yb3Nlb25seS5jb20uY24vaXRlbS9bMC05XSsuaHRtbCI6InJvc2Vvbmx5IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LnRhcXUuY24vZ29vZHMtXFxkKy5odG1sIjoidGFxdSIsIl4oPzpodHRwfGh0dHBzKTovL3Nob3AuanguMTg5LmNuL3dlYi9wcm9kdWN0RGV0YWlsLmFjdGlvblxcP3Byb2R1Y3RJbmZvSUQiOiIxODkiLCJeKD86aHR0cHxodHRwcyk6Ly93d3cuYmZ0di5jb20vcHJvZHVjdC9bMC05XSsiOiJiZnR2IiwiXig/Omh0dHB8aHR0cHMpOi8vd3d3LmF4bWFsbC5jb20uYXUvcC9cXGQrXFwuaHRtbCI6ImF4bWFsbCIsIl4oPzpodHRwfGh0dHBzKTovL3d3d1xcLmxvdm9cXC5jbi9wci1bMC05XStcXC5odG0iOiJsb3ZvIn07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD1sKCk7bi5wYWdlSW5mbz10LG4uc2pmaXh8fG4uc2l0ZSYmKCJ0YW9iYW8iPT1uLnNpdGV8fCJ0bWFsbCI9PW4uc2l0ZXx8bi5zaXRlLmluZGV4T2YoInRhb2JhbyIpPi0xfHwiMTY4OCI9PW4uc2l0ZSkmJihuLmFsaVNpdGU9ITApfX0pLmNhbGwoZSxuKDQpLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDEwKSxvPW4oMTEpLGE9by5nZXRCcm93c2VyKCkscj17fSxzPXZvaWQgMCxsPWZ1bmN0aW9uKHQpe3QmJmUuc2l0ZSYmKHN8fCJ1c2VyX2V4dGVuc2lvbl9pZCI9PT10LnR5cGUmJihzPSEwLG4oMTIpKCJicm93c2VyX3VzZXI6IitlLmxvZ3NpdGUrIjpleHRUeXBlOiIrYygpKSkpfSxjPWZ1bmN0aW9uKCl7dmFyIHQ9IiI7cmV0dXJuIHQ9ImRlZmF1bHQiPT09ZS5mcm9tX2RldmljZT9hLnV0eXBlOmUuZnJvbV9kZXZpY2V9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7aS50cmlnZ2VyKHt0eXBlOiJ1c2VyX2V4dGVuc2lvbl9pZCJ9KSxpLnRyaWdnZXIoe3R5cGU6ImJyb3dzZXJfc2V0aW5mbyJ9KSxpLm9uKGZ1bmN0aW9uKHQpe3RyeXtpZih0JiYiYnJvd3Nlcl9zZXRpbmZvIj09PXQudHlwZSl7aWYodC52YWx1ZSYmdC52YWx1ZSBpbnN0YW5jZW9mIE9iamVjdClmb3IodmFyIGUgaW4gdC52YWx1ZSlyW2VdPXQudmFsdWVbZV19ZWxzZSB0LnR5cGUmJihyW3QudHlwZV09dC52YWx1ZSxsKHQpKX1jYXRjaChuKXt9fSl9LHQuZXhwb3J0cy5nZXRJbmZvPWZ1bmN0aW9uKHQpe3JldHVybiByW3RdfX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlKXsidXNlIHN0cmljdCI7dC5leHBvcnRzLnRyaWdnZXI9ZnVuY3Rpb24odCl7aWYoZG9jdW1lbnQuY3JlYXRlRXZlbnQpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUV2ZW50KCJDdXN0b21FdmVudCIpO2UuaW5pdEN1c3RvbUV2ZW50KCJnd2RfZXh0ZW5zaW9uIiwhMCwhMCx0KSxkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGUpfX0sdC5leHBvcnRzLm9uPWZ1bmN0aW9uKHQpe2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXI/ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiZ3dkX2NvbnRlbnQiLGZ1bmN0aW9uKGUpe3QoZS5kZXRhaWwpfSk6ZG9jdW1lbnQuYXR0YWNoRXZlbnQoImd3ZF9jb250ZW50IixmdW5jdGlvbihlKXt0KGUuZGV0YWlsKX0pfX0sZnVuY3Rpb24odCxlKXsidXNlIHN0cmljdCI7dmFyIG49e3VybDoiIix1dHlwZToiIn0saT1uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCk7dC5leHBvcnRzLmdldEJyb3dzZXI9ZnVuY3Rpb24oKXtpZigiQWN0aXZlWE9iamVjdCJpbiB3aW5kb3cpbi51dHlwZT0iaWUiLG4udXRpdGxlPSJJRSIsbi5iYWNrZ3JvdW5kPSItNDAxcHggLTgxcHgiO2Vsc2UgaWYoaS5pbmRleE9mKCJmaXJlZm94Iik+LTEpbi51dHlwZT0iZmlyZWZveCIsbi51dGl0bGU9IueBq+eLkCIsbi5iYWNrZ3JvdW5kPSItNDAxcHggLTQ0cHgiO2Vsc2UgaWYoaS5pbmRleE9mKCJvcGVyYSIpPi0xfHxpLmluZGV4T2YoIm9wciIpPi0xKW4udXR5cGU9Im9wZXJhIixuLnV0aXRsZT0iT3BlcmEiLG4uYmFja2dyb3VuZD0iLTJweCAtMTIwcHgiO2Vsc2UgaWYoaS5pbmRleE9mKCJzYWZhcmkiKT4tMSYmaS5pbmRleE9mKCJjaHJvbWUiKT09LTEpbi51dHlwZT0ic2FmYXJpIixuLnV0aXRsZT0iU2FmYXJpIixuLmJhY2tncm91bmQ9Ii0zMDFweCAtNDRweCI7ZWxzZSBpZihpLmluZGV4T2YoImNocm9tZSIpPi0xKXt2YXIgdD1hKCk7aS5pbmRleE9mKCJxcWJyb3dzZXIiKT4tMT8obi51dHlwZT0icXEiLG4udXRpdGxlPSJRUSIsbi5iYWNrZ3JvdW5kPSItMTA0cHggLTgxcHgiKTppLmluZGV4T2YoIm1heHRob24iKT4tMT8obi51dHlwZT0ibWF4dGhvbiIsCm4udXRpdGxlPSLlgrLmuLgiLG4uYmFja2dyb3VuZD0iLTQwMXB4IC00cHgiKTppLmluZGV4T2YoImJpZHVicm93c2VyIik+LTE/KG4udXR5cGU9ImJhaWR1IixuLnV0aXRsZT0i55m+5bqmIixuLmJhY2tncm91bmQ9Ii0xMDRweCAtMTIwcHgiKTppLmluZGV4T2YoInVicm93c2VyIik+LTE/KG4udXR5cGU9InVjIixuLnV0aXRsZT0iVUMiLG4uYmFja2dyb3VuZD0iLTJweCAtNDRweCIpOmkuaW5kZXhPZigibGJicm93c2VyIik+LTE/KG4udXR5cGU9ImxpZWJhbyIsbi51dGl0bGU9IueMjuixueWuieWFqCIsbi5iYWNrZ3JvdW5kPSItMzAxcHggLTRweCIpOmkuaW5kZXhPZigidGFvYnJvd3NlciIpPi0xPyhuLnV0eXBlPSJ0YW9iYW8iLG4udXRpdGxlPSLmt5jlrp0iLG4uYmFja2dyb3VuZD0iLTEwNHB4IC00NHB4Iik6aS5pbmRleE9mKCIyMzQ1ZXhwbG9yZXIiKT4tMT8obi51dHlwZT0iMjM0NSIsbi51dGl0bGU9IjIzNDXnjovniYwiLG4uYmFja2dyb3VuZD0iLTMwMXB4IC04MXB4Iik6aS5pbmRleE9mKCIyMzQ1Y2hyb21lIik+LTE/KG4udXR5cGU9IjIzNDVqaWFzdSIsbi51dGl0bGU9IjIzNDXliqDpgJ8iKTppLmluZGV4T2YoImNvb2xub3ZvIik+LTE/KG4udXR5cGU9ImZlbmdzaHUiLG4udXRpdGxlPSLmnqvmoJEiLG4uYmFja2dyb3VuZD0iLTJweCAtODFweCIpOmkuaW5kZXhPZigiZ3JlZW5icm93c2VyIik+LTE/KG4udXR5cGU9ImdiIixuLnV0aXRsZT0iR0IiLG4uYmFja2dyb3VuZD0iLTIwM3B4IC04MXB4Iik6IkNocm9tZSI9PT10PyhuLnV0eXBlPSJjaHJvbWUiLG4udXRpdGxlPSJDaHJvbWUiLG4uYmFja2dyb3VuZD0iLTJweCAtNHB4Iik6IjM2MFNFIj09PXQ/KG4udXR5cGU9IjM2MHNlIixuLnV0aXRsZT0iMzYw5a6J5YWoIixuLmJhY2tncm91bmQ9Ii0yMDNweCAtNHB4Iik6IjM2MEVFIj09PXQ/KG4udXR5cGU9IjM2MHNlIixuLnV0aXRsZT0iMzYw5p6B6YCfICIsbi5iYWNrZ3JvdW5kPSItMTA0cHggLTRweCIpOmkuaW5kZXhPZigic2UiKT4tMT8obi51dHlwZT0ic29nb3UiLG4udXRpdGxlPSLmkJzni5ciLG4uYmFja2dyb3VuZD0iLTQwMXB4IC0xMjBweCIpOihuLnV0eXBlPSJjaHJvbWUiLG4udXRpdGxlPSJDaHJvbWl1beWGheaguCIpfWVsc2Ugbi51dHlwZT0iY2hyb21lIixuLnV0aXRsZT0i5pyq55+l5rWP6KeI5ZmoIjtyZXR1cm4gbn07dmFyIG89e3Jlc3VsdDoiQ2hyb21lIixkZXRhaWxzOntDaHJvbWU6NSxDaHJvbWl1bTowLF8zNjBTRTowLF8zNjBFRTowfSxzb3J0ZWQ6WyJDaHJvbWUiLCIzNjBTRSIsIjM2MEVFIiwiQ2hyb21pdW0iXSxleGVjOmZ1bmN0aW9uKHQpe3ZhciBlPXtDaHJvbWU6NSxDaHJvbWl1bTowLF8zNjBTRTowLF8zNjBFRTowfSxuPXdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50O2lmKC9DaHJvbWVcLyhbXGQuXSkrXHNTYWZhcmlcLyhbXGQuXSkrJC8udGVzdChuKSl7aWYoIldpbjMyIj09d2luZG93Lm5hdmlnYXRvci5wbGF0Zm9ybSl7aWYod2luZG93LmNsaWVudEluZm9ybWF0aW9uLmxhbmd1YWdlc3x8KGUuXzM2MFNFKz04KSwvemgvaS50ZXN0KG5hdmlnYXRvci5sYW5ndWFnZSkmJihlLl8zNjBTRSs9MyxlLl8zNjBFRSs9Myksd2luZG93LmNsaWVudEluZm9ybWF0aW9uLmxhbmd1YWdlcyl7dmFyIGk9d2luZG93LmNsaWVudEluZm9ybWF0aW9uLmxhbmd1YWdlcy5sZW5ndGg7aT49Mz8oZS5DaHJvbWUrPTEwLGUuQ2hyb21pdW0rPTYpOjI9PWk/KGUuQ2hyb21lKz0zLGUuQ2hyb21pdW0rPTYsZS5fMzYwRUUrPTYpOjE9PWkmJihlLkNocm9tZSs9NCxlLkNocm9taXVtKz00KX1mb3IodmFyIG8gaW4gd2luZG93Lm5hdmlnYXRvci5wbHVnaW5zKSJucC1tc3dtcC5kbGwiPT13aW5kb3cubmF2aWdhdG9yLnBsdWdpbnNbb10uZmlsZW5hbWUmJihlLl8zNjBTRSs9MjAsZS5fMzYwRUUrPTIwKTtPYmplY3Qua2V5cyh3aW5kb3cuY2hyb21lLndlYnN0b3JlKS5sZW5ndGg8PTE/ZS5fMzYwU0UrPTc6Mj09T2JqZWN0LmtleXMod2luZG93LmNocm9tZS53ZWJzdG9yZSkubGVuZ3RoJiYoZS5fMzYwU0UrPTQsZS5DaHJvbWl1bSs9Myksd2luZG93Lm5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aD49MzA/KGUuXzM2MEVFKz03LGUuXzM2MFNFKz03LGUuQ2hyb21lKz03KTp3aW5kb3cubmF2aWdhdG9yLnBsdWdpbnMubGVuZ3RoPDMwJiZ3aW5kb3cubmF2aWdhdG9yLnBsdWdpbnMubGVuZ3RoPjEwPyhlLl8zNjBFRSs9MyxlLl8zNjBTRSs9MyxlLkNocm9tZSs9Myk6d2luZG93Lm5hdmlnYXRvci5wbHVnaW5zLmxlbmd0aDw9MTAmJihlLkNocm9taXVtKz02KX1lbHNlIGUuXzM2MFNFLT01MCxlLl8zNjBFRS09NTAsL0xpbnV4L2kudGVzdCh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCkmJihlLkNocm9taXVtKz01KTt2YXIgYT0wLHI9dm9pZCAwO2Zvcih2YXIgbyBpbiB3aW5kb3cubmF2aWdhdG9yLnBsdWdpbnMpaWYocj0vXiguKykgUERGIFZpZXdlciQvLmV4ZWMod2luZG93Lm5hdmlnYXRvci5wbHVnaW5zW29dLm5hbWUpKXtpZigiQ2hyb21lIj09clsxXSl7ZS5DaHJvbWUrPTYsZS5fMzYwU0UrPTYsYT0xO2JyZWFrfWlmKCJDaHJvbWl1bSI9PXJbMV0pe2UuQ2hyb21pdW0rPTEwLGUuXzM2MEVFKz02LGE9MTticmVha319YXx8KGUuQ2hyb21pdW0rPTkpfXZhciBzPW5ldyBPYmplY3Q7cy5DaHJvbWU9ZS5DaHJvbWUscy5DaHJvbWl1bT1lLkNocm9taXVtLHNbIjM2MFNFIl09ZS5fMzYwU0Usc1siMzYwRUUiXT1lLl8zNjBFRTt2YXIgbD1bXTtmb3IodmFyIGMgaW4gcylsLnB1c2goW2Msc1tjXV0pO3JldHVybiBsLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gZVsxXS10WzFdfSksdGhpcy5zb3J0ZWQ9bCx0aGlzLmRldGFpbHM9ZSx0aGlzLnJlc3VsdD1sWzBdWzBdLCJyZXN1bHQiPT10P2xbMF1bMF06ImRldGFpbHMiPT10P3M6InNvcnRlZCI9PXQ/bDp2b2lkIDB9fSxhPWZ1bmN0aW9uKCl7dmFyIHQ9d2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQ7dHJ5e2lmKG8uZXhlYygpLC9DaHJvbWVcLyhbXGQuXSkrXHNTYWZhcmlcLyhbXGQuXSkrJC8udGVzdCh0KSlyZXR1cm4gby5yZXN1bHR9Y2F0Y2goZSl7cmV0dXJufX07dC5leHBvcnRzLmdldENocm9tZVZlcnNpb249ZnVuY3Rpb24oKXt2YXIgdD1uYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9DaHJvbShlfGl1bSlcLyhbMC05XSspXC4vKTtyZXR1cm4hIXQmJnBhcnNlSW50KHRbMl0sMTApfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpOyhmdW5jdGlvbihvKXsidXNlIHN0cmljdCI7aT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7dmFyIGU9big5KS5nZXRJbmZvKCJ1c2VyX2V4dGVuc2lvbl9pZCIpfHwiIjtlPWV8fG8udXNlcmlkO3ZhciBpPW8udGpfc2VydmVyO28ubmV3X2V4dGVuc2lvbiYmIW8uZmRzTW9kJiYoaT1vLnNlcnZlciksdHx8KHQ9IiIpLGl8fChpPW8uc2VydmVyKTt2YXIgcj0iaW1nX3JhbmRvbSIrTWF0aC5yYW5kb20oKSxzPXdpbmRvd1tyXT1uZXcgSW1hZ2U7cy5vbmxvYWQ9cy5vbmVycm9yPWZ1bmN0aW9uKCl7d2luZG93W3JdPW51bGx9LHMuc3JjPWkrIi92aXNpdC8/dmVyc2lvbj0iK28udmVyc2lvbisiJnVzZXJpZD0iK2UrIiZhYj0iK2EuZ2V0KCJhYiIpKyImdXVpZD0iK2EuZ2V0KCJ1dWlkIikrIiZmcm9tX2RldmljZT0iK28uZnJvbV9kZXZpY2UrIiZwZXJtYW5lbnRfaWQ9IithLmdldCgicF9pZCIpKyImcmFuZG9tPSIrTWF0aC5yYW5kb20oKSsiJmFjdGlvbj0iK3QrIiZyZWZlcj0iK2VuY29kZVVSSUNvbXBvbmVudChkb2N1bWVudC5yZWZlcnJlcikrIiZ1cmw9IitlbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24uaHJlZil9dmFyIGU9dm9pZCAwLGk9dm9pZCAwLGE9bigxMyk7aWYoImJqZ18zNjAiIT09by5mcm9tX3R5cGUpcmV0dXJuIGZ1bmN0aW9uKG4peyIzNjAiIT09by5mcm9tX2RldmljZSYmKGk9PT1uPyhpPW4sY2xlYXJUaW1lb3V0KGUpLGU9c2V0VGltZW91dChmdW5jdGlvbigpe3Qobil9LDUwMCkpOihpPW4sdChuKSkpfX0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpfSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk7aT1mdW5jdGlvbigpe3ZhciB0PXt9LGU9e307cmV0dXJuIHQuZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiBlW3RdfSx0LnNldD1mdW5jdGlvbih0LG4pe3ZvaWQgMD09PW4mJnQ/ZT10OmVbdF09bn0sdH0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpfSxmdW5jdGlvbih0LGUpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKHQpe3ZhciBlPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIik7ZSYmZVswXSYmKGU9ZVswXSk7dmFyIG49ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7bi5zcmM9dCxuLmFzeW5jPSEwLG4uZGVmZXI9ITAsbi5sYW5ndWFnZT0iSmF2YVNjcmlwdCIsZS5hcHBlbmRDaGlsZChuKSxvPSEwfXZhciBpPXZvaWQgMCxvPXZvaWQgMCxhPXZvaWQgMDt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0KXt0JiZuKHQpfSx0LmV4cG9ydHMubG9nPWZ1bmN0aW9uKHQsZSxuLHIscyl7byYmKGE9PT10PyhjbGVhclRpbWVvdXQoaSksaT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7d2luZG93Ll9jemMmJndpbmRvdy5fY3pjLnB1c2gmJihlPWV8fCIuIixuPW58fCIiLHdpbmRvdy5fY3pjLnB1c2goWyJfdHJhY2tFdmVudCIsdCxlLG4scixzXSksYT10KX0sMzAwKSk6d2luZG93Ll9jemMmJndpbmRvdy5fY3pjLnB1c2gmJihlPWV8fCIuIixuPW58fCIiLHdpbmRvdy5fY3pjLnB1c2goWyJfdHJhY2tFdmVudCIsdCxlLG4scixzXSksYT10KSl9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDE0KSxvPW4oMTIpO3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7aS5sb2coImZpbmUzcTp0cmFjayIpLG8oImZpbmUzcTp0cmFjayIpLGUoIiNvdmVydmlldyAub3YtYWN0Iikub24oImNsaWNrIixmdW5jdGlvbih0KXt2YXIgbj1lKHQudGFyZ2V0KS50ZXh0KCksYT1sb2NhdGlvbi5ocmVmO24uaW5kZXhPZigi56uL5Y2z6LSt5LmwIik+LTEmJmEuaW5kZXhPZigiZ291d3VkYW5nIik+LTEmJihpLmxvZygiZmluZTNxOmNsaWNrIiksbygiZmluZTNxOmNsaWNrIikpfSl9fSkuY2FsbChlLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDEyKSxvPXsiY2FydFxcLmpkXFwuY29tL2FkZFRvQ2FydFxcLmh0bWwiOiJhZGRjYXJ0X3N1Y2Nlc3NfcGFnZTozNjBidXkiLCJjYXJ0XFwuZ29tZVxcLmNvbVxcLmNuL2FkZHN1Y2Nlc3MiOiJhZGRjYXJ0X3N1Y2Nlc3NfcGFnZTpnb21lIiwic2hvcHBpbmdcXC5zdW5pbmdcXC5jb20vYWRkVG9DYXJ0XFwuZG8iOiJhZGRjYXJ0X3N1Y2Nlc3NfcGFnZTpzdW5pbmciLCJjYXJ0XFwuamRcXC5jb20vY2FydFxcLmFjdGlvbiI6ImNhcnRfcGFnZV92aXNpdDozNjBidXkiLCJzaG9wcGluZ1xcLnN1bmluZ1xcLmNvbS9jYXJ0XFwuZG8iOiJjYXJ0X3BhZ2VfdmlzaXQ6c3VuaW5nIiwiY2FydFxcLmdvbWVcXC5jb21cXC5jbi9zaG9wcGluZyI6Im9yZGVyd3JpdGVfcGFnZV92aXNpdDpnb21lIiwiY2FydFxcLmdvbWVcXC5jb21cXC5jbiI6ImNhcnRfcGFnZV92aXNpdDpnb21lIiwiY2FydFxcLnRhb2Jhb1xcLmNvbS9jYXJ0XFwuaHRtIjoiY2FydF9wYWdlX3Zpc2l0OnRtYWxsIiwiY2FydFxcLnRtYWxsXFwuY29tIjoiY2FydF9wYWdlX3Zpc2l0OnRtYWxsIiwidHJhZGVcXC5qZFxcLmNvbS9zaG9wcGluZy9vcmRlci9nZXRPcmRlckluZm9cXC5hY3Rpb24iOiJvcmRlcndyaXRlX3BhZ2VfdmlzaXQ6MzYwYnV5Iiwic2hvcHBpbmdcXC5zdW5pbmdcXC5jb20vb3JkZXJcXC5kbyI6Im9yZGVyd3JpdGVfcGFnZV92aXNpdDpzdW5pbmciLCJidXlcXC50bWFsbFxcLmNvbS9vcmRlci9jb25maXJtX29yZGVyXFwuaHRtIjoib3JkZXJ3cml0ZV9wYWdlX3Zpc2l0OnRtYWxsIiwiYnV5XFwudG1hbGxcXC5jb20vb3JkZXIvY29uZmlybU9yZGVyXFwuaHRtIjoib3JkZXJ3cml0ZV9wYWdlX3Zpc2l0OnRtYWxsIiwiY2FzaGllclxcLmpkXFwuY29tIjoib3JkZXJzdWNjZXNzX3BhZ2VfdmlzaXQ6MzYwYnV5IiwicGF5bWVudFxcLnN1bmluZ1xcLmNvbSI6Im9yZGVyc3VjY2Vzc19wYWdlX3Zpc2l0OnN1bmluZyIsImdwYXlcXC5nb21lXFwuY29tXFwuY24vY2FzaGllci9kZWZhdWx0XFwuZGh0bWwiOiJvcmRlcnN1Y2Nlc3NfcGFnZV92aXNpdDpnb21lIiwiY2FzaGllcnp0aFxcLmFsaXBheVxcLmNvbSI6Im9yZGVyc3VjY2Vzc19wYWdlX3Zpc2l0OnRtYWxsIiwiY2FzaGllcnp1aVxcLmFsaXBheVxcLmNvbSI6Im9yZGVyc3VjY2Vzc19wYWdlX3Zpc2l0OnRtYWxsIiwidmlwXFwuamRcXC5jb20iOiJ2aXBfcGFnZV92aXNpdDozNjBidXkiLCJ2aXBcXC5zdW5pbmdcXC5jb20iOiJ2aXBfcGFnZV92aXNpdDpzdW5pbmciLCJ2XFwuZ29tZVxcLmNvbVxcLmNuIjoidmlwX3BhZ2VfdmlzaXQ6Z29tZSIsInZpcFxcLnRtYWxsXFwuY29tIjoidmlwX3BhZ2VfdmlzaXQ6dG1hbGwifSxhPVsiamQiLCJzdW5pbmciLCJ0YW9iYW8iLCJ0bWFsbCIsImdvbWUiXSxyPXsiMzYwYnV5IjoiI2Nob29zZS1idG4tY29sbCIsZ29tZToiI2NvbGxlY3QiLHN1bmluZzoiI2luZXJlc3RCb3giLHRtYWxsOiIjSl9BZGRGYXZvcml0ZSJ9LHM9ZnVuY3Rpb24odCl7dmFyIGU9big4KS5pc1Byb2R1Y3RQYWdlKGRvY3VtZW50LnJlZmVycmVyKTtlPWU/InByb2R1Y3QiOiJvdGhlciI7dmFyIGE9bG9jYXRpb24uaHJlZjtmb3IodmFyIHIgaW4gbylpZihhLm1hdGNoKG5ldyBSZWdFeHAocikpKXJldHVybiB2b2lkIGkoZStvW3JdKX0sbD1mdW5jdGlvbih0KXtyW3RdJiZlKHJbdF0pLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKCJjbGljazpjb2xsZWN0aW9uX2NsaWNrOiIrdCl9KX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXtzKCk7Zm9yKHZhciB0PTA7dDxhLmxlbmd0aDt0KyspaWYobG9jYXRpb24uaG9zdC5pbmRleE9mKGFbdF0pPi0xKXt2YXIgZT1hW3RdO3JldHVybiJqZCI9PT1lJiYoZT0iMzYwYnV5Iiksdm9pZCBsKGUpfX19KS5jYWxsKGUsbig0KSl9LGZ1bmN0aW9uKHQsZSl7InVzZSBzdHJpY3QiO3QuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciB0PWRvY3VtZW50LmxvY2F0aW9uLmhvc3Q7cmV0dXJuIHQuaW5kZXhPZigiaGFvMTIzIik+LTF8fHQuaW5kZXhPZigiYmFpZHUiKT4tMX19LGZ1bmN0aW9uKHQsZSl7InVzZSBzdHJpY3QiO0Z1bmN0aW9uLnByb3RvdHlwZS5iaW5kfHwoRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQ9ZnVuY3Rpb24odCl7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHRoaXMpdGhyb3cgbmV3IFR5cGVFcnJvcigiRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgLSB3aGF0IGlzIHRyeWluZyB0byBiZSBib3VuZCBpcyBub3QgY2FsbGFibGUiKTt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSksbj10aGlzLGk9ZnVuY3Rpb24oKXt9LG89ZnVuY3Rpb24oKXtyZXR1cm4gbi5hcHBseSh0aGlzIGluc3RhbmNlb2YgaT90aGlzOnQsZS5jb25jYXQoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSkpfTtyZXR1cm4gaS5wcm90b3R5cGU9dGhpcy5wcm90b3R5cGUsby5wcm90b3R5cGU9bmV3IGksb30pLEFycmF5LnByb3RvdHlwZS5pbmRleE9mfHwoQXJyYXkucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24odCxlKXt2YXIgbjtpZihudWxsPT10aGlzKXRocm93IG5ldyBUeXBlRXJyb3IoJyJ0aGlzIiBpcyBudWxsIG9yIG5vdCBkZWZpbmVkJyk7dmFyIGk9T2JqZWN0KHRoaXMpLG89aS5sZW5ndGg+Pj4wO2lmKDA9PT1vKXJldHVybi0xO3ZhciBhPStlfHwwO2lmKE1hdGguYWJzKGEpPT09MS8wJiYoYT0wKSxhPj1vKXJldHVybi0xO2ZvcihuPU1hdGgubWF4KGE+PTA/YTpvLU1hdGguYWJzKGEpLDApO248bzspe2lmKG4gaW4gaSYmaVtuXT09PXQpcmV0dXJuIG47bisrfXJldHVybi0xfSksKCFBcnJheS5wcm90b3R5cGUuZmlsdGVyfHxsb2NhdGlvbi5ob3N0LmluZGV4T2YoInVsZS5jb20iKT4tMSkmJihBcnJheS5wcm90b3R5cGUuZmlsdGVyPWZ1bmN0aW9uKHQpe2lmKHZvaWQgMD09PXRoaXN8fG51bGw9PT10aGlzKXRocm93IG5ldyBUeXBlRXJyb3I7dmFyIGU9T2JqZWN0KHRoaXMpLG49ZS5sZW5ndGg+Pj4wO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3I7Zm9yKHZhciBpPVtdLG89YXJndW1lbnRzLmxlbmd0aD49Mj9hcmd1bWVudHNbMV06dm9pZCAwLGE9MDthPG47YSsrKWlmKGEgaW4gZSl7dmFyIHI9ZVthXTt0LmNhbGwobyxyLGEsZSkmJmkucHVzaChyKX1yZXR1cm4gaX0pLChsb2NhdGlvbi5ob3N0LmluZGV4T2YoImxpYW5qaWEuY29tIik+LTF8fGxvY2F0aW9uLmhvc3QuaW5kZXhPZigiLmtlLiIpPi0xKSYmKE51bWJlci5wcm90b3R5cGUudG9GaXhlZD1mdW5jdGlvbih0KXt2YXIgZT0ocGFyc2VJbnQodGhpcypNYXRoLnBvdygxMCx0KSsuNSkvTWF0aC5wb3coMTAsdCkpLnRvU3RyaW5nKCksbj1lLmluZGV4T2YoIi4iKTtpZihuPDAmJnQ+MCl7ZSs9Ii4iO2Zvcih2YXIgaT0wO2k8dDtpKyspZSs9IjAifWVsc2V7bj1lLmxlbmd0aC1uO2Zvcih2YXIgaT0wO2k8dC1uKzE7aSsrKWUrPSIwIn1yZXR1cm4gZX0pLCJpdGVtLmpkLmNvbSIhPT1sb2NhdGlvbi5ob3N0JiYicmUuamQuY29tIiE9PWxvY2F0aW9uLmhvc3QmJiJpdGVtLnloZC5jb20iIT09bG9jYXRpb24uaG9zdHx8KEFycmF5LnByb3RvdHlwZS5mb3JFYWNoPWZ1bmN0aW9uKHQpe3ZhciBlLG47aWYobnVsbD09dGhpcyl0aHJvdyBuZXcgVHlwZUVycm9yKCJ0aGlzIGlzIG51bGwgb3Igbm90IGRlZmluZWQiKTt2YXIgaT1PYmplY3QodGhpcyksbz1pLmxlbmd0aD4+PjA7aWYoImZ1bmN0aW9uIiE9dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcih0KyIgaXMgbm90IGEgZnVuY3Rpb24iKTtmb3IoYXJndW1lbnRzLmxlbmd0aD4xJiYoZT1hcmd1bWVudHNbMV0pLG49MDtuPG87KXt2YXIgYTtuIGluIGkmJihhPWlbbl0sdC5jYWxsKGUsYSxuLGkpKSxuKyt9fSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiOyJBY3RpdmVYT2JqZWN0ImluIHdpbmRvdyYmKHQuYnJvd3Nlcj17ZW5naW5lOiJ0cmlkZW50IixhZ2VudDoibXNpZSIsdmVyOndpbmRvdy5YTUxIdHRwUmVxdWVzdD9kb2N1bWVudC5xdWVyeVNlbGVjdG9yP2RvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXI/d2luZG93LmF0b2I/d2luZG93LmV4ZWNTY3JpcHQ/MTA6MTE6OTo4Ojc6Nn0pLHQuYnJvd3Nlci52ZXJzaW9uPXQuYnJvd3Nlci52ZXIsIm1zaWUiPT09dC5icm93c2VyLmFnZW50JiYodC5icm93c2VyLm1zaWU9ITApLHQuSUU2PSJtc2llIj09dC5icm93c2VyLmFnZW50JiY2PT09dC5icm93c2VyLnZlcix0LklFNz0ibXNpZSI9PXQuYnJvd3Nlci5hZ2VudCYmNz09PXQuYnJvd3Nlci52ZXIsdC5JRTg9Im1zaWUiPT10LmJyb3dzZXIuYWdlbnQmJjg9PT10LmJyb3dzZXIudmVyLHQuSUU5PSJtc2llIj09dC5icm93c2VyLmFnZW50JiY5PT09dC5icm93c2VyLnZlcix0LklFMTA9Im1zaWUiPT10LmJyb3dzZXIuYWdlbnQmJjEwPT09dC5icm93c2VyLnZlcix0LklFMTE9Im1zaWUiPT10LmJyb3dzZXIuYWdlbnQmJjExPT09dC5icm93c2VyLnZlcn0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlKXsidXNlIHN0cmljdCI7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0iMDEyMzQ1Njc4OXF3ZXJ0eXVpb3Bsa2poZ2Zkc2F6eGN2Ym5tIixuPSIiLGk9MDtpPHQ7aSsrKW4rPWUuY2hhckF0KE1hdGguY2VpbCgxZTgqTWF0aC5yYW5kb20oKSklZS5sZW5ndGgpO3JldHVybiBufX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKCl7ZS5JRTZ8fGUuSUU3fHxlLklFOHx8ZS5JRTl8fHMoKSYmKHgoKSxyKGZ1bmN0aW9uKCl7ZygpLDAhPWkoIiNnd2RfaHRfbWFpbiIpLmxlbmd0aCYmKFQoKSxBKCksRCgpLE4oenQuc2hhbmd5aVt2dF0ubWFuWzBdLHp0LnNoYW5neWlbdnRdLm1hblsxXSksVSgpLCQoKSx1KCksbnQoKSxoKCkseSgpLFMoKSxDKCksZS5lbWFpbD9CdCgpOmkoZG9jdW1lbnQpLm9uKCJjaGVja2Zhdm9yIixmdW5jdGlvbigpe0J0KCl9KSxOdCgpKX0pKX1mdW5jdGlvbiBhKHQpe2lmKCF0KXJldHVybltdO2Zvcih2YXIgZT1bXSxuPVtdLGk9MDtpPHQubGVuZ3RoO2krKyl0W2ldLmN1cnJlbnQmJiF0W2ldLmFzY2UmJih0W2ldLnR5cGU/KHRbaV0uZmlyc3RXWzFdPWZ0KHRbaV0uZmlyc3RXWzFdLHRbaV0udHlwZSksdFtpXS5uZXh0V1sxXT1mdCh0W2ldLm5leHRXWzFdLHRbaV0udHlwZSkpOih0W2ldLmZpcnN0V1sxXT1mdCh0W2ldLmZpcnN0V1sxXSksdFtpXS5uZXh0V1sxXT1mdCh0W2ldLm5leHRXWzFdKSkpLHRbaV0uc2FsZV90bGUmJihzdD0hMCksdFtpXS5jb29wZXI/ZS5wdXNoKHRbaV0pOm4ucHVzaCh0W2ldKTtyZXR1cm4gdD1lLnNvcnQoZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5yYW5kb20oKS0uNX0pLmNvbmNhdChuKX1mdW5jdGlvbiByKHQpe3ZhciBuPWJ0KyIvL2Jyb3dzZXIuIitlLmV4dE5hbWUrIi5jb20vZXh0ZW5zaW9uP2FjPWhhaXRhb0luZm8iO2d0LmdldChuKS5kb25lKGZ1bmN0aW9uKGUpe2UmJmUuY2F0ZSYmZS50cmFucyYmKGR0PWUuY2F0ZSxodD1lLnRyYW5zLGh0W3Z0XT1hKGh0W3Z0XSksdCgpKX0pfWZ1bmN0aW9uIHMoKXt2YXIgdD1sb2NhdGlvbi5ob3N0O2Zvcih2YXIgZSBpbiBqdClpZih0PT1lKXJldHVybiEwO3JldHVybiExfWZ1bmN0aW9uIGwodCl7aSgiLmh0X3RhcmlmZl9idG4gc3BhbiIpLnRleHQodC5zbGljZSgwLDUpKSxpKCIuaHRfdGFyaWZmX2J0biBzcGFuIikuYXR0cigidGl0bGUiLHQpLGkoIiNjYXRlX3NtYWxsIikudmFsKHQpLGkoIi5odF90YXJpZmZfY2F0ZSIpLnRleHQodCksWCgiI2NhdGVfc21hbGwiKSxYKCIuaHRfdGFyaWZmX2NhdGUiLCJ0ZXh0Iiw0KTtmb3IodmFyIGUgaW4gZHQpZm9yKHZhciBuPWR0W2VdLmxlbmd0aCxvPTA7bzxuO28rKylpZihkdFtlXVtvXVsxXT09dCl7dmFyIGE9aSgnI2JpZ194aWFsYSBhW2NhdGU9IicrZSsnIl0nKS50ZXh0KCk7aSgiI2NhdGVfYmlnIikudmFsKGEpLFgoIiNjYXRlX2JpZyIpLFkoZHRbZV0pLGkoIi5odF90YXJpZmYgLmh0X3RhcmlmZl9udW0gZW0iKS50ZXh0KGR0W2VdW29dWzBdKX19ZnVuY3Rpb24gYyh0KXt2YXIgZT1TdFt0XS50bGUsbj1TdFt0XS5jYXRlO2koIi5odF90YXJpZmZfYnRuIHNwYW4iKS50ZXh0KGUuc2xpY2UoMCw1KSksaSgiLmh0X3RhcmlmZl9idG4gc3BhbiIpLmF0dHIoInRpdGxlIixlKSxpKCIjY2F0ZV9iaWciKS52YWwoZSksWCgiI2NhdGVfYmlnIiksaSgiI2NhdGVfc21hbGwiKS52YWwoZHRbbl1bZHRbbl0ubGVuZ3RoLTFdWzFdKSxpKCIuaHRfdGFyaWZmX2NhdGUiKS50ZXh0KGR0W25dW2R0W25dLmxlbmd0aC0xXVsxXSksWCgiI2NhdGVfc21hbGwiKSxYKCIuaHRfdGFyaWZmX2NhdGUiLCJ0ZXh0Iiw0KSxZKGR0W25dKSxpKCIuaHRfdGFyaWZmIC5odF90YXJpZmZfbnVtIGVtIikudGV4dChkdFtuXVtkdFtuXS5sZW5ndGgtMV1bMF0pfWZ1bmN0aW9uIHAodCl7Zm9yKHZhciBlIGluIEN0KWlmKHQuaW5kZXhPZihlKT4tMSlyZXR1cm4gQ3RbZV07Zm9yKHZhciBlIGluIFN0KWlmKHQuaW5kZXhPZihlKT4tMSlyZXR1cm4gdm9pZCBjKGUpO3JldHVybiExfWZ1bmN0aW9uIGQodCxlKXtzd2l0Y2godCl7Y2FzZSLnlLfoo4UiOnJldHVybiB6dC5zaGFuZ3lpW2VdLm1hbjtjYXNlIuWls+ijhSI6cmV0dXJuIHp0LnNoYW5neWlbZV0ud29tYW47Y2FzZSLnq6Xoo4UiOnJldHVybiB6dC5raWRzY2xvdGhbZV07Y2FzZSLnlLfpnosiOnJldHVybiB6dC5zaG9lcy5tYW47Y2FzZSLlpbPpnosiOnJldHVybiB6dC5zaG9lcy53b21hbjtjYXNlIuerpemeiyI6cmV0dXJuIHp0LnNob2VzLmtpZHN9fWZ1bmN0aW9uIGgoKXtmb3IodmFyIHQ9MDt0PFB0Lmxlbmd0aDt0KyspZm9yKHZhciBlPVB0W3RdLG49aShlKS5sZW5ndGgsbz1uLTE7bz49MDtvLS0pe3ZhciBhPWkoZSkuZXEobykudGV4dCgpLnRvTG93ZXJDYXNlKCkscj1wKGEpO2lmKHIpcmV0dXJuIHZvaWQgbChyKX19ZnVuY3Rpb24gdSgpe2lmKG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmRleE9mKCJjaHJvbWUiKT09LTEmJihpKCIjZ3dkX2h0X21haW4iKS5hZGRDbGFzcygiaWVfaGFjayIpLGkoIiN0cmFuc3BvcnRfZGV0YWlsIikuYWRkQ2xhc3MoImllX2hhY2siKSxpKCIjc2l6ZV9kZXRhaWwiKS5hZGRDbGFzcygiaWVfaGFjayIpKSwid3d3LjZwbS5jb20iPT1ydCl7dmFyIHQ9aSgiI2d3ZF9odF9tYWluIikucGFyZW50KCkub3V0ZXJXaWR0aCgpLGU9dC0zNTU7aSgiI2d3ZF9odF9tYWluIikuY3NzKCJtYXJnaW4tbGVmdCIsZS8yKyJweCIpfX1mdW5jdGlvbiBtKCl7cmV0dXJuInd3dy42cG0uY29tIj09cnQ/InppeWluZyI6aSgiI21lcmNoYW50LWluZm8iKS5sZW5ndGg+MD8id3d3LmFtYXpvbi5jb20iPT1ydD9pKCIjbWVyY2hhbnQtaW5mbyIpLnRleHQoKS5pbmRleE9mKCJzb2xkIGJ5IEFtYXpvbiIpPi0xPyJ6aXlpbmciOiJzYW5mYW5nIjoid3d3LmFtYXpvbi5jby5qcCI9PXJ0P2koIiNtZXJjaGFudC1pbmZvIikudGV4dCgpLmluZGV4T2YoImpwIOOBjOiyqeWjsiIpPi0xPyJ6aXlpbmciOiJzYW5mYW5nIjoid3d3LmFtYXpvbi5kZSI9PXJ0P2koIiNtZXJjaGFudC1pbmZvIikudGV4dCgpLmluZGV4T2YoIlZlcmthdWYgdW5kIFZlcnNhbmQgZHVyY2ggQW1hem9uIik+LTE/InppeWluZyI6aSgiI21lcmNoYW50LWluZm8iKS50ZXh0KCkuaW5kZXhPZigiRGlzcGF0Y2hlZCBmcm9tIGFuZCBzb2xkIGJ5IEFtYXpvbiIpPi0xPyJ6aXlpbmciOiJzYW5mYW5nIjp2b2lkIDA6InNhbmZhbmcifWZ1bmN0aW9uIGYoKXtyZXR1cm4id3d3LmFtYXpvbi5kZSI9PXJ0P2koIiNkZG1TaGlwcGluZ01lc3NhZ2UiKS50ZXh0KCkuaW5kZXhPZigiRGllc2VyIEFydGlrZWwga2FubiBuYWNoIik+LTEmJmkoIiNkZG1JbmxpbmVBZGRyZXNzSW5mbyIpLnRleHQoKS5pbmRleE9mKCJDaGluYSIpPi0xPyJ6aGl5b3UiOiJmZWl6aGl5b3UiOmkoJyNkZXRhaWwtYnVsbGV0cyAuY29udGVudCB1bCBsaTpjb250YWlucygiSW50ZXJuYXRpb25hbCBTaGlwcGluZyIpJykubGVuZ3RoPjA/InpoaXlvdSI6aSgnLnNoaXBwaW5nLXJlc3RyaWN0aW9ucyAubGFiZWw6Y29udGFpbnMoIkludGVybmF0aW9uYWwiKScpLmxlbmd0aD4wPyJ6aGl5b3UiOiJmZWl6aGl5b3UifWZ1bmN0aW9uIGcoKXtuKDI2KTt2YXIgdCxvLGE9bigzMCkscj11dC5jb21waWxlKGEpKHtkYXRhOntwYWdlY2xhc3M6dygpLGdldHByaWNlOnooKSx1bml0X3ByaWNlOmsoKSxwcm90eXBlOm0oKSxtYWlsdHlwZTpmKCksaGVfd2VpZ2h0OnYoKSxob3N0czpydCxzaXRlOiI2cG0iPT1lLnNpdGU/IjZQTSI6IuS6mumprOmAiiIsY19zZXJ2ZXI6ZS5jX3NlcnZlcn19KTtvPWp0W3J0XS5kb207Zm9yKHZhciBzPTA7czxvLmxlbmd0aDtzKyspaShvW3NdKS5sZW5ndGg+MCYmKHQ9b1tzXSk7aWYodCl7c3dpdGNoKGp0W3J0XS5wb3NpdGlvbil7Y2FzZSJiZWZvcmUiOmkodCkuYmVmb3JlKHIpO2JyZWFrO2Nhc2UiYWZ0ZXIiOmkodCkuYWZ0ZXIocil9d3QoInRyYWNrOmhhaXRhbzptYWluIikseHQubG9nKCLmmL7npLrmtbfmt5jkuLvnlYzpnaIiKX19ZnVuY3Rpb24gdygpe3ZhciB0PSJodF8iK3J0LnNwbGl0KCIuIilbMV07cmV0dXJuIHR9ZnVuY3Rpb24geCgpe3ZhciB0PWxvY2F0aW9uLmhvc3Q7Zm9yKHZhciBlIGluIGp0KWU9PXQmJih2dD1qdFtlXS5jb3VuLHJ0PWUpfWZ1bmN0aW9uIGIodCl7dmFyIGU9dC5tYXRjaCgvWzAtOV0rKD86XC58XCx8KSg/OlswLTldK3wpLyk7cmV0dXJuIGUmJihlPWVbMF0pLCJ3d3cuYW1hem9uLmRlIj09cnQmJihlPWUudG9TdHJpbmcoKS5yZXBsYWNlKCIsIiwiLiIpKSxlfWZ1bmN0aW9uIF8odCl7c3dpdGNoKHJ0KXtjYXNlInd3dy5hbWF6b24uY29tIjppZih0LmluZGV4T2YoInBvdW5kcyIpPi0xKXJldHVybiJwb3VuZHMiO2lmKHQuaW5kZXhPZigib3VuY2VzIik+LTEpcmV0dXJuIm91bmNlcyI7YnJlYWs7Y2FzZSJ3d3cuYW1hem9uLmRlIjppZih0LmluZGV4T2YoIktnIik+LTEpcmV0dXJuImtnIjtpZih0LmluZGV4T2YoImciKT4tMSlyZXR1cm4iZyI7YnJlYWs7Y2FzZSJ3d3cuYW1hem9uLmNvLmpwIjppZih0LmluZGV4T2YoIktnIik+LTEpcmV0dXJuImtnIjtpZih0LmluZGV4T2YoImciKT4tMSlyZXR1cm4iZyI7YnJlYWs7Y2FzZSJ3d3cuNnBtLmNvbSI6aWYodC5pbmRleE9mKCJsYiIpPi0xJiZ0LmluZGV4T2YoIm96Iik+LTEpcmV0dXJuImxiX296IjtpZih0LmluZGV4T2YoImxiIik+LTEpcmV0dXJuInBvdW5kcyI7aWYodC5pbmRleE9mKCJveiIpPi0xKXJldHVybiJvdW5jZXMifX1mdW5jdGlvbiB2KHQpe2lmKF90LndlaWdodCYmIXQpcmV0dXJuIF90LndlaWdodDtmb3IodmFyIGU9MCxuPVR0W3J0XSxvPW4ubGVuZ3RoLGE9MDthPG87YSsrKXt2YXIgcj1pKG5bYV0pLnRleHQoKTtpZigiIiE9cil7dmFyIHM9XyhyKTtpZigibGJfb3oiPT1zKXt2YXIgbD1yLm1hdGNoKC9bMC05XSsvZyk7cmV0dXJuIGU9TWF0aC5yb3VuZCgxMDAqKGt0LnBvdW5kcy8xZTMqcGFyc2VJbnQobFswXSkra3Qub3VuY2VzLzFlMypwYXJzZUludChsWzFdKSkpLzEwMCxfdC53ZWlnaHQ9ZSxlfWlmKCIiIT1zKXJldHVybiBlPU1hdGgucm91bmQoa3Rbc10vMWUzKmIocikqMTAwKS8xMDAsMD09PWV8fGV8fChlPTApLF90LndlaWdodD1lLGV9fX1mdW5jdGlvbiB5KHQpe3ZhciBlPXYodCk7aWYoZSYmMCE9ZSl7dCYmaSgiLmh0X3dlaWdodF9udW0iKS52YWwoZSk7dmFyIG49QihlKSxvPWkoIiN0cmFuc19saXN0IGxpIC50cmFuc19jb20iKS5lcShuLm1pbmluZGV4KS50ZXh0KCk7IiIhPW8mJjk5OTk5OTk5IT1uLm1pbnByaWNlJiYoaSgiLmh0X2ZyZWlnaHRfbnVtIikudGV4dCgiwqUiK24ubWlucHJpY2UpLGkoIi5odF90cmFuc3BvcnRfYnRuIHNwYW4iKS50ZXh0KG8pKX19ZnVuY3Rpb24gaygpe3JldHVybiBlLmRwLnByaWNlfHwiMCJ9ZnVuY3Rpb24geih0KXt2YXIgZT0wO2U9dD90OmsoKTt2YXIgbj1pKCIuaHRfZnJlaWdodF9udW0iKS50ZXh0KCkubWF0Y2goL1swLTkuXSsvKTtuJiYobj1uWzBdKTt2YXIgbz1pKCIuaHRfdGFyaWZmIC5odF90YXJpZmZfbnVtIGVtIikudGV4dCgpLm1hdGNoKC9bMC05Ll0rLyk7cmV0dXJuIG8mJihvPW9bMF0pLGkoIi5odF90YXJpZmYgLmh0X3RhcmlmZl9udW0iKSYmIjAiPT1pKCIuaHRfdGFyaWZmIC5odF90YXJpZmZfbnVtIikuYXR0cigiZGF0YS1wcmljZSIpJiYobz0wKSxvfHwobz0wKSxufHwobj0wKSxlPU51bWJlcigoTnVtYmVyKGUpK051bWJlcihuKStOdW1iZXIobykpLnRvTG9jYWxlU3RyaW5nKCkucmVwbGFjZSgvLC9nLCIiKSksZS50b1N0cmluZygpLm1hdGNoKC9cLlxkezN9LykmJihlPWUudG9TdHJpbmcoKS5yZXBsYWNlKC8oXC5cZHsyfSlcZCsvLCIkMSIpKSxlfWZ1bmN0aW9uIGooKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIHQ9bSgpO2koIi5wcm9fdHlwZSBlbSIpLmF0dHIoImNsYXNzIix0KSwieml5aW5nIj09dD8oaSgiLnByb190eXBlIC5wcm9fdF90bGUiKS50ZXh0KCLoh6rokKUiKSxpKCIucHJvX3R5cGVfZGV0YWlsIikudGV4dCgoIjZwbSI9PWUuc2l0ZT8iNlBNIjoi5Lqa6ams6YCKIikrIuebtOaOpemUgOWUruOAgiIpKTooaSgiLnByb190eXBlIC5wcm9fdF90bGUiKS50ZXh0KCLnrKzkuInmlrkiKSxpKCIucHJvX3R5cGVfZGV0YWlsIikudGV4dCgoIjZwbSI9PWUuc2l0ZT8iNlBNIjoi5Lqa6ams6YCKIikrIuesrOS4ieaWueWVhuWutumUgOWUruOAgiIpKX0sMWUzKX1mdW5jdGlvbiBDKCl7dmFyIHQ9IiNwcmljZWJsb2NrX291cnByaWNlIixuPSJwcmljZV9mZWF0dXJlX2RpdiI7IjZwbSI9PWUuc2l0ZSYmKHQ9IiNwcmljZVNsb3QgLnByaWNlIixuPSJwcm9kdWN0Rm9ybSIpO3ZhciBvPWkodCkudGV4dCgpLGE9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobik7YSYmYS5hZGRFdmVudExpc3RlbmVyJiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTVN1YnRyZWVNb2RpZmllZCIsZnVuY3Rpb24oKXt2YXIgZT1pKHQpLnRleHQoKTtlIT1vJiZlJiYobz1lLGU9ZnQoZSksaSgiLmh0X2NvbnRlbnQgLnByaWNlX251bSIpLnRleHQoIsKlIitlKSxTKGUpLGooKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7eSghMCl9LDgwMCkpfSwhMSl9ZnVuY3Rpb24gUyh0KXt2YXIgZT0iwqUiK3oodCk7aSgiLmh0X2dldHByaWNlX251bSIpLnRleHQoZSl9ZnVuY3Rpb24gUCgpe3ZhciB0PShpKHdpbmRvdykud2lkdGgoKS01OTUpLzIsZT0oaSh3aW5kb3cpLmhlaWdodCgpLTQyMCkvMjtyZXR1cm57cG9zeDp0LHBvc3k6ZX19ZnVuY3Rpb24gVCgpe3ZhciB0PW4oMzEpO2koImJvZHkiKS5hcHBlbmQodXQuY29tcGlsZSh0KSh7cG9zOlAoKX0pKX1mdW5jdGlvbiBBKCl7dmFyIHQ9bigzMik7aSgiYm9keSIpLmFwcGVuZCh1dC5jb21waWxlKHQpKHtwb3M6UCgpLGh0X3dlaWdodDp2KCksY19zZXJ2ZXI6ZS5jX3NlcnZlcn0pKX1mdW5jdGlvbiBOKHQsbil7dmFyIG89JzxpbWcgc3JjPSJodHRwOi8vczEuJytlLmV4dE5hbWUrJy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMve3tpbWd1cmx9fSI+JztpKCIuc2l6ZV9zIikuZW1wdHkoKS5hcHBlbmQodXQuY29tcGlsZShvKSh7aW1ndXJsOnR9KSksaSgiLnNpemVfaXRlbV9pbWciKS5lbXB0eSgpLmFwcGVuZCh1dC5jb21waWxlKG8pKHtpbWd1cmw6bn0pKX1mdW5jdGlvbiBJKHQpe2lmKCFodClyZXR1cm4gbnVsbDtmb3IodmFyIGU9aHRbdnRdLG49MDtuPGUubGVuZ3RoO24rKylpZih0PT09ZVtuXS5zaG9wSWQmJmVbbl0uYXNjZSl7dmFyIGk9ZVtuXS5hc2NlYXJyLG89ZVtuXS5jdXJyZW50O3JldHVybnthc2NlYXJyOmksY3VycmVudDpvfX19ZnVuY3Rpb24gQih0KXtmb3IodmFyIGU9OTk5OTk5OTksbj0wLG89aSgiI3RyYW5zX2xpc3QgbGkgLnRyYW5zX3ByIiksYT1pKG8pLmxlbmd0aCxyPTA7cjxhO3IrKyl7dmFyIHM9TnVtYmVyKGkobykuZXEocikuYXR0cigiZGF0YS1mcCIpKSxsPU51bWJlcihpKG8pLmVxKHIpLmF0dHIoImRhdGEtZnciKSksYz1OdW1iZXIoaShvKS5lcShyKS5hdHRyKCJkYXRhLXN3IikpLHA9TnVtYmVyKGkobykuZXEocikuYXR0cigiZGF0YS1zcCIpKSxkPWkobykuZXEocikuYXR0cigiZGF0YS1zaG9wbmFtZSIpO2lmKGQpe3ZhciBoPUkoZCk7aWYoIWgpcmV0dXJuO3ZhciB1PUUodCxoLmFzY2VhcnIsaC5jdXJyZW50KX1lbHNlIHZhciB1PU8odCxbcyxsLHAsY10pOzA9PXImJihlPXUpLGkobykuZXEocikudGV4dCgi77+lIit1KX1yZXR1cm57bWluaW5kZXg6bixtaW5wcmljZTplfX1mdW5jdGlvbiBxKCl7dmFyIHQ9aSgiLmZpcnN0X3hpYWxhIikudmFsKCksZT1pKCIuc2Vjb25kX3hpYWxhIikudmFsKCksbj1pKCIjZmlyc3Rfc2l6ZSIpLnZhbCgpO24mJihuPU51bWJlcihuKSk7dmFyIG89eXRbdF0sYT15dFtlXSxyPW4qby9hO3IudG9TdHJpbmcoKS5pbmRleE9mKCIuIik+LTEmJihyPXIudG9GaXhlZCgyKSksaSgiI3NlY29uZF9zaXplIikudmFsKHIpfWZ1bmN0aW9uIE8odCxlKXt2YXIgbixpPWVbMF0sbz1lWzFdLGE9ZVsyXSxyPWVbM10scz0xO2lmKHIudG9TdHJpbmcoKS5pbmRleE9mKCIuIik+LTEmJihzPXIudG9TdHJpbmcoKS5tYXRjaCgvXC4oXGQrKS8pWzFdLmxlbmd0aCksIjAiPT1pKW49dC9yKmE7ZWxzZSBpZih0PD1vKW49aTtlbHNle3ZhciBsPXQtbyxjPTA7Yz1sKk1hdGgucG93KDEwLHMpJShyKk1hdGgucG93KDEwLHMpKT09MD9sL3I6cGFyc2VJbnQobC9yKSsxO3ZhciBuPWkrYyphfXJldHVybiBOdW1iZXIobikudG9GaXhlZCgyKX1mdW5jdGlvbiBFKHQsZSxuKXt0PU51bWJlcih0KTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKylpZihlW2ldWzBdPnQpcmV0dXJuIDA9PWk/aT0xOmVbaS0xXVswXTx0JiYoaSs9MSksbj9mdChlW2ktMV1bMV0pLnRvRml4ZWQoMik6TnVtYmVyKGVbaS0xXVsxXSkudG9GaXhlZCgyKTtpZih0PmVbZS5sZW5ndGgtMV1bMF0pcmV0dXJuIG4/ZnQoZVtlLmxlbmd0aC0xXVsxXSkudG9GaXhlZCgyKTpOdW1iZXIoZVtlLmxlbmd0aC0xXVsxXSkudG9GaXhlZCgyKX1mdW5jdGlvbiBMKCl7Zm9yKHZhciB0LGUsbixvLGEscj1OdW1iZXIoaSgiLmh0X3dlaWdodCAuaHRfd2VpZ2h0X251bSIpLnZhbCgpKXx8MCxzPWkoIi5odF90cmFuc3BvcnRfYnRuIHNwYW4iKS5hdHRyKCJkYXRhLXRpdGxlIiksbD1odFt2dF0sYz0wO2M8bC5sZW5ndGg7YysrKWxbY10uc2hvcG5hbWU9PXMmJih0PWxbY10uZmlyc3RXLGU9bFtjXS5uZXh0VyxuPWxbY10uYXNjZSxvPWxbY10uYXNjZWFycixhPWxbY10uY3VycmVudCk7aWYobil2YXIgcD0iwqUiK0UocixvLGEpO2Vsc2UgdmFyIHA9IsKlIitPKHIsW3RbMV0sdFswXSxlWzFdLGVbMF1dKTtpKCIuaHRfZnJlaWdodF9udW0iKS50ZXh0KHApfWZ1bmN0aW9uIEQoKXt2YXIgdD1odFt2dF0sZT0ne3tlYWNoIGRhdGF9fVxuICAgICAgICAgICAgICA8bGkgY2xhc3M9Int7aWYgJGluZGV4JTI9PTF9fWxfb2Rke3svaWZ9fSI+XG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9InRyYW5zX2NvbSIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Int7JHZhbHVlLnNob3BfdXJsfX0iID57eyR2YWx1ZS5zaG9wbmFtZX19PC9hPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsb19jZW50ZXIiPnt7JHZhbHVlLndhcmVob3VzZX19PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0cmFuc19wciIge3tpZiAkdmFsdWUuYXNjZX19ZGF0YS1zaG9wbmFtZT0ie3skdmFsdWUuc2hvcElkfX0iIHt7L2lmfX0gZGF0YS1mdz0ie3skdmFsdWUuZmlyc3RXWzBdfX0iIGRhdGEtc3c9Int7JHZhbHVlLm5leHRXWzBdfX0iIGRhdGEtc3A9Int7JHZhbHVlLm5leHRXWzFdfX0iIGRhdGEtZnA9Int7JHZhbHVlLmZpcnN0V1sxXX19Ij57eyR2YWx1ZS5maXJzdFdbMV09PTA/IuaXoOmmlumHjSI6KCLvv6UiKyR2YWx1ZS5maXJzdFdbMV0pfX08L3NwYW4+XG4gICAgICAgICAgICAgICAge3tpZiAkdmFsdWUuY29vcGVyfX08c3BhbiBjbGFzcz0ic2FsZV90bGUiPjxhICBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiPnt7JHZhbHVlLnNhbGVfdGxlfX08L2E+PC9zcGFuPnt7L2lmfX1cbiAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgIHt7L2VhY2h9fSc7aSgiI3RyYW5zX2xpc3QiKS5hcHBlbmQodXQuY29tcGlsZShlKSh7ZGF0YTp0fSkpLEYoKSxzdHx8aSgiI3RyYW5zcG9ydF9kZXRhaWwiKS5hZGRDbGFzcygibm9fc2FsZSIpfWZ1bmN0aW9uIEYoKXt2YXIgdD1odFt2dF07aSgiI3RyYW5zX2xpc3QgbGkgLnRyYW5zX3ByIikuZWFjaChmdW5jdGlvbihlLG4pe2lmKCLml6Dpppbph40iPT1pKG4pLnRleHQoKSlmb3IodmFyIG89MDtvPHQubGVuZ3RoO28rKyl0W29dLnNob3BJZD09PWkobikuYXR0cigiZGF0YS1zaG9wbmFtZSIpJiYodFtvXS5jdXJyZW50P2kobikudGV4dCgi77+lIitOdW1iZXIoZnQodFtvXS5hc2NlYXJyWzBdWzFdKSkudG9GaXhlZCgyKSk6aShuKS50ZXh0KCLvv6UiK051bWJlcih0W29dLmFzY2VhcnJbMF1bMV0pLnRvRml4ZWQoMikpKTtlbHNle3ZhciBhPWkobikudGV4dCgpLnJlcGxhY2UoIu+/pSIsIiIpO2E9Iu+/pSIrTnVtYmVyKGEpLnRvRml4ZWQoMiksaShuKS50ZXh0KGEpfX0pfWZ1bmN0aW9uIE0odCxlKXtyZXR1cm4iTEIiPT10JiYoZT0uNDUzNipOdW1iZXIoZSkpLGV9ZnVuY3Rpb24gUigpe2koIi50cmFuc193IGlucHV0Iikub24oImtleXVwIixmdW5jdGlvbigpe3ZhciB0PU51bWJlcihpKHRoaXMpLnZhbCgpKSxlPWkoIi50cmFuc193IGlucHV0Ky53ZWlnaHRfdHlwZSIpLnRleHQoKSxuPU0oZSx0KTswIT09dCYmKHQ/QihuKTphbGVydCgi6K+36L6T5YWl5pWw5a2X77yBIikpfSksaSgiI3RyYW5zX2xpc3QgbGkgLnNhbGVfdGxlIGEiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7d3QoImNsaWNrOmhhaXRhbzpzYWxlX3RsZSIpLHh0LmxvZygi5rW35reY6L2s6L+Q5ZWG5a625LyY5oOg5pS/562W54K55Ye75oOF5Ya1Iil9KSxpKCIjdHJhbnNfbGlzdCBsaSAudHJhbnNfY29tIikub24oImNsaWNrIixmdW5jdGlvbigpe3d0KCJjbGljazpoYWl0YW86dHJhbnNfY29tIikseHQubG9nKCLmtbfmt5jovazov5DllYblrrbnvZHnq5nngrnlh7vmg4XlhrUiKX0pLGkoIiN0cmFuc19saXN0IGxpIC5sb19jZW50ZXIsICN0cmFuc19saXN0IGxpIC50cmFuc19wciIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1pKHRoaXMpLnBhcmVudCgpLmZpbmQoIi50cmFuc19jb20iKS50ZXh0KCk7aSgiLmh0X3RyYW5zcG9ydF9idG4gc3BhbiIpLnRleHQodC5zbGljZSgwLDUpKSxpKCIuaHRfdHJhbnNwb3J0X2J0biBzcGFuIikuYXR0cigiZGF0YS10aXRsZSIsdCksTCgpLFMoKSxpKCIjdHJhbnNwb3J0X2RldGFpbCIpLmhpZGUoKX0pfWZ1bmN0aW9uICQoKXtpKCIuY2xvdGhlc19uYXYgbGkiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aSgiLmNsb3RoZXNfbmF2IGxpIikucmVtb3ZlQ2xhc3MoInNlbGVjdCIpLGkodGhpcykuYWRkQ2xhc3MoInNlbGVjdCIpO3ZhciB0PWkodGhpcykudGV4dCgpLGU9ZCh0LHZ0KTt0LmluZGV4T2YoIumeiyIpPi0xPyhpKCIudW5pdF9jbSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKSxpKCIudW5pdF9tbSIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIiNzaXplX2RldGFpbCAuZGV0YWlsX2xlZnQgc3BhbiIpLmhpZGUoKSxpKCIuY2xvdGhfaWNvbiIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIiNzaXplX2RldGFpbCAuc2hvZXMiKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSx0LmluZGV4T2YoIueUt+meiyIpPi0xPyhpKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24gaHRfc2hvZXMgbWFuX2Zvb3QiKSxpKCIuZGV0YWlsX2xlZnQgLnNob2VzIikudGV4dCh0KSk6dC5pbmRleE9mKCLlpbPpnosiKT4tMT8oaSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIGh0X3Nob2VzIHdvbWFuX2Zvb3QiKSxpKCIuZGV0YWlsX2xlZnQgLnNob2VzIikudGV4dCh0KSk6KGkoIiNzaXplX2RldGFpbCAuc2hvZXMiKS5oaWRlKCksaSgiLmNsb3RoX2ljb24iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIudG9uZ3hpZSIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIi50b25neGllMCIpLmFkZENsYXNzKCJzaXplX2hvdmVyIiksaSgiLnRvbmd4aWU0IikucmVtb3ZlQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24gaHRfc2hvZXMga2lkc19mb290IikpKTp0LmluZGV4T2YoIuerpeijhSIpPi0xPyhpKCIudW5pdF9tbSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKSxpKCIudW5pdF9jbSIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIiNzaXplX2RldGFpbCAuZGV0YWlsX2xlZnQgc3BhbiIpLmhpZGUoKSxpKCIjc2l6ZV9kZXRhaWwgLnRvbmd6aHVhbmciKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIuY2xvdGhfaWNvbiIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBraWQwIiksaSgiLnRvbmd6aHVhbmcwIikuYWRkQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIudG9uZ3podWFuZzQiKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpKTp0LmluZGV4T2YoIueUt+ijhSIpPi0xPyhpKCIudW5pdF9tbSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKSxpKCIudW5pdF9jbSIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIiNzaXplX2RldGFpbCAuZGV0YWlsX2xlZnQgc3BhbiIpLmhpZGUoKSxpKCIuY2xvdGhfaWNvbiIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIiNzaXplX2RldGFpbCAuc2hhbmd5aSIpLnNob3coKSxpKCIjc2l6ZV9kZXRhaWwgLnhpYXpodWFuZyIpLnNob3coKSxpKCIueGlhemh1YW5nIikucmVtb3ZlQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIuc2hhbmd5aSIpLmFkZENsYXNzKCJzaXplX2hvdmVyIiksaSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIG1hbnNoYW5nemh1YW5nIikpOihpKCIudW5pdF9tbSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKSxpKCIudW5pdF9jbSIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIiNzaXplX2RldGFpbCAuZGV0YWlsX2xlZnQgc3BhbiIpLmhpZGUoKSxpKCIuY2xvdGhfaWNvbiIpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpLGkoIiNzaXplX2RldGFpbCAuc2hhbmd5aSIpLnNob3coKSxpKCIjc2l6ZV9kZXRhaWwgLnhpYXpodWFuZyIpLnNob3coKSxpKCIueGlhemh1YW5nIikucmVtb3ZlQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIuc2hhbmd5aSIpLmFkZENsYXNzKCJzaXplX2hvdmVyIiksdC5pbmRleE9mKCLnlLfoo4UiKT4tMT9pKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24gbWFuc2hhbmd6aHVhbmciKTppKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24gd29tYW5zaGFuZ3podWFuZyIpKSxOKGVbMF0sZVsxXSl9KSxpKCIuc2hhbmd5aSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpZighKGkodGhpcykuYXR0cigiY2xhc3MiKS5pbmRleE9mKCJzaXplX2hvdmVyIik+LTEpKXt2YXIgdD1pKCcuY2xvdGhlc19uYXYgbGlbY2xhc3M9InNlbGVjdCJdJykudGV4dCgpO2lmKCLnq6Xoo4UiIT10KXsi55S36KOFIj09dCYmaSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIG1hbnNoYW5nemh1YW5nIiksIuWls+ijhSI9PXQmJmkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiB3b21hbnNoYW5nemh1YW5nIik7dmFyIGU9ZCh0LHZ0KTtOKGVbMF0sZVsxXSksaSh0aGlzKS5hZGRDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi54aWF6aHVhbmciKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpfX19KSxpKCIueGlhemh1YW5nIikub24oImNsaWNrIixmdW5jdGlvbigpe2lmKCEoaSh0aGlzKS5hdHRyKCJjbGFzcyIpLmluZGV4T2YoInNpemVfaG92ZXIiKT4tMSkpe3ZhciB0PWkoJy5jbG90aGVzX25hdiBsaVtjbGFzcz0ic2VsZWN0Il0nKS50ZXh0KCk7aWYoIuerpeijhSIhPXQpe2lmKCLnlLfoo4UiPT10KXt2YXIgZT16dC54aWF6aHVhbmdbdnRdLm1hbjtOKGVbMF0sZVsxXSksaSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIG1hbnhpYXpodWFuZyIpfWlmKCLlpbPoo4UiPT10KXt2YXIgZT16dC54aWF6aHVhbmdbdnRdLndvbWFuO04oZVswXSxlWzFdKSxpKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24gd29tYW54aWF6aHVhbmciKX1pKHRoaXMpLmFkZENsYXNzKCJzaXplX2hvdmVyIiksaSgiLnNoYW5neWkiKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpfX19KSxpKCIudG9uZ3podWFuZzAiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIHQ9ZCgi56ul6KOFIix2dCk7Tih0WzBdLHRbMV0pLGkodGhpcykuYWRkQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIudG9uZ3podWFuZzQiKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBraWQwIil9KSxpKCIudG9uZ3podWFuZzQiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIHQ9ZCgi56ul6KOFIix2dCk7Tih0WzBdLHRbMl0pLGkodGhpcykuYWRkQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIudG9uZ3podWFuZzAiKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBraWQ0Iil9KSxpKCIudG9uZ3hpZTAiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIHQ9ZCgi56ul6Z6LIix2dCk7Tih0WzBdLHRbMV0pLGkodGhpcykuYWRkQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIudG9uZ3hpZTQiKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpfSksaSgiLnRvbmd4aWU0Iikub24oImNsaWNrIixmdW5jdGlvbigpe3ZhciB0PWQoIuerpemeiyIsdnQpO04odFswXSx0WzJdKSxpKHRoaXMpLmFkZENsYXNzKCJzaXplX2hvdmVyIiksaSgiLnRvbmd4aWUwIikucmVtb3ZlQ2xhc3MoInNpemVfaG92ZXIiKX0pfWZ1bmN0aW9uIEgoKXt2YXIgdD1lLmRwLG49bXQuZ2V0KCJvdGhlcl9pbmZvIiksbz1uLm5vdztpZighby5kcF9pZClyZXR1cm4gaSgiI2h0X2FkZGNvbGxlY3QiKS50ZXh0KCLmmoLkuI3mlK/mjIEiKSx2b2lkIGkoIiNodF9hZGRjb2xsZWN0IikudW5iaW5kKCJjbGljayIpO2koIiNodF9hZGRjb2xsZWN0IikudGV4dCgi5q2j5Zyo5re75YqgIiksaSgiI2h0X2FkZGNvbGxlY3QiKS5hZGRDbGFzcygiY19hZGRpbmciKSxvLnByaWNlPXQub2xkUHJpY2V8fG5bImNvZGUtc2VydmVyIl0mJm5bImNvZGUtc2VydmVyIl0ucHJpY2Usby50aXRsZT10Lm5hbWV8fGkoInRpdGxlIikuaHRtbCgpLG8udXJsPW8udXJsfHxsb2NhdGlvbi5ocmVmLG8uaW1nPW8uaW1nfHx0LmltZzt2YXIgYT1lLmNfc2VydmVyKyIvY29sbGVjdC9hal9hZGQ/ZHBfaWQ9ICIrby5kcF9pZCsiJnVybD0iK2VuY29kZVVSSUNvbXBvbmVudChvLnVybHx8ZS5kcC51cmwpKyImaW1nPSIrZW5jb2RlVVJJQ29tcG9uZW50KG8uaW1nfHxlLmRwLmltZykrIiZ0aXRsZT0iK2VuY29kZVVSSUNvbXBvbmVudChvLnRpdGxlKSsiJnByaWNlPSIrby5wcmljZSsiJnNpdGVfaWQ9IitvLnNpdGVfaWQrIiZjYXRfaWQ9IitlLmRwLmNhdF9pZDtJdChhLGZ1bmN0aW9uKHQpe2lmKDEwMD09dC5jb2RlfHx0LmNvZGU8PTApe3ZhciBuPXdpbmRvdy5sb2NhdGlvbi5ocmVmLnRvU3RyaW5nKCk7bis9bi5pbmRleE9mKCI/Iik+LTE/IiZnd2RfYWRkX2Zhdm9yX3VuaXF1ZT10cnVlIjoiP2d3ZF9hZGRfZmF2b3JfdW5pcXVlPXRydWUiLHdpbmRvdy5sb2NhdGlvbi5ocmVmPWUuY19zZXJ2ZXIrIi91c2VyL2xvZ2luP2Zyb21fdXJsPSIrZW5jb2RlVVJJQ29tcG9uZW50KG4pfWVsc2UgMT09dC5jb2RlPyhpKCIjaHRfYWRkY29sbGVjdCIpLnRleHQoIuW3sua3u+WKoCIpLGkoIiNodF9hZGRjb2xsZWN0IikucmVtb3ZlQ2xhc3MoImNfYWRkaW5nIiksaSgiI2h0X2FkZGNvbGxlY3QiKS5hZGRDbGFzcygiY19hZGRlZCIpLGkoIiNodF9hZGRjb2xsZWN0IikudW5iaW5kKCJjbGljayIpKToyPT10LmNvZGUmJihpKCIjaHRfYWRkY29sbGVjdCIpLnRleHQoIua3u+WKoOi/h+S6hiIpLGkoIiNodF9hZGRjb2xsZWN0IikucmVtb3ZlQ2xhc3MoImNfYWRkaW5nIiksaSgiI2h0X2FkZGNvbGxlY3QiKS5hZGRDbGFzcygiY19hZGRlZCIpLGkoIiNodF9hZGRjb2xsZWN0IikudW5iaW5kKCJjbGljayIpKX0pfWZ1bmN0aW9uIFcoKXtpKCIuaHRfaGVhZCAuaHRfZ2V0cHJpY2UiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXt2YXIgdD1pKCIjaHRfY29udGVudF9pbmZvIik7dC5pcygiOnZpc2libGUiKXx8KGkoIi5jb250ZW50X2RlZmF1bHQiKS5oaWRlKCksdC5zaG93KCkpfSksaSgiLmNsb3NlYmFyIikub24oImNsaWNrIixmdW5jdGlvbigpe2kodGhpcykucGFyZW50KCkuaGlkZSgpfSksaSgiLmNvbnRlbnRfZGVmYXVsdF9sZWZ0IC5odF90YXJpZmYgLmRlbF9saW5lIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7aSgiLnRhcmlmZl9yZW1pbmRfZGV0YWlsIikuc2hvdygpfSksaSgiLmNvbnRlbnRfZGVmYXVsdF9sZWZ0IC5odF90YXJpZmYgLmRlbF9saW5lIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7aSgiLnRhcmlmZl9yZW1pbmRfZGV0YWlsIikuaGlkZSgpfSksaSgiLmh0X3RyYW5zbGF0ZSIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2koIi50cmFuc2xhdGVfZGV0YWlsIikuc2hvdygpfSksaSgiLmh0X3RyYW5zbGF0ZSIpLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe2koIi50cmFuc2xhdGVfZGV0YWlsIikuaGlkZSgpfSksaSgiLnByb190eXBlIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7aSgiLnByb190eXBlX2RldGFpbCIpLnNob3coKX0pLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe2koIi5wcm9fdHlwZV9kZXRhaWwiKS5oaWRlKCl9KSxpKCIubWFpbF90eXBlIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7aSgiLm1haWxfdHlwZV9kZXRhaWwiKS5zaG93KCl9KS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtpKCIubWFpbF90eXBlX2RldGFpbCIpLmhpZGUoKX0pLGkoIi5odF90cmFuc3BvcnRfYnRuLCAuc2l6ZV9oZWxwLCAuaHRfdGFyaWZmX2J0biwgI2h0X2FkZGNvbGxlY3QiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtpKHRoaXMpLmZpbmQoIi5kaXZfZGV0YWlsIikuc2hvdygpfSkub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7aSh0aGlzKS5maW5kKCIuZGl2X2RldGFpbCIpLmhpZGUoKX0pLGkoIi53ZWlnaHRfdHlwZSIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2koIi53ZWlnaHRfdHlwZV9kZXRhaWwiKS5zaG93KCl9KS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtpKCIud2VpZ2h0X3R5cGVfZGV0YWlsIikuaGlkZSgpfSksaSgiI2h0X2FkZGNvbGxlY3QiKS5vbigiY2xpY2siLGZ1bmN0aW9uKHQpe3ZhciBuPWkoIiNhbHRJbWFnZXMgbGkgaW1nIikuZXEoMCk7biYmKGUuY29sbGVjdEluZm8uaW1nPW4uYXR0cigic3JjIikpLHQucHJldmVudERlZmF1bHQoKSxIKCl9KSxpKCIuaHRfd2VpZ2h0IC53ZWlnaHRfdHlwZSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1pKHRoaXMpLnRleHQoKTsiTEIiPT09dD8oYXQ9aSgiLmh0X3dlaWdodF9udW0iKS52YWwoKSxpKHRoaXMpLnRleHQoIktHIiksaSgiLmh0X3dlaWdodF9udW0iKS52YWwoTWF0aC5yb3VuZCguNDUzNTkyNCpOdW1iZXIoYXQpKjEwMCkvMTAwKSk6KGkodGhpcykudGV4dCgiTEIiKSxhdCYmaSgiLmh0X3dlaWdodF9udW0iKS52YWwoYXQpKX0pLGkoIi5kZWxfbGluZSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXsiMSI9PT1pKHRoaXMpLmF0dHIoImRhdGEtZGVsIik/KGkodGhpcykuZmluZCgiLmh0X3RhcmlmZl9udW0iKS5jc3MoInRleHQtZGVjb3JhdGlvbiIsIm5vbmUiKSxpKHRoaXMpLmF0dHIoImRhdGEtZGVsIiwiMCIpLGkodGhpcykuZmluZCgic3BhbiIpLmF0dHIoImRhdGEtcHJpY2UiLGkodGhpcykuZmluZCgic3BhbiIpLnRleHQoKSksUygpKTooaSh0aGlzKS5maW5kKCIuaHRfdGFyaWZmX251bSIpLmNzcygidGV4dC1kZWNvcmF0aW9uIiwibGluZS10aHJvdWdoIiksaSh0aGlzKS5hdHRyKCJkYXRhLWRlbCIsIjEiKSxpKHRoaXMpLmZpbmQoInNwYW4iKS5hdHRyKCJkYXRhLXByaWNlIiwwKSxTKCkpfSksaSgiLmh0X3RyYW5zcG9ydF9idG4iKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aSgiI3RyYW5zcG9ydF9kZXRhaWwiKS5zaG93KCksd3QoImNsaWNrOmhhaXRhbzp0cmFuc3BvcnQiKSx4dC5sb2coIua1t+a3mOi9rOi/kOWVhuWutueCueWHu+aDheWGtSIpfSksaSgiLnNpemVfaGVscCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKCIjc2l6ZV9kZXRhaWwiKS5zaG93KCksd3QoImNsaWNrOmhhaXRhbzpzaXplX2hlbHAiKSx4dC5sb2coIueCueWHu+WwuueggeW4ruWKqSIpfSksaSgiLnNpemVfeGlhbGEiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtpKHRoaXMpLm5leHQoIi5zaXplX3hpYWxhYm94Iikuc2hvdygpLGkodGhpcykuYWRkQ2xhc3MoIm1zSG92ZXIiKX0pLGkoIi5zaXplX3hpYWxhIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpdD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aSh0KS5uZXh0KCIuc2l6ZV94aWFsYWJveCIpLmhpZGUoKSxpKHQpLnJlbW92ZUNsYXNzKCJtc0hvdmVyIil9LDEwMCl9KSxpKCIuc2l6ZV94aWFsYWJveCIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2NsZWFyVGltZW91dChpdCl9KSxpKCIuc2l6ZV94aWFsYWJveCIpLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe2kodGhpcykuaGlkZSgpfSksaSgiLnNpemVfeGlhbGFib3ggYSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1pKHRoaXMpLnRleHQoKSxlPWkodGhpcykucGFyZW50KCkuYXR0cigiZGF0YS1zaXplIik7aSgiLiIrZSkudmFsKHQpLGkodGhpcykucGFyZW50KCkuaGlkZSgpLHEoKX0pLGkoIiNmaXJzdF9zaXplIikub24oImtleXVwIixmdW5jdGlvbigpe3EoKX0pfWZ1bmN0aW9uIFUoKXtXKCksSigpLFIoKX1mdW5jdGlvbiBZKHQpe3ZhciBlPSd7e2VhY2ggZGF0YX19PGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgdGl0bGU9Int7JHZhbHVlWzFdfX0iIHRhcmlmZj0ie3skdmFsdWVbMF19fSI+e3skdmFsdWVbMV19fTwvYT57ey9lYWNofX0nO2koIiNjYXRlX3NtYWxsIikubmV4dCgiLnhpYWxhYm94IikuZW1wdHkoKS5hcHBlbmQodXQuY29tcGlsZShlKSh7ZGF0YTp0fSkpLGkoIiNjYXRlX3NtYWxsIikucmVtb3ZlQ2xhc3MoInNlbF9pbmZvIiksRygpfWZ1bmN0aW9uIEcoKXtpKCIjc21hbGxfeGlhbGEgYSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1pKHRoaXMpLnRleHQoKTtpKCIjY2F0ZV9zbWFsbCIpLnZhbCh0KSxpKCIuaHRfdGFyaWZmX2NhdGUiKS50ZXh0KHQpLGkoIi5odF90YXJpZmYgLmh0X3RhcmlmZl9udW0gZW0iKS50ZXh0KGkodGhpcykuYXR0cigidGFyaWZmIikpLGkoIiN0YXJpZmZfZGV0YWlsIC5odF90YXJpZmZfbnVtIikudGV4dChpKHRoaXMpLmF0dHIoInRhcmlmZiIpKSxpKCIuaHRfdGFyaWZmX2J0biBzcGFuIikudGV4dChpKHRoaXMpLnRleHQoKS5zbGljZSgwLDUpKSxpKCIuaHRfdGFyaWZmX2J0biBzcGFuIikuYXR0cigidGl0bGUiLGkodGhpcykudGV4dCgpKSxpKCIjc21hbGxfeGlhbGEiKS5oaWRlKCksWCgiI2NhdGVfc21hbGwiKSxYKCIuaHRfdGFyaWZmX2NhdGUiLCJ0ZXh0Iiw0KX0pLGkoIiNzZWxlY3RfYnRuIikub24oImNsaWNrIixmdW5jdGlvbigpe1MoKSxpKCIjdGFyaWZmX2RldGFpbCIpLmhpZGUoKX0pfWZ1bmN0aW9uIFgodCxlLG4pe249bnx8Njt2YXIgbyxhPTA7bz0idGV4dCI9PWU/aSh0KS50ZXh0KCk6aSh0KS52YWwoKTtmb3IodmFyIHI9MDtyPG8ubGVuZ3RoO3IrKyl7dmFyIHM9bmV3IFJlZ0V4cCgiW2EtejAtOS9dIikudGVzdChvW3JdKTtpZihhKz1zPy41OjEsYT5uKXJldHVybiBvPW8uc2xpY2UoMCxyKSsiLi4uIix2b2lkKCJ0ZXh0Ij09ZT9pKHQpLnRleHQobyk6aSh0KS52YWwobykpfX1mdW5jdGlvbiBKKCl7aSgiLmh0X3RhcmlmZl9idG4iKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aSgiI3RhcmlmZl9kZXRhaWwiKS5zaG93KCksd3QoImNsaWNrOmhhaXRhbzp0YXJpZmYiKSx4dC5sb2coIua1t+a3mOWFs+eojueCueWHuyIpfSksaSgiI2NhdGVfc2VsZWN0X2JveCBpbnB1dCIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2kodGhpcykubmV4dCgiLnhpYWxhYm94IikuZmluZCgiYSIpLmxlbmd0aD4wJiYoaSh0aGlzKS5uZXh0KCIueGlhbGFib3giKS5zaG93KCksaSh0aGlzKS5wYXJlbnQoKS5hZGRDbGFzcygic2VsZWN0X2hvdmVyIiksaSh0aGlzKS5hZGRDbGFzcygiaW5wdXRfaG92ZXIiKSl9KSxpKCIjY2F0ZV9zZWxlY3RfYm94IGlucHV0Iikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpdD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aSh0KS5uZXh0KCIueGlhbGFib3giKS5oaWRlKCksaSh0KS5wYXJlbnQoKS5yZW1vdmVDbGFzcygic2VsZWN0X2hvdmVyIiksaSh0KS5yZW1vdmVDbGFzcygiaW5wdXRfaG92ZXIiKX0sMTAwKX0pLGkoIi54aWFsYWJveCIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2NsZWFyVGltZW91dChpdCl9KS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtpKHRoaXMpLmhpZGUoKSxpKHRoaXMpLnBhcmVudCgpLnJlbW92ZUNsYXNzKCJzZWxlY3RfaG92ZXIiKSxpKHRoaXMpLnBhcmVudCgpLmZpbmQoImlucHV0IikucmVtb3ZlQ2xhc3MoImlucHV0X2hvdmVyIil9KSxHKCksaSgiI2JpZ194aWFsYSBhIikub24oImNsaWNrIixmdW5jdGlvbigpe3ZhciB0PWkodGhpcykudGV4dCgpO2koIiNjYXRlX2JpZyIpLnZhbCh0KSxpKCIuaHRfdGFyaWZmX2NhdGUiKS50ZXh0KHQpO3ZhciBlPWkodGhpcykuYXR0cigiY2F0ZSIpO1koZHRbZV0pLGkoIiNiaWdfeGlhbGEiKS5oaWRlKCksWCgiI2NhdGVfYmlnIiksWCgiLmh0X3RhcmlmZl9jYXRlIiwidGV4dCIsNCl9KX1mdW5jdGlvbiBaKHQsbil7dmFyIGk9bG9jYXRpb24ucHJvdG9jb2wrKCIvL2Jyb3dzZXIuIitlLmV4dE5hbWUrIi5jb20vZXh0ZW5zaW9uP2FjPWZhbnlpJnN0cmluZz0iKSt0O2d0LmdldChpKS5kb25lKGZ1bmN0aW9uKGUpe2lmKGUudHJhbnNfcmVzdWx0JiYhZS5lcnJvcl9jb2RlKXtmb3IodmFyIGk9W10sbz0wO288ZS50cmFuc19yZXN1bHQubGVuZ3RoO28rKylpLnB1c2goZS50cmFuc19yZXN1bHRbb10uZHN0KTtuKGkpfWVsc2UgbihbdF0pfSl9ZnVuY3Rpb24gVih0LGUpe1oodCxlKSx3dCgicmVxdWVzdDpoYWl0YW86ZmFueWkiKSx4dC5sb2coIuivt+axguWIkuivjee/u+ivkSIpfWZ1bmN0aW9uIEsodCl7dD10LmpvaW4oIiIpLGkoIi5odF9mYW55aSIpLnJlbW92ZSgpO3ZhciBlPSc8ZGl2IGNsYXNzPSJodF9mYW55aSIgc3R5bGU9InRvcDp7e2h0eX19O2xlZnQ6e3todHh9fSI+PHNwYW4gaWQ9Imh0X3RvcCI+PC9zcGFuPnt7ZGF0YX19PC9kaXY+JyxuPXV0LmNvbXBpbGUoZSkoe2RhdGE6dCxodHg6USgpKyJweCIsaHR5OmN0KyJweCJ9KTtpKCJib2R5IikuYXBwZW5kKG4pLGV0KCl9ZnVuY3Rpb24gUSgpe3ZhciB0PTA7cmV0dXJuIHQ9bHQ+cHQ/bHQtKGx0LXB0KS8yLTY1Omx0KyhwdC1sdCkvMi02NX1mdW5jdGlvbiB0dCh0KXtWKHQsSyl9ZnVuY3Rpb24gZXQoKXtpKCIuaHRfZmFueWkiKS5zaWJsaW5ncygpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKCIuaHRfZmFueWkiKS5yZW1vdmUoKX0pfWZ1bmN0aW9uIG50KCl7aSgiYm9keSIpLm9uKCJtb3VzZWRvd24iLGZ1bmN0aW9uKHQpe2NsZWFyVGltZW91dChvdCkscHQ9dC5wYWdlWH0pLGkoImJvZHkiKS5vbigibW91c2V1cCIsZnVuY3Rpb24odCl7b3Q9c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBlPSIiO2x0PXQucGFnZVgsY3Q9dC5wYWdlWSsyMCx3aW5kb3cuZ2V0U2VsZWN0aW9uP2U9d2luZG93LmdldFNlbGVjdGlvbigpLnRvU3RyaW5nKCk6ZG9jdW1lbnQuc2VsZWN0aW9uJiYoZT1kb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKS50ZXh0KSwiIiE9ZSYmdHQoZSl9LDEwMCl9KX12YXIgaXQsb3QsYXQscnQsc3QsbHQsY3QscHQsZHQsaHQsdXQ9bigyMiksbXQ9bigxMyksZnQ9bigyMyksZ3Q9bigyNCksd3Q9bigxMikseHQ9bigxNCksYnQ9Imh0dHBzOiIsX3Q9e30sdnQ9InVzIix5dD17IuexsyI6M2UzLCLljpjnsbMiOjMwLCLmr6vnsbMiOjMsIuiLseWwuiI6OTE0LjQsIuiLseWvuCI6NzYuMiwi56CBIjoyNzQzLjIsIuWwuiI6MWUzLCLlr7giOjEwMCwi5YiGIjoxMCwi5Y6YIjoxfSxrdD17ZzoxLGtnOjFlMyxvdW5jZXM6MjguMzUscG91bmRzOjQ1My42fSx6dD17c2hhbmd5aTp7dXM6e21hbjpbInVzX21hbl9zei5qcGciLCJ1c19tYW5fc3oyLmpwZyJdLHdvbWFuOlsidXNfd29tYW5fc3ouanBnIiwidXNfd29tYW5fc3oyLmpwZyJdfSx1azp7bWFuOlsidWtfbWFuX3N6LmpwZyIsInVrX21hbl9zejIuanBnIl0sd29tYW46WyJ1a193b21hbl9zei5qcGciLCJ1a193b21hbl9zejIuanBnIl19LGpwOnttYW46WyJqcF9tYW5fc3ouanBnIiwianBfbWFuX3N6Mi5qcGciXSx3b21hbjpbImpwX3dvbWFuX3N6LmpwZyIsImpwX3dvbWFuX3N6Mi5qcGciXX19LHhpYXpodWFuZzp7dXM6e21hbjpbInVzX21hbl94ei5qcGciLCJ1c19tYW5feHoyLmpwZyJdLHdvbWFuOlsidXNfd29tYW5feHouanBnIiwidXNfd29tYW5feHoyLmpwZyJdfSx1azp7bWFuOlsidWtfbWFuX3h6LmpwZyIsInVrX21hbl94ejIuanBnIl0sd29tYW46WyJ1a193b21hbl94ei5qcGciLCJ1a193b21hbl94ejIuanBnIl19LGpwOnttYW46WyJqcF9tYW5feHouanBnIiwianBfbWFuX3h6Mi5qcGciXSx3b21hbjpbImpwX3dvbWFuX3h6LmpwZyIsImpwX3dvbWFuX3h6Mi5wbmciXX19LGtpZHNjbG90aDp7dXM6WyJ1c19raWRzLmpwZyIsInVzX2tpZHMyXzAuanBnIiwidXNfa2lkczJfNC5qcGciXSx1azpbInVrX2tpZHMuanBnIiwidWtfa2lkczJfMC5qcGciLCJ1a19raWRzMl80LmpwZyJdLGpwOlsianBfa2lkcy5qcGciLCJqcF9raWRzMl80LmpwZyIsImpwX2tpZHMyXzQuanBnIl19LHNob2VzOnttYW46WyJ3b21hbl9zaG9lc18xLmpwZyIsIm1hbl9zaG9lczIuanBnIl0sCndvbWFuOlsid29tYW5fc2hvZXNfMS5qcGciLCJ3b21hbl9zaG9lczIuanBnIl0sa2lkczpbImtpZHNfc2hvZXMuanBnIiwia2lkc19zaG9lczJfMC5qcGciLCJraWRzX3Nob2VzMl80LmpwZyJdfX0sanQ9eyJ3d3cuYW1hem9uLmNvbSI6e2NvdW46InVzIixkb206WyIjcHJpY2VfZmVhdHVyZV9kaXYiLCIjdW5pZmllZFByaWNlX2ZlYXR1cmVfZGl2Il0scG9zaXRpb246ImFmdGVyIn0sInd3dy5hbWF6b24uY28uanAiOntjb3VuOiJqcCIsZG9tOlsiI3ByaWNlX2ZlYXR1cmVfZGl2IiwiI3VuaWZpZWRQcmljZV9mZWF0dXJlX2RpdiJdLHBvc2l0aW9uOiJhZnRlciJ9LCJ3d3cuYW1hem9uLmRlIjp7Y291bjoidWsiLGRvbTpbIiNwcmljZV9mZWF0dXJlX2RpdiIsIiN1bmlmaWVkUHJpY2VfZmVhdHVyZV9kaXYiXSxwb3NpdGlvbjoiYWZ0ZXIifSwid3d3LjZwbS5jb20iOntjb3VuOiJ1cyIsZG9tOlsiLm1HSVF6Il0scG9zaXRpb246ImJlZm9yZSJ9fSxDdD17Y29mZmVlOiLlkpbllaEiLHNuYWNrOiLppa7mlpkv5L+d5YGl5ZOBL+WFtuS7lumjn+WTgSIsbnV0OiLppa7mlpkv5L+d5YGl5ZOBL+WFtuS7lumjn+WTgSIscGlzdGFjaGlvOiLppa7mlpkv5L+d5YGl5ZOBL+WFtuS7lumjn+WTgSIsYWxtb25kOiLppa7mlpkv5L+d5YGl5ZOBL+WFtuS7lumjn+WTgSIsY2hlc3RudXRzOiLppa7mlpkv5L+d5YGl5ZOBL+WFtuS7lumjn+WTgSIsd2FsbnV0OiLppa7mlpkv5L+d5YGl5ZOBL+WFtuS7lumjn+WTgSIsaGF6ZWxudXQ6IumlruaWmS/kv53lgaXlk4Ev5YW25LuW6aOf5ZOBIixwZWNhbjoi6aWu5paZL+S/neWBpeWTgS/lhbbku5bpo5/lk4EiLGNhc2hldzoi6aWu5paZL+S/neWBpeWTgS/lhbbku5bpo5/lk4EiLHBlYW51dDoi6aWu5paZL+S/neWBpeWTgS/lhbbku5bpo5/lk4EiLGNob2NvbGF0ZXM6IumlruaWmS/kv53lgaXlk4Ev5YW25LuW6aOf5ZOBIixwYXN0cnk6IumlruaWmS/kv53lgaXlk4Ev5YW25LuW6aOf5ZOBIixjYW5keToi6aWu5paZL+S/neWBpeWTgS/lhbbku5bpo5/lk4EiLGNvbmRpbWVudDoi6aWu5paZL+S/neWBpeWTgS/lhbbku5bpo5/lk4EiLGtldGNodXA6IumlruaWmS/kv53lgaXlk4Ev5YW25LuW6aOf5ZOBIixiZXZlcmFnZToi6aWu5paZL+S/neWBpeWTgS/lhbbku5bpo5/lk4EiLHRlYToi6Iy25Y+2Iixjb2F0czoi5aSW6KGjL+iho+acjS/lhrLplIvooaMiLGNsb3RoZXM6IuWkluihoy/ooaPmnI0v5Yay6ZSL6KGjIixzaGlydDoi5aSW6KOkL+ijpOWtkC/ooazooasv6KGs6KGjL1TmgaQiLHN3ZWF0ZXJzOiLlpJboo6Qv6KOk5a2QL+ihrOihqy/ooazooaMvVOaBpCIsbGluZ2VyaWU6IuWGheihoy/lhoXoo6QiLHRhbmtpbmlzOiLlhoXooaMv5YaF6KOkIixiaWtpbmlzOiLlhoXooaMv5YaF6KOkIixsb3VuZ2V3ZWFyOiLlhoXooaMv5YaF6KOkIix1bmRlcndlYXI6IuWGheihoy/lhoXoo6QiLGJyaWVmczoi5YaF6KGjL+WGheijpCIsc3dpbXN1aXQ6IuWGheihoy/lhoXoo6QiLHNjYXJ2ZXM6IumFjemlsO+8iOW4veWtkC/lm7Tlt74v5aS05be+L+S4neW3vi/poobluKYv6IWw5bimL+aJi+Wll++8iSIsaGF0czoi6YWN6aWw77yI5bi95a2QL+WbtOW3vi/lpLTlt74v5Lid5be+L+mihuW4pi/ohbDluKYv5omL5aWX77yJIixzY2FyZjoi6YWN6aWw77yI5bi95a2QL+WbtOW3vi/lpLTlt74v5Lid5be+L+mihuW4pi/ohbDluKYv5omL5aWX77yJIix0aWU6IumFjemlsO+8iOW4veWtkC/lm7Tlt74v5aS05be+L+S4neW3vi/poobluKYv6IWw5bimL+aJi+Wll++8iSIsYmVsdDoi6YWN6aWw77yI5bi95a2QL+WbtOW3vi/lpLTlt74v5Lid5be+L+mihuW4pi/ohbDluKYv5omL5aWX77yJIixnbG92ZXM6IumFjemlsO+8iOW4veWtkC/lm7Tlt74v5aS05be+L+S4neW3vi/poobluKYv6IWw5bimL+aJi+Wll++8iSIsYmVkZGluZzoi5q+b5q+vL+iiq+WtkC/luornvakv552h6KKLIixxdWlsdDoi5q+b5q+vL+iiq+WtkC/luornvakv552h6KKLIiwiYmVkc3ByZWFkICI6Iuavm+avry/ooqvlrZAv5bqK572pL+edoeiiiyIsbGVhdGhlcjoi55qu6Z6LIixib290czoi55qu6Z20L+mdtOWtkCIsb3V0ZG9vcjoi6L+Q5Yqo6Z6LL+W+kuatpemeiy/mtonmsLTpnosv55m75bGx6Z6LL+i/nOi2s+meiyIsYXRobGV0aWM6Iui/kOWKqOmeiy/lvpLmraXpnosv5raJ5rC06Z6LL+eZu+Wxsemeiy/ov5zotrPpnosiLHNwb3J0czoi6L+Q5Yqo6Z6LL+W+kuatpemeiy/mtonmsLTpnosv55m75bGx6Z6LL+i/nOi2s+meiyIsd2FkaW5nOiLov5Dliqjpnosv5b6S5q2l6Z6LL+a2ieawtOmeiy/nmbvlsbHpnosv6L+c6Laz6Z6LIixjbGltYmluZzoi6L+Q5Yqo6Z6LL+W+kuatpemeiy/mtonmsLTpnosv55m75bGx6Z6LL+i/nOi2s+meiyIscnVubmluZzoi6L+Q5Yqo6Z6LL+W+kuatpemeiy/mtonmsLTpnosv55m75bGx6Z6LL+i/nOi2s+meiyIsc2FuZGFsczoi6L+Q5Yqo6Z6LL+W+kuatpemeiy/mtonmsLTpnosv55m75bGx6Z6LL+i/nOi2s+meiyIsc2xpcHBlcnM6Iui/kOWKqOmeiy/lvpLmraXpnosv5raJ5rC06Z6LL+eZu+Wxsemeiy/ov5zotrPpnosiLGluc29sZXM6Iui/kOWKqOmeiy/lvpLmraXpnosv5raJ5rC06Z6LL+eZu+Wxsemeiy/ov5zotrPpnosiLHNob2VsYWNlczoi6L+Q5Yqo6Z6LL+W+kuatpemeiy/mtonmsLTpnosv55m75bGx6Z6LL+i/nOi2s+meiyIsc3VpdGNhc2VzOiLnrrEv6KGM5p2O566xL+aXheihjOeusS/miYvmj5DnrrEiLGx1Z2dhZ2U6IueusS/ooYzmnY7nrrEv5peF6KGM566xL+aJi+aPkOeusSIsYnJpZWZjYXNlczoi566xL+ihjOadjueusS/ml4XooYznrrEv5omL5o+Q566xIix0cmF2ZWw6IueusS/ooYzmnY7nrrEv5peF6KGM566xL+aJi+aPkOeusSIsYmFja3BhY2tzOiLmjI7ljIUv6IOM5YyFL+mCruW3ruWMhS/og4zljIUv5Y2V6IKp5YyFL+WPjOiCqeWMhSIsc2F0Y2hlbDoi5oyO5YyFL+iDjOWMhS/pgq7lt67ljIUv6IOM5YyFL+WNleiCqeWMhS/lj4zogqnljIUiLGJhZ3M6IuaMjuWMhS/og4zljIUv6YKu5beu5YyFL+iDjOWMhS/ljZXogqnljIUv5Y+M6IKp5YyFIixjYXNlczoi5oyO5YyFL+iDjOWMhS/pgq7lt67ljIUv6IOM5YyFL+WNleiCqeWMhS/lj4zogqnljIUiLGhhbmRiYWdzOiLmjI7ljIUv6IOM5YyFL+mCruW3ruWMhS/og4zljIUv5Y2V6IKp5YyFL+WPjOiCqeWMhSIsY2x1dGNoZXM6IuaMjuWMhS/og4zljIUv6YKu5beu5YyFL+iDjOWMhS/ljZXogqnljIUv5Y+M6IKp5YyFIix3YWxsZXQ6IumSseWMhS/pkqXljJnljIUiLG1vbmV5OiLpkrHljIUv6ZKl5YyZ5YyFIixrZXk6IumSseWMhS/pkqXljJnljIUiLHdhdGNoZXM6IuacuuaisOihqCIsd3Jpc3Q6IuacuuaisOihqCIsZGlzaHdhc2hlcnM6IumkkOWFty/liIDlhbciLGhvb2RzOiLppJDlhbcv5YiA5YW3IixkcmF3ZXJzOiLppJDlhbcv5YiA5YW3IixkYXRoOiLppJDlhbcv5YiA5YW3IixjdXRsZXJ5OiLppJDlhbcv5YiA5YW3IixmbGF0d2FyZToi6aSQ5YW3L+WIgOWFtyIsImtpdGNoZW4gJiBkaW5pbmciOiLppJDlhbcv5YiA5YW3IixkaW5pbmc6IumkkOWFty/liIDlhbciLGtuaWZlOiLppJDlhbcv5YiA5YW3Iixwb3Q6IueCiuWFty/plIUiLGNvb2t3YXJlOiLngorlhbcv6ZSFIixraXRjaGVud2FyZToi54KK5YW3L+mUhSIsY29va3RvcHM6IueCiuWFty/plIUiLHB1cmlmaWVyOiLlh4DmsLTlmajvvIjlkKvmu6Toiq/vvIkiLHN0ZWFtZXJzOiLnlLXppa3nhbIiLG92ZW5zOiLlvq7ms6LngokiLGp1aWNlcjoi55S15Yqo5qao5rGB5py6Iixjb2ZmZWVtYWNoaW5lOiLlkpbllaHmnLoiLHZhY3V1bXM6IuWQuOWwmOWZqCIsImNlaWxpbmcgIjoi55S16aOO5omHIixpcm9uczoi55S154ao5paXIixodW1pZGlmaWVyczoi5aKeL+mZpOa5v+acui/lopfpmaTmub/kuIDkvZPmnLoiLHNld2luZzoi55S15Yqo57yd57qr5py6IixyZWZyaWdlcmF0b3JzOiLlrrbnlLUiLGZyZWV6ZXJzOiLlrrbnlLUiLGNvbXBhY3RvcnM6IuWutueUtSIsd2FzaGVyczoi5a6255S1IixidWxiczoi5a6255S1IixzaGF2ZXI6IueUteWKqOWJg+mhu+WIgCIsYmxvb2Q6IuihgOWOi+iuoS/ooYDns5borqEiLGdsdWNvc2U6IuihgOWOi+iuoS/ooYDns5borqEiLGRyeWVyOiLnlLXlkLnpo47mnLoiLHRvb3RoYnJ1c2g6IueUteWKqOeJmeWItyIsc3Vuc2NyZWVuOiLpmLLmmZLpnLIv6Ziy5pmS6ZycL+mYsuWXruS5s+a2siIsbG90aW9uczoi6Ziy5pmS6ZyyL+mYsuaZkumcnC/pmLLll67kubPmtrIiLHNjcmVhbToi5oqk5omL6ZycIixsaXBzdGljazoi5ZSH6IaPIixwZXJmdW1lOiLpppnmsLQiLG1hc2tzOiLpnaLohpwiLHRvbmVyOiLniL3ogqTmsLQiLHBob25lczoi6Kem5bGP5byP5omL5py6IixjYW1lcmFzOiLmlbDnoIHnm7jmnLov5Y2h54mH5py6L0RDIixjYW5vbjoi5pWw56CB55u45py6L+WNoeeJh+acui9EQyIsam95c3RpY2s6Iua4uOaIj+acuumBpeaOp+WZqC/mjqfliLblmagv5omL5p+EL+aRh+adhi/mlrnlkJHnm5giLGNvbnRyb2xsZXI6Iua4uOaIj+acuumBpeaOp+WZqC/mjqfliLblmagv5omL5p+EL+aRh+adhi/mlrnlkJHnm5giLHJlY29yZGVyOiLlvZXpn7PnrJQv5b2V6Z+z5py6L+aUtumfs+acuiIscmFkaW9zOiLlvZXpn7PnrJQv5b2V6Z+z5py6L+aUtumfs+acuiIsZWNobzoi6Z+z566x77yI6Z+z5ZON6K6+5aSH77yJIixzdGVyZW9zOiLpn7PnrrHvvIjpn7Plk43orr7lpIfvvIkiLGxhcHRvcDoi56yU6K6w5pys55S16ISRL+WQq+W5s+adv+eUteiEkSIsbWVtb3J5OiLlhoXlrZjmnaE0R+S7peS4iiIsY2FyZHM6IuWKn+iDveWNoS/mmL7ljaEv5aOw5Y2h562JIixjYXJkOiLlip/og73ljaEv5pi+5Y2hL+WjsOWNoeetiSIsbWljZToi6byg5qCHIixrZXlib2FyZHM6IumUruebmCIsaW5wdXQ6IumUruebmCIsc2Nhbm5lcjoi5oqV5b2x5LuqIixzY3JlZW5zOiLmipXlvbHku6oiLGRpc2s6Iuenu+WKqOehrOebmDFUQi0yVEIo5ZCrMlRCKSIsdG95czoi546p5YW3IiwibXAzIHBsYXllcnMiOiJNUDPmkq3mlL7lmagiLGRpYXBlcmluZzoi5am05YS/55So5ZOBIn0sU3Q9e2Zvb2Q6e3RsZToi6aOf5ZOBIixjYXRlOiJjYXRlMSJ9LGNsb3RoaW5nOnt0bGU6IuacjemlsCIsY2F0ZToiY2F0ZTIifSxwYWNrczp7dGxlOiLpnovjgIHnrrHljIUiLGNhdGU6ImNhdGUzIn0sc2hvZXM6e3RsZToi6Z6L44CB566x5YyFIixjYXRlOiJjYXRlMyJ9LGJhZ3M6e3RsZToi6Z6L44CB566x5YyFIixjYXRlOiJjYXRlMyJ9LCJraXRjaGVuICYgZGluaW5nIjp7dGxlOiLljqjmiL/jgIHppJDljoUiLGNhdGU6ImNhdGU0In0sImhvbWUgJiBraXRjaGVuIjp7dGxlOiLlrrbnlLUiLGNhdGU6ImNhdGU2In0sImhlYWx0aCAmIHBlcnNvbmFsIjp7dGxlOiLkuKrkurrmiqTnkIYiLGNhdGU6ImNhdGU3In0sImJlYXV0eSAiOnt0bGU6Iue+juWuuSIsY2F0ZToiY2F0ZTgifSwiY2FtZXJhICYgcGhvdG8gIjp7dGxlOiLnhafnm7jmnLrjgIHmkYTlg4/mnLoiLGNhdGU6ImNhdGUxMSJ9LGVsZWN0cm9uaWNzOnt0bGU6IueUteWtkOaVsOeggSIsY2F0ZToiY2F0ZTEyIn0sY3VtcHV0ZXJzOnt0bGU6IuS4quS6uueUteiEkSIsY2F0ZToiY2F0ZTE1In0sZGlhcGVyaW5nOnt0bGU6IuWptOWEv+eUqOWTgSIsY2F0ZToiY2F0ZTE4In19LFB0PVsiI3dheWZpbmRpbmctYnJlYWRjcnVtYnNfZmVhdHVyZV9kaXYgLmEtbGlzdC1pdGVtIC5hLWxpbmstbm9ybWFsIiwiI1NhbGVzUmFuayAuemdfaHJzcl9sYWRkZXIgYSJdLFR0PXsid3d3LmFtYXpvbi5jb20iOlsiI2RldGFpbEJ1bGxldHNfZmVhdHVyZV9kaXYgLmEtbGlzdC1pdGVtIC5hLXRleHQtYm9sZDpjb250YWlucyhXZWlnaHQpICsgc3BhbiIsIiN0ZWNobmljYWwtZGV0YWlscy10YWJsZSB0ZDpjb250YWlucyhXZWlnaHQpK3RkIiwiI2RldGFpbC1idWxsZXRzIHVsIGxpOmNvbnRhaW5zKFdlaWdodCkiLCcjdGVjaG5pY2FsLWRldGFpbHNfZmVhdHVyZV9kaXYgdGFibGUuYS1rZXl2YWx1ZSB0aC5hLW5vd3JhcDpjb250YWlucygiU2hpcHBpbmcgV2VpZ2h0IikrdGQnXSwid3d3LmFtYXpvbi5kZSI6WyIjZGV0YWlsX2J1bGxldHNfaWQgdWwgbGk6Y29udGFpbnMoUHJvZHVrdGdld2ljaHQpIiwiI3Byb2REZXRhaWxzIC5zaGlwcGluZy13ZWlnaHQgLnZhbHVlIl0sInd3dy5hbWF6b24uY28uanAiOlsiI2RldGFpbF9idWxsZXRzX2lkIHVsIGxpOmNvbnRhaW5zKOeZuumAgemHjemHjykiLCIuc2hpcHBpbmctd2VpZ2h0IC52YWx1ZSJdLCJ3d3cuNnBtLmNvbSI6WyIjcHJkSW5mb1RleHQgLm1lYXN1cmVtZW50cyBsaTpjb250YWlucyhXZWlnaHQpIl19LEF0PTAsTnQ9ZnVuY3Rpb24gcXQoKXtpZihBdD4xMClyZXR1cm4gdm9pZCBjbGVhclRpbWVvdXQodCk7dmFyIHQ9c2V0VGltZW91dChmdW5jdGlvbigpezA9PT1pKCIjZ3dkX2h0X21haW4gLmh0X2hlYWQgLmd3ZF9zaXRlX2ljb24iKS5sZW5ndGg/KGkoIiNnd2RfaHRfbWFpbiIpLnJlbW92ZSgpLG8oKSk6KEF0KysscXQoKSl9LDRlMyl9LEl0PWZ1bmN0aW9uKHQsZSl7Z3QuZ2V0KHQpLmRvbmUoZnVuY3Rpb24odCl7ZSh0KX0pLmZhaWwoZnVuY3Rpb24oKXtpKCIjaHRfYWRkY29sbGVjdCIpLnRleHQoIua3u+WKoOWksei0pSIpLGkoIiNodF9hZGRjb2xsZWN0IikucmVtb3ZlQ2xhc3MoImNfYWRkaW5nIiksaSgiI2h0X2FkZGNvbGxlY3QiKS5hZGRDbGFzcygiY19hZGRlZCIpfSl9LEJ0PWZ1bmN0aW9uKCl7dmFyIHQ9bXQuZ2V0KCJvdGhlcl9pbmZvIikubm93LmRwX2lkO2lmKGUuZW1haWwmJnQpe3ZhciBuPWUuY19zZXJ2ZXIrIi9icndleHQvY2hlY2tfY29sbGVjdGVkP2VtYWlsPSIrZS5lbWFpbCsiJmRwX2lkPSIrdDtndC5nZXQobikuZG9uZShmdW5jdGlvbih0KXt0JiZ0Lm1zZz09PSEwJiYoaSgiI2h0X2FkZGNvbGxlY3QiKS50ZXh0KCLlt7Lmt7vliqAiKSxpKCIjaHRfYWRkY29sbGVjdCIpLmFkZENsYXNzKCJjX2FkZGVkIikpfSl9fTt0LmV4cG9ydHMuX2luaXQ9ZnVuY3Rpb24oKXt2YXIgdD1tdC5nZXQoInBlcm1hbmVudCIpOyIwIiE9PXQuc2V0aGFpdGFvJiZvKCl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTshZnVuY3Rpb24oKXtmdW5jdGlvbiBvKHQpe3JldHVybiB0LnJlcGxhY2UoaywiIikucmVwbGFjZSh6LCIsIikucmVwbGFjZShqLCIiKS5yZXBsYWNlKEMsIiIpLnJlcGxhY2UoUywiIikuc3BsaXQoUCl9ZnVuY3Rpb24gYSh0KXtyZXR1cm4iJyIrdC5yZXBsYWNlKC8oJ3xcXCkvZywiXFwkMSIpLnJlcGxhY2UoL1xyL2csIlxcciIpLnJlcGxhY2UoL1xuL2csIlxcbiIpKyInIn1mdW5jdGlvbiByKHQsZSl7ZnVuY3Rpb24gbih0KXtyZXR1cm4gaCs9dC5zcGxpdCgvXG4vKS5sZW5ndGgtMSxwJiYodD10LnJlcGxhY2UoL1xzKy9nLCIgIikucmVwbGFjZSgvPCEtLVtcd1xXXSo/LS0+L2csIiIpKSx0JiYodD1mWzFdK2EodCkrZlsyXSsiXG4iKSx0fWZ1bmN0aW9uIGkodCl7dmFyIG49aDtpZihjP3Q9Yyh0LGUpOnImJih0PXQucmVwbGFjZSgvXG4vZyxmdW5jdGlvbigpe3JldHVybiBoKyssIiRsaW5lPSIraCsiOyJ9KSksMD09PXQuaW5kZXhPZigiPSIpKXt2YXIgaT1kJiYhL149Wz0jXS8udGVzdCh0KTtpZih0PXQucmVwbGFjZSgvXj1bPSNdP3xbXHM7XSokL2csIiIpLGkpe3ZhciBhPXQucmVwbGFjZSgvXHMqXChbXlwpXStcKS8sIiIpO3dbYV18fC9eKGluY2x1ZGV8cHJpbnQpJC8udGVzdChhKXx8KHQ9IiRlc2NhcGUoIit0KyIpIil9ZWxzZSB0PSIkc3RyaW5nKCIrdCsiKSI7dD1mWzFdK3QrZlsyXX1yZXR1cm4gciYmKHQ9IiRsaW5lPSIrbisiOyIrdCksdihvKHQpLGZ1bmN0aW9uKHQpe2lmKHQmJiF1W3RdKXt2YXIgZTtlPSJwcmludCI9PT10P2I6ImluY2x1ZGUiPT09dD9fOndbdF0/IiR1dGlscy4iK3Q6eFt0XT8iJGhlbHBlcnMuIit0OiIkZGF0YS4iK3QseSs9dCsiPSIrZSsiLCIsdVt0XT0hMH19KSx0KyJcbiJ9dmFyIHI9ZS5kZWJ1ZyxzPWUub3BlblRhZyxsPWUuY2xvc2VUYWcsYz1lLnBhcnNlcixwPWUuY29tcHJlc3MsZD1lLmVzY2FwZSxoPTEsdT17JGRhdGE6MSwkZmlsZW5hbWU6MSwkdXRpbHM6MSwkaGVscGVyczoxLCRvdXQ6MSwkbGluZToxfSxtPSIiLnRyaW0sZj1tP1siJG91dD0nJzsiLCIkb3V0Kz0iLCI7IiwiJG91dCJdOlsiJG91dD1bXTsiLCIkb3V0LnB1c2goIiwiKTsiLCIkb3V0LmpvaW4oJycpIl0sZz1tPyIkb3V0Kz10ZXh0O3JldHVybiAkb3V0OyI6IiRvdXQucHVzaCh0ZXh0KTsiLGI9ImZ1bmN0aW9uKCl7dmFyIHRleHQ9JycuY29uY2F0LmFwcGx5KCcnLGFyZ3VtZW50cyk7IitnKyJ9IixfPSJmdW5jdGlvbihmaWxlbmFtZSxkYXRhKXtkYXRhPWRhdGF8fCRkYXRhO3ZhciB0ZXh0PSR1dGlscy4kaW5jbHVkZShmaWxlbmFtZSxkYXRhLCRmaWxlbmFtZSk7IitnKyJ9Iix5PSIndXNlIHN0cmljdCc7dmFyICR1dGlscz10aGlzLCRoZWxwZXJzPSR1dGlscy4kaGVscGVycywiKyhyPyIkbGluZT0wLCI6IiIpLGs9ZlswXSx6PSJyZXR1cm4gbmV3IFN0cmluZygiK2ZbM10rIik7Ijt2KHQuc3BsaXQocyksZnVuY3Rpb24odCl7dD10LnNwbGl0KGwpO3ZhciBlPXRbMF0sbz10WzFdOzE9PT10Lmxlbmd0aD9rKz1uKGUpOihrKz1pKGUpLG8mJihrKz1uKG8pKSl9KTt2YXIgaj15K2srejtyJiYoaj0idHJ5eyIraisifWNhdGNoKGUpe3Rocm93IHtmaWxlbmFtZTokZmlsZW5hbWUsbmFtZTonUmVuZGVyIEVycm9yJyxtZXNzYWdlOmUubWVzc2FnZSxsaW5lOiRsaW5lLHNvdXJjZToiK2EodCkrIi5zcGxpdCgvXFxuLylbJGxpbmUtMV0ucmVwbGFjZSgvXlxccysvLCcnKX07fSIpO3RyeXt2YXIgQz1uZXcgRnVuY3Rpb24oIiRkYXRhIiwiJGZpbGVuYW1lIixqKTtyZXR1cm4gQy5wcm90b3R5cGU9dyxDfWNhdGNoKFMpe3Rocm93IFMudGVtcD0iZnVuY3Rpb24gYW5vbnltb3VzKCRkYXRhLCRmaWxlbmFtZSkgeyIraisifSIsU319dmFyIHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4ic3RyaW5nIj09dHlwZW9mIGU/XyhlLHtmaWxlbmFtZTp0fSk6cCh0LGUpfTtzLnZlcnNpb249IjMuMC4wIixzLmNvbmZpZz1mdW5jdGlvbih0LGUpe2xbdF09ZX07dmFyIGw9cy5kZWZhdWx0cz17b3BlblRhZzoiPCUiLGNsb3NlVGFnOiIlPiIsZXNjYXBlOiEwLGNhY2hlOiEwLGNvbXByZXNzOiExLHBhcnNlcjpudWxsfSxjPXMuY2FjaGU9e307cy5yZW5kZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gXyh0LGUpfTt2YXIgcD1zLnJlbmRlckZpbGU9ZnVuY3Rpb24odCxlKXt2YXIgbj1zLmdldCh0KXx8Yih7ZmlsZW5hbWU6dCxuYW1lOiJSZW5kZXIgRXJyb3IiLG1lc3NhZ2U6IlRlbXBsYXRlIG5vdCBmb3VuZCJ9KTtyZXR1cm4gZT9uKGUpOm59O3MuZ2V0PWZ1bmN0aW9uKHQpe3ZhciBlO2lmKGNbdF0pZT1jW3RdO2Vsc2UgaWYoIm9iamVjdCI9PXR5cGVvZiBkb2N1bWVudCl7dmFyIG49ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodCk7aWYobil7dmFyIGk9KG4udmFsdWV8fG4uaW5uZXJIVE1MKS5yZXBsYWNlKC9eXHMqfFxzKiQvZywiIik7ZT1fKGkse2ZpbGVuYW1lOnR9KX19cmV0dXJuIGV9O3ZhciBkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuInN0cmluZyIhPXR5cGVvZiB0JiYoZT10eXBlb2YgdCwibnVtYmVyIj09PWU/dCs9IiI6dD0iZnVuY3Rpb24iPT09ZT9kKHQuY2FsbCh0KSk6IiIpLHR9LGg9eyI8IjoiJiM2MDsiLCI+IjoiJiM2MjsiLCciJzoiJiMzNDsiLCInIjoiJiMzOTsiLCImIjoiJiMzODsifSx1PWZ1bmN0aW9uKHQpe3JldHVybiBoW3RdfSxtPWZ1bmN0aW9uKHQpe3JldHVybiBkKHQpLnJlcGxhY2UoLyYoPyFbXHcjXSs7KXxbPD4iJ10vZyx1KX0sZj1BcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBBcnJheV0iPT09e30udG9TdHJpbmcuY2FsbCh0KX0sZz1mdW5jdGlvbih0LGUpe3ZhciBuLGk7aWYoZih0KSlmb3Iobj0wLGk9dC5sZW5ndGg7bjxpO24rKyllLmNhbGwodCx0W25dLG4sdCk7ZWxzZSBmb3IobiBpbiB0KWUuY2FsbCh0LHRbbl0sbil9LHc9cy51dGlscz17JGhlbHBlcnM6e30sJGluY2x1ZGU6cCwkc3RyaW5nOmQsJGVzY2FwZTptLCRlYWNoOmd9O3MuaGVscGVyPWZ1bmN0aW9uKHQsZSl7eFt0XT1lfTt2YXIgeD1zLmhlbHBlcnM9dy4kaGVscGVycztzLm9uZXJyb3I9ZnVuY3Rpb24odCl7dmFyIGU9IlRlbXBsYXRlIEVycm9yXG5cbiI7Zm9yKHZhciBuIGluIHQpZSs9IjwiK24rIj5cbiIrdFtuXSsiXG5cbiI7Im9iamVjdCI9PXR5cGVvZiBjb25zb2xlJiZjb25zb2xlLmVycm9yKGUpfTt2YXIgYj1mdW5jdGlvbih0KXtyZXR1cm4gcy5vbmVycm9yKHQpLGZ1bmN0aW9uKCl7cmV0dXJuIntUZW1wbGF0ZSBFcnJvcn0ifX0sXz1zLmNvbXBpbGU9ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKG4pe3RyeXtyZXR1cm4gbmV3IGEobixvKSsiIn1jYXRjaChpKXtyZXR1cm4gZS5kZWJ1Zz9iKGkpKCk6KGUuZGVidWc9ITAsXyh0LGUpKG4pKX19ZT1lfHx7fTtmb3IodmFyIGkgaW4gbCl2b2lkIDA9PT1lW2ldJiYoZVtpXT1sW2ldKTt2YXIgbz1lLmZpbGVuYW1lO3RyeXt2YXIgYT1yKHQsZSl9Y2F0Y2gocyl7cmV0dXJuIHMuZmlsZW5hbWU9b3x8ImFub255bW91cyIscy5uYW1lPSJTeW50YXggRXJyb3IiLGIocyl9cmV0dXJuIG4ucHJvdG90eXBlPWEucHJvdG90eXBlLG4udG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gYS50b1N0cmluZygpfSxvJiZlLmNhY2hlJiYoY1tvXT1uKSxufSx2PXcuJGVhY2gseT0iYnJlYWssY2FzZSxjYXRjaCxjb250aW51ZSxkZWJ1Z2dlcixkZWZhdWx0LGRlbGV0ZSxkbyxlbHNlLGZhbHNlLGZpbmFsbHksZm9yLGZ1bmN0aW9uLGlmLGluLGluc3RhbmNlb2YsbmV3LG51bGwscmV0dXJuLHN3aXRjaCx0aGlzLHRocm93LHRydWUsdHJ5LHR5cGVvZix2YXIsdm9pZCx3aGlsZSx3aXRoLGFic3RyYWN0LGJvb2xlYW4sYnl0ZSxjaGFyLGNsYXNzLGNvbnN0LGRvdWJsZSxlbnVtLGV4cG9ydCxleHRlbmRzLGZpbmFsLGZsb2F0LGdvdG8saW1wbGVtZW50cyxpbXBvcnQsaW50LGludGVyZmFjZSxsb25nLG5hdGl2ZSxwYWNrYWdlLHByaXZhdGUscHJvdGVjdGVkLHB1YmxpYyxzaG9ydCxzdGF0aWMsc3VwZXIsc3luY2hyb25pemVkLHRocm93cyx0cmFuc2llbnQsdm9sYXRpbGUsYXJndW1lbnRzLGxldCx5aWVsZCx1bmRlZmluZWQiLGs9L1wvXCpbXHdcV10qP1wqXC98XC9cL1teXG5dKlxufFwvXC9bXlxuXSokfCIoPzpbXiJcXF18XFxbXHdcV10pKiJ8Jyg/OlteJ1xcXXxcXFtcd1xXXSkqJ3xccypcLlxzKlskXHdcLl0rL2csej0vW15cdyRdKy9nLGo9bmV3IFJlZ0V4cChbIlxcYiIreS5yZXBsYWNlKC8sL2csIlxcYnxcXGIiKSsiXFxiIl0uam9pbigifCIpLCJnIiksQz0vXlxkW14sXSp8LFxkW14sXSovZyxTPS9eLCt8LCskL2csUD0vXiR8LCsvO2wub3BlblRhZz0ie3siLGwuY2xvc2VUYWc9In19Ijt2YXIgVD1mdW5jdGlvbih0LGUpe3ZhciBuPWUuc3BsaXQoIjoiKSxpPW4uc2hpZnQoKSxvPW4uam9pbigiOiIpfHwiIjtyZXR1cm4gbyYmKG89IiwgIitvKSwiJGhlbHBlcnMuIitpKyIoIit0K28rIikifTtsLnBhcnNlcj1mdW5jdGlvbih0LGUpe3Q9dC5yZXBsYWNlKC9eXHMvLCIiKTt2YXIgbj10LnNwbGl0KCIgIiksaT1uLnNoaWZ0KCksbz1uLmpvaW4oIiAiKTtzd2l0Y2goaSl7Y2FzZSJpZiI6dD0iaWYoIitvKyIpeyI7YnJlYWs7Y2FzZSJlbHNlIjpuPSJpZiI9PT1uLnNoaWZ0KCk/IiBpZigiK24uam9pbigiICIpKyIpIjoiIix0PSJ9ZWxzZSIrbisieyI7YnJlYWs7Y2FzZSIvaWYiOnQ9In0iO2JyZWFrO2Nhc2UiZWFjaCI6dmFyIGE9blswXXx8IiRkYXRhIixyPW5bMV18fCJhcyIsbD1uWzJdfHwiJHZhbHVlIixjPW5bM118fCIkaW5kZXgiLHA9bCsiLCIrYzsiYXMiIT09ciYmKGE9IltdIiksdD0iJGVhY2goIithKyIsZnVuY3Rpb24oIitwKyIpeyI7YnJlYWs7Y2FzZSIvZWFjaCI6dD0ifSk7IjticmVhaztjYXNlImVjaG8iOnQ9InByaW50KCIrbysiKTsiO2JyZWFrO2Nhc2UicHJpbnQiOmNhc2UiaW5jbHVkZSI6dD1pKyIoIituLmpvaW4oIiwiKSsiKTsiO2JyZWFrO2RlZmF1bHQ6aWYoL15ccypcfFxzKltcd1wkXS8udGVzdChvKSl7dmFyIGQ9ITA7MD09PXQuaW5kZXhPZigiIyIpJiYodD10LnN1YnN0cigxKSxkPSExKTtmb3IodmFyIGg9MCx1PXQuc3BsaXQoInwiKSxtPXUubGVuZ3RoLGY9dVtoKytdO2g8bTtoKyspZj1UKGYsdVtoXSk7dD0oZD8iPSI6Ij0jIikrZn1lbHNlIHQ9cy5oZWxwZXJzW2ldPyI9IyIraSsiKCIrbi5qb2luKCIsIikrIik7IjoiPSIrdH1yZXR1cm4gdH0saT1mdW5jdGlvbigpe3JldHVybiBzfS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KCl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigxMyksYT1uKDI0KSxyPW4oMjUpLHM9bigxMCksbD17fSxjPVt7dW5pdE5hbWU6IuWNgyIsdGltZXM6MWUzfSx7dW5pdE5hbWU6IuS4hyIsdGltZXM6MWU0fV0scD0xLGQ9ZnVuY3Rpb24odCxuKXtpZih0KXtpZih0PXQudG9TdHJpbmcoKSxwPTEsQXJyYXkucHJvdG90eXBlLmZvckVhY2gmJmMuZm9yRWFjaChmdW5jdGlvbihlKXt0LmluZGV4T2YoZS51bml0TmFtZSk+LTEmJihwPWUudGltZXMpfSksdD10LnJlcGxhY2UoL15bXlxkXSsvZ2ksIiIpLHQ9dC5yZXBsYWNlKC9b77+lXCRdL2dpLCIiKSx0PXQubWF0Y2goL1swLTkuLF0rLykmJnQubWF0Y2goL1swLTkuLF0rLylbMF0sIXQpcmV0dXJuIHQ7dD11KHQsbiksdD10LnJlcGxhY2UoLywvZ2ksIiIpLHQ9ZS50cmltKHQpO3ZhciBpPXQuaW5kZXhPZigiLSIpO3JldHVybiBpPjAmJih0PXQuc3Vic3RyKDAsaSkpLHQ9dC5yZXBsYWNlKC9eKFxkK1wuKVw8LitcPihcZHswLDJ9KVw8XC8uK1w+L2dpLCIkMSQyIil9fTt0LmV4cG9ydHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1kKHQsZSksdD1oKHQsZSkscGFyc2VGbG9hdCh0KT4wPyh0PXBhcnNlRmxvYXQodCkscCYmKHQqPXApLHQpOjB9LHQuZXhwb3J0cy5nZXRQcmljZUJlZm9yZUV4Y2hhbmdlUmF0ZT1kO3ZhciBoPWZ1bmN0aW9uKHQsZSl7dmFyIG49dm9pZCAwO3JldHVybiBuPWU/bFtlXXx8MTpvLmdldCgiY3VycmVuY3kiKXx8aS5jdXJyZW5jeXx8MSxwYXJzZUZsb2F0KChOdW1iZXIodCkqbikudG9GaXhlZCgyKSl9LHU9ZnVuY3Rpb24odCxuKXtpZihuKXJldHVybiB0O2lmKDE9PWkucGFnZUluZm8udHlwZSlyZXR1cm4gdDt2YXIgbz1sb2NhdGlvbi5ob3N0LGE9eyJ3d3cuYW1hem9uLmRlIjoicHJpbWUiLCJ3d3cuYW1hem9uLmZyIjoicHJlbWl1bSJ9O3JldHVybiBhW29dJiZlKCIjbmF2LWxvZ28gLm5hdi1sb2dvLXRhZ2xpbmUiKS50ZXh0KCkucmVwbGFjZSgvXHMvZywiIikudHJpbSgpLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihhW29dKT4tMSYmKHQ9dC5yZXBsYWNlKCIuIiwiIikucmVwbGFjZSgiLCIsIi4iKSksdH0sbT1mdW5jdGlvbih0KXtzLnRyaWdnZXIoe3R5cGU6InNldFN0b3JlUmF0ZSIsaW5mbzpKU09OLnN0cmluZ2lmeSh0KX0pfSxmPWZ1bmN0aW9uKCl7cy5vbihmdW5jdGlvbih0KXtpZih0JiYiZ2V0U3RvcmVSYXRlIj09dC50eXBlKXRyeXt2YXIgZT10LnZhbHVlLmN1cnJlbmN5LG49SlNPTi5wYXJzZShlKTtsPW4uZWxzZWN1cnIsaS5jdXJyZW5jeT1uLmN1cnJlbmN5fWNhdGNoKG8pe319KSxzLnRyaWdnZXIoe3R5cGU6ImdldFN0b3JlUmF0ZSJ9KX0sZz1mdW5jdGlvbigpeyJ3d3cuYW1hem9uLmNuIiE9PWxvY2F0aW9uLmhvc3QmJihsb2NhdGlvbi5ob3N0LmluZGV4T2YoImFtYXpvbiIpPi0xfHxsb2NhdGlvbi5ob3N0LmluZGV4T2YoIjZwbSIpPi0xKSYmZigpfTtnKCksdC5leHBvcnRzLmdldEV4UmF0ZT1mdW5jdGlvbih0KXtyZXR1cm4gcGFyc2VGbG9hdCgxfGxbdF0pfSx0LmV4cG9ydHMuZ2V0UmF0ZT1mdW5jdGlvbih0KXt2YXIgZT1pLmxvZ3NpdGUsbj1yLmdldE1vbmV5SW5mbyhlKTtpZihuKXt2YXIgcz1pLnNlcnZlcisiL2V4dGVuc2lvbj9hYz1jdXJyZW5jeSZ1cmw9IitlbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24uaHJlZik7YS5nZXQocykuZG9uZShmdW5jdGlvbihlKXtlJiZlLmN1cnJlbmN5JiYoby5zZXQoImN1cnJlbmN5IixlLmN1cnJlbmN5KSxsPWUuZWxzZWN1cnIsaS5jdXJyZW5jeT1lLmN1cnJlbmN5LG0oZSkpLHQoKX0pLmZhaWwoZnVuY3Rpb24oKXt0KCl9KX1lbHNlIHQoKX19KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIGk9big0KSxvPWZ1bmN0aW9uKHQpe2lmKCF0KXRocm93IG5ldyBFcnJvcigidXJsIOS4jeiDveS4uuepuiIpO3ZhciBuPSI/IixpPSJjYWxsYmFjaz0/JiI7dC5pbmRleE9mKCI/Iik+LTEmJihuPSImIik7dmFyIG8sYT0iZm9ybWF0PWpzb25wJiI7cmV0dXJuKGUuY2hyb21lX2V4dGVuc2lvbnx8Im1heHRob24iPT09ZS5mcm9tX2RldmljZSkmJihvPSEwKSxvJiYoaT0iIixhPSJmb3JtYXQ9anNvbiYiKSwiIit0K24raSthfTt0LmV4cG9ydHMucmF3PWZ1bmN0aW9uKHQsbil7biYmKHQ9dCsiJnVuaW9uPSIrZS51bmlvbisiJnZlcnNpb249IitlLnZlcnNpb24rIiZmcm9tX2RldmljZT0iK2UuZnJvbV9kZXZpY2UpO3ZhciBpLG89e2RvbmU6ZnVuY3Rpb24odCl7aT10fX0sYT1uZXcgWE1MSHR0cFJlcXVlc3Q7cmV0dXJuIGEuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZnVuY3Rpb24oKXtpJiZpKGEucmVzcG9uc2VUZXh0KX0pLGEuYWRkRXZlbnRMaXN0ZW5lcigiZXJyb3IiLGZ1bmN0aW9uKCl7aSYmaShhLnJlc3BvbnNlVGV4dCl9KSxhLm9wZW4oIkdFVCIsdCwhMCksYS5zZW5kKCksb30sdC5leHBvcnRzLmdldFNjcmlwdD1mdW5jdGlvbih0LGUsbil7d2luZG93W2VdPWZ1bmN0aW9uKHQpe24odCl9O3ZhciBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO2kuc3JjPXQsaS50eXBlPSJ0ZXh0L2phdmFzY3JpcHQiLGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaSl9LHQuZXhwb3J0cy5nZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9byh0KSsidW5pb249IitlLnVuaW9uKyImdmVyc2lvbj0iK2UudmVyc2lvbisiJmZyb21fZGV2aWNlPSIrZS5mcm9tX2RldmljZSxlLmNyYzY0JiYodCs9IiZjcmM2ND0xIiksaS5nZXRKU09OKHQpfSx0LmV4cG9ydHMuZ2V0UHVyZT1mdW5jdGlvbih0KXtyZXR1cm4gdD1vKHQpLGkuZ2V0SlNPTih0KX19KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSl7InVzZSBzdHJpY3QiO3ZhciBuPXt1czpbIiQiLCLnvo7lhYMiLCJVU0QiXSxFdXJvcGU6WyJFVVIiLCLmrKflhYMiLCJFVVIiXSxKYXBhbjpbIkpQwqUiLCLml6XlhYMiLCJKUFkiXSxFdXJvcGUyOlsi4oKsIiwi5qyn5YWDIiwiRVVSIl0sVUs6WyLCoyIsIuiLsemVkSIsIkdCUCJdLEF1c3RyYWxsaWE6WyJBVSQiLCLmvrPlhYMiLCJBVUQiXSxISzpbIkhLJCIsIua4r+WFgyIsIkhLRCJdLCJOZXctWmVhbGFuZCI6WyJOWiQiLCLmlrDlhYMiLCJOWkQiXSxDYW5hZGE6WyJDRE4kIiwi5Yqg5YWDIiwiQ0FEIl19LGk9e2RhbmllbHdlbGxpbmd0b246InVzIixkZXdhcmVuOiJFdXJvcGUiLGJvc2U6InVzIix0YWtleWE6IkphcGFuIixiaWVubWFuZ2VyOiJFdXJvcGUyIix0bGNwaGFybWFjeToiVUsiLCJwZXRpdC1iYXRlYXUiOiJ1cyIsZXN0ZWVsYXVkZXI6InVzIiwiNTF0YW91ayI6IlVLIixhbWNhbDoiQXVzdHJhbGxpYSIsam9lc25ld2JhbGFuY2VvdXRsZXQ6InVzIixnbmM6InVzIixyb3l5b3VuZ2NoZW1pc3Q6IkF1c3RyYWxsaWEiLGtvaGxzOiJ1cyIsYm9keWJ1aWxkaW5nOiJ1cyIsbmV3YmFsYW5jZToidXMiLCJuZXdlZ2ctdXMiOiJ1cyIscGhhcm1hY3k0bGVzczoiQXVzdHJhbGxpYSIsYmVhdXR5YmF5OiJ1cyIsa2F0ZXNwYWRlOiJVSyIsY2FydGVyczoidXMiLCJkaXNjb3VudC1hcG90aGVrZSI6IkV1cm9wZTIiLHBoYXJtYWN5b25saW5lOiJBdXN0cmFsbGlhIixza2luc3RvcmU6InVzIixmZWVsdW5pcXVlOiJVSyIseDAwNjE6IkF1c3RyYWxsaWEiLGJvbmpvdXJoazoiSEsiLGJhOiJFdXJvcGUyIixjaGVtaXN0ZGlyZWN0OiJBdXN0cmFsbGlhIix0YXJnZXQ6InVzIiwiYXNoZm9yZC16aCI6InVzIixmb3JldmVyMjE6IlVLIiwiaG9sbGFuZC1hdC1ob21lIjoiRXVyb3BlMiIsa2llaGxzOiJ1cyIscGhhcm1hY3lkaXJlY3Q6Ik5ldy1aZWFsYW5kIixzaG9lczoidXMiLHNob3Bib3A6InVzIix3aW5kZWxuOiJFdXJvcGUyIixiaHBob3RvdmlkZW86InVzIixsb29rZmFudGFzdGljOiJVSyIsaHFoYWlyOiJVSyIsImFtYXpvbi1jb20iOiJ1cyIsImFtYXpvbi1qcCI6IkphcGFuIiwiYW1hem9uLWZyIjoiRXVyb3BlIiwiYW1hem9uLWRlIjoiRXVyb3BlIiwiYW1hem9uLWl0IjoiRXVyb3BlIiwiYW1hem9uLXVrIjoiVUsiLCJhbWF6b24tY2EiOiJDYW5hZGEiLCJhbWF6b24tZXMiOiJFdXJvcGUiLGloZXJiOiJ1cyIsIjZwbSI6InVzIixhbGlleHByZXNzOiJ1cyJ9O3QuZXhwb3J0cy5nZXRNb25leUluZm89ZnVuY3Rpb24odCl7cmV0dXJuIGlbdF0mJm5baVt0XV19fSxmdW5jdGlvbih0LGUsbil7dmFyIGk9bigyNyk7InN0cmluZyI9PXR5cGVvZiBpJiYoaT1bW3QuaWQsaSwiIl1dKTtuKDI5KShpLHt9KTtpLmxvY2FscyYmKHQuZXhwb3J0cz1pLmxvY2Fscyl9LGZ1bmN0aW9uKHQsZSxuKXtlPXQuZXhwb3J0cz1uKDI4KSgpLGUucHVzaChbdC5pZCwiICNnd2RfaHRfbWFpbiBhe1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBmb250LWZhbWlseTogJ01pY3Jvc29mdCBZYWhlaSdcbiAgICB9XG4gICAgI2d3ZF9odF9tYWlue1xuICAgICAgd2lkdGg6IDM3NnB4O1xuICAgICAgaGVpZ2h0OiAxOThweDtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgICBib3JkZXItcmFkaXVzOiAxOHB4O1xuICAgICAgYm94LXNoYWRvdzogMHB4IDVweCAxOXB4IDBweCAjZDdkOGQ5O1xuICAgIH1cbiAgICAjZ3dkX2h0X2xvYWQgaW1nIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHRvcDogOTFweDtcbiAgICAgIGxlZnQ6IDc0cHg7XG4gICAgfVxuICAgIC5odF82cG17XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICB9XG4gICAgI2d3ZF9odF9tYWluIC5odF9oZWFke1xuICAgICAgaGVpZ2h0OiAzNnB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAjZ3dkX2h0X21haW4gLmd3ZF9zaXRlX2ljb257XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zaXRlaWNvbi5wbmcnKSAxM3B4IDdweCBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDI0cHggMjJweDtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIHdpZHRoOiA1MnB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAudW5pdF9wcmljZSAjaHRfYWRkY29sbGVjdHtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmMDc4NjA7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHdpZHRoOiA3N3B4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBtYXJnaW4tYm90dG9tOiA2cHg7XG4gICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgICBjb2xvcjogI2YwNzg2MDtcbiAgICB9XG4gICAgI2d3ZF9odF9tYWluIC51bml0X3ByaWNlICNodF9hZGRjb2xsZWN0LnRyZW5kX3dhaXQuY19hZGRpbmd7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjA3ODYwO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAudW5pdF9wcmljZSAjaHRfYWRkY29sbGVjdC50cmVuZF93YWl0LmNfYWRkZWR7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjA3ODYwO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuICAgIC51bml0X3ByaWNlID4gc3BhbiB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuICAgIC5wcmljZV90bGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAudW5pdF9wcmljZSAjaHRfYWRkY29sbGVjdDpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAudW5pdF9wcmljZSAjaHRfYWRkY29sbGVjdDpob3ZlciBzcGFuIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAucHJpY2VfbnVte1xuICAgICAgY29sb3I6ICM3NzhlOTk7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogODlweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5odF9nZXRwcmljZXtcbiAgICAgIHdpZHRoOiAzMjJweDtcbiAgICAgIGhlaWdodDogMzVweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBjb2xvcjogIzQ1NEE0RDtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2U2ZTllYjtcbiAgICB9XG4gICAgLmZvbnRmX0FyaWFsIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIkFyaWFsXCI7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgLmh0X2dldHByaWNlX251bSB7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGNvbG9yOiAjRUIyRjJGO1xuICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgIH1cbiAgICAudW5pdF9wcmljZXtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuICAgIC5vbl9Pcl9PZmYge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1MnB4O1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBjb2xvcjogcmVkO1xuICAgIH1cbiAgICAudHJhbnNsYXRlX2RldGFpbCB7XG4gICAgICB0b3A6IDY0cHg7XG4gICAgICBsZWZ0OiAzNTBweDtcbiAgICB9XG4gICAgYS50cmFuc19oZWxwIHtcbiAgICAgIGNvbG9yOiAjNDBhY2U2O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDMzMHB4O1xuICAgIH1cbiAgICAudHJhbnNfaGVscDpob3ZlciB7XG4gICAgICBjb2xvcjogIzJiNzI5OTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9sZWZ0IC50YXJpZmZfcmVtaW5kX2RldGFpbCB7XG4gICAgICByaWdodDogMjQ3cHg7XG4gICAgICBoZWlnaHQ6IDkwcHg7XG4gICAgICB0b3A6IC0yN3B4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuZGl2X2RldGFpbCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDE0NnB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U2ZTllYjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICB6LWluZGV4OiA5OTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICM4ODg7XG4gICAgICBwYWRkaW5nOiA2cHggNnB4IDlweCA2cHg7XG4gICAgICBib3gtc2hhZG93OiAycHggMnB4IDEycHggMnB4ICNlNmU5ZWI7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jb250ZW50X2RlZmF1bHRfbGVmdCAud2VpZ2h0X3R5cGVfZGV0YWlsICB7XG4gICAgICB0b3A6IDdweDtcbiAgICAgIGxlZnQ6IDE1NnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDExM3B4O1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgICBwYWRkaW5nOiAwcHggNnB4O1xuICAgIH1cbiAgICAuY29sbGVjdF9kZXRhaWwgIHtcbiAgICAgIHRvcDogLTdweDtcbiAgICAgIGxlZnQ6IDI0NHB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnRyYW5zcG9ydF9yZW1pbmRfZGV0YWlsIHtcbiAgICAgIHBhZGRpbmc6IDBweCA2cHg7XG4gICAgICB0b3A6IDlweDtcbiAgICAgIGxlZnQ6IDI0MXB4O1xuICAgICAgd2lkdGg6IDExMnB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAudGFyaWZmX2luZm9fZGV0YWlsIHtcbiAgICAgIHBhZGRpbmc6IDAgNnB4O1xuICAgICAgd2lkdGg6IDExMHB4O1xuICAgICAgdG9wOiA5cHg7XG4gICAgICBsZWZ0OiAyNDFweDtcbiAgICB9XG4gICAgLnByb190eXBlX2RldGFpbCB7XG4gICAgICB0b3A6IDlweDtcbiAgICAgIGxlZnQ6IDM1MHB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAucHJvX3R5cGVfZGV0YWlsLmRpdl9kZXRhaWwge1xuICAgICAgcGFkZGluZzogMCA2cHg7XG4gICAgICB3aWR0aDogMTM0cHg7XG4gICAgfVxuICAgIC5tYWlsX3R5cGVfZGV0YWlsIHtcbiAgICAgIHRvcDogMzNweDtcbiAgICAgIGxlZnQ6IDM1MHB4O1xuICAgIH1cbiAgICAjaHRfdHJhbnNfaW5wdXR7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0b3A6IDhweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLnNpemVfZGV0YWlsIHtcbiAgICAgIHRvcDogMTMwcHg7XG4gICAgICBsZWZ0OiAzNTBweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnNpemVfZGV0YWlsLmRpdl9kZXRhaWwge1xuICAgICAgcGFkZGluZzogMHB4IDZweDtcbiAgICAgIHdpZHRoOiAxMTBweDtcbiAgICB9XG4gICAgLnRyYW5zX2xhYmVse1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgIH1cbiAgICAuaHRfdHJhbnNsYXRlOmhvdmVyIHtcbiAgICAgIGN1cnNvcjogdGV4dDtcbiAgICB9XG4gICAgLmh0X3RyYW5zbGF0ZSwucHJvX3R5cGUsLm1haWxfdHlwZXtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuICAgIC5wcm9fdHlwZTpob3ZlciwubWFpbF90eXBlOmhvdmVyIHtcbiAgICAgIGN1cnNvcjogdGV4dDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmh0X2dldHByaWNlOmhvdmVye1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6ICM0NTRBNEQ7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5odF93ZWlnaHRfbnVte1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDU0cHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XG4gICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiA0cHg7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7XG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW4tdG9wOiA5cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTVweDtcbiAgICAgIHBhZGRpbmc6IDAgM3B4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzQ3YmVmZTtcbiAgICAgIGJveC1zaXppbmc6IGluaXRpYWw7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC53ZWlnaHRfdHlwZXtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogMjJweDtcbiAgICAgIHdpZHRoOiAyNHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQ3YmVmZTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW4tdG9wOiA5cHg7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9sZWZ0e1xuICAgICAgaGVpZ2h0OiAxNjBweDtcbiAgICAgIHdpZHRoOiAyNTRweDtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmh0X3dlaWdodCBzcGFuIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICAuaHRfd2VpZ2h0IC53ZWlnaHRfdGxlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICAgIH0gXG4gICAgLmNvbnRlbnRfZGVmYXVsdF9sZWZ0IGRpdntcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICAgICAgY29sb3I6ICMzNzM3Mzc7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U2ZTllYlxuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY29udGVudF9kZWZhdWx0X2xlZnQgZGl2Lmh0X3RhcmlmZiB7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuaHRfdHJhbnNwb3J0X2J0biwuZ3dkX2hhaXRhbyAuaHRfdGFyaWZmX2J0bntcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbi1yaWdodDogMTVweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGNvbG9yOiAjNDBhY2U2O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuaHRfdHJhbnNwb3J0X2J0bjpob3ZlciwuaHRfdGFyaWZmX2J0bjpob3ZlcntcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjNDBhY2U2O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuaHRfZnJlaWdodF9udW17XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogNDJweDtcbiAgICAgIGNvbG9yOiAjNzc4ZTk5O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuaHRfZnJlaWdodCwuZ3dkX2hhaXRhbyAuZGVsX2xpbmV7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgfVxuICAgIGEuaHRfdHJhbnNwb3J0X2J0biBzcGFuLCAuaHRfdGFyaWZmX2J0biBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgfVxuICAgIGEuaHRfdHJhbnNwb3J0X2J0biBzcGFuOmhvdmVyLCAuaHRfdGFyaWZmX2J0biBzcGFuOmhvdmVyIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAucG9pbnRfaWNvbntcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cDovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Rvd25ibHVlaWNvbi5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogOXB4IDZweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogOXB4O1xuICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0b3A6IDFweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmRlbF9saW5le1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IDk4cHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5kZWxfbGluZSAuaHRfdGFyaWZmX251bSB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbiAgICAgIGNvbG9yOiAjNzc4ZTk5O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuZGVsX2xpbmUgLmh0X3RhcmlmZl9udW0gZW0ge1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY29udGVudF9kZWZhdWx0X3JpZ2h0e1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiAxNjBweDtcbiAgICAgIHdpZHRoOiAxMTlweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9yaWdodCBhe1xuICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gICAgICBjb2xvcjogIzM4MzgzNTtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTZlOWViO1xuICAgICAgcGFkZGluZzogMCAwIDAgMTRweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9yaWdodCBhIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDdweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9yaWdodCBhOmhvdmVye1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6ICMzODM4MzU7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAuc2l6ZV9oZWxwe1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICB9XG4gICAgI2d3ZF9odF9tYWluIC5zaXplX2hlbHAgc3BhbiB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBjb2xvcjogIzVhYTRjYztcbiAgICB9XG4gICAgI2d3ZF9odF9tYWluIC5zaXplX2hlbHAgc3Bhbjpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9yaWdodCBlbXtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdG9wOiA1cHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5zaXplX2hlbHAgZW17XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zaXplaWNvbi5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMjBweCAyMHB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuaHRfdHJhbnNsYXRlIGVte1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fdHJhbnNpY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5wcm9fdHlwZSAueml5aW5ne1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9feml5aW5naWNvbi5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnByb190eXBlIC5zYW5mYW5ne1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fc2FuaWNvbi5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMjBweCAyMHB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAubWFpbF90eXBlIC56aGl5b3V7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb196aGlpY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAubWFpbF90eXBlIC5mZWl6aGl5b3V7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb196aHVhbmljb24ucG5nJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggMjBweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnNhbWUtc3R5bGUgZW0ge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fc2FtZXN0eWxlLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAudmlwX3RsZSBlbSB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb192aXBpY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuZ3dkX3dpc2hsaXN0X3RyZW5kX2RldGFpbF93cmFwcGVye1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5odF9jb250ZW50e1xuICAgICAgaGVpZ2h0OiAxNjJweDtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTZlOWViO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuY29udGVudF9kZWZhdWx0IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAuY29udGVudF9kZWZhdWx0OmFmdGVyLCAuZ3dkX2hhaXRhbyAuY29udGVudF9kZWZhdWx0X3JpZ2h0OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgICAvKiDlhbPnqI7liIbnsbvpgInmi6kgKi9cbiAgICAjdGFyaWZmX2RldGFpbHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTtcbiAgICAgIHRvcDogMHB4O1xuICAgICAgbGVmdDogMHB4O1xuICAgICAgd2lkdGg6IDI5MHB4O1xuICAgICAgaGVpZ2h0OiAxODBweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgICBib3gtc2hhZG93OiAwcHggNXB4IDE5cHggMHB4ICNkN2Q4ZDk7XG4gICAgfVxuICAgICN0YXJpZmZfZGV0YWlsIC54aWFsYWJveCBhe1xuICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgIGNvbG9yOiAjNWM2MjY2O1xuICAgICAgbWFyZ2luLWxlZnQ6IDdweDtcbiAgICAgIHdpZHRoOiA5OHB4O1xuICAgICAgaGVpZ2h0OiAyNXB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI1cHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICAjdGFyaWZmX2RldGFpbCAueGlhbGFib3ggYTpob3ZlcntcbiAgICAgIGNvbG9yOiAjNDdiZWZlO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuICAgICN0YXJpZmZfZGV0YWlsIC50YXJfaGVhZHtcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTZlOWViO1xuICAgIH1cbiAgICAjdGFyaWZmX2RldGFpbCAudGFyX2Rlc2MgLCAjdGFyaWZmX2RldGFpbCAudGFyX2hlYWQge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICAjdGFyaWZmX2RldGFpbCAudGFyX2hlYWQgc3BhbntcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogMzRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgd2lkdGg6IDI3MXB4O1xuICAgIH1cbiAgICAjdGFyaWZmX2RldGFpbCAuaHRfdGFyaWZmX251bSwgLmh0X3RhcmlmZl9jYXRlIHtcbiAgICAgIGNvbG9yOiAjNDBhY2U2O1xuICAgIH1cbiAgICAuaHRfdGFyaWZmX2NhdGUge1xuICAgICAgd2lkdGg6IDcwcHg7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0b3A6IDVweDtcbiAgICB9XG4gICAgI3RhcmlmZl9kZXRhaWwgLmRlbF9saW5lIHtcbiAgICAgIHdpZHRoOiAxMThweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnRhcl9kZXNje1xuICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC50YXJfZGVzYyAuZGVsX2xpbmV7XG4gICAgICBtYXJnaW46IDAgMCAwIDIwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC50YXJfZGVzYyAuZGVzY190e1xuICAgICAgbWFyZ2luLWxlZnQ6IDlweDtcbiAgICB9XG4gICAgI2NhdGVfc2VsZWN0X2JveHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gI2NhdGVfc2VsZWN0X2JveCBpbnB1dHtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIHdpZHRoOiAxMDlweDtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cDovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Rvd25ncmF5aWNvbi5wbmcnKSBuby1yZXBlYXQgODlweCAxMXB4O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDdweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIHBhZGRpbmc6IDNweCA3cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBjb2xvcjogIzljYTdhZDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gI2NhdGVfc2VsZWN0X2JveCBpbnB1dC5zZWxfaW5mb3tcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWUxZTE7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvICNjYXRlX3NlbGVjdF9ib3ggaW5wdXQuaW5wdXRfaG92ZXJ7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcbiAgICAgIGNvbG9yOiAjOWNhN2FkO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY2F0ZV9zZWxlY3RfMXtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIycHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTY5ODk5O1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY2F0ZV9zZWxlY3RfMS5zZWxlY3RfaG92ZXIgLCAuZ3dkX2hhaXRhbyAuY2F0ZV9zZWxlY3RfMi5zZWxlY3RfaG92ZXJ7XG4gICAgICBoZWlnaHQ6IDIxOHB4O1xuICAgICAgei1pbmRleDogOTk5OTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG5cbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNhdGVfc2VsZWN0XzJ7XG4gICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Njk4OTk7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnhpYWxhYm94e1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICBoZWlnaHQ6IDE4NXB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMTA5cHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICAgIC5pZV9oYWNrLmd3ZF9oYWl0YW8gLnhpYWxhYm94IHtcbiAgICAgIHdpZHRoOiAxMTFweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gI3NlbGVjdF9idG57XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogMjRweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0N2JlZmU7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1NHB4O1xuICAgICAgbGVmdDogMTE2cHg7XG4gICAgfVxuICAgICN0cmFuc3BvcnRfZGV0YWlse1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgd2lkdGg6IDc1NXB4O1xuICAgICAgaGVpZ2h0OiAzMTRweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgdG9wOiA0MDBweDtcbiAgICAgIGxlZnQ6IDQwMHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIHotaW5kZXg6IDk5OTk5O1xuICAgICAgYm94LXNoYWRvdzogMHB4IDVweCAxOXB4IDBweCAjZDdkOGQ5O1xuICAgIH1cbiAgICAjdHJhbnNwb3J0X2RldGFpbCAqe1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB9XG4gICAgI3RyYW5zcG9ydF9kZXRhaWwgLnRyYW5zX25hdiAuc3Bhbl8wIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIH1cbiAgICAjdHJhbnNwb3J0X2RldGFpbCAudHJhbnNfbmF2IC5zcGFuXzF7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgd2lkdGg6IDE0NnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDE3cHg7XG4gICAgfVxuICAgICN0cmFuc3BvcnRfZGV0YWlsIC50cmFuc19uYXYgLnNwYW5fMntcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB3aWR0aDogMTQ3cHg7XG4gICAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsIC50cmFuc19oZWFke1xuICAgICAgaGVpZ2h0OiA1MXB4O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jbG9zZWJhcntcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNHB4O1xuICAgICAgcmlnaHQ6IDdweDtcbiAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY2xvc2ViYXIuY2xvc2ViZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fY2xvc2VpY29uLnBuZ1wiKSA2cHggNnB4IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogOXB4IDlweDtcbiAgICAgIGhlaWdodDogMjJweDtcbiAgICAgIHdpZHRoOiAyMnB4O1xuICAgICAgdG9wOiAxcHg7XG4gICAgICByaWdodDogMXB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY2xvc2ViYXIuY2xvc2ViZzpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fY2xvc2Vob3Zlcmljb24ucG5nXCIpIDNweCAzcHggbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxNXB4IDE1cHg7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgLnRyYW5zX25hdntcbiAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogNzUzcHg7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgLnRyYW5zX25hdj5zcGFue1xuICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgY29sb3I6ICM1YzYyNjY7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbGluZS1oZWlnaHQ6IDQ4cHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgLnRyYW5zX25hdiAuc3Bhbl8zIHtcbiAgICAgIHdpZHRoOiAxOTZweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBjb2xvcjogIzQwNjk4MDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzNXB4O1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsIC50cmFuc19uYXYgLnRyYW5zX3d7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAxNHB4O1xuICAgICAgbGVmdDogMzUycHg7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgLnRyYW5zX3cgLndlaWdodF90eXBle1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDI2cHg7XG4gICAgICBtYXJnaW4tdG9wOiAwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB9XG4gICAgLmh0X3RyYW5zX2RldGFpbCAudHJhbnNfdyAuaHRfd2VpZ2h0X251bXtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIHBvc2l0aW9uOiBzdGF0aWM7XG4gICAgICB3aWR0aDogNDlweDtcbiAgICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGJvcmRlci1jb2xvcjogIzhkYzJlNTtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnRyYW5zX2NvbnRlbnQge1xuICAgICAgaGVpZ2h0OiAyMTBweDtcbiAgICAgIHdpZHRoOiA3NTFweDtcbiAgICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICB9XG4gICAgLmh0X3RyYW5zX2RldGFpbCAudHJhbnNfZm9vdCwuc2l6ZV9kZXNjIHtcbiAgICAgIGNvbG9yOiAjOWY5ZjlmO1xuICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgLnRyYW5zX2Zvb3Qge1xuICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnJlZHtcbiAgICAgIGNvbG9yOiAjZTcyMDMwO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyBzcGFuLnJlZCB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zdGFyaWNvbi5wbmcnKSAwcHggMXB4IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogOHB4IDlweDtcbiAgICAgIGhlaWdodDogMTBweDtcbiAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsIC50cmFuc19mb290IC5yZWQrc3BhbntcbiAgICAgIGNvbG9yOiAjOTE5Njk5O1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsICN0cmFuc19saXN0e1xuICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICBwYWRkaW5nOiAwcHg7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgI3RyYW5zX2xpc3QgbGl7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb2xvcjogIzMzMztcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsICN0cmFuc19saXN0IGxpOmFmdGVye1xuICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgIGNsZWFyOmJvdGg7XG4gICAgICBjb250ZW50OlwiXCI7XG4gICAgICB2aXNpYmlsaXR5OmhpZGRlbjtcbiAgICAgIGhlaWdodDowO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAjdHJhbnNfbGlzdCBsaTpob3ZlcntcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFMUUxRTY7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgI3RyYW5zX2xpc3QgbGk+c3BhbiwgLmh0X3RyYW5zX2RldGFpbCAjdHJhbnNfbGlzdCBsaT5he1xuICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gICAgICBjb2xvcjogIzVjNjI2NjtcbiAgICB9XG4gICAgLmh0X3RyYW5zX2RldGFpbCAjdHJhbnNfbGlzdCBsaSBhOmhvdmVyIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICB9XG4gICAgc3Bhbi5zYWxlX3RsZSB7XG4gICAgICB3aWR0aDogMjI1cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMzZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIH1cbiAgICBzcGFuLnNhbGVfdGxlIGF7XG4gICAgICBjb2xvcjogIzQwYWNlNjtcbiAgICB9XG4gICAgc3Bhbi5zYWxlX3RsZSBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjMmI3Mjk5O1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsIC5sb19jZW50ZXJ7XG4gICAgICBtYXJnaW4tbGVmdDogMjRweDtcbiAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsIHNwYW4udHJhbnNfY2F0ZSB7XG4gICAgICB3aWR0aDogMTMwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICB9XG4gICAgLmh0X3RyYW5zX2RldGFpbCBzcGFuLnRyYW5zX3ByIHtcbiAgICAgIHdpZHRoOiAxNDZweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgYS50cmFuc19jb20ge1xuICAgICAgd2lkdGg6IDg1cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMzlweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgY29sb3I6ICMzMzM7XG4gICAgfVxuICAgIC5odF90cmFuc19kZXRhaWwgYS50cmFuc19jb206aG92ZXIge1xuICAgICAgY29sb3I6ICMwMDY2YzA7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgIC8qIOayoeacieS8mOaDoOaUv+etlueahOaDheWGtSAqL1xuICAgICN0cmFuc3BvcnRfZGV0YWlsLm5vX3NhbGUge1xuICAgICAgd2lkdGg6IDQ5MHB4O1xuICAgIH1cbiAgICAubm9fc2FsZS5odF90cmFuc19kZXRhaWwgLnRyYW5zX25hdiB7XG4gICAgICB3aWR0aDogNDM2cHg7XG4gICAgfVxuICAgIC5ub19zYWxlLmd3ZF9oYWl0YW8gLnRyYW5zX2NvbnRlbnQge1xuICAgICAgd2lkdGg6IDQ0NHB4O1xuICAgIH1cbiAgICAubm9fc2FsZS5odF90cmFuc19kZXRhaWwgLnRyYW5zX25hdiAuc3Bhbl8zIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICN0cmFuc3BvcnRfZGV0YWlsLm5vX3NhbGUgc3Bhbi5zYWxlX3RsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAvKiDlsLrnoIHluK7liqkgKi9cbiAgICAjc2l6ZV9kZXRhaWx7XG4gICAgICB3aWR0aDogNjE4cHg7XG4gICAgICBoZWlnaHQ6IDQ0MHB4O1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgdG9wOiA0MDBweDtcbiAgICAgIGxlZnQ6IDQwMHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5O1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTZlOWViOyBcbiAgICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTlweCAwcHggI2Q3ZDhkOTsgICAgICAgXG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuc2hhbmd5aSwgLnRvbmd6aHVhbmcwLCAudG9uZ3hpZTB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAzOHB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnhpYXpodWFuZywgLnRvbmd6aHVhbmc0LCAudG9uZ3hpZTR7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDUwcHg7XG4gICAgICBsZWZ0OiAzOHB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNob2VzLC5odF9zaXplX2RldGFpbCAudG9uZ3podWFuZywgLmh0X3NpemVfZGV0YWlsIC50b25neGlle1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIHNwYW4uc2hvZXMge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAzOXB4O1xuICAgICAgbGVmdDogMzhweDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQ3YmVmZTtcbiAgICAgIGJvcmRlcjogIDFweCBzb2xpZCAjNDdiZWZlO1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNoYW5neWkuc2l6ZV9ob3ZlciwuaHRfc2l6ZV9kZXRhaWwgLnhpYXpodWFuZy5zaXplX2hvdmVyLCAuaHRfc2l6ZV9kZXRhaWwgLnhpYXpodWFuZy5zaXplX2hvdmVyLCAuaHRfc2l6ZV9kZXRhaWwgLnRvbmd6aHVhbmcuc2l6ZV9ob3ZlciwgLmh0X3NpemVfZGV0YWlsIC50b25neGllLnNpemVfaG92ZXJ7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDdiZWZlO1xuICAgICAgYm9yZGVyOiAgMXB4IHNvbGlkICM0N2JlZmU7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaGFuZ3lpLC5odF9zaXplX2RldGFpbCAueGlhemh1YW5nLC5odF9zaXplX2RldGFpbCAuc2hvZXMsLmh0X3NpemVfZGV0YWlsIC50b25nemh1YW5nLCAuaHRfc2l6ZV9kZXRhaWwgLnRvbmd4aWV7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgIGJvcmRlcjogIDFweCBzb2xpZCAjOTY5ODk5O1xuICAgICAgY29sb3I6ICM4QTk0OTk7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhfaWNvbntcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMTAwcHg7XG4gICAgICBsZWZ0OiAyMnB4O1xuICAgIH1cbiAgICBcbiAgICAuaHRfc2l6ZV9kZXRhaWwgLm1hbnNoYW5nemh1YW5nIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cDovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvbWFuX3NoYW5nemh1YW5nLnBuZycpIC00cHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGhlaWdodDogMTkxcHg7XG4gICAgICB3aWR0aDogOTNweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC53b21hbnNoYW5nemh1YW5nIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cDovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvd29tYW5fc2hhbmd6aHVhbmcucG5nJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBoZWlnaHQ6IDE4N3B4O1xuICAgICAgd2lkdGg6IDg3cHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAua2lkMCB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2tpZHMwXzQucG5nJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBoZWlnaHQ6IDE4N3B4O1xuICAgICAgd2lkdGg6IDg3cHg7XG4gICAgICBtYXJnaW4tbGVmdDogOHB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLmtpZDQge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9raWRzNF8xMi5wbmcnKSAtMnB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBoZWlnaHQ6IDE4N3B4O1xuICAgICAgd2lkdGg6IDg3cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMHB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLm1hbnhpYXpodWFuZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL21hbl94aWF6aHVhbmcucG5nJykgLTE3cHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGhlaWdodDogMjE2cHg7XG4gICAgICB3aWR0aDogNjNweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxM3B4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLndvbWFueGlhemh1YW5nIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cDovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvd29tYW5feGlhemh1YW5nLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgaGVpZ2h0OiAyMjBweDtcbiAgICAgIHdpZHRoOiA2NnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDExcHg7XG4gICAgfVxuICAgIFxuICAgIC5odF9zaXplX2RldGFpbCAuaHRfc2hvZXMubWFuX2Zvb3Qge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9tYW5fZm9vdC5wbmcnKSA0cHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGhlaWdodDogMTcwcHg7XG4gICAgICB3aWR0aDogMTExcHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuaHRfc2hvZXMud29tYW5fZm9vdCB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL3dvbWFuX2Zvb3QucG5nJykgNHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBoZWlnaHQ6IDE3MHB4O1xuICAgICAgd2lkdGg6IDExMXB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLmh0X3Nob2VzLmtpZHNfZm9vdCB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2tpZF9zaG9lcy5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGhlaWdodDogMTcxcHg7XG4gICAgICB3aWR0aDogMTMxcHg7XG4gICAgICBsZWZ0OiA0cHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXZ7XG4gICAgICBtYXJnaW4tdG9wOiAxM3B4O1xuICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICB3aWR0aDogNTY3cHg7XG4gICAgICBtYXJnaW4tbGVmdDogNTVweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5jbG90aGVzX25hdiB1bHtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBtYXJnaW46IDBweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX3N7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjZTZlOWViO1xuICAgIH1cbiAgICAuZGV0YWlsX2xlZnQge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogMTM2cHg7XG4gICAgICBoZWlnaHQ6IDM2N3B4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuZGV0YWlsX2xlZnQgc3BhbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAjc2l6ZV9pdGVte1xuICAgICAgaGVpZ2h0OiAxODBweDtcbiAgICAgIHdpZHRoOiA0NTJweDtcbiAgICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXYgdWwgbGl7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICB3aWR0aDogMzJweDtcbiAgICAgIG1hcmdpbi1yaWdodDogNTdweDtcbiAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmZmY7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXYgdWwgbGk6aG92ZXIge1xuICAgICAgY29sb3I6ICM0N2JlZmU7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXYgdWwgbGkuc2VsZWN0e1xuICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICM0N2JlZmU7XG4gICAgICBjb2xvcjogIzQ3YmVmZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX2hlYWR7XG4gICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAudW5pdF9kZXNje1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyN3B4O1xuICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNpemVfY29ue1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgICAgIG1hcmdpbi1yaWdodDogMjZweDtcbiAgICAgIGNvbG9yOiAjNTc1ZTYxO1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNpemVfb3B7XG4gICAgICB3aWR0aDogNDQwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuXG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX29wIGlucHV0K2lucHV0IHtcbiAgICAgbWFyZ2luLWxlZnQ6IDBweDsgXG4gICAgfVxuICAgICNmaXJzdF9zaXplKy5maXJzdF94aWFsYSB7XG4gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgcmlnaHQ6IDI2N3B4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNpemVfb3AgaW5wdXR7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBoZWlnaHQ6IDMxcHg7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIH1cbiAgICAjZmlyc3Rfc2l6ZSwgI3NlY29uZF9zaXplIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAwIDdweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Njk4OTk7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cbiAgICAjZmlyc3Rfc2l6ZTpmb2N1cywgI3NlY29uZF9zaXplOmZvY3VzIHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzQ3YmVmZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX3hpYWxhYm94IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogMTkwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBsaW5lLWhlaWdodDogMTlweDtcbiAgICAgIHRvcDogLTE4OXB4O1xuICAgICAgcmlnaHQ6IDI2N3B4O1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O1xuICAgIH1cbiAgICAjc2Vjb25kX3NpemUrLnNlY29uZF94aWFsYXtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAtMTRweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsICNzZWNvbmRfc2l6ZStpbnB1dCsuc2l6ZV94aWFsYWJveHtcbiAgICAgIHJpZ2h0OiAtMTRweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX3hpYWxhYm94IGF7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmctbGVmdDogN3B4O1xuICAgICAgY29sb3I6ICM1YzYyNjY7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuc2l6ZV94aWFsYWJveCBhOmhvdmVye1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICBjb2xvcjogIzQ3YmVmZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX29wIC5zaXplX3hpYWxhe1xuICAgICAgd2lkdGg6IDYwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgICAgcGFkZGluZy1sZWZ0OiA3cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBjb2xvcjogIzhhOTQ5OTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX29wIC5zaXplX3hpYWxhLm1zSG92ZXIge1xuICAgICAgYm9yZGVyLXJhZGl1czogMHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cDovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX3VwZ3JheWljb24ucG5nJykgbm8tcmVwZWF0IDQycHggMTJweDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMTJweCA3cHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuc2l6ZV94aWFsYXtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cDovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Rvd25ncmF5aWNvbi5wbmcnKSBuby1yZXBlYXQgNDJweCAxMnB4O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDdweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5jb252ZXJzaW9ue1xuICAgICAgbWFyZ2luOiAwIDMwcHggMCAxMDVweDtcbiAgICB9XG4gICAgLyogZmFueWkgKi9cbiAgICAuaHRfZmFueWl7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAyMDBweDtcbiAgICAgIHotaW5kZXg6IDk5O1xuICAgICAgYmFja2dyb3VuZDogI2ZmZiB1cmwoJ2h0dHA6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19mYW55aV9pY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzQ3YmVmZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgIG1pbi1oZWlnaHQ6IDI1cHg7XG4gICAgICBjb2xvcjogIzQ5NGI0ZDtcbiAgICAgIHRleHQtaW5kZW50OiAzMnB4O1xuICAgICAgcGFkZGluZzogMnB4IDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMTlweDtcbiAgICB9XG4gICAgLmh0X2ZhbnlpIGF7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMzBweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjNDk0YjRkO1xuICAgIH1cbiAgICAuaHRfZmFueWkgYTpob3ZlcntcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjNDk0YjRkO1xuICAgIH1cbiAgICAjaHRfdG9we1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDBweDtcbiAgICAgIGhlaWdodDogMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDBweDtcbiAgICAgIGJvcmRlci1ib3R0b206IDhweCBzb2xpZCAjMjc4YWM5O1xuICAgICAgYm9yZGVyLWxlZnQ6IDlweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1yaWdodDogOXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgbGVmdDogNThweDtcbiAgICAgIHRvcDogLThweDtcbiAgICB9XG4gICAgI2h0X3RvcDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMHB4O1xuICAgICAgaGVpZ2h0OiAwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbTogN3B4IHNvbGlkICNmZmY7XG4gICAgICBib3JkZXItbGVmdDogOHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXJpZ2h0OiA4cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBsZWZ0OiAtOHB4O1xuICAgICAgdG9wOiAxcHg7XG4gICAgfVxuICAgIC8qIOa7muWKqOadoeagt+W8jyAqL1xuICAgIC5nd2RfaGFpdGFvIDo6LXdlYmtpdC1zY3JvbGxiYXIge3dpZHRoOjZweDtoZWlnaHQ6IDZweDt9XG4gICAgLmd3ZF9oYWl0YW8gOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7YmFja2dyb3VuZDojZjBmMGYwO31cbiAgICAuZ3dkX2hhaXRhbyA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgIGJhY2tncm91bmQ6ICNjZGNkY2Q7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgfVxuICAgICNzaXplX2RldGFpbCA6Oi13ZWJraXQtc2Nyb2xsYmFyIHt3aWR0aDoycHg7aGVpZ2h0OiA2cHg7fVxuICAgIC8qIOS6mumprOmAiumBruaMoSAqL1xuICAgIGRpdiNhY3Rpb25QYW5lbFdyYXBwZXIuYnVyaiB7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZSFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLyogYW1hem9uR2xvYmFsICovXG4gICAgI2dsb2JhbElubmVyRGV0YWlsIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICNnbG9iYWxJbm5lckRldGFpbCAuY29udGVudF9kZWZhdWx0X2xlZnQge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICAjZ2xvYmFsSW5uZXJEZXRhaWwgLmlubmVyLXRsZSAge1xuICAgICAgY29sb3I6ICM2NjY7XG4gICAgfVxuICAgICNnbG9iYWxJbm5lckRldGFpbCAuaW5uZXItaW1nIGltZyB7XG4gICAgICBtYXgtaGVpZ2h0OiAxMDBweDtcbiAgICAgIG1heC13aWR0aDogMTUwcHg7XG4gICAgfVxuICAgICNnbG9iYWxJbm5lckRldGFpbCAuaW5uZXItdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgICAgd2lkdGg6IDIzMHB4O1xuICAgICAgaGVpZ2h0OiAyOHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgI2dsb2JhbElubmVyRGV0YWlsIC5pbm5lci1idG4ge1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDZjMGZlO1xuICAgICAgaGVpZ2h0OiAyMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogNzhweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIG1hcmdpbi10b3A6IDJweDtcbiAgICB9XG4gICAgI2dsb2JhbElubmVyRGV0YWlsIC5wcm9fdHlwZTpob3ZlciAucHJvX3R5cGVfZGV0YWlsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgICNnbG9iYWxJbm5lckRldGFpbCAubWFpbF90eXBlOmhvdmVyIC5tYWlsX3R5cGVfZGV0YWlsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgICNnbG9iYWxJbm5lckRldGFpbCAudmlwX3RsZTpob3ZlciAudmlwX3RsZV9kZXRhaWwge1xuICAgICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICB9XG4gICAgI2dsb2JhbElubmVyRGV0YWlsIC5zYW1lLXN0eWxlOmhvdmVyIC5zYW1lLXN0eWxlX2RldGFpbCB7XG4gICAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAjZ2xvYmFsSW5uZXJEZXRhaWwgLnNhbWUtc3R5bGVfZGV0YWlsIHtcbiAgICAgIGxlZnQ6IDM1MHB4O1xuICAgICAgdG9wOiA4MXB4O1xuICAgIH0iLCIiXSk7Cn0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gdC50b1N0cmluZz1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTx0aGlzLmxlbmd0aDtlKyspe3ZhciBuPXRoaXNbZV07blsyXT90LnB1c2goIkBtZWRpYSAiK25bMl0rInsiK25bMV0rIn0iKTp0LnB1c2goblsxXSl9cmV0dXJuIHQuam9pbigiIil9LHQuaT1mdW5jdGlvbihlLG4peyJzdHJpbmciPT10eXBlb2YgZSYmKGU9W1tudWxsLGUsIiJdXSk7Zm9yKHZhciBpPXt9LG89MDtvPHRoaXMubGVuZ3RoO28rKyl7dmFyIGE9dGhpc1tvXVswXTsibnVtYmVyIj09dHlwZW9mIGEmJihpW2FdPSEwKX1mb3Iobz0wO288ZS5sZW5ndGg7bysrKXt2YXIgcj1lW29dOyJudW1iZXIiPT10eXBlb2YgclswXSYmaVtyWzBdXXx8KG4mJiFyWzJdP3JbMl09bjpuJiYoclsyXT0iKCIrclsyXSsiKSBhbmQgKCIrbisiKSIpLHQucHVzaChyKSl9fSx0fX0sZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIGkodCxlKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGk9dFtuXSxvPXVbaS5pZF07aWYobyl7by5yZWZzKys7Zm9yKHZhciBhPTA7YTxvLnBhcnRzLmxlbmd0aDthKyspby5wYXJ0c1thXShpLnBhcnRzW2FdKTtmb3IoO2E8aS5wYXJ0cy5sZW5ndGg7YSsrKW8ucGFydHMucHVzaChjKGkucGFydHNbYV0sZSkpfWVsc2V7Zm9yKHZhciByPVtdLGE9MDthPGkucGFydHMubGVuZ3RoO2ErKylyLnB1c2goYyhpLnBhcnRzW2FdLGUpKTt1W2kuaWRdPXtpZDppLmlkLHJlZnM6MSxwYXJ0czpyfX19fWZ1bmN0aW9uIG8odCl7Zm9yKHZhciBlPVtdLG49e30saT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgbz10W2ldLGE9b1swXSxyPW9bMV0scz1vWzJdLGw9b1szXSxjPXtjc3M6cixtZWRpYTpzLHNvdXJjZU1hcDpsfTtuW2FdP25bYV0ucGFydHMucHVzaChjKTplLnB1c2goblthXT17aWQ6YSxwYXJ0czpbY119KX1yZXR1cm4gZX1mdW5jdGlvbiBhKHQsZSl7dmFyIG49ZygpLGk9YltiLmxlbmd0aC0xXTtpZigidG9wIj09PXQuaW5zZXJ0QXQpaT9pLm5leHRTaWJsaW5nP24uaW5zZXJ0QmVmb3JlKGUsaS5uZXh0U2libGluZyk6bi5hcHBlbmRDaGlsZChlKTpuLmluc2VydEJlZm9yZShlLG4uZmlyc3RDaGlsZCksYi5wdXNoKGUpO2Vsc2V7aWYoImJvdHRvbSIhPT10Lmluc2VydEF0KXRocm93IG5ldyBFcnJvcigiSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcuIE11c3QgYmUgJ3RvcCcgb3IgJ2JvdHRvbScuIik7bi5hcHBlbmRDaGlsZChlKX19ZnVuY3Rpb24gcih0KXt0LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodCk7dmFyIGU9Yi5pbmRleE9mKHQpO2U+PTAmJmIuc3BsaWNlKGUsMSl9ZnVuY3Rpb24gcyh0KXt2YXIgZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpO3JldHVybiBlLnR5cGU9InRleHQvY3NzIixhKHQsZSksZX1mdW5jdGlvbiBsKHQpe3ZhciBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpbmsiKTtyZXR1cm4gZS5yZWw9InN0eWxlc2hlZXQiLGEodCxlKSxlfWZ1bmN0aW9uIGModCxlKXt2YXIgbixpLG87aWYoZS5zaW5nbGV0b24pe3ZhciBhPXgrKztuPXd8fCh3PXMoZSkpLGk9cC5iaW5kKG51bGwsbixhLCExKSxvPXAuYmluZChudWxsLG4sYSwhMCl9ZWxzZSB0LnNvdXJjZU1hcCYmImZ1bmN0aW9uIj09dHlwZW9mIFVSTCYmImZ1bmN0aW9uIj09dHlwZW9mIFVSTC5jcmVhdGVPYmplY3RVUkwmJiJmdW5jdGlvbiI9PXR5cGVvZiBVUkwucmV2b2tlT2JqZWN0VVJMJiYiZnVuY3Rpb24iPT10eXBlb2YgQmxvYiYmImZ1bmN0aW9uIj09dHlwZW9mIGJ0b2E/KG49bChlKSxpPWguYmluZChudWxsLG4pLG89ZnVuY3Rpb24oKXtyKG4pLG4uaHJlZiYmVVJMLnJldm9rZU9iamVjdFVSTChuLmhyZWYpfSk6KG49cyhlKSxpPWQuYmluZChudWxsLG4pLG89ZnVuY3Rpb24oKXtyKG4pfSk7cmV0dXJuIGkodCksZnVuY3Rpb24oZSl7aWYoZSl7aWYoZS5jc3M9PT10LmNzcyYmZS5tZWRpYT09PXQubWVkaWEmJmUuc291cmNlTWFwPT09dC5zb3VyY2VNYXApcmV0dXJuO2kodD1lKX1lbHNlIG8oKX19ZnVuY3Rpb24gcCh0LGUsbixpKXt2YXIgbz1uPyIiOmkuY3NzO2lmKHQuc3R5bGVTaGVldCl0LnN0eWxlU2hlZXQuY3NzVGV4dD1fKGUsbyk7ZWxzZXt2YXIgYT1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShvKSxyPXQuY2hpbGROb2RlcztyW2VdJiZ0LnJlbW92ZUNoaWxkKHJbZV0pLHIubGVuZ3RoP3QuaW5zZXJ0QmVmb3JlKGEscltlXSk6dC5hcHBlbmRDaGlsZChhKX19ZnVuY3Rpb24gZCh0LGUpe3ZhciBuPWUuY3NzLGk9ZS5tZWRpYTtpZihpJiZ0LnNldEF0dHJpYnV0ZSgibWVkaWEiLGkpLHQuc3R5bGVTaGVldCl0LnN0eWxlU2hlZXQuY3NzVGV4dD1uO2Vsc2V7Zm9yKDt0LmZpcnN0Q2hpbGQ7KXQucmVtb3ZlQ2hpbGQodC5maXJzdENoaWxkKTt0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG4pKX19ZnVuY3Rpb24gaCh0LGUpe3ZhciBuPWUuY3NzLGk9ZS5zb3VyY2VNYXA7aSYmKG4rPSJcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsIitidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShpKSkpKSsiICovIik7dmFyIG89bmV3IEJsb2IoW25dLHt0eXBlOiJ0ZXh0L2NzcyJ9KSxhPXQuaHJlZjt0LmhyZWY9VVJMLmNyZWF0ZU9iamVjdFVSTChvKSxhJiZVUkwucmV2b2tlT2JqZWN0VVJMKGEpfXZhciB1PXt9LG09ZnVuY3Rpb24odCl7dmFyIGU7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuInVuZGVmaW5lZCI9PXR5cGVvZiBlJiYoZT10LmFwcGx5KHRoaXMsYXJndW1lbnRzKSksZX19LGY9bShmdW5jdGlvbigpe3JldHVybi9tc2llIFs2LTldXGIvLnRlc3Qoc2VsZi5uYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpfSksZz1tKGZ1bmN0aW9uKCl7cmV0dXJuIGRvY3VtZW50LmhlYWR8fGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIilbMF19KSx3PW51bGwseD0wLGI9W107dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7ZT1lfHx7fSwidW5kZWZpbmVkIj09dHlwZW9mIGUuc2luZ2xldG9uJiYoZS5zaW5nbGV0b249ZigpKSwidW5kZWZpbmVkIj09dHlwZW9mIGUuaW5zZXJ0QXQmJihlLmluc2VydEF0PSJib3R0b20iKTt2YXIgbj1vKHQpO3JldHVybiBpKG4sZSksZnVuY3Rpb24odCl7Zm9yKHZhciBhPVtdLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIHM9bltyXSxsPXVbcy5pZF07bC5yZWZzLS0sYS5wdXNoKGwpfWlmKHQpe3ZhciBjPW8odCk7aShjLGUpfWZvcih2YXIgcj0wO3I8YS5sZW5ndGg7cisrKXt2YXIgbD1hW3JdO2lmKDA9PT1sLnJlZnMpe2Zvcih2YXIgcD0wO3A8bC5wYXJ0cy5sZW5ndGg7cCsrKWwucGFydHNbcF0oKTtkZWxldGUgdVtsLmlkXX19fX07dmFyIF89ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gZnVuY3Rpb24oZSxuKXtyZXR1cm4gdFtlXT1uLHQuZmlsdGVyKEJvb2xlYW4pLmpvaW4oIlxuIil9fSgpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0iZ3dkX2h0X21haW4iIGNsYXNzPSJnd2RfaGFpdGFvIHt7ZGF0YS5wYWdlY2xhc3N9fSIgPlxuICAgIDxkaXYgIGNsYXNzPSJodF9oZWFkIj5cbiAgICAgIDxhIGhyZWY9Int7Y19zZXJ2ZXJ9fSIgY2xhc3M9Imd3ZF9zaXRlX2ljb24iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0i6LSt54mp5YWaIj48L2E+XG4gICAgICA8YSBjbGFzcz0iaHRfZ2V0cHJpY2UgaXRlbV9ob3ZlciI+5Yiw5omL5Lu377yaPHNwYW4gY2xhc3M9Imh0X2dldHByaWNlX251bSBmb250Zl9BcmlhbCI+wqV7e2RhdGEuZ2V0cHJpY2V9fTwvc3Bhbj48L2E+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0iaHRfY29udGVudCI+XG4gICAgICA8ZGl2IGNsYXNzPSJjb250ZW50X2RlZmF1bHQiIGlkPSJodF9jb250ZW50X2luZm8iPlxuICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50X2RlZmF1bHRfbGVmdCI+XG4gICAgICAgICAgPGRpdiBjbGFzcz0idW5pdF9wcmljZSI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2VfdGxlIj7ljZXku7fvvJo8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2VfbnVtIGZvbnRmX0FyaWFsIj7CpXt7ZGF0YS51bml0X3ByaWNlfX08L3NwYW4+XG4gICAgICAgICAgICA8YSBpZD0iaHRfYWRkY29sbGVjdCIgY2xhc3M9InRyZW5kX3dhaXQiID48c3Bhbj7pmY3ku7fmj5DphpI8L3NwYW4+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGxlY3RfZGV0YWlsIGRpdl9kZXRhaWwiPlxuICAgICAgICAgICAgICAgIOeCueWHu+WKoOWFpeaUtuiXj+Wkue+8jOWVhuWTgemZjeS7t+acieaPkOmGklxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJodF93ZWlnaHQiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndlaWdodF90bGUiPumHjemHj++8mjwvc3Bhbj5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiB2YWx1ZT0ie3tkYXRhLmhlX3dlaWdodH19IiBjbGFzcz0iaHRfd2VpZ2h0X251bSI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0id2VpZ2h0X3R5cGUiPktHPC9zcGFuPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0id2VpZ2h0X3R5cGVfZGV0YWlsIGRpdl9kZXRhaWwiPlxuICAgICAgICAgICAgICAgIOeCueWHu+i9rOaNoumHjemHj+WNleS9jVxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz0iaHRfdHJhbnNwb3J0Ij5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJodF9mcmVpZ2h0Ij7ovazov5DotLnvvJo8c3BhbiBjbGFzcz0iaHRfZnJlaWdodF9udW0gZm9udGZfQXJpYWwiPsKlMDwvc3Bhbj48L3NwYW4+XG4gICAgICAgICAgICA8YSBjbGFzcz0iaHRfdHJhbnNwb3J0X2J0biI+XG4gICAgICAgICAgICAgIDxzcGFuID7ovazov5DllYblrrY8L3NwYW4+XG4gICAgICAgICAgICAgIDxlbSBjbGFzcz0icG9pbnRfaWNvbiI+PC9lbT5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idHJhbnNwb3J0X3JlbWluZF9kZXRhaWwgZGl2X2RldGFpbCI+XG4gICAgICAgICAgICAgICAg54K55Ye76YCJ5oup6L2s6L+Q5YWs5Y+4XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9Imh0X3RhcmlmZiI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVsX2xpbmUiIGRhdGEtZGVsPSIxIj7ooYzpgq7nqI7vvJo8c3BhbiBjbGFzcz0iaHRfdGFyaWZmX251bSBmb250Zl9BcmlhbCIgZGF0YS1wcmljZT0iMCI+Jm5ic3A7PGVtPuacquefpTwvZW0+Jm5ic3A7PC9zcGFuPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YXJpZmZfcmVtaW5kX2RldGFpbCBkaXZfZGV0YWlsIj5cbiAgICAgICAgICAgICAgICDkuKrkurrooYzmnY7lkozpgq7pgJLnianlk4Hov5vlj6PnqI7vvIjlhbPnqI7jgIHov5vlj6Pnjq/oioLlop7lgLznqI7lj4rmtojotLnnqI7kuInogIXlkIjkuIDnqI7np43vvIlcbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICA8YSBjbGFzcz0iaHRfdGFyaWZmX2J0biI+XG4gICAgICAgICAgICAgIDxzcGFuPumAieaLqeWIhuexuzwvc3Bhbj5cbiAgICAgICAgICAgICAgPGVtIGNsYXNzPSJwb2ludF9pY29uIj48L2VtPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YXJpZmZfaW5mb19kZXRhaWwgZGl2X2RldGFpbCI+XG4gICAgICAgICAgICAgICAg54K55Ye76YCJ5oup5ZWG5ZOB57G75YirXG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz0iY29udGVudF9kZWZhdWx0X3JpZ2h0Ij5cbiAgICAgICAgICA8YSBjbGFzcz0icHJvX3R5cGUiPlxuICAgICAgICAgICAgPGVtIGNsYXNzPSJ7e2RhdGEucHJvdHlwZX19Ij48L2VtPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByb190X3RsZSIgPnt7ZGF0YS5wcm90eXBlPT0ieml5aW5nIj8i6Ieq6JClIjoi56ys5LiJ5pa5In19PC9zcGFuPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvX3R5cGVfZGV0YWlsIGRpdl9kZXRhaWwiPlxuICAgICAgICAgICAgICB7e2RhdGEucHJvdHlwZT09XCd6aXlpbmdcJz8oZGF0YS5zaXRlICsgXCfnm7TmjqXplIDllK5cJyk6KGRhdGEuc2l0ZSArIFwn56ys5LiJ5pa55ZWG5a626ZSA5ZSuXCcpfX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBjbGFzcz0ibWFpbF90eXBlIiA+XG4gICAgICAgICAgICA8ZW0gY2xhc3M9Int7ZGF0YS5tYWlsdHlwZX19Ij48L2VtPlxuICAgICAgICAgICAgPHNwYW4gPnt7ZGF0YS5tYWlsdHlwZT09InpoaXlvdSI/IuWPr+ebtOmCriI6IumcgOi9rOi/kCJ9fTwvc3Bhbj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1haWxfdHlwZV9kZXRhaWwgZGl2X2RldGFpbCI+XG4gICAgICAgICAgICAgIHt7aWYgZGF0YS5tYWlsdHlwZT09XCd6aGl5b3VcJ319XG4gICAgICAgICAgICAgICAg6K+l5ZWG5ZOB55u06YKu5pSv5oyB55u06YKu5Lit5Zu977yM5Yiw5omL5pe26Ze057qmOH4xNuWkqVxuICAgICAgICAgICAgICB7e2Vsc2UgaWYgZGF0YS5ob3N0cyA9PSBcJ3d3dy5hbWF6b24uY29tXCd9fVxuICAgICAgICAgICAgICAgIOivpeWVhuWTgeS4jeaUr+aMgeebtOmCruS4reWbve+8jOmcgOi9rOi/kOWFrOWPuOi9rOi/kO+8jOWIsOaJi+aXtumXtOWkp+e6pjIwfjM15aSpXG4gICAgICAgICAgICAgIHt7ZWxzZSBpZiBkYXRhLmhvc3RzID09IFwnd3d3LmFtYXpvbi5jby5qcFwnfX1cbiAgICAgICAgICAgICAgICDor6XllYblk4HkuI3mlK/mjIHnm7Tpgq7kuK3lm73vvIzpnIDovazov5Dlhazlj7jovazov5DvvIzliLDmiYvml7bpl7TlpKfnuqY3fjMw5aSpXG4gICAgICAgICAgICAgIHt7ZWxzZSBpZiBkYXRhLmhvc3RzID09IFwnd3d3LmFtYXpvbi5kZVwnfX1cbiAgICAgICAgICAgICAgICDor6XllYblk4HkuI3mlK/mjIHnm7Tpgq7kuK3lm73vvIzpnIDovazov5Dlhazlj7jovazov5DvvIzliLDmiYvml7bpl7TlpKfnuqYyNX40MOWkqVxuICAgICAgICAgICAgICB7e2Vsc2V9fVxuICAgICAgICAgICAgICAgIOivpeWVhuWTgeS4jeaUr+aMgeebtOmCruS4reWbve+8jOmcgOi9rOi/kOWFrOWPuOi9rOi/kO+8jOWIsOaJi+aXtumXtOWkp+e6pjIwfjM15aSpXG4gICAgICAgICAgICAgIHt7L2lmfX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBjbGFzcz0iaHRfdHJhbnNsYXRlIj5cbiAgICAgICAgICAgIDxlbT48L2VtPlxuICAgICAgICAgICAgPHNwYW4+57+76K+R5biu5YqpPC9zcGFuPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0idHJhbnNsYXRlX2RldGFpbCBkaXZfZGV0YWlsIj5cbiAgICAgICAgICAgICAg5bey5Li65oKo5byA5ZCv5YiS6K+N57+76K+R77yM6byg5qCH6YCJ5Lit55u45YWz5paH5a2X77yM5Y2z5Y+v57+76K+RXG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgPGEgY2xhc3M9InNpemVfaGVscCI+XG4gICAgICAgICAgICA8ZW0+PC9lbT5cbiAgICAgICAgICAgIDxzcGFuPuWwuueggeW4ruWKqTwvc3Bhbj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNpemVfZGV0YWlsIGRpdl9kZXRhaWwiPlxuICAgICAgICAgICAgICDngrnlh7vmn6XnnIvlsLrnoIHluK7liqlcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgc3R5bGU9ImNsZWFyOmJvdGgiPjwvZGl2PlxuICAgICAgPGRpdiBpZD0idGFyaWZmX2RldGFpbCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJjbG9zZWJhciBjbG9zZWJnIiB0aXRsZT0i5YWz6ZetIj48L3NwYW4+XG4gICAgICAgIDxkaXYgY2xhc3M9InRhcl9oZWFkIj5cbiAgICAgICAgICA8c3Bhbj7pgInmi6nllYblk4HliIbnsbs8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPSJ0YXJfZGVzYyI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbF9saW5lIj7llYblk4HvvJo8c3BhbiBjbGFzcz0iaHRfdGFyaWZmX2NhdGUiPuivt+mAieaLqeWIhuexuzwvc3Bhbj48L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImRlc2NfdCI+5Y2V5Lu26KGM6YKu56iO77yaPHNwYW4gY2xhc3M9Imh0X3RhcmlmZl9udW0iPuacquefpTwvc3Bhbj4gPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBpZD0iY2F0ZV9zZWxlY3RfYm94Ij5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXRlX3NlbGVjdF8xIj5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiB2YWx1ZT0i6K+36YCJ5oup5YiG57G7IiBpZD0iY2F0ZV9iaWciIGNsYXNzPSJpY29uX2Rvd24iIHJlYWRvbmx5PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGlhbGFib3giIGlkPSJiaWdfeGlhbGEiPlxuICAgICAgICAgICAgICA8YSBjYXRlPSJjYXRlMSIgIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPumjn+WTgTwvYT5cbiAgICAgICAgICAgICAgPGEgY2F0ZT0iY2F0ZTIiICBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7mnI3ppbA8L2E+XG4gICAgICAgICAgICAgIDxhIGNhdGU9ImNhdGUzIiAgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+6Z6L44CB566x5YyFPC9hPlxuICAgICAgICAgICAgICA8YSBjYXRlPSJjYXRlNCIgIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuaJi+ihqDwvYT5cbiAgICAgICAgICAgICAgPGEgY2F0ZT0iY2F0ZTUiICBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7ljqjmiL/jgIHppJDljoU8L2E+XG4gICAgICAgICAgICAgIDxhIGNhdGU9ImNhdGU2IiAgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+5a6255S1PC9hPlxuICAgICAgICAgICAgICA8YSBjYXRlPSJjYXRlNyIgIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuS4quS6uuaKpOeQhjwvYT5cbiAgICAgICAgICAgICAgPGEgY2F0ZT0iY2F0ZTgiICBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7nvo7lrrk8L2E+XG4gICAgICAgICAgICAgIDxhIGNhdGU9ImNhdGU5IiAgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+5omL5py65Y+K6YWN5Lu2PC9hPlxuICAgICAgICAgICAgICA8YSBjYXRlPSJjYXRlMTAiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWKnuWFrOeUqOWTgTwvYT5cbiAgICAgICAgICAgICAgPGEgY2F0ZT0iY2F0ZTExIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7nhafnm7jmnLrjgIHmkYTlg4/mnLo8L2E+XG4gICAgICAgICAgICAgIDxhIGNhdGU9ImNhdGUxMiIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+55S15a2Q5pWw56CBPC9hPlxuICAgICAgICAgICAgICA8YSBjYXRlPSJjYXRlMTMiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPua4uOaIj+acui/muLjmiI/nop88L2E+XG4gICAgICAgICAgICAgIDxhIGNhdGU9ImNhdGUxNCIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+6Z+z566xPC9hPlxuICAgICAgICAgICAgICA8YSBjYXRlPSJjYXRlMTUiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuS4quS6uueUteiEkTwvYT5cbiAgICAgICAgICAgICAgPGEgY2F0ZT0iY2F0ZTE2IiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7nlLXlrZDkuaborr7lpIc8L2E+XG4gICAgICAgICAgICAgIDxhIGNhdGU9ImNhdGUxNyIgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyI+546p5YW3PC9hPlxuICAgICAgICAgICAgICA8YSBjYXRlPSJjYXRlMTgiIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWptOWEv+eUqOWTgTwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9ImNhdGVfc2VsZWN0XzIiPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIHZhbHVlPSLor7fpgInmi6nliIbnsbsiIGlkPSJjYXRlX3NtYWxsIiBtYXhsZW5ndGg9IjUiIGNsYXNzPSJpY29uX2Rvd24gc2VsX2luZm8iIHJlYWRvbmx5PlxuICAgICAgICAgICAgPGRpdiBjbGFzcz0ieGlhbGFib3giIGlkPSJzbWFsbF94aWFsYSI+PC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBpZD0ic2VsZWN0X2J0biIgZGF0YS10YXJpZmY9Ii0xIj7noa7orqQ8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgIDwvZGl2PlxuPC9kaXY+XG4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0ic2l6ZV9kZXRhaWwiIGNsYXNzPSJodF9zaXplX2RldGFpbCBnd2RfaGFpdGFvIiBzdHlsZT0idG9wOiB7e3Bvcy5wb3N5fX1weDtsZWZ0OiB7e3Bvcy5wb3N4fX1weDsiPlxuICAgIDxzcGFuIGNsYXNzPSJjbG9zZWJhciBjbG9zZWJnIiB0aXRsZT0i5YWz6ZetIj48L3NwYW4+XG4gICAgXG4gICAgPGRpdiBjbGFzcz0ic2l6ZV9oZWFkIj5cbiAgICAgICAgPGRpdiBjbGFzcz0iY2xvdGhlc19uYXYiPlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIDxsaSBjbGFzcz0ic2VsZWN0Ij7nlLfoo4U8L2xpPlxuICAgICAgICAgICAgPGxpPuWls+ijhTwvbGk+XG4gICAgICAgICAgICA8bGk+56ul6KOFPC9saT5cbiAgICAgICAgICAgIDxsaT7nlLfpnos8L2xpPlxuICAgICAgICAgICAgPGxpPuWls+meizwvbGk+XG4gICAgICAgICAgICA8bGk+56ul6Z6LPC9saT5cbiAgICAgICAgICA8L3VsPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz0idW5pdF9kZXNjIHVuaXRfY20iPuWNleS9je+8muWOmOexsyhDTSk8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz0idW5pdF9kZXNjIHVuaXRfbW0iPuWNleS9je+8muavq+exsyhNTSk8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJzaXplX2NvbnRlbnQiPlxuICAgICAgPGRpdiBjbGFzcz0iZGV0YWlsX2xlZnQiPlxuICAgICAgICA8c3BhbiBjbGFzcz0ic2hhbmd5aSBzaXplX2hvdmVyIj7kuIroo4U8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJ4aWF6aHVhbmciPuS4i+ijhTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InRvbmd6aHVhbmcgdG9uZ3podWFuZzAiPjAgfiA05bKBPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0idG9uZ3podWFuZyB0b25nemh1YW5nNCI+NCB+IDEy5bKBPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0ic2hvZXMiPumei+WtkDwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InRvbmd4aWUgdG9uZ3hpZTAiPjAgfiA05bKBPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0idG9uZ3hpZSB0b25neGllNCI+NCB+IDEy5bKBPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0iY2xvdGhfaWNvbiBodF9zaGFuZ3lpIG1hbnNoYW5nemh1YW5nIj48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImRldGFpbF9yaWdodCI+XG4gICAgICAgIDxkaXYgY2xhc3M9ImNvbnRlbnRfY2VudGVyIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJzaXplX3MiPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgaWQ9InNpemVfaXRlbSI+XG4gICAgICAgICAgICA8YSBjbGFzcz0ic2l6ZV9pdGVtX2ltZyI+PC9hPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIFxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz0ic2l6ZV9kZXNjIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0icmVkIj48L3NwYW4+XG4gICAgICAgICAgPHNwYW4gPuatpOWwuueggeS4uuS4gOiIrOWwuuegge+8jOS4jeWQjOWTgeeJjOWPr+iDveS8muWtmOWcqOebuOW6lOS4jeWQjDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJzaXplX2Zvb3QiPlxuICAgICAgICA8ZGl2IGNsYXNzPSJzaXplX2NvbiI+5Zyo57q/5bC65a+46L2s5o2i5bel5YW3PC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InNpemVfb3AiPlxuICAgICAgICAgIDxpbnB1dCBpZD0iZmlyc3Rfc2l6ZSIgdHlwZT0idGV4dCI+XG4gICAgICAgICAgPGlucHV0IGNsYXNzPSJzaXplX3hpYWxhIGZpcnN0X3hpYWxhIiB2YWx1ZT0i5Y6Y57GzIiByZWFkb25seT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJzaXplX3hpYWxhYm94IiBkYXRhLXNpemU9ImZpcnN0X3hpYWxhIj5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPjwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuexszwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWOmOexszwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuavq+exszwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuiLseWwujwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuiLseWvuDwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPueggTwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWwujwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWvuDwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWIhjwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWOmDwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iY29udmVyc2lvbiI+6L2s5o2i5Li6PC9zcGFuPlxuICAgICAgICAgIDxpbnB1dCBpZD0ic2Vjb25kX3NpemUiPlxuICAgICAgICAgIDxpbnB1dCBjbGFzcz0ic2l6ZV94aWFsYSBzZWNvbmRfeGlhbGEiIHZhbHVlPSLoi7Hlr7giIHJlYWRvbmx5PlxuICAgICAgICAgIDxkaXYgY2xhc3M9InNpemVfeGlhbGFib3giIGRhdGEtc2l6ZT0ic2Vjb25kX3hpYWxhIj5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPjwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuexszwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWOmOexszwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuavq+exszwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuiLseWwujwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuiLseWvuDwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPueggTwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWwujwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWvuDwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWIhjwvYT5cbiAgICAgICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKTsiPuWOmDwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgICA8L2Rpdj4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0idHJhbnNwb3J0X2RldGFpbCIgY2xhc3M9Imh0X3RyYW5zX2RldGFpbCBnd2RfaGFpdGFvIiBzdHlsZT0idG9wOiB7e3Bvcy5wb3N5fX1weDtsZWZ0OiB7e3Bvcy5wb3N4fX1weDsiPlxuICAgICAgICA8ZGl2IGNsYXNzPSJ0cmFuc19oZWFkIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0cmFuc19uYXYiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNwYW5fMCI+6L2s6L+Q5ZWG5a62PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNwYW5fMSI+5ZWG5a625LuT5bqTPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNwYW5fMiI+6L2s6L+Q6LS5PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNwYW5fMyI+6LSt54mp5YWa54us5a625LyY5oOgPC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRyYW5zX3ciPlxuICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgdmFsdWU9Int7aHRfd2VpZ2h0fX0iIGNsYXNzPSJodF93ZWlnaHRfbnVtIj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndlaWdodF90eXBlIj5LRzwvc3Bhbj5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InRyYW5zX2NvbnRlbnQiPlxuICAgICAgICAgIDx1bCBpZD0idHJhbnNfbGlzdCI+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InRyYW5zX2Zvb3QiPlxuICAgICAgICAgIDxhIGhyZWY9Int7Y19zZXJ2ZXJ9fS9hcHAvaGFpdGFvX2ludHIiIGNsYXNzPSJ0cmFuc19oZWxwIiB0aXRsZT0i5rW35reY6L2s6L+Q5pS755WlIiB0YXJnZXQ9Il9ibGFuayI+5rW35reY6L2s6L+Q5pS755WlPC9hPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZWQiPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiA+5YW35L2T6L2s6L+Q5LyY5oOg5pS/562W5ZKM6LS555So5Lul5oKo6YCJ5oup55qE6L2s6L+Q5YWs5Y+45Li65YeGPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHNwYW4gY2xhc3M9ImNsb3NlYmFyIGNsb3NlYmciIHRpdGxlPSLlhbPpl60iPjwvc3Bhbj5cbiAgICAgICAgXG48L2Rpdj4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgaT1uKDEwKSxvPXZvaWQgMCxhPVtdLHI9dm9pZCAwLHM9ZnVuY3Rpb24oKXt2YXIgdD1sb2NhdGlvbi5ocmVmLHM9dC5tYXRjaCgvWz8mXWlkPShbMC05XSspLykmJnQubWF0Y2goL1s/Jl1pZD0oWzAtOV0rKS8pWzFdO2lmKHMpe3ZhciBsPWUuZHAmJmUuZHAuc2l0ZXx8ZS5zaXRlO2lmKGwuaW5kZXhPZigiOTUwOTUiKT4tMSlyZXR1cm4gdm9pZChvPXtub2RhdGE6ITB9KTsiYWktdGFvYmFvIj09bCYmKGw9InRhb2JhbyIpO3ZhciBjPW4oMzQpLmluaXQoKTtpLnRyaWdnZXIoe3R5cGU6ImdldFRhb2Jhb1RyZW5kIixpbmZvOmN9KSxpLm9uKGZ1bmN0aW9uKHQpe2lmKCJzdHJpbmciPT10eXBlb2YgdCYmKHQ9SlNPTi5wYXJzZSh0KSksImdldFRhb2Jhb1RyZW5kIj09dC50eXBlJiZ0LnZhbHVlKXRyeXtpZihvPUpTT04ucGFyc2UodC52YWx1ZSkucHJpY2VIaXN0b3J5RGF0YSxvfHwobz17bm9kYXRhOiEwfSksYS5sZW5ndGg+MCYmIXIpe2Zvcih2YXIgZT0wO2U8YS5sZW5ndGg7ZSsrKWFbZV0obyk7cj0hMH19Y2F0Y2gobil7fX0pfX07dC5leHBvcnRzLl9pbml0PWZ1bmN0aW9uKCl7ZS5vbigicGFnZVR5cGU9MiIsZnVuY3Rpb24oKXtzKCl9KX0sdC5leHBvcnRzLmluaXQyPWZ1bmN0aW9uKCl7cygpfSx0LmV4cG9ydHMuZ2V0VHJlbmQ9ZnVuY3Rpb24odCl7cmV0dXJuIG8/KG8ubm9kYXRhJiYobz1udWxsKSxyPSEwLHZvaWQgdChvKSk6KGEucHVzaCh0KSx2b2lkIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtyfHwocj0hMCx0KG51bGwpKX0sM2UzKSl9fSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj04OCxpPVsidD0iK2UoInRpdGxlIikuaHRtbCgpLnN1YnN0cigwLDI1MCksIms9bHhzeCIsImQ9bHMiXSxvPWVuY29kZVVSSUNvbXBvbmVudChsb2NhdGlvbi5ocmVmKSxhPXt6ZXJvOlsiMCIsIjAwIiwiMDAwIiwiMDAwMCIsIjAwMDAwIiwiMDAwMDAwIiwiMDAwMDAwMCIsIjAwMDAwMDAwIl0sc3RyUmV2ZXJzZTpmdW5jdGlvbih0KXt2YXIgZSxuLGk9W107Zm9yKGU9MCxuPXQubGVuZ3RoO2U8bjtlKyspaVtpLmxlbmd0aF09dC5jaGFyQXQoZSk7cmV0dXJuIGkucmV2ZXJzZSgpLmpvaW4oIiIpfSxpc1N0cmluZzpmdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBTdHJpbmddIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX0sZW5jcnlwdDpmdW5jdGlvbih0LGUsbil7dmFyIGksbyxyPVtdO2lmKCFhLmlzU3RyaW5nKHQpKXJldHVybiIiO2ZvcihpPTAsbz10Lmxlbmd0aDtpPG87aSsrKXJbci5sZW5ndGhdPWEudG8odC5jaGFyQ29kZUF0KGkpLGUpO3JldHVybiBuP2Euc3RyUmV2ZXJzZShyLmpvaW4oIiIpKTpyLmpvaW4oIiIpfSx0bzpmdW5jdGlvbih0LGUpe3ZhciBpPSIiKyh0K24pLnRvU3RyaW5nKDE2KSxvPWUtaS5sZW5ndGg7cmV0dXJuIG8+MD9hLnplcm9bby0xXStpOml9LGRlY3J5cHQ6ZnVuY3Rpb24odCxlLG4pe2lmKCFhLmlzU3RyaW5nKHQpKXJldHVybiIiO3ZhciBpPVtdO24mJih0PWEuc3RyUmV2ZXJzZSh0KSk7Zm9yKHZhciBvPTAscj0wO288dC5sZW5ndGg7bys9ZSxyKyspe3ZhciBzPXQuc3Vic3RyaW5nKG8sbytlKTtpW3JdPWEudHJhbkZvcm1hdChzLGUpfXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KFN0cmluZyxpKX0sdHJhbkZvcm1hdDpmdW5jdGlvbih0LGUpe3JldHVybiB0Lmxlbmd0aCE9PWU/MDpwYXJzZUludCh0LnJlcGxhY2UoL14wKy9nLCIiKSwxNiktbn0sZ2VuRXh0ZW5zaW9uSWQ6ZnVuY3Rpb24oKXtpZih3aW5kb3cubG9jYWxTdG9yYWdlLmV4dGVuc2lvbmlkKXJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlLmV4dGVuc2lvbmlkO2Zvcih2YXIgdD0iIixlPTE7ZTw9MzI7KytlKXQrPU1hdGguZmxvb3IoMTYqTWF0aC5yYW5kb20oKSkudG9TdHJpbmcoMTYpLDghPWUmJjEyIT1lJiYxNiE9ZSYmMjAhPWV8fCh0Kz0iLSIpO3JldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlLmV4dGVuc2lvbmlkPXQsdH19O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9IiIsZT0iLy96aHUiLG49InNob3UuaHVpaCIscj0idWkuY24vcHJvZHVjdCIscz0iU2Vuc2U/YnIiLGw9Im93c2VyPWNocm9tZSZ2ZXIiLGM9InNpb249NC4yLjkuNiZ2ZW5kb3I9Y2hyb20iO3Q9ZStuK3IrcytsK2M7dmFyIHA9YS5nZW5FeHRlbnNpb25JZCgpLGQ9YS5lbmNyeXB0KGkuam9pbigiXiYiKSw0LCExKSxoPWEuZW5jcnlwdChvLDIsITApLHU9MTkwMC1oLmxlbmd0aDtkPWQubGVuZ3RoPnU/ZC5zdWJzdHIoMCx1KTpkO3ZhciBtPWxvY2F0aW9uLnByb3RvY29sK3QrImVuZXcmYXY9My4wJmV4dGVuc2lvbmlkPSIrcCsiJmVtYWlsPSZwb3A9Jms9IitkKyImbmw9dHJ1ZSZtPSIraDtyZXR1cm4gbX19KS5jYWxsKGUsbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24odCl7InVzZSBzdHJpY3QiO3ZhciBlPVtdO3QucGx1Z2luc3x8KHQucGx1Z2lucz1bXSksdC5wbHVnaW5zPXQucGx1Z2lucy5jb25jYXQoZSl9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciBpPW4oMzcpO2koZSksdC5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIHQ9W107ZS5wbHVnaW5zJiYodD10LmNvbmNhdChlLnBsdWdpbnMpKTtmb3IodmFyIG49dC5sZW5ndGgtMTtuPj0wO24tLSl7dmFyIGk9dFtuXTtpZihpJiZpLl9pbml0KXRyeXtpLl9pbml0KCl9Y2F0Y2gobyl7fX19fSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUpeyJ1c2Ugc3RyaWN0Ijt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dC5fX2V2ZW50cz17fSx0Lm9uPWZ1bmN0aW9uKGUsbil7dC5fX2V2ZW50c1tlXT10Ll9fZXZlbnRzW2VdfHxbXSx0Ll9fZXZlbnRzW2VdLnB1c2gobil9LHQub2ZmPWZ1bmN0aW9uKGUsbil7dmFyIGk9dC5fX2V2ZW50c1tlXTtpZihpJiZpLmxlbmd0aClmb3IodmFyIG89MDtvPGkubGVuZ3RoO28rKylpZihpW29dPT09bil7aS5zcGxpY2UobywxKTticmVha319LHQudHJpZ2dlcj1mdW5jdGlvbihlKXt2YXIgbj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO24uc2hpZnQoKTt2YXIgaT10Ll9fZXZlbnRzW2VdO2lmKGkmJmkubGVuZ3RoKWZvcih2YXIgbz0wO288aS5sZW5ndGg7bysrKWlbb10uYXBwbHkodGhpcyxuKX19fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsbil7InVzZSBzdHJpY3QiO3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgaT0iP2Zyb21fZGV2aWNlPSIrZS5mcm9tX2RldmljZSsiJmNhbGxiYWNrPT8iOyJzb2dvdSIhPT1lLmZyb21fZGV2aWNlJiYiY2hyb21lIiE9PWUuZnJvbV9kZXZpY2V8fChpPSI/ZnJvbV9kZXZpY2U9IitlLmZyb21fZGV2aWNlKSxuLmdldEpTT04oZS5zZXJ2ZXIrIi9pcC5waHAiK2kpLmRvbmUoZnVuY3Rpb24obil7biYmbi5yZXN1bHQgaW5zdGFuY2VvZiBBcnJheSYmKGUuZm9yYmlkV2lzaGxpdD0hMCxlLmZvcmJpZFlGUT0hMCksbiYmbi5yZXN1bHQmJm4ucmVzdWx0LmFkZHJlc3MmJm4ucmVzdWx0LmFkZHJlc3MuaW5kZXhPZigi5YyX5LqsIik+LTEmJihlLmZvcmJpZFdpc2hsaXQ9ITAsZS5mb3JiaWRZRlE9ITApLHQoKX0pLmZhaWwoZnVuY3Rpb24oKXt0KCl9KX0sdC5leHBvcnRzLmNvbW1vbj1mdW5jdGlvbih0KXt2YXIgaT0iP2Zyb21fZGV2aWNlPSIrZS5mcm9tX2RldmljZSsiJmNhbGxiYWNrPT8iOygic29nb3UiPT09ZS5mcm9tX2RldmljZXx8ImNocm9tZSI9PT1lLmZyb21fZGV2aWNlfHwiYmlqaWFnbyI9PT1lLmZyb21fZGV2aWNlJiZlLmNocm9tZV9leHRlbnNpb24pJiYoaT0iP2Zyb21fZGV2aWNlPSIrZS5mcm9tX2RldmljZSksInhkamYiPT09ZS5mcm9tX2RldmljZSYmKGk9Ij9jYWxsYmFjaz0/JmRpc3RyaWN0PTEiKSxuLmdldEpTT04oZS5zZXJ2ZXIrIi9pcC5waHAiK2kpLmRvbmUoZnVuY3Rpb24oZSl7dChlJiZlLnJlc3VsdCYmZS5yZXN1bHQuYWRkcmVzcz9lOm51bGwpfSkuZmFpbChmdW5jdGlvbigpe3QobnVsbCl9KX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDgpLGE9big0MCkscj1uKDQ3KSxzPW4oNDkpLGw9bigyMyksYz1mdW5jdGlvbigpe3JldHVybntuYW1lOmUoInRpdGxlIikuaHRtbCgpLHByaWNlOjAsaXNibjoiIix1cmw6d2luZG93LmxvY2F0aW9uLmhyZWZ9fSxwPWZ1bmN0aW9uKHQsbixhKXt2YXIgcj1jKCk7aS5zaXRlPWE7dHJ5e3ZhciBzPWUodCkuZXEobik7aWYoci5uYW1lPXMudGV4dCgpLGkuaHJlZj1pLm1ha2VVcmwoaS5ocmVmLHMuYXR0cigiaHJlZiIpKSxyLnVybD1pLmhyZWYsInVuZGVmaW5lZCI9PXR5cGVvZiBpLmhyZWZ8fCIiPT1pLmhyZWYpci51c2VsZXNzPSEwO2Vsc2V7dmFyIGw9by5pc1Byb2R1Y3RQYWdlKCk7bHx8KHIudXNlbGVzcz0hMCl9fWNhdGNoKHApe3IudXNlbGVzcz0hMH1yZXR1cm4gcn0sZD1mdW5jdGlvbih0LG4sbyxhKXt2YXIgcj1jKCk7aWYoaS5zaXRlPWEsaS5jcmM2NClyZXR1cm4gcjt0cnl7dmFyIHM9ZSh0KS5lcShuKTtpLmhyZWY9cy5hdHRyKG8pLHIudXJsPXMuYXR0cihvKSxzLmF0dHIobykmJihyLnVybD1zLmF0dHIobykpLCJ1bmRlZmluZWQiIT10eXBlb2YgaS5ocmVmJiYiIiE9aS5ocmVmfHwoaS5ocmVmPXdpbmRvdy5sb2NhdGlvbi5ocmVmKX1jYXRjaChsKXt9cmV0dXJuIHJ9LGg9e3dqaWtlOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnBiX3RsIikuZXEoMCkudGV4dCgpLHByaWNlOmUoIi5wcjIgLnBjIGkiKS5lcSgwKS50ZXh0KCl9fSxraW5ob206ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuaXRlbS10aXRsZSIpLnRleHQoKSxwcmljZTplKCIjSl9pdGVtQWN0aXZlUHJpY2UiKS50ZXh0KCl9fSxocHN0b3JlOmZ1bmN0aW9uKCl7cmV0dXJue3ByaWNlOmUoIi5wcmljZS1ib3ggLnByaWNlIikuZXEoMCkudGV4dCgpfX0sdHRoaWdvOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLml0ZW0tdGl0bGUiKS50ZXh0KCkscHJpY2U6ZSgiLml0ZW0tcHJpY2UtY3VycmVudCIpLnRleHQoKX19LHlvb3g6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIjeW9veCIpLnRleHQoKSxwcmljZTplKCIjaXRlbS1wcmljZSAuZm9udC1ib2xkIikudGV4dCgpfX0sZmVpbml1OmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI21haW5faW5mb19ndWlkYW5jZV90aXRsZSIpLnRleHQoKSxwcmljZTplKCIuaW5mby1wcmljZT4uSlMtY29udHJvbC1wcmljZSIpLnRleHQoKX19LHN1YW5qdXppOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3QtdGl0bGVzIGgyIikudGV4dCgpLHByaWNlOmUoIi5hY3Rpb24tcHJvX3ByaWNlIikudGV4dCgpfX0saWtqdGFvOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI3NpZGViYXIgLnRpdGxlIikudGV4dCgpLHByaWNlOmUoIiNnb29kc1ByaWNlIikudGV4dCgpfX0sbWVpenU6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIjcHJvcGVydHkgLnByb3BlcnR5LWhkIGgxIikudGV4dCgpLHByaWNlOmUoIiNKX3ByaWNlIikudGV4dCgpfX0sa2FsdWxpOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByby1kZXRhaWwgPiBoMSIpLnRleHQoKSxwcmljZTplKCIja2FsdWxpUHJpY2UiKS50ZXh0KCl9fSxvcHBvc2hvcDpmdW5jdGlvbigpe3JldHVybntuYW1lOiJvcHBvICAgIitlKCIucHJvZHVjdC10aXRsZSIpLnRleHQoKSxwcmljZTplKCIuYnV5aW5nLXByaWNlIC5wcmljZSIpLnRleHQoKX19LHlhbzEyMzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5pbm5lcj5oMSIpLnRleHQoKSxwcmljZTplKCIjb3ByIikudGV4dCgpfX0sYmFvYmVpZ2V6aTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNpdGVtSW5mbz4ubmFtZT5oMSIpLnRleHQoKSxwcmljZTplKCIjYmJfcHJpY2UiKS50ZXh0KCl9fSx0bzh0bzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNwX25hbWUiKS50ZXh0KCkscHJpY2U6ZSgic3BhbltuYW1lPWdvb2RzX3JlYWxfcHJpY2VdIikuZXEoMCkudGV4dCgpfX0sc2hhbmdwaW46ZnVuY3Rpb24oKXt2YXIgdD1lKCIuc3BEZXRhaWxfcHJpY2VfYm94ID4gaDIgPiBhIikudGV4dCgpO3R8fCh0PWUoIi5zcERldGFpbF9wcmljZV9ib3ggPiBoMyA+IGEiKS50ZXh0KCkpO3ZhciBuPXtuYW1lOnQrIiAiK2UoIi5jb21tb2RpdHlfdGl0bGUiKS50ZXh0KCkscHJpY2U6ZSgiLnNwRGV0YWlsX3NwUHJpY2VCaWdSZWQgPiBpIikudGV4dCgpLGltZzplKCIjc3BEZXRhaWxfYmlnSW1nID4gaW1nIikuYXR0cigic3JjIil9O3JldHVybiBuLnByaWNlfHwobi5wcmljZT1lKCIuc3BEZXRhaWxfc3BQcmljZUJpZyA+IGkiKS50ZXh0KCkpLG4ucHJpY2V8fChuLnByaWNlPWUoImVtLmZvbnRfMTgiKS50ZXh0KCkpLG59LHpob25naml1OmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiLmluZm8gPiBoMSIpLnRleHQoKSxuPWUoIi5wcmkgPiBiIikudGV4dCgpO3R8fCh0PWUoIi5jX3RfbGlzdCA+IGxpID4gc3BhbiIpLnRleHQoKSxuPWUoIi5idXlfcHJpIikudGV4dCgpKTt2YXIgaT17bmFtZTp0LHByaWNlOm59O3JldHVybiBpfSxsZW1hbGw6ZnVuY3Rpb24oKXt2YXIgdD1lKCIucHJvX25hbWUiKS5lcSgwKS50ZXh0KCksbj1lKCIjYWxsX3ByaWNlIikudGV4dCgpO3JldHVybiIiPT1uJiYobj1lKCIuc2VjdGlvbl90ZXh0IC5yZWQgLmZvbnQ0OCIpLmVxKDApLnRleHQoKSksIiI9PXQmJih0PWUoIi5wcm9kdWN0X2luZm9fYXR0cmlidXRlIC50aXRsZSIpLnRleHQoKSkse25hbWU6IuS5kOinhiIrdCxwcmljZTpufX0sanVhbnBpOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmRlYWwtd3JhcCBoMSIpLnRleHQoKSxwcmljZTplKCIucHJpY2UgLmN1cnJlbnQiKS50ZXh0KCl9fSxoaXNlbnNlOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmRldGFpbF9pbmZvIGgzIikudGV4dCgpLHByaWNlOmUoIiNzYWxlUHJpY2VJZCIpLnRleHQoKX19LHB1cmNvdHRvbjpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5nb29kcy10aXRlIGg1IikuZXEoMCkudGV4dCgpLHByaWNlOmUoIi5wcmljZSIpLmVxKDApLnRleHQoKX19LHdzdHg6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuaXRlbUluZm8gLnRpdGxlIikudGV4dCgpLHByaWNlOmUoIi5pdGVtSW5mbyAucHJpY2UgYiIpLnRleHQoKX19LHJveXlvdW5nY2hlbWlzdDpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wcm9kdWN0LW5hbWUiKS5lcSgwKS50ZXh0KCl9fSxtZWRpaGVhbHNob3A6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucHJvZHVjdC1uYW1lIikuZXEoMCkudGV4dCgpLHByaWNlOmUoIi5ybWItcHJpY2UiKS5lcSgwKS50ZXh0KCl9fSwiMS0xNjMiOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLm0tZGV0YWlsLW1haW4tdGl0bGUgaDEiKS50ZXh0KCl9fSwiMTAwMXBoYXJtYWNpZXMiOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3QtbmFtZSBoMSIpLmVxKDApLnRleHQoKSxwcmljZTplKCIucm1iLXByaWNlIikuZXEoMCkudGV4dCgpfX0sImxvb2tmYW50YXN0aWMtY24iOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3QtdGl0bGUiKS5lcSgwKS50ZXh0KCkscHJpY2U6ZSgiLnByb2R1Y3QtcHJpY2UgLnByaWNlIikuZXEoMCkudGV4dCgpfX0sZ3VvamltYW1pOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI0VDU19GT1JNQlVZIC5uYW1lIikudGV4dCgpLHByaWNlOmUoIiNFQ1NfU0hPUFBSSUNFIikudGV4dCgpLGltZzplKCIjZGVtbyBsaSBpbWciKS5lcSgwKS5hdHRyKCJzcmMiKX19LGppbnhpYW5nOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLm5hbWUiKS5lcSgwKS50ZXh0KCkscHJpY2U6ZSgiLmp4UHJpY2UiKS5lcSgwKS50ZXh0KCl9fSx5b3UxNjM6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuaW5mbyAubmFtZSIpLmVxKDApLnRleHQoKSxwcmljZTplKCIuai1yZXRhaWwtcHJpY2UiKS5lcSgwKS50ZXh0KCl9fSxibDpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5nb29kcy1uYW1lIGgxIikuZXEoMCkudGV4dCgpLnJlcGxhY2UoIueZvuiBlOiHquiQpSIsIiIpLnRyaW0oKSxwcmljZTplKCIjRmxhc2hQcmljZSIpLnRleHQoKX19LGJlc3RpbmZvb2RzOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmdvb2RzbmFtZSIpLmVxKDApLnRleHQoKSxwcmljZTplKCIucHJpY2UxIikuZXEoMCkudGV4dCgpfX0sYXhtYWxsOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmdvb2RzLWludHJvIC5uYW1lIikudGV4dCgpLHByaWNlOmUoIiNza3VfdmlwX3ByaWNlIikudGV4dCgpfX0sYmZ0djpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi50aXRsZSBoMiIpLnRleHQoKSxwcmljZTplKCIucHJpY2UiKS50ZXh0KCl9fSx3YW5naml1OmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnBhcnRfbGluZTAxIikudGV4dCgpLHByaWNlOmUoIi5wYXJ0X2xpbmUwNCAuc3BhcmUwMiBzcGFuIikudGV4dCgpfX0sMTg5OmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiI2FydGljbGVzaG9ydHRpdGxlIikudGV4dCgpLG49ZSgiI21hbGxfcHJpY2UiKS50ZXh0KCksaT0iIjtyZXR1cm4iIj09dCYmKHQ9ZSgiLnBoLXRpdGxlIGgxIikuZXEoMCkudGV4dCgpLnJlcGxhY2UoIuS7hemZkOaxn+ilv+ecgeeUqOaItyIsIiIpKSx0LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigiaXBob25lIik+LTEmJihpPSLoi7nmnpwiKSwiIj09biYmKG49ZSgiI2Fzc3ByaWNlIikudGV4dCgpKSx7bmFtZTppK3QscHJpY2U6bixicmFuZF9zdHJpbmc6aX19LHRhcXU6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZGV0YWlscy1uYW1lIikuZXEoMCkudGV4dCgpLHByaWNlOmUoIiNkZXRhaWxzLXByaWNlIikudGV4dCgpfX0sYmVzdGNha2U6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuaW5mby1yaWdodC1saSBwIikuZXEoMCkudGV4dCgpLHByaWNlOmUoIi5pbmZvLXJpZ2h0LWxpIC5zNCIpLmVxKDApLnRleHQoKX19LGdvbWVoaWdvOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI2dtLXByZC1tYWluIGxpLnByZHRpdCIpLnRleHQoKSxwcmljZTplKCIjcHJkUHJpY2UiKS50ZXh0KCl9fSxsb3ZvOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI2dvb2RzTmFtZVN0cm9uZyIpLnRleHQoKSxwcmljZTplKCIjYWN0TXNnUyBiaWciKS50ZXh0KCl9fSx6aGU4MDA6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIjZGV0YWlsIC5kZXRhaWxtZXRhIC5jbGVhciBoMSIpLnRleHQoKSxwcmljZTplKCIucHJpY2UgLmpzX3ByaWNlX3N0IikudGV4dCgpfX0saHVhOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3QtciAudGl0bGUgaDMucHJvZHVjdC10aXRsZSIpLnRleHQoKSxwcmljZTplKCIjZmpyIC5wcmljZS1zZWxsIC5wcmljZS1udW0iKS50ZXh0KCl9fSxtZWk6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuUHJvZHVjdF90aXRsZSIpLnRleHQoKSsiICIrZSgiLnByb2R1Y3RfbmFtZSBoMSIpLnRleHQoKSxwcmljZTplKCIjcHJvZHVjdFJNQiIpLnRleHQoKX19LGJlbmxhaTpmdW5jdGlvbigpe3ZhciB0PWUoIiNpbnRyb19wcmljZSAucHJpY2UiKVswXS5maXJzdENoaWxkLm5vZGVWYWx1ZTtyZXR1cm4iIiE9dCYmdHx8KHQ9ZSgiI2ludHJvX3ByaWNlIC5wcmljZSIpLnRleHQoKSkse3ByaWNlOnQsbmFtZTplKCIjUHJvZHVjdF9Qcm9kdWN0RGV0YWlsc05hbWUiKS50ZXh0KCl9fSx2c2lnbzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoImgxIikudGV4dCgpLHByaWNlOmUoIi5kZXRhaWwtcHJpY2UiKS50ZXh0KCl9fSxmZW5ncXU6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCJoMSIpLnRleHQoKSxwcmljZTplKCIuZ29vZHMtcHJpY2UgLmdvb2RzLXByaWNlLXIxIHN0cm9uZyIpLnRleHQoKX19LHZtZWk6ZnVuY3Rpb24oKXt2YXIgdD1lKCIjY3VyclByaWNlIikudGV4dCgpO3JldHVybiB0LmluZGV4T2YoIi0iKT4tMSYmKHQ9dC5zcGxpdCgiLSIpWzBdKSx7bmFtZTplKCIucHJvZHVjdF9kZXRhaWxfdGl0bGUgaDEiKS50ZXh0KCkscHJpY2U6dH19LGVhc2VleWVzOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLm1haW4gZGl2Lmdvb2RzX25hbWVfdHIgc3BhbiIpLnRleHQoKSxwcmljZTplKCIubWFpbiBwLmNvbG9yOSBzcGFuLmZzMjAuZm9udEFyaWFsIikudGV4dCgpfX0sc3RhcGxlczpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wcm9kdWN0SW5mbyBoMyBzcGFuIikudGV4dCgpLHByaWNlOmUoIi5ub3dQcmljZSIpLnRleHQoKX19LGVmb3RpbGU6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuaXRlbS10aXRsZSIpLnRleHQoKSxwcmljZTplKCIuaXRlbS1hY3RQcmljZSBiIikudGV4dCgpfX0samdiOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmhfZGVzX3RpdGxlIikudGV4dCgpLHByaWNlOmUoIi5oX2Rlc19wcmljZSAuSl9ybWJfcHJpY2UiKS50ZXh0KCl9fSwiNTFkaW4iOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3RfdGl0bGUgPiBkaXYiKS5lcSgwKS50ZXh0KCkscHJpY2U6ZSgiLnByaWNlX3JtYiIpLnRleHQoKX19LGFpZGFpOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByby1kZXQgaDMiKS50ZXh0KCkscHJpY2U6ZSgiI190aGlzZnAiKS50ZXh0KCl9fSxib3FpaTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5zaG9wX25hbWUiKS50ZXh0KCkscHJpY2U6ZSgiI2JxUHJpY2UiKS50ZXh0KCl9fSxzcGlkZXI6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZ2ROYW1lIGgxIikudGV4dCgpLHByaWNlOmUoIiNtMTJwcmljZVNwYW4iKS50ZXh0KCl9fSwidGFvYmFvLXhpYW55dSI6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCJoMS50aXRsZSIpLnRleHQoKSxwcmljZTplKCIucHJpY2UtYmxvY2sgLnByaWNlIGVtIikudGV4dCgpfX0sImFpLXRhb2JhbyI6ZnVuY3Rpb24oKXt2YXIgdD12b2lkIDA7aWYoIWkuY2hyb21lX2V4dGVuc2lvbilyZXR1cm4gdD13aW5kb3cucGFnZWNvbmZpZy5wcm9tb1ByaWNlLHR8fCh0PXdpbmRvdy5FTlZfREFUQSYmd2luZG93LkVOVl9EQVRBLmNvbXBMaXN0JiZ3aW5kb3cuRU5WX0RBVEEuY29tcExpc3QuaXRlbV9kZXRhaWwmJndpbmRvdy5FTlZfREFUQS5jb21wTGlzdC5pdGVtX2RldGFpbC5kYXRhJiZ3aW5kb3cuRU5WX0RBVEEuY29tcExpc3QuaXRlbV9kZXRhaWwuZGF0YS5kYXRhMVswXS5wcmljZSkse25hbWU6ZSgiaDMuaXRlbS10aXRsZSBhIikudGV4dCgpLHByaWNlOnQsdXJsOndpbmRvdy5wYWdlY29uZmlnLml0ZW1JZD8iaHR0cDovL2l0ZW0udGFvYmFvLmNvbS9pdGVtLmh0bT9pZD0iK3dpbmRvdy5wYWdlY29uZmlnLml0ZW1JZDpudWxsfTt2YXIgbj1lKCIuYWl0YW9iYW8tZWRldGFpbC1oZWFkZXIgc2NyaXB0IikudGV4dCgpLG89L2l0ZW1JZCI6IihcZCspIi8uZXhlYyhuKTtyZXR1cm4gbyYmKG89b1sxXSksdD0vcHJvbW9QcmljZSI6IihbXGRcLl0rKSIvLmV4ZWMobiksdCYmKHQ9dFsxXSkse25hbWU6ZSgiaDMuaXRlbS10aXRsZSBhIikudGV4dCgpLHByaWNlOnQsdXJsOm8/Imh0dHA6Ly9pdGVtLnRhb2Jhby5jb20vaXRlbS5odG0/aWQ9IitvOm51bGx9fSxtNmdvOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmdvb2RzTmFtZSBoMSIpLnRleHQoKSxwcmljZTplKCIjU0dvb2RzUHJpY2UiKS50ZXh0KCkucmVwbGFjZSgvW1xzXSsvZywiIil9fSxsb2dpdGVjaDpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoImgxLnByb2R1Y3QtdGl0bGUiKS50ZXh0KCl9fSxranQ6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucHJvZGV0YWlsdGl0bGUgaDEiKS50ZXh0KCkscHJpY2U6ZSgibGkucHJpY2VpbmZvcCBzcGFuOmZpcnN0IikudGV4dCgpfX0sdGVzdDpmdW5jdGlvbigpe3JldHVybnt1cmw6ZSgiI3VybCIpLnRleHQoKX19LHBoaWxpcHM6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCJoMS5za3UtbmFtZSIpLnRleHQoKX19LHRjbDpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wX25hbWUiKS50ZXh0KCl9fSxjaGFuZ2hvbmc6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucGNfbmFtZSIpLnRleHQoKX19LGtvbmthOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmdfdGl0bGUgaDEiKS50ZXh0KCl9fSxpbmVpZ286ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCJoNS5Qcm9OYW1lIikudGV4dCgpfX0sc2tnOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3QtdGl0bGVzIikudGV4dCgpfX0sImstdG91Y2giOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb190aXRsZSIpLnRleHQoKX19LGdpb25lZTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNnb29kTmFtZSIpLnRleHQoKX19LCI1MWJ1eSI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQucHJpY2U9ZSgnLm1vZF9wcmljZVtpdGVtcHJvcD0ibG93UHJpY2UiXScpLnRleHQoKS5yZXBsYWNlKC9b77+lwqVcc10rL2csIiIpLCIiPT10LnByaWNlJiYodC5wcmljZT13aW5kb3cuaXRlbUluZm8mJndpbmRvdy5pdGVtSW5mby5wcmljZS8xMDApLCIiPT10LnByaWNlJiYodC5wcmljZT1lKCIueGJhc2VfaXRlbSAgLm1vZF9wcmljZSAiKS50ZXh0KCkpLHQubmFtZT13aW5kb3cuaXRlbUluZm8mJndpbmRvdy5pdGVtSW5mby5uYW1lLHQuYnJhbmRfc3RyaW5nPXdpbmRvdy5pdGVtSW5mbyYmd2luZG93Lml0ZW1JbmZvLmJyYW5kX25hbWUsdH0sdml2bzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wcm9kdWN0LXRpdGxlcyBoMyIpLnRleHQoKSxwcmljZTplKCIubm93LXByaWNlIikudGV4dCgpfX0sInRhb2Jhby05NTA5NSI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQucHJpY2U9ZSgiI0pfUHJvbW9QcmljZSAudG0tcHJpY2UiKS50ZXh0KCksdC5uYW1lPWUoIiNKX0RldGFpbE1ldGEgLnRiLWRldGFpbC1oZCBoMSIpLnRleHQoKSx0LnByaWNlfHwodC5wcmljZT1lKCIjSl9TdHJQcmljZU1vZEJveCAudG0tcHJpY2UiKS50ZXh0KCkpLHR9LHdhbG1hcnQ6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIuanMtcHJvZHVjdC1oZWFkaW5nIHNwYW4iKS50ZXh0KCksdC5wcmljZT1lKCIuanMtcHJpY2UtZGlzcGxheSIpLnRleHQoKSx0LmltZz1lKCIuanMtcHJvZHVjdC1tZWRpYSAuc2xpY2stdHJhY2sgbGkgYSBpbWciKS5lcSgwKSYmZSgiLmpzLXByb2R1Y3QtbWVkaWEgLnNsaWNrLXRyYWNrIGxpIGEgaW1nIikuZXEoMCkuYXR0cigic3JjIiksdH0saGFpdHVuY3VuOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLnByb2R1Y3QtbmFtZSBoMSIpLnRleHQoKSx0LnByaWNlPWUoIi5ybWItcHJpY2UiKS50ZXh0KCksdC5pbWc9ZSgiLnByb2R1Y3QtaW1nLWJveCBsaSBpbWciKS5lcSgwKSYmZSgiLnByb2R1Y3QtaW1nLWJveCBsaSBpbWciKS5lcSgwKS5hdHRyKCJzcmMiKSx0fSxlYmF5OmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI2l0ZW1UaXRsZSIpLnRleHQoKS5yZXBsYWNlKC9eRGV0YWlscyBhYm91dC9naSwiIikscHJpY2U6ZSgiI3ByY0lzdW0iKS5hdHRyKCJjb250ZW50IiksaW1nOmUoIiN2aV9tYWluX2ltZ19mcyB1bCBsaSBpbWciKS5lcSgwKS5hdHRyKCJzcmMiKX19LHd5MTYzOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLlBJbmZvIGR0IikuZXEoMCkudGV4dCgpfHxlKCIubXZfbmFtZSIpLnRleHQoKX19LGRpYW5waW5nOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmRlYWwtdGl0bGUgaDEsaDEudGl0bGUiKS50ZXh0KCkucmVwbGFjZSgvXFsuKlxdL2dpLCIiKX19LG51b21pOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiLmRldGFpbHMgcC5kcCIpJiZlKCIuZGV0YWlscyBwLmRwIikudGV4dCgpfHwiIixuPSIiO3RyeXtuPWUoIi5kZXRhaWxzIGgxIikudGV4dCgpLnJlcGxhY2UoL15cdTMwMTAuK1x1MzAxMS9pLCIiKX1jYXRjaChpKXt9cmV0dXJuIG4rPXQse25hbWU6bn19LG1laXR1YW46ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZGVhbC1jb21wb25lbnQtdGl0bGUiKS50ZXh0KCksaXNibjoiIn19LG1laWxpc2h1bzpmdW5jdGlvbigpe3ZhciB0PWUoIi5nb29kcy10aXRsZSIpLmVxKDApLnRleHQoKSxuPWUoIiNKX05vd1ByaWNlIikudGV4dCgpO3JldHVybiIiPT10JiYodD1lKCJoMy5zX3RsZSIpLnRleHQoKSkse25hbWU6dCxwcmljZTpufX0sc2ZodDpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIiN0aXRsZUluZm8gaDEiKS50ZXh0KCksdC5wcmljZT1lKCIjaXRlbVByaWNlIC5nb29kcy1wcmljZS1yMSBzdHJvbmciKS50ZXh0KCksdH0sbWVpY2k6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7dC5uYW1lPWUoIiNzdWJwcm8gLnJlbGF0aXZlIHNwYW4iKS50ZXh0KCk7dmFyIG49ZSgiLnByb19wcmljZSAucHJpY2UiKS50ZXh0KCkubWF0Y2goL1swLTkuXSsvKTtyZXR1cm4gbiYmKHQucHJpY2U9blswXSksdH0samlhbmtlOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3QubmFtZT1lKCIuZGV0X3RpdGxlIGgxIikudGV4dCgpO3ZhciBuPWUoIi5QcmljZV9pbmZvIC5iaWdQcmljZSBkZCBlbSIpLnRleHQoKS5tYXRjaCgvWzAtOS5dKy8pO3JldHVybiBuJiYodC5wcmljZT1uWzBdKSx0fSwiZ29tZS1ob21lIjpmdW5jdGlvbigpe3ZhciB0PWMoKTt0Lm5hbWU9ZSgiLnByZG1haW4gLnByZHRpdCIpLnRleHQoKTt2YXIgbj1lKCIjcHJkUHJpY2UiKS50ZXh0KCkucmVwbGFjZSgvXHMvZywiIikubWF0Y2goL1swLTkuXSsvKTtyZXR1cm4gbiYmKHQucHJpY2U9blswXSksdH0sbmlrZTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi5wcm9kdWN0LXRpdGxlLXRleHQiKS50ZXh0KCksdC5wcmljZT1lKCIucHJvZHVjdC1wcmljZSIpLnRleHQoKSx0fSwiMzYwa2FkIjpmdW5jdGlvbigpe3ZhciB0PWMoKTt0Lm5hbWU9ZSgiLllJcmRfbCBsaSIpLmVxKDApLnRleHQoKS5yZXBsYWNlKCLllYblk4HlkI3np7DvvJoiLCIiKSx0LnByaWNlPWUoIiNwcmljZW51bWJlciIpLnRleHQoKTtmb3IodmFyIG49dC51cmwuc3BsaXQoIi8iKSxpPW5bMF0rIi8vIixvPW5bbi5sZW5ndGgtMV0uc3BsaXQoIi4iKSxhPTI7YTxuLmxlbmd0aC0xO2ErKylpPWkrblthXSsiLyI7dmFyIHI9ZSgiZGl2LllkcnVnX2luZm8gZGw6Zmlyc3QgZGQiKS50ZXh0KCk7cmV0dXJuIHI/dC51cmw9aStlKCJkaXYuWWRydWdfaW5mbyBkbDpmaXJzdCBkZCIpLnRleHQoKSsiLiIrb1sxXTp0LnVybD1sb2NhdGlvbi5ocmVmLHR9LGxieGNuOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLmRldGFpbFBhcyIpLnRleHQoKS5yZXBsYWNlKC9ccy9nLCIiKSx0LnByaWNlPWUoIiNsYmxQcmljZSIpLnRleHQoKSx0fSxtb2d1amllOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9IiIsdC5uYW1lPWUoIi5nb29kcy10aXRsZSIpLnRleHQoKSwiIj09dC5uYW1lJiYodC5uYW1lPWUoImRpdi5zaG9wdGl0bGUiKS50ZXh0KCkpLCIiPT10Lm5hbWUmJih0Lm5hbWU9ZSgiLmdvb2RzdGl0bGUiKS50ZXh0KCkpLHR9LGNvb2xwYWQ6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZ29vZF9uYW1lIGgxIikudGV4dCgpfX0senRlZGV2aWNlOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnpucHJvZHVjdHMgaDMiKS50ZXh0KCl9fSxsZW5vdm86ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQucHJpY2U9ZSgiI2dwcmljZSIpLnRleHQoKSwiIj09dC5wcmljZSYmKHQucHJpY2U9d2luZG93LnByaWNlKSx0Lm5hbWU9ZSgiLmdvb2RzbmFtZSIpLnRleHQoKSwiIj09dC5uYW1lJiYodC5uYW1lPWUoIi5kZV9wcm9uYW1lIikudGV4dCgpKSx0fSxzaG93am95OmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLmNob29zZS1oZCIpLnRleHQoKS5yZXBsYWNlKC9ccy9nLCIiKSx0LnByaWNlPWUoIiNKX01haW5QcmljZSAuc2otcHJpY2UtdGV4dCIpLnRleHQoKSx0fSxvY2o6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIucHZfc2hvcF9kZXRhaWxfdGl0bGUgaDEiKS50ZXh0KCksdC5wcmljZT1lKCIuaW5mb19ib3ggLnZhbCAucHJpY2UiKS50ZXh0KCksdH0sIm9jai10dWFuIjpmdW5jdGlvbigpe3ZhciB0PWMoKTt0Lm5hbWU9ZSgiLnByb2R1Y3QtaW5mbyA+IGgxIikudGV4dCgpLnJlcGxhY2UoL1xzL2csIiIpO3ZhciBuPWUoIi5wcm9kdWN0X3ByaWNlX2NvbnQgLnAxIikuaHRtbCgpLm1hdGNoKC9cL3NwYW5cPihbMC05Ll0rKVw8Lyk7cmV0dXJuIG4mJih0LnByaWNlPW5bMV0pLCIiPT10LnByaWNlJiYodC5wcmljZT1lKCIucHJvZHVjdF9wcmljZV9jb250IC5wMSIpLnRleHQoKSksIiI9PXQubmFtZSYmKHQubmFtZT1lKCIucHJvZHVjdC1pbmZvICBoMSAudGl0bGUiKS50ZXh0KCkpLHR9LCJvY2ota3IiOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgnLnB2MV9saV90YWJsZV93cmFwIHRoOmNvbnRhaW5zKCLlk4HlkI0iKSt0ZCcpLnRleHQoKSx0LnByaWNlPWUoIi5wcmljZWtvcmVhIikudGV4dCgpLHR9LGdqdzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5zaWxkZXJfY29sdW1uX25hbWUgc3BhbiIpLnRleHQoKSxpc2JuOiIifX0sYXBwbGU6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQucHJpY2U9ZSgiLnByaWNlLXBvaW50LWZ1bGxQcmljZSBzcGFuIikuZXEoMCkudGV4dCgpLHR9LGp1bWVpOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO2lmKHQubmFtZT1lKCJoMS5wb3BfZGV0YWlsX3RpdCIpLnRleHQoKSwiIj09dC5uYW1lKXt0Lm5hbWU9ZSgidGl0bGUiKS5odG1sKCk7dmFyIG49ZSgidGl0bGUiKS5odG1sKCkuc3BsaXQoIi0iKTtuLnBvcCgpLG4ucG9wKCk7dHJ5e3QubmFtZT1uLmpvaW4oIi0iKX1jYXRjaChpKXt9fXJldHVybiB0LnByaWNlPWUoIiNtYWxsX3ByaWNlX2RldGFpbCAucHJpY2VfbnVtIikudGV4dCgpLCIiPT10LnByaWNlJiYodC5wcmljZT1lKCIjc3RyZWFtX2lkIikuYXR0cigicHJpY2UiKSksdH0sanVtZWlnbG9iYWw6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7dHJ5e3QucHJpY2U9ZSgiLmp1bWVpX3ByaWNlIikudGV4dCgpLm1hdGNoKC9bMC05Ll0rLylbMF0sdC5uYW1lPWUoJy5kZWFsX2Nvbl9jb250ZW50IHRkOmNvbnRhaW5zKCLllYblk4HlkI3np7AiKScpLnBhcmVudCgpLmZpbmQoInRkIikuZXEoMSkudGV4dCgpfWNhdGNoKG4pe31yZXR1cm4iIj09dC5wcmljZSYmKHQucHJpY2U9ZSgiI3N0cmVhbV9pZCIpLmF0dHIoInByaWNlIikpLHR9LHl1bmhvdTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi5nb29kcy1uYW1lIGgxIikudGV4dCgpLHQucHJpY2U9ZSgiI2pQcmljZU5vcm1hbCIpLnRleHQoKSx0LmltZz1lKCIucGljLXBhZ2VyIC5waWMtbGlzdCBhIGltZyIpLmVxKDApJiZlKCIucGljLXBhZ2VyIC5waWMtbGlzdCBhIGltZyIpLmVxKDApLmF0dHIoInNyYyIpLCIiPT10LnByaWNlJiYodC5wcmljZT1lKCIuakZpcnN0UHJpY2UiKS50ZXh0KCkpLHR9LGJvb2hlZTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi53aWRnZXQtZ29vZHMtcHJpbWFyeSAucm93LWRlcyBoMSIpLnRleHQoKSx0LnByaWNlPWUoIi5jb2wtcHJpY2UgYiIpLnRleHQoKS5tYXRjaCgvWzAtOS5dKy8pWzBdLHR9LG1vb25iYXNhOmZ1bmN0aW9uKCl7dmFyIHQ9IiI7dHJ5e3Q9ZSgiLnBfaW5mbyBoMiIpLmh0bWwoKS5yZXBsYWNlKC88W14+XSpbXHNcU10qW148XSo+L2dpLCIiKSx0PWUudHJpbSh0KX1jYXRjaChuKXt9cmV0dXJue25hbWU6dH19LGhvbWV2djpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoJy5zaG9wX25hbWUgcFtjbGFzcz0iaGRyXzEiXScpLnRleHQoKSx0Lm5hbWU9dC5uYW1lLnJlcGxhY2UoLzxkaXZbXj5dKltcc1xTXSpbXjxdKlwvZGl2Pi9naSwiIiksdC5uYW1lPXQubmFtZS5yZXBsYWNlKC88c3BhbltePl0qW1xzXFNdKltePF0qXC9zcGFuPi9naSwiIiksdC5uYW1lPXQubmFtZS5yZXBsYWNlKC8mbmJzcDsvZ2ksIiIpLHQubmFtZT1lLnRyaW0odC5uYW1lKSx0fSwicGFpeGllLWZheGlhbiI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIuZmluZC1pbmZvLXByb2R1Y3QgYSBwIikuZXEoMCkudGV4dCgpLHQucHJpY2U9ZSgiLmZpbmQtaW5mby1wcm9kdWN0IGEgc3BhbiIpLmVxKDApLnRleHQoKS5tYXRjaCgvWzAtOS5dKy8pWzBdLHR9LHhpYW9taTpmdW5jdGlvbigpe3ZhciB0PWMoKTtpZih0LnByaWNlPWUoIiNKX2dvb2RzSW5mb0Jsb2NrIC5KX21pX2dvb2RzUHJpY2UiKS50ZXh0KCksIiI9PXQucHJpY2UpdHJ5e3QucHJpY2U9ZSgiLkpfcHJvUHJpY2UiKVswXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZX1jYXRjaChuKXt2YXIgaT1lKCIuSl9wcm9QcmljZSIpLnRleHQoKS5tYXRjaCgvWzAtOS5dKy8pOwppJiYodC5wcmljZT1pWzBdKX1yZXR1cm4gdH0saWh1c2g6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCJoMS50aXRsZSIpLnRleHQoKX19LDE2ODg6ZnVuY3Rpb24oKXtpLnNpdGU9InRhb2JhbyI7dmFyIHQ9bmV3IEFycmF5LG49ZSgnLmRlLWZlYXR1cmU6Y29udGFpbnMoIuWTgeeJjCIpJykudGV4dCgpO24mJnQucHVzaChuKTt2YXIgbz1lKCcuZGUtZmVhdHVyZTpjb250YWlucygi57O75YiXIiknKS5sZW5ndGg+MD9lKCcuZGUtZmVhdHVyZTpjb250YWlucygi57O75YiXIiknKS50ZXh0KCk6bnVsbDtvPW8/bzplKCcuZGUtZmVhdHVyZTpjb250YWlucygi6LSn5Y+3IiknKS5sZW5ndGg+MD9lKCcuZGUtZmVhdHVyZTpjb250YWlucygi6LSn5Y+3IiknKS50ZXh0KCk6bnVsbCxvPW8/bzplKCcuZGUtZmVhdHVyZTpjb250YWlucygi5Z6L5Y+3IiknKS5sZW5ndGg+MD9lKCcuZGUtZmVhdHVyZTpjb250YWlucygi5Z6L5Y+3IiknKS50ZXh0KCk6bnVsbCxvJiZ0LnB1c2gobyk7dmFyIGE9ZSgnLmRlLWZlYXR1cmU6Y29udGFpbnMoIuS5puWPtyIpJykubGVuZ3RoPjA/ZSgnLmRlLWZlYXR1cmU6Y29udGFpbnMoIuS5puWPtyIpJykudGV4dCgpOm51bGw7cmV0dXJuIGE9YT9hLnN1YnN0cihhLmluZGV4T2YoIu+8miIpKzEpOm51bGwsYSYmdC5wdXNoKCJJU0JO77yaIithKSx0PXQuam9pbigifCIpLHtuYW1lOmUoIiNtb2QtZGV0YWlsLWhkIGgxIikudGV4dCgpLGlzYm46IiIsc2tleXdvcmQ6dH19LCJ3b21haS1yZWxhdGVkIjpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wcm9fdGl0X3RvcF9mb3Jjb21iaSIpLnRleHQoKSxwcmljZTplKCIjY29tYmlQcm9kdWN0TWFya2V0UHJpY2UiKS50ZXh0KCl9fSwiMTM5c2hvcC1hcnRpY2xlIjpmdW5jdGlvbigpe3JldHVybiBwKCIucmdpbmZvIGR0IGEiLDAsIjEzOXNob3AiKX0sInpvbC1hcnRpY2xlIjpmdW5jdGlvbigpe3JldHVybiBwKCIubmF2LWhlYWRlcj5hICIsMSwiem9sIil9LCJwY29ubGluZS1hcnRpY2xlIjpmdW5jdGlvbigpe3JldHVybiBwKCIubmF2UHJvV3JhcCBoMyBhIiwwLCJwY29ubGluZSIpfSwieWVza3ktYXJ0aWNsZSI6ZnVuY3Rpb24oKXtyZXR1cm4gcCgiLmFydGl0bGUgaDMgYSIsMCwieWVza3kiKX0sIml0MTY4LWFydGljbGUiOmZ1bmN0aW9uKCl7cmV0dXJuIHAoIi5iajk4MCAuYmoxIGRpdj5hIiwwLCJpdDE2OCIpfSwicGNwb3AtYXJ0aWNsZSI6ZnVuY3Rpb24oKXtyZXR1cm4gcCgiLmJqOTgwIC5iajEgYSIsMCwicGNwb3AiKX0sInBjaG9tZS1hcnRpY2xlIjpmdW5jdGlvbigpe3JldHVybiBwKCIubmF2UHJvV3JhcCBoMyBhIiwwLCJwY2hvbWUiKX0sbmV3ZWdnOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiI3Byb0N0bmVyIC5wcm9IZWFkZXIgaDEiKS50ZXh0KCksdC5wcmljZT1lKCIjb21IaWRkZW5QcmljZSIpLnZhbCgpLHQudXJsPWUoIi5wcm9IZWFkZXIgaDEgYSIpLmF0dHIoImhyZWYiKSx0LmJyYW5kX3N0cmluZz1lKCcuZ29vZHNfaW5mbyAuZ29vZHNfaW5mb19uYW1lOmNvbnRhaW5zKCLniYwiKSsuZ29kZHNfaW5mb19kYXRhJykudGV4dCgpLnJlcGxhY2UoL1xzL2csIiIpLHR9LCJuZXdlZ2ctemhhZGFuIjpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi5wcm9IZWFkZXIgaDEgYSIpLnRleHQoKSx0LnVybD1lKCIucHJvSGVhZGVyIGgxIGEiKS5hdHRyKCJocmVmIiksdH0seWl3dWdvdTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoImxpLmZvbnRib2xkLnRpdCIpLnRleHQoKSx0LnByaWNlPXBhcnNlRmxvYXQoZSgiI3B1bml0cHJpY2UiKS50ZXh0KCkucmVwbGFjZSgvXHMvZywiIikpLHR9LHpoaXdvOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLm1hbGxfZGV0YWlsX3ByZF9pbmZvIC50aXRsZSIpLnRleHQoKSx0fSwiemhpd28tdHVhbiI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIuY2Fyb3VzZWwgbGkgcCIpLmVxKDApLnRleHQoKSx0fSx6b2w6ZnVuY3Rpb24oKXt2YXIgdD1jKCksbj1bXSxpPWUoIi5wcm9kdWN0LW1lcmNoYW50LXByaWNlIGVtIikudGV4dCgpO2lmKCIiIT1pJiZpLm1hdGNoKC9bMC05XSsvKSYmaS5pbmRleE9mKCLoh7MiKT4tMSYmKG49aS5yZXBsYWNlKC9bIF0vZywiIikuc3BsaXQoIuiHsyIpKSx0Lm5hbWU9ZSgiLnByb2R1Y3QtbmFtZSBoMyIpLnRleHQoKSwiIj09dC5uYW1lJiYodC5uYW1lPWUoIi5wdGl0bGUiKS50ZXh0KCkpLCIiPT10Lm5hbWUmJih0Lm5hbWU9ZSgiLnBhZ2UtdGl0bGUuY2xlYXJmaXggaDEiKS50ZXh0KCkpLG4ubGVuZ3RoPjAmJih0Lm1pbl9wcmljZT1uWzBdLnN1YnN0cigxKSx0Lm1heF9wcmljZT1uWzFdLnN1YnN0cigxKSksdC5wcmljZT1lKCIucHJpY2UtdHlwZSIpLnRleHQoKSx0LnByaWNlLmluZGV4T2YoIuS4hyIpPi0xKXt2YXIgbz10LnByaWNlLm1hdGNoKC9bMC05Ll0rLyk7byYmKHQucHJpY2U9MWU0Km9bMF0pfXJldHVybiB0LmNhdF9uYW1lPWUoIi5icmVhZGNydW1iIGEiKS5lcSgxKS50ZXh0KCksdC5icmFuZF9zdHJpbmc9ZSgiLmJyZWFkY3J1bWIgYSIpLmVxKDIpLnRleHQoKSx0fSx2bWFsbDpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIiNwcm8tbmFtZSIpLnRleHQoKSx0fSxkYWxpbmc6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIuZ29vZHMtZGF0YSBoMS5jbGVhcmZpeCIpLnRleHQoKS5yZXBsYWNlKC9ccy9nLCIiKSx0LnByaWNlPWUoIi5nb29kcy1wcmljZSAuY2xlYXJmaXggLmZsIC5ib2xkIikudGV4dCgpLHR9LGZjbHViOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLmdvb2RzX2ludHJvZHVjZSIpLnRleHQoKSx0Lm5hbWU9dC5uYW1lLnJlcGxhY2UoLyg/Olx0fFxuKS9naSwiIiksdC5uYW1lPXQubmFtZS5yZXBsYWNlKC8oPzpcIFwgfCZuYnNwOykvZ2ksIiAiKSwiIj09dC5uYW1lJiYodC5uYW1lPWUoJy50ZGxlZnQ6Y29udGFpbnMoIuWVhuWTgeWQjeensCIpKy50ZHJpZ2h0JykudGV4dCgpLnJlcGxhY2UoLyhccykvZywiIiksdC5wcmljZT1lKCIjcHJpY2VGb250IikudGV4dCgpKSx0fSx0YW9zaHU6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQuaXNibj1lKCcuYm9va19kZXRhaWxlZCBzcGFuOmNvbnRhaW5zKCJJU0JOIiknKS5sZW5ndGg+MD9lKCcuYm9va19kZXRhaWxlZCBzcGFuOmNvbnRhaW5zKCJJU0JOIiknKS50ZXh0KCkuc3Vic3RyKDUpOiIiLHR9LGFtYXpvbjpmdW5jdGlvbigpe3ZhciB0PWMoKSxuPSIiLGk9ZSgnbGk6Y29udGFpbnMoIklTQk4iKScpLnRleHQoKSxvPWUoJ2xpOmNvbnRhaW5zKCLmnaHlvaLnoIEiKScpLnRleHQoKSxhPWUoJ2xpIGI6Y29udGFpbnMoIkFTSU4iKScpLnBhcmVudCgibGkiKS50ZXh0KCk7aT1pP2kuc3Vic3RyKDUpOiIiLG89bz9vLnN1YnN0cig0KToiIixhPWE/YS5zdWJzdHIoNSk6IiIsbj0iIj09aT9vOiIiPT1vP2k6aS5sZW5ndGg+by5sZW5ndGg/bzppLG49bnx8YSxuPW4ucmVwbGFjZSgvKFxzKS9nLCIiKSx0Lm5hbWU9ZSgiI2J0QXNpblRpdGxlIHNwYW4iKS5lcSgwKS50ZXh0KCkucmVwbGFjZSgvKC4qKTxzcGFuLiovaSwiJDEiKSx0Lm5hbWU9ZSgiI3Byb2R1Y3RUaXRsZSIpLnRleHQoKS50cmltKCksdC5pc2JuPW4sdC5icmFuZF9zdHJpbmc9ZSgiI2JyYW5kIikudGV4dCgpLnRyaW0oKSx0LnByaWNlPWUoIiNwcmljZWJsb2NrX2RlYWxwcmljZSIpLnRleHQoKS5yZXBsYWNlKC9b77+lwqVdKy8sIiIpLCIiPT10LnByaWNlJiYodC5wcmljZT1lKCJzcGFuLmEtc2l6ZS1sYXJnZS5hLWNvbG9yLXByaWNlIikuaXMoIjp2aXNpYmxlIikmJmUoInNwYW4uYS1zaXplLWxhcmdlLmEtY29sb3ItcHJpY2UiKS50ZXh0KCkpLCIiPT10LnByaWNlJiYodC5wcmljZT1lKCIjcHJpY2VibG9ja19vdXJwcmljZSIpLnRleHQoKSksIiI9PXQucHJpY2UmJih0LnByaWNlPWUoIiNwcmljZWJsb2NrX3NhbGVwcmljZSIpLnRleHQoKSksIiI9PXQucHJpY2UmJih0LnByaWNlPWUoIi5vZmZlci1wcmljZTplcSgwKSIpLnRleHQoKSksIiI9PXQucHJpY2UmJih0LnByaWNlPWUoIiNvbHBfZmVhdHVyZV9kaXYgLmEtY29sb3ItcHJpY2UiKS50ZXh0KCkpLCIiPT10LnByaWNlJiYodC5wcmljZT1lKCIuYS1jb2xvci1wcmljZTplcSgwKSIpLnRleHQoKSksIiI9PXQucHJpY2UmJih0LnByaWNlPWUoIiNwcmljZWJsb2NrX3NhbGVwcmljZSIpLnRleHQoKSksIiI9PXQucHJpY2UmJih0LnByaWNlPWUoIiNwcmljZV9mZWF0dXJlX2RpdiAuYS1jb2xvci1wcmljZSIpLnRleHQoKSk7dmFyIHI9bG9jYXRpb24uaHJlZixzPWxvY2F0aW9uLmhvc3Q7dC5pdGVtSWQ9ZnVuY3Rpb24oKXt2YXIgdD1sb2NhdGlvbi5ocmVmLm1hdGNoKC9cL2RwXC8oWzAtOUEtWmEtel0rKS8pO3JldHVybiB0P3RbMV06KHQ9bG9jYXRpb24uaHJlZi5tYXRjaCgvXC9ncFwvKFswLTlBLVphLXpdKykvKSx0P3RbMV06IiIpfSgpO3RyeXt0LmNhdF9pZD1mdW5jdGlvbigpe3ZhciB0LGUsbj0iIjtyZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmEtYnJlYWRjcnVtYiBsaTpudGgtY2hpbGQoNykgYSIpP2U9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLmEtYnJlYWRjcnVtYiBsaTpudGgtY2hpbGQoNykgYSIpLmdldEF0dHJpYnV0ZSgiaHJlZiIpOmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5hLWJyZWFkY3J1bWIgbGk6bnRoLWNoaWxkKDUpIGEiKT9lPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5hLWJyZWFkY3J1bWIgbGk6bnRoLWNoaWxkKDUpIGEiKS5nZXRBdHRyaWJ1dGUoImhyZWYiKTpkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuYS1icmVhZGNydW1iIGxpOm50aC1jaGlsZCgzKSBhIikmJihlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5hLWJyZWFkY3J1bWIgbGk6bnRoLWNoaWxkKDMpIGEiKS5nZXRBdHRyaWJ1dGUoImhyZWYiKSksdD1lLnNwbGl0KCI/IilbMV0sdCYmdC5zcGxpdCgiJiIpLmZvckVhY2goZnVuY3Rpb24odCl7dC5tYXRjaCgvbm9kZT0uKi8pJiYobj10Lm1hdGNoKC9ub2RlPSguKikvKVsxXSl9KSxufSgpfWNhdGNoKGwpe3QuY2F0X2lkPSIifXQudXJsMj1yLnJlcGxhY2Uocywid3d3LmFtYXpvbi5jbiIpO2Zvcih2YXIgcD1lKCIjd2F5ZmluZGluZy1icmVhZGNydW1ic19mZWF0dXJlX2RpdiAuYS11bm9yZGVyZWQtbGlzdCBsaSBhIiksZD1wLmxlbmd0aCxoPVtdLHU9MDt1PGQ7dSsrKWgucHVzaChwLmVxKHUpLnRleHQoKS50cmltKCkpO3QuY2F0X25hbWU9aC5qb2luKCIjIiksdC53ZWJzaXRlPSJhbWF6b24iLHQucGljPWUoIiNhbHRJbWFnZXMgbGkgaW1nIikuZXEoMCkuYXR0cigic3JjIiksdC5waWN8fCh0LnBpYz1lKCIjbGFuZGluZ0ltYWdlIikuZXEoMCkuYXR0cigic3JjIikpLHQuaW1nPXQucGljLHQuc2t1PWUoIiNhZGRUb0NhcnQgI0FTSU4iKS52YWwoKSx0LmNhdGVnb3J5PWUoIiN3YXlmaW5kaW5nLWJyZWFkY3J1bWJzX2ZlYXR1cmVfZGl2IGEiKS50ZXh0KCk7dmFyIG09ZSgiI2JyYW5kIikuYXR0cigiaHJlZiIpLGY9bSYmbS5tYXRjaCgvZmllbGQtbGJyX2JyYW5kc19icm93c2UtYmluPSguKikkLykmJm0ubWF0Y2goL2ZpZWxkLWxicl9icmFuZHNfYnJvd3NlLWJpbj0oLiopJC8pWzFdO3JldHVybiB0LmJyYW5kPXQuYnJhbmRfc3RyaW5nP3QuYnJhbmRfc3RyaW5nOmYsdH0sbXV5aW5nemhpamlhOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiI25hbWUgaDEiKS50ZXh0KCksdC5wcmljZT1lKCIjc3VtbWFyeS1wcmljZSAucC1wcmljZSIpLnRleHQoKSx0fSxkYW5nZGFuZzpmdW5jdGlvbigpe3ZhciB0PXdpbmRvdy5wcm9kU3B1SW5mbyxuPWMoKSxpPWUoJy5ib29rX2RldGFpbGVkIHNwYW46Y29udGFpbnMoIkkgUyBCIE4iKScpLnRleHQoKS5zdWJzdHIoOCk7aWYoIiI9PWkmJihpPWUoJy5pbnRybyBzcGFuOmNvbnRhaW5zKCJJIFMgQiBOIiknKS50ZXh0KCkuc3Vic3RyKDgpKSwiIj09aSYmKGk9ZSgnLmJvb2tfbWVzc2JveCAuc2hvd19pbmZvX2xlZnQ6Y29udGFpbnMoIu+8qe+8s++8ou+8riIpJykubmV4dCgiLnNob3dfaW5mb19yaWdodCIpLnRleHQoKSksIiI9PWkmJihpPWUoJy5ib29rX21lc3Nib3ggLnNob3dfaW5mb19sZWZ0OmNvbnRhaW5zKCJJIFMgUiBDIiknKS5uZXh0KCIuc2hvd19pbmZvX3JpZ2h0IikudGV4dCgpKSwiIj09aSl7dmFyIG89ZSgnLmJvb2tfbWVzc2JveCBzcGFuOmNvbnRhaW5zKCJJIFMgUiBDIiknKTtpPW8mJm8ucGFyZW50KCkudGV4dCgpLnN1YnN0cig3KX1pZigiIj09aSl7dmFyIGk9ZSgnI2RldGFpbF9kZXNjcmliZSBsaTpjb250YWlucygiSVNCTiIpJykudGV4dCgpLm1hdGNoKC9bMC05XSsvKTtpJiYoaT1pWzBdKX1yZXR1cm4gbi5wcmljZT1lKCIjZGQtcHJpY2UiKS50ZXh0KCksbi5pc2JuPWksbi5waWM9ZSgiI21haW4taW1nLXNsaWRlciBsaSBpbWciKS5lcSgwKS5hdHRyKCJzcmMiKSxuLndlYnNpdGU9ImRhbmdkYW5nIixuLml0ZW1JZD1sb2NhdGlvbi5ocmVmLm1hdGNoKC9kYW5nZGFuZ1wuY29tXC8oXGQrKS8pWzFdLG4uYnJhbmRfc3RyaW5nPWUoJy5tYWxsX2dvb2RzX2ZvdXJzb3J0X3N0eWxlX2ZyYW1lOmNvbnRhaW5zKCLlk4HniYwiKScpLnRleHQoKS5yZXBsYWNlKCLlk4HniYzvvJoiLCIiKSwiIj09bi5icmFuZF9zdHJpbmcmJihuLmJyYW5kX3N0cmluZz13aW5kb3cuZ29vZ2xlX3RhZ19wYXJhbXMmJndpbmRvdy5nb29nbGVfdGFnX3BhcmFtcy5lY29tbV9wYnJhbmQpLG4ucHJpY2V8fChuLnByaWNlPWUoIiNzYWxlUHJpY2VUYWciKS50ZXh0KCkpLG4ubmFtZT1lKCIubmFtZV9pbmZvIGgxIikudGV4dCgpLnRyaW0oKSxuLmNhdF9pZD10JiZ0LmNhdGVnb3J5SWQsbn0sIjM2MGJ1eS1wYWltYWkiOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0LnByaWNlPWUoIiNwcmljZURpdiIpLnRleHQoKS5tYXRjaCgvWzAtOS5dKy8pWzBdLHQubmFtZT1lKCIuaW50cm9fZGV0YWlsIC5uYW1lIikuYXR0cigidGl0bGUiKSx0fSwiMzYwYnV5LWJvb2siOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgidGl0bGUiKS50ZXh0KCksbj0iIjtyZXR1cm4gbj1lKCIjc3VtbWFyeS1pc2JuIC5kZCIpLnRleHQoKSx0PWUoIiNuYW1lIGgxIikuaHRtbCgpLHQuaW5kZXhPZigiPCIpPjAmJih0PXQuc3Vic3RyKDAsdC5pbmRleE9mKCI8IikpKSxuPW58fGUoJ2xpIGRpdjpjb250YWlucygi77yp77yz77yi77yuIiknKS50ZXh0KCkuc3Vic3RyKDUpLHQ9dHx8ZSgiI25hbWUgaDIiKS5odG1sKCkucmVwbGFjZSgvKC4qKTxmb250LiovaSwiJDEiKSx7bmFtZTp0LGlzYm46bn19LCIzNjBidXktdHVhbiI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7dC5uYW1lPXQubmFtZS5yZXBsYWNlKCIgLSDkuqzlk4Hmg6Dlm6LotK0iLCIiKSxpLnNpdGU9IjM2MGJ1eSIsdC5pZD1lKCIjUHNob3dTa3VpZCIpLnZhbCgpO3ZhciBuPWUoIi5lLWNvbnRlbnQgaDIiKS50ZXh0KCk7bi5sZW5ndGg+dC5uYW1lLmxlbmd0aCYmKHQubmFtZT1uKTt2YXIgbz1lKCIuZS1leHRyYSAucC1pbWcgYSIpO3JldHVybiBvLmxlbmd0aD4wJiYhL15qYXZhc2NyaXB0Oi8udGVzdChvLmF0dHIoImhyZWYiKSk/dC5ocmVmPW8uYXR0cigiaHJlZiIpOiJ1bmRlZmluZWQiIT10eXBlb2YgZSgiI1BzaG93U2t1aWQiKS52YWwoKSYmKHQuaHJlZj0iaHR0cDovL2l0ZW0uamQuY29tLyIrZSgiI1BzaG93U2t1aWQiKS52YWwoKSsiLmh0bWwiKSx0LnVybD1lKCIuZS1leHRyYSBhIikuZXEoMCkuYXR0cigiaHJlZiIpLHQudXJsLmluZGV4T2YoImphdmFzY3JpcHQiKT4tMSYmKHQudXJsPWUoIi5pbWctaW5mbyBhIikuZXEoMCkuYXR0cigiaHJlZiIpKSx0fSwiMzYwYnV5LWJpZ2ltYWdlIjpmdW5jdGlvbigpe3ZhciB0PSIiOyIiPT10JiYodD1lKCIuby1tLTEgaDEgYSIpLmF0dHIoImhyZWYiKSk7dmFyIG49ZSgiLm8tbS0xIGgxIGEiKS5lcSgwKS50ZXh0KCk7cmV0dXJue3VybDp0LG5hbWU6bixpc2JuOiIifX0sIjM2MGJ1eS1jbHViIjpmdW5jdGlvbigpe3ZhciB0PSIiOyIiPT10JiYodD1lKCIucC1uYW1lIGEiKS5hdHRyKCJocmVmIikpO3ZhciBuPWUoIi5wLW5hbWUgYSIpLmVxKDApLnRleHQoKTtyZXR1cm57dXJsOnQsbmFtZTpuLGlzYm46IiJ9fSwiMzYwYnV5IjpmdW5jdGlvbigpe3ZhciB0PWMoKSxuPWUoIiNuYW1lIGgxIikudGV4dCgpLGk9IiI7aWYobnx8KG49ZSgiLml0ZW1JbmZvLXdyYXAgLnNrdS1uYW1lIikuZXEoMCkudGV4dCgpKSxuJiZuLmluZGV4T2YoIjwiKT4wJiYobj1uLnN1YnN0cigwLG4uaW5kZXhPZigiPCIpKSksaT1lKCIjc3VtbWFyeS1pc2JuIC5kZCIpLnRleHQoKSxpfHwoaT1lKCJ0ZDpjb250YWlucygnSVNCTuWPt++8micpIikudGV4dCgpLm1hdGNoKC9cZCsvKSxpJiYoaT1pWzBdKSksaXx8KGk9ZSgiI3Byb2R1Y3QtZGV0YWlsIGxpOmNvbnRhaW5zKCdJU0JO77yaJykiKS50ZXh0KCkubWF0Y2goL1xkKy8pLGkmJihpPWlbMF0pKSxpfHwoaT1lKCJ0ZDpjb250YWlucygnSVNCTuWPt++8micpIikudGV4dCgpLnN1YnN0cig3KSksIWkpe3ZhciBvPWUoJyNwYXJhbWV0ZXIyIGxpOmNvbnRhaW5zKCJJU0JOIiknKS50ZXh0KCk7aT1vLnJlcGxhY2UoLyg/OklTQk58aXNibikoPzpcOnzvvJopLywiIil9dC5uYW1lPW4sdC5pc2JuPWk7dmFyIGE9d2luZG93LnBhZ2VDb25maWcmJndpbmRvdy5wYWdlQ29uZmlnLnByb2R1Y3QmJndpbmRvdy5wYWdlQ29uZmlnLnByb2R1Y3QuYnJhbmQ7MCE9YSYmKHQuYnJhbmRfc3RyaW5nPWUoJyNyb290LW5hdiBhW2hyZWYqPSInK2ErJyJdJykudGV4dCgpKSx0LnByaWNlPWUoIiNqZC1wcmljZSIpLnRleHQoKS5yZXBsYWNlKC9b77+lwqVdKy8sIiIpO2Zvcih2YXIgcj1bXSxzPWUoImJvZHkiKS5hdHRyKCJjbGFzcyIpLm1hdGNoKC9jYXRcLVxkXC0oWzAtOV0rKS9nKXx8W10sbD0wO2w8cy5sZW5ndGg7bCsrKXIucHVzaChzW2xdLm1hdGNoKC9cZFwtKFswLTldKykvKVsxXSk7cmV0dXJuIDA9PT1yLmxlZ250aCYmKHI9d2luZG93LnBhZ2VDb25maWcmJndpbmRvdy5wYWdlQ29uZmlnLnByb2R1Y3QmJndpbmRvdy5wYWdlQ29uZmlnLnByb2R1Y3QuY2F0KSx0LmNhdF9pZD1yLmpvaW4oIi0iKSx0LnByaWNlfHwodC5wcmljZT1lKCIucC1wcmljZTplcSgwKSIpLnRleHQoKSksdC5wbHVzX3ByaWNlPWUoIi5wLXByaWNlLXBsdXMgLnByaWNlIikudGV4dCgpLnJlcGxhY2UoL1vvv6XCpV0rLywiIiksdC5mYW5zX3ByaWNlPWUoIi5mYW5zLXByaWNlIC5wLXByaWNlLWZhbnMgc3BhbiIpLnRleHQoKS5yZXBsYWNlKC9b77+lwqVdKy8sIiIpLHQucHJpY2V8fCh0LnByaWNlPWUoIi5zdW1tYXJ5LXByaWNlIC5wLXByaWNlIC5wcmljZSIpLmVxKDApLnRleHQoKSksdC5waWM9ZSgiLnNwZWMtaXRlbXMgdWwgbGkgaW1nIikuZXEoMCkuYXR0cigic3JjIiksdC5waWMmJnQucGljLmluZGV4T2YoImh0dHAiKT09PS0xJiYodC5waWM9Imh0dHA6Iit0LnBpYy5yZXBsYWNlKC9cZCt4XGQrLywiMTYweDE2MCIpKSx0Lml0ZW1JZD1sb2NhdGlvbi5ocmVmLm1hdGNoKC8oXGQrKVwuaHRtbC8pWzFdLHQubmFtZT10Lm5hbWUmJnQubmFtZS5yZXBsYWNlKCLjgJDkuqzkuJzotoXluILjgJEiLCIiKSx0LndlYnNpdGU9ImpkLmNvbSIsdC5jYXRfbmFtZT1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiI2NydW1iLXdyYXAgLmNydW1iIGEiKSxmdW5jdGlvbih0KXtyZXR1cm4gdC50ZXh0Q29udGVudH0pLnNsaWNlKDAsMykuam9pbigiIyIpLHR9LCIzNjBidXktcmUiOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLnNob3BfaW50cm8+aDI+YSIpLnRleHQoKSx0LnByaWNlPWUoIi5zaG9wX2ludHJvIC5wcmljZSIpLnRleHQoKSx0fSwiMzYwYnV5LWF1Y3Rpb24iOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiI3Byb2R1Y3QtaW50cm8gLnAtaW5mbyBoMSIpLnRleHQoKSx0LnByaWNlPWUoIiNjdXJfcHJpY2UiKS50ZXh0KCkubWF0Y2goL1swLTkuXSsvKVswXSx0fSxmZ2xhZHk6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucGQtY29udGVudC1sZWZ0IHRhYmxlIHRib2R5IikuY2hpbGRyZW4oInRyIikuZXEoMSkuY2hpbGRyZW4oInRkIikuZXEoMCkuY2hpbGRyZW4oImRpdiIpLmVxKDApLnRleHQoKSxpc2JuOiIifX0sb3VrdTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi5wcm9kLWluZm8tdGl0bGUgaDEiKS50ZXh0KCksdC5icmFuZF9zdHJpbmc9ZSgnLnNwZWNUaXRsZSAuc3Ryb25nLXRpdGxlOmNvbnRhaW5zKCLlk4HniYwiKSsuaW5saW5lIHNwYW4nKS50ZXh0KCksdC5wcmljZT1lKCIuc2FsZS1wcmljZSIpLnRleHQoKS5yZXBsYWNlKC9b77+lwqVcc10rL2csIiIpLHR9LCI2cG0iOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiI3Byb2R1Y3RTdGFnZSAudGl0bGUiKS50ZXh0KCksdC5icmFuZF9zdHJpbmc9ZSgiI3Byb2R1Y3RTdGFnZSAudGl0bGUgLmJyYW5kIikudGV4dCgpLHQucHJpY2U9ZSgiI3ByaWNlU2xvdCAucHJpY2UiKS50ZXh0KCkucmVwbGFjZSgiJCIsIiIpLHQuaW1nPWUoIiNwcm9kdWN0SW1hZ2VzIHVsIGxpIGltZyIpLmVxKDApLmF0dHIoInNyYyIpLHQuc2t1PWUoJ2lucHV0W25hbWU9InByb2R1Y3RJZCJdJykudmFsKCksdC5jYXRlZ29yeT1lKCIjYnJlYWRjcnVtYnMgYSIpLnRleHQoKSx0LnNvdXJjZT1lKCIjdGh1bWJuYWlsSW1hZ2VzIikubmV4dCgpLm5leHQoKS5uZXh0KCkudGV4dCgpLHQuYnJhbmQ9ZSgnYVtpdGVtcHJvcD0iYnJhbmQiXScpLnRleHQoKSx0LnByaWNlfHwodC5wcmljZT1lKCIuXzNyX091IikuZXEoMCkudGV4dCgpLnJlcGxhY2UoIiQiLCIiKSksdH0sa2ltaXNzOmZ1bmN0aW9uKCl7dmFyIHQ9IiI7dD1lKCIucHJldmlld190aXRsZSBoMSBhIikudGV4dCgpO3ZhciBuPWUoIi5wcmV2aWV3X2JyaWVmIGVtIikudGV4dCgpO24uaW5kZXhPZigiLSIpPi0xJiYobj1uLnNwbGl0KCItIilbMF0pO3ZhciBpPWUoIi5wcmV2aWV3X2JyaWVmIikudGV4dCgpLm1hdGNoKC/kuqflk4Hop4TmoLzvvJooLiopLyk7cmV0dXJuIGkmJihpPWlbMV0pLGkuaW5kZXhPZigiLSIpPi0xJiYoaT1pLnNwbGl0KCItIilbMF0pLHQrPWksIiI9PXQmJih0PWUoIi50aXRsZSBoMSIpLnRleHQoKSkse25hbWU6dCxwcmljZTpuLGlzYm46IiJ9fSxyZWRiYWJ5OmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI3BOYW1lIikudGV4dCgpLGlzYm46IiJ9fSxtMTg6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZ29vZHNfZGV0YWlsIC5uYW1lIikudGV4dCgpLGlzYm46IiJ9fSx3MTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi50aXRsZSBoMSIpLnRleHQoKSxpc2JuOiIifX0sc2VwaG9yYWNwczpmdW5jdGlvbigpe3ZhciB0PWUoIi5wcm9QcmljZT5zcGFuOmVxKDEpIikudGV4dCgpO3JldHVybntuYW1lOmUoIi5zZFRpdGxlTCBoMSIpLnRleHQoKSxpc2JuOiIiLHByaWNlOnR9fSxib29rdXU6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7dC5uYW1lPWUoIi5zaG9wLXRleHQtaW5mbyBoMiIpLnRleHQoKSx0LnByaWNlPWUoJy53ai1tZXRhIHNwYW46Y29udGFpbnMoIuWNmuW6k+S7tyIpfnN0cm9uZycpLnRleHQoKTt2YXIgbj1lKCJtZXRhW25hbWU9a2V5d29yZHNdIilbMF0uZ2V0QXR0cmlidXRlKCJjb250ZW50Iik7cmV0dXJuIHQuaXNibj0vSVNCTu+8mihcZCspLy5leGVjKG4pJiYvSVNCTu+8mihcZCspLy5leGVjKG4pWzFdLHR9LHNlY29vOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0LnByaWNlPWUoIi5EcHJpY2UiKS50ZXh0KCkucmVwbGFjZSgvKMKlfCwpL2csIiIpLHQubmFtZT1lKCIucHJvTmFtZSBoMiIpLnRleHQoKSx0fSxsYWZhc286ZnVuY3Rpb24oKXt2YXIgdD1lKCIjcG5hbWUiKS50ZXh0KCk7cmV0dXJuInVuZGVmaW5lZCIhPXR5cGVvZiB0JiYiIiE9dHx8KHQ9ZSgidGl0bGUiKS5odG1sKCkpLHtuYW1lOnQsaXNibjoiIn19LHM6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZ29vZHNuYW1lIikudGV4dCgpLGlzYm46IiJ9fSxsZXRhbzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNidXlpbmZvIGgxIikudGV4dCgpLGlzYm46IiJ9fSxidXkwMDc6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIjaW5mb19yaWdodCB0YWJsZSB0Ym9keSIpLmNoaWxkcmVuKCJ0ciIpLmVxKDApLmNoaWxkcmVuKCJ0ZCIpLmVxKDApLmNoaWxkcmVuKCJoMSIpLmVxKDApLnRleHQoKSxpc2JuOiIifX0sdGFveGllOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmRldGFpbCIpLmNoaWxkcmVuKCJkaXYiKS5lcSgwKS5jaGlsZHJlbigiaDIiKS5lcSgwKS50ZXh0KCksaXNibjoiIn19LHN1bmluZzpmdW5jdGlvbigpe3ZhciB0LG49ZCgiaW5wdXRbbmFtZT1yZXR1cm5VUkxdIiwwLCJ2YWx1ZSIsInN1bmluZyIpLG89ZSgiI2l0ZW1EaXNwbGF5TmFtZSIpLnRleHQoKS50cmltKCk7dHx8KHQ9ZSgnI3RvdGFsIGR0OmNvbnRhaW5zKCJJIiknKS5uZXh0KCkuZXEoMCkudGV4dCgpLHQ9dC5tYXRjaCgvKD86XGR7MTN9fFxkezEwfXxcZHs4fSkvZ2kpLHQmJih0PXRbMF0pKSx0fHwodD1lKCcuYm9vay1pbmZvIHNwYW46Y29udGFpbnMoIkkiKScpLm5leHQoKS5lcSgwKS50ZXh0KCksdD10Lm1hdGNoKC8oPzpcZHsxM318XGR7MTB9fFxkezh9KS9naSksdCYmKHQ9dFswXSkpLHR8fCh0PWUoJyNib29rUGFyYW1ldGVyRmllbGQgZGw6Y29udGFpbnMoIklTQk4iKScpLnRleHQoKS5tYXRjaCgvWzAtOV0rLyksdCYmKHQ9dFswXSkpLG4udXJsPWxvY2F0aW9uLmhyZWY7dmFyIGE9ZSgiLnczIikudG9BcnJheSgpO2E9YS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQuaW5uZXJIVE1MfSk7dmFyIHI9dm9pZCAwOyhhLmluZGV4T2YoIuWboui0reS7tyIpPi0xfHxhLmluZGV4T2YoIumihOWUruS7tyIpPi0xKSYmKHI9ZSgic3Bhbi5zbWFsbC1wcmljZSIpLnRleHQoKSk7dmFyIHM9ZSgiI3Byb21vdGlvblByaWNlLm1haW5wcmljZSIpLnRleHQoKSxsPWUoIi5tYWlucHJpY2UiKS50ZXh0KCk7bi5uYW1lPW8sbi5pc2JuPXQsbi5icmFuZF9zdHJpbmc9d2luZG93LnNuJiZ3aW5kb3cuc24uYnJhbmROYW1lfHwiIixuLnByaWNlPXdpbmRvdy5zbiYmd2luZG93LnNuLnByb21vdGlvblByaWNlfHwwLGwmJihuLnByaWNlPWwpLHMmJihuLnByaWNlPXMpLHImJihuLnByaWNlPXIpLG4uaXRlbUlkPWxvY2F0aW9uLmhyZWYubWF0Y2goLyhcZCtcL1xkKylcLmh0bWwvKVsxXTt2YXIgYz1lKCIuYnJlYWRjcnVtYiAuZHJvcGRvd246bnRoLWxhc3Qtb2YtdHlwZSgzKSBhIikscD1jJiZjLmF0dHIoImhyZWYiKTtyZXR1cm4gbi5jYXRfaWQ9cC5tYXRjaCgvKFxkLVxkezAsfS1cZClcLmh0bWwvKT9wLm1hdGNoKC8oXGQtXGR7MCx9LVxkKVwuaHRtbC8pWzFdOiIiLG4ud2Vic2l0ZT0ic3VuaW5nIixuLnBpYz1lKCIjYmlnSW1hZ2UgaW1nIikuYXR0cigic3JjIiksbi5waWMmJihuLnBpYz1lKCIjYmlnSW1nIGltZyIpLmF0dHIoInNyYyIpKSxuLm5hbWV8fChuLm5hbWU9d2luZG93LnNuJiZ3aW5kb3cuc24uaXRlbURpc3BsYXlOYW1lKSxuLm5hbWU9bi5uYW1lJiZuLm5hbWUucmVwbGFjZSgi44CQ6IuP5a6B5piT6LSt6LaF5biC44CRIiwiIiksZSgiI21haW5QcmljZSIpLnRleHQoKS5pbmRleE9mKCLlrprph5EiKT4tMSYmKGkubm9SZWFsUHJpY2U9ITApLG59LCJzdW5pbmctanUiOmZ1bmN0aW9uKCl7dmFyIHQ9e307cmV0dXJuIHQudXJsPSJodHRwOi8vd3d3LnN1bmluZy5jb20vZW1hbGwvcHJkXzEwMDUyXzEwMDUxXy03XyIrZSgiI2l0ZW1JZCIpLmF0dHIoInZhbHVlIikrIl8uaHRtbCIsaS5jcmM2NCYmKHQudXJsPXZvaWQgMCksdC5uYW1lPWUoImgxIGEiKS50ZXh0KCksdH0sInN1bmluZy1ib29rLW5ldyI6ZnVuY3Rpb24oKXt2YXIgdD1kKCJpbnB1dFtuYW1lPXJldHVyblVSTF0iLDAsInZhbHVlIiwic3VuaW5nIiksbj1lKCJ0aXRsZSIpLmh0bWwoKSxpPSIiO2k9ZSgnI3RvdGFsIGR0OmNvbnRhaW5zKCJJIiknKS5uZXh0KCkuZXEoMCkudGV4dCgpO3ZhciBvPWkubWF0Y2goLyg/OlxkezEzfXxcZHsxMH18XGR7OH0pL2dpKTtpZihpPW51bGwhPW8/b1swXToiIiwiIj09aSl7aT1lKCcuYm9vay1pbmZvIHNwYW46Y29udGFpbnMoIkkiKScpLm5leHQoKS5lcSgwKS50ZXh0KCk7dmFyIG89aS5tYXRjaCgvKD86XGR7MTN9fFxkezEwfXxcZHs4fSkvZ2kpO2k9bnVsbCE9bz9vWzBdOiIifXJldHVybiB0Lm5hbWU9bix0LmlzYm49aSx0fSwic3VuaW5nLXNuYm9vayI6ZnVuY3Rpb24oKXt2YXIgdD1kKCJpbnB1dFtuYW1lPXJldHVyblVSTF0iLDAsInZhbHVlIiwic3VuaW5nIik7cmV0dXJuIHQubmFtZT1lKCIuYnJpZWYtaW5mbyBoMSBzdHJvbmciKS50ZXh0KCksdC5pc2JuPWUoIi5wYXJtLWlzYm4gc3Bhbi5hdHRyLXYiKS50ZXh0KCksdH0sInN1bmluZy1kZ2YiOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxuPXQuZ2V0UHJvZHVjdEluZm8oKSxhPWUoIi5kZXRhaWwtZmlyc3QgaDEudGl0bGUgYSIpLmVxKDApO2lmKG4ubmFtZT1lKCIuZGV0YWlsLWZpcnN0IGgxLnRpdGxlIGEgc3BhbiBzdHJvbmciKS50ZXh0KCksaS5ocmVmPWEuYXR0cigiaHJlZiIpLGkuc2l0ZT0ic3VuaW5nIiwidW5kZWZpbmVkIj09dHlwZW9mIGkuaHJlZnx8IiI9PWkuaHJlZiluLnVzZWxlc3M9ITA7ZWxzZXt2YXIgcj1vLmlzUHJvZHVjdFBhZ2UoKTtyfHwobi51c2VsZXNzPSEwKX1yZXR1cm4gbn0sInN1bmluZy1xaWFuZyI6ZnVuY3Rpb24oKXt2YXIgdD1wKCIucHJvZHVjdC1tYWluLXRpdGxlIGgxIGEiLDAsInN1bmluZyIpLG49ZSgiI2NhdGVudHJ5IikudmFsKCk7cmV0dXJuIG4mJihpLmhyZWY9Imh0dHA6Ly93d3cuc3VuaW5nLmNvbS9lbWFsbC9wcmRfMTAwNTJfMTAwNTFfLTdfIituKyJfLmh0bWwiKSx0fSwic3VuaW5nLXBhaSI6ZnVuY3Rpb24oKXt2YXIgdD1kKCJpbnB1dFtuYW1lPXJldHVyblVSTF0iLDAsInZhbHVlIiwic3VuaW5nIiksbj1lKCIuZmItbWFpbi10aXRsZSBhIikudGV4dCgpLGk9IiIsbz0iIjtvPWUoIi5mYi1tYWluLXRpdGxlIGEiKS5hdHRyKCJocmVmIiksaT1lKCcjdG90YWwgZHQ6Y29udGFpbnMoIkkiKScpLm5leHQoKS5lcSgwKS50ZXh0KCk7dmFyIGE9aS5tYXRjaCgvKD86XGR7MTN9fFxkezEwfXxcZHs4fSkvZ2kpO3JldHVybiBpPW51bGwhPWE/YVswXToiIix0Lm5hbWU9bix0LmlzYm49aSx0LnVybD1vLHR9LGNvbzg6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIjcHJvZHVjdG5hbWUgaDEiKS5jaGlsZHJlbigic3Ryb25nIikuZXEoMCkudGV4dCgpLGlzYm46IiJ9fSxsdXNlbjpmdW5jdGlvbigpe3JldHVybnt1cmw6Imh0dHA6Ly93d3cubHVzZW4uY29tL1Byb2R1Y3QvUHJvZHVjdEluZm8uYXNweD9pZD0iK2UoIiNQcm9kdWN0SWQiKS52YWwoKSxuYW1lOmUoImgxLmdvb2RzbmFtZSIpLnRleHQoKSxpc2JuOiIifX0sImdvbWUtcnVzaGJ1eSI6ZnVuY3Rpb24oKXt2YXIgdD0iIjtyZXR1cm4gdD1lKCIucGljIGEiKS5lcSgwKS5hdHRyKCJocmVmIikse25hbWU6ZSgiLnByb2R1Y3QtaW5mbyAubmFtZSIpLnRleHQoKSxpc2JuOiIiLHVybDp0fX0sZ29tZWhvbmU6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQucHJpY2U9ZSgiI3ByZFByaWNlIikudGV4dCgpLm1hdGNoKC9bMC05Ll0rLylbMF0sdC5uYW1lPWUoIi5wcmRtYWluIC5wcmR0aXQiKS50ZXh0KCksdH0sZ29tZTpmdW5jdGlvbigpe3ZhciB0PXdpbmRvdy5wcmRJbmZvLG49YygpLGk9IiIsbz1lKCJ0aXRsZSIpLmh0bWwoKTtpZihvPWUoIi5wcmR0aXQgaDEiKS50ZXh0KCksbi5uYW1lPW8sbi5pc2JuPWksbi5wcmljZT1lKCIjcHJkUHJpY2UiKS50ZXh0KCksIiI9PW8mJihuLm5hbWU9dCYmdC5wcmROYW1lKSwiIj09bi5wcmljZSYmKG4ucHJpY2U9dCYmdC5wcmljZSksbi5icmFuZF9zdHJpbmc9dCYmdC5icmVhZE5hbWUsbi5pdGVtSWQ9bG9jYXRpb24uaHJlZi5tYXRjaCgvZ29tZVwuY29tXC5jblwvKFtBLVowLTldKyktLylbMV0sbi5jYXRfaWQ9dCYmdC5jYXRJZCxuLndlYnNpdGU9ImdvbWUiLG4ucGljPWUoIi5waWMtc21hbGwgdWwgbGkgaW1nIikuZXEoMCkuYXR0cigic3JjIiksIW4uY2F0X2lkKXt2YXIgYT1lKCIubG9jYWwgYSIpLmVxKDMpLmF0dHIoImhyZWYiKTtuLmNhdF9pZD1hLm1hdGNoKC9jYXRcZCsvKSYmYS5tYXRjaCgvY2F0XGQrLylbMF19cmV0dXJuIG59LCJnb21lLXEiOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiaDEudGl0bGUiKS50ZXh0KCksdC51cmw9ZSgiLnByb19saW5rIilbMF0uaHJlZix0fSwiZ29tZS10YW8iOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLnByZHRpdCIpLnRleHQoKSx0LnByaWNlPXBhcnNlSW50KGUoIiNwcmRQcmljZSIpLnRleHQoKS5tYXRjaCgvWzAtOV0rLylbMF0pLHR9LCJnb21lLXR1YW4iOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0LnVybD1lKCIuY29tcGFyZS1saW5rIikuYXR0cigiaHJlZiIpLHQubmFtZT1lKCJ0aXRsZSIpLmh0bWwoKSx0LnByaWNlPWUoIiNzYWxlUHJpY2UiKS50ZXh0KCksdH0seWloYW9kaWFuOmZ1bmN0aW9uKCl7dmFyIHQ9YygpLG49IiI7ZSgiI3Byb2R1Y3RJZCIpLmxlbmd0aD9uPWUoIiNwcm9kdWN0SWQiKS52YWwoKTplKCIjcHJvZHVjdENvZGUiKS5sZW5ndGg/bj1wYXJzZUludChlKCIjcHJvZHVjdENvZGUiKS50ZXh0KCkuc2xpY2UoMCwtMSkpOmUoIiNtYWluUHJvZHVjdElkIikubGVuZ3RoP249ZSgiI21haW5Qcm9kdWN0SWQiKS52YWwoKTplKCIuc3BlY2lmaWNfZGV0YWlsIHAgc3BhbiIpLmxlbmd0aCYmKG49cGFyc2VJbnQoZSgiLnNwZWNpZmljX2RldGFpbCBwIHNwYW4iKS50ZXh0KCkubWF0Y2goL1xkKyQvKVswXS5zbGljZSgwLC0xKSkpO3ZhciBpPWUoIiNwcm9kdWN0TWFpbk5hbWUiKS50ZXh0KCksbz1pLmluZGV4T2YoIjwiKTtvPjAmJihpPWkuc3Vic3RyKDAsbykpLCIiPT1pJiYoaT1lKCIubWFpbl9pbmZvX2NvbiBwLnByaWNlIikucHJldigpLmVxKDApLnRleHQoKSksIiI9PWkmJihpPWUoIi5wcm9fdGl0IikudGV4dCgpKTt2YXIgYT1lKCcjcHJvZERldGFpbENvdGVudERpdiBkZDpjb250YWlucygiSVNCTiIpJykudGV4dCgpLnN1YnN0cig1KTthPWUudHJpbShhKTt2YXIgcj1sb2NhdGlvbi5ocmVmLm1hdGNoKC9pdGVtXC8oWzAtOV17NSw5fSkvKTtyZXR1cm4gdC5pdGVtSWQ9ciYmclsxXSx0LmltZz1lKCIjanNwcm9DcnVtYiAubUJveCBiIGltZyIpLmVxKDApLmF0dHIoInNyYyIpLHQuYnJhbmRfc3RyaW5nPWUoIiNicmFuZE5hbWUiKS52YWwoKSx0LnByaWNlPWUoIiNjdXJyZW50X3ByaWNlIikudGV4dCgpLnJlcGxhY2UoL1vvv6XCpV0rLywiIiksdC5jYXRfaWQ9ZSgiI2NhdGVnb3J5SWQiKS52YWwoKSx0LmlzYm49YSx0Lm5hbWU9aSx0LmlkPW4sdC5waWM9dC5pbWcsdC53ZWJzaXRlPSJ5aGQiLHR9LCJ5aWhhb2RpYW4tdHVhbiI6ZnVuY3Rpb24oKXt2YXIgdD0iIixuPSIiLGk9IiI7dD1lKCIjZGV0YWlsRGl2IGgyIikuZXEoMCkudGV4dCgpLG49ZSgiI3Byb2R1Y3RJZCIpLnZhbCgpLCIiPT1uJiYobj1lKCIjbWFpblByb2R1Y3RJZCIpLnZhbCgpKSwiIj09dCYmKHQ9ZSgidGl0bGUiKS50ZXh0KCkucmVwbGFjZSgvLnsyfeWboui0rV8x5Y+35ZuiXzHlj7flupflrpjnvZEvLCIiKSk7dmFyIG89ZSgiI3ByaWNlbm93IikudGV4dCgpO3JldHVybiBpPSJodHRwOi8vaXRlbS55aGQuY29tL2l0ZW0vIitlKCIjcHJvZHVjdE1lcmNhbnRJZCIpLnZhbCgpLHtuYW1lOnQsaXNibjoiIixpZDpuLHVybDppLHByaWNlOm99fSx3b21haTpmdW5jdGlvbigpe3ZhciB0PWMoKTt0Lm5hbWU9IiI7dmFyIG49ZSgiLm1haW5fZGV0YWlsIikuZXEoMCkuaHRtbCgpLm1hdGNoKC92YXIgX3RpdGxlID0gIihbXiJdKykiLyk7cmV0dXJuIHQubmFtZT1uWzFdLHQucHJpY2U9ZSgiLmJ1eVByaWNlIikudGV4dCgpLCIiPT10Lm5hbWUmJih0Lm5hbWU9ZSgiLldyYXBUaXQiKS50ZXh0KCkpLHQubmFtZT13aW5kb3cucnRUYWcuZGF0YS5lY29tX3ZpZXcucHJvZFswXS5wX25hbWUsdC5wcmljZT13aW5kb3cucnRUYWcuZGF0YS5lY29tX3ZpZXcucHJvZFswXS5wX3ByaWNlLHQuYnJhbmRfc3RyaW5nPXdpbmRvdy5ydFRhZy5kYXRhLmVjb21fdmlldy5wcm9kWzBdLnBfYnJhbmQsdH0sY29vY2FhOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6IumFt+W8gCAiK2UoIi5wcm9IZWFkZXIgaDEiKS50ZXh0KCl9fSxsZXlvdTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIiNiYXNlSW5mb0RpdiBoMyIpLnRleHQoKSx0LnByaWNlPWUoIi5pdGVtX3JtYiAuZm9udF9udW0iKS50ZXh0KCksdH0sc2hvcGluOmZ1bmN0aW9uKCl7dmFyIHQ9ZS50cmltKGUoIi5jcnVtYnMiKS50ZXh0KCkpLG49ZS50cmltKGUoIi5wcm9kdWN0LWxpc3QgaDIiKS50ZXh0KCkpO3JldHVybiB0PXQucmVwbGFjZSgvKD86XHU1ZjUzXHU1MjRkXHU0ZjRkXHU3ZjZlfFx1OTk5Nlx1OTg3NXwtKS8sIiIsdCkse25hbWU6dCsiICIrbixpc2JuOiIifX0seGl1OmZ1bmN0aW9uKCl7dmFyIHQ9IiI7cmV0dXJuIHQ9ZSgiLnBfdGl0bGUgc3BhbiBoMSIpLnRleHQoKSx7bmFtZTp0LGlzYm46IiJ9fSwieGl1LXR1YW4iOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnhpdF94cXpnb25nIGgyIikudGV4dCgpLGlzYm46IiJ9fSx2amlhOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnNwLXNpbmdsZU5hbWUgLnRpdGxlIikudGV4dCgpLGlzYm46IiJ9fSwiN2N2IjpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5tYWluX3JpZ2h0X3RvcCIpLnRleHQoKSxpc2JuOiIifX0seDpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoInAudG9wX25hbWUiKS50ZXh0KCksaXNibjoiIn19LGd1b3BpOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI3BfbmFtZSIpLnRleHQoKSxpc2JuOiIifX0sbm81OmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiLnBhcnQwMSAucDAxX3IgaDIiKS5odG1sKCk7cmV0dXJuIHQuaW5kZXhPZigiPCIpPjAmJih0PXQuc3Vic3RyKDAsdC5pbmRleE9mKCI8IikpKSx7bmFtZTp0LGlzYm46IiJ9fSxzYXNhOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiLnByb2R1Y3QtdGl0bGVzIikudGV4dCgpLG49ZSgiI3Byb2R1Y3RfaW5mb3JtYXRpb24gLmFjdGlvbi1wcmljIikudGV4dCgpO3JldHVybntuYW1lOnQscHJpY2U6bixpc2JuOiIifX0sZGhjOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiaGVhZCB0aXRsZSIpLnRleHQoKSxpc2JuOiIifX0sIjlkYWRhbyI6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucHJhIGgyIikudGV4dCgpLGlzYm46IiJ9fSxtZXRhbzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5waWJfdGl0bGVfZGV0YWlsIikudGV4dCgpfX0sa3pqMzY1OmZ1bmN0aW9uKCl7dmFyIHQ9ZSgidGl0bGUiKS50ZXh0KCksbj10LmluZGV4T2YoIl8iKTtyZXR1cm57bmFtZTp0LnNsaWNlKDAsbil9fSxudWJpYTpmdW5jdGlvbigpe3ZhciB0PSIiOyIiPT10JiYodD1lKCIjc3ViTmF2IC5zdWItbG9nbyIpLmVxKDApLnRleHQoKSk7dmFyIG49ZSgiLnByaWNlIikudGV4dCgpO3JldHVybntuYW1lOnQscHJpY2U6bn19LGduYzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNwcm9kdWN0LXRpdGxlIikudGV4dCgpLHByaWNlOmUoIi5wcmljZS1yZWd1bGFyIikudGV4dCgpLm1hdGNoKC9bMC05Ll0rLykmJmUoIi5wcmljZS1yZWd1bGFyIikudGV4dCgpLm1hdGNoKC9bMC05Ll0rLylbMF19fSx5bWF0b3U6ZnVuY3Rpb24oKXt2YXIgdD1lKCJtZXRhW25hbWU9ZGVzY3JpcHRpb25dIikuYXR0cigiY29udGVudCIpLG49dC5pbmRleE9mKCLigJ0iKTtyZXR1cm57bmFtZTp0LnNsaWNlKDEsbil9fSxrYW9sYTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wcm9kdWN0LXRpdGxlIikudGV4dCgpLHByaWNlOmUoIi5jdXJyZW50UHJpY2UiKS50ZXh0KCl9fSwiMzYwa3hyIjpmdW5jdGlvbigpe3ZhciB0PWUoIi5yaWdodC1pbnRybyBoMiIpLmh0bWwoKTtyZXR1cm4gdD10LmluZGV4T2YoIjwiKT4wP3Quc3Vic3RyKDAsdC5pbmRleE9mKCI8IikpOnQse25hbWU6dCxpc2JuOiIifX0sbGlrZWZhY2U6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIudEN0biBoMSIpLnRleHQoKSxpc2JuOiIifX0scXhpYW46ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucHJvZHVjdF9ib2R5MV9yaWdodF90aXRsZSBoMSIpLnRleHQoKSxpc2JuOiIifX0sZGlkYW1hbGw6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucHJvZHVjdC1uYW1lIikudGV4dCgpLGlzYm46IiJ9fSx5YW9kaWFuMTAwOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmluZm9ib3hoZWFkZXIgaDEiKS50ZXh0KCksaXNibjoiIn19LGxpamlhYmFieTpmdW5jdGlvbigpe3ZhciB0PWUoIiN0eHRwcm9uYW1lIikudGV4dCgpO3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgdCYmIiIhPXR8fCh0PWUoIiNsYmxfcHJvbmFtZSIpLnRleHQoKSkse25hbWU6dCxpc2JuOiIifX0sIjk5cmVhZCI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQuaXNibj1lKCdsaTpjb250YWlucygi5Lqn5ZOB5p2h56CBIiknKS5odG1sKCksbnVsbD09dC5pc2JufHwidW5kZWZpbmVkIj09dHlwZW9mIHQuaXNibnx8IiI9PXQuaXNibj90LmlzYm49IiI6dC5pc2JuPXQuaXNibi5zdWJzdHIoNyksdH0sImNoaW5hLXB1YiI6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCJoMS5ibGFjazE1YyIpLnRleHQoKSxpc2JuOmUoJ2xpOmNvbnRhaW5zKCJJU0JOIiknKS5jaGlsZHJlbigic3Ryb25nIikuZXEoMCkuaHRtbCgpfX0sYm9va3NjaGluYTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi50aGlzLXBpYyIpLnByZXYoKS50ZXh0KCksdC5uYW1lPWUudHJpbSh0Lm5hbWUpLHQuaXNibj1lKCd0cjpjb250YWlucygi5Ye654mI5pe26Ze077yaIiknKS5jaGlsZHJlbigpLmVxKDEpLnRleHQoKSx0LmlzYm49ZS50cmltKHQuaXNibiksdH0sImJvb2tzY2hpbmEtdHVhbiI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIudGl0d29yZCIpLnRleHQoKS5tYXRjaCgv44CKKFte44CLXSspLylbMV0sdC5wcmljZT1lKCIucHJpY2V0aW1lIC5wcmlnaHQgLk1iaWciKS50ZXh0KCksdC5pc2JuPWUoJy5jb21tZW50czpjb250YWlucygiSVNCTiIpJykudGV4dCgpLm1hdGNoKC9JU0JO77yaKFswLTldKykvKVsxXSwiIj09dC5pc2JuJiYodC5pc2JuPWUoIi5jb21tZW50cyIpLnRleHQoKS5tYXRjaCgvWzAtOV17MTN9LykmJmUoIi5jb21tZW50cyIpLnRleHQoKS5tYXRjaCgvWzAtOV17MTN9LylbMF0pLHR9LGVmZWlodTpmdW5jdGlvbigpe3ZhciB0PWMoKTt0Lm5hbWU9ZSgiLnNoYXJlX3RpdGxlIGVtIikudGV4dCgpO3ZhciBuPWUoIi5ib3hfd3JhcCAucHJpY2UgLmEgcCIpLnRleHQoKS5tYXRjaCgvWzAtOV0rLyk7cmV0dXJuIG4mJih0LnByaWNlPW5bMF0pLHR9LHlpbnRhaTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wLXRpdCIpLnRleHQoKSxpc2JuOiIiLHByaWNlOmUoIi5xZC1udW0iKS50ZXh0KCl9fSx1cmNvc21lOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3RJbmZvcm1hdGlvblRleHQgaDEiKS50ZXh0KCksaXNibjoiIn19LHN0cmF3YmVycnluZXQ6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucHJvZHVjdC1mcmFtZSBoMSIpLnRleHQoKStlKCIucHJvZHVjdC1mcmFtZSBoMiIpLnRleHQoKSxpc2JuOiIifX0sbHVjZTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5Qcm9kdWN0X0RldGFpbCB1bCIpLmNoaWxkcmVuKCJsaSIpLmVxKDApLmNoaWxkcmVuKCJwIikuZXEoMCkudGV4dCgpLGlzYm46IiJ9fSxrMTIxOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLm5ld3Byb2R1Y3RuYW1lMCIpLnRleHQoKSxpc2JuOiIifX0saGFwcGlnbzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5kZXRhaWxfdG9wIC5kZXRhaWxfdGl0ICIpLnRleHQoKSxwcmljZTplKCIucHJpY2Vfbm93IikudGV4dCgpfX0sZ2FwOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3QtbmFtZSBoMSIpLnRleHQoKSxpc2JuOiIifX0sbWlzc2xlbGU6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIjZ29vZHNfbmFtZSIpLnRleHQoKSxpc2JuOiIifX0sYWxsM2M6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuYnV5aW5mbyBoMSIpLnRleHQoKSxpc2JuOiIifX0saWRhcGhuZTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi50aXRsZSIpLnRleHQoKSxpc2JuOiIifX0sYmluZ2dvOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PWUoIiNwTmFtZSBoMSIpLmh0bWwoKSxuPXQubGVuZ3RoLGk9MDtpPG4mJiI8IiE9dFtpXTtpKyspO3JldHVybntuYW1lOnQuc3Vic3RyKDAsaSksaXNibjoiIn19LCJ0YW9iYW8tanUiOmZ1bmN0aW9uKCl7dmFyIHQ9YygpLG49L2l0ZW1faWQ9KFxkKykvZ2kuZXhlYyhsb2NhdGlvbi5ocmVmKTtyZXR1cm4gdC5pZD1uJiYyPT1uLmxlbmd0aCYmblsxXSx0Lm5hbWU9ZS50cmltKGUoIi5tYWluLWJveCBoMiIpLnRleHQoKSksdC51cmw9Imh0dHBzOi8vZGV0YWlsLnRtYWxsLmNvbS9pdGVtLmh0bT9pZD0iK3QuaWQsdC5pdGVtSWQ9bG9jYXRpb24uaHJlZi5tYXRjaCgvaXRlbV9pZD0oXGQrKS8pWzFdLHQucHJpY2U9ZSgiLmN1cnJlbnRQcmljZSAuSl9hY3RQcmljZSIpLmVxKDApLnRleHQoKSx0fSx0bWFsbDpmdW5jdGlvbigpe3ZhciB0PWMoKSxuPWUoIi5hdHRyaWJ1dGVzLWxpc3QgdWwiKS5odG1sKCksaT0iIixvPSIiO251bGw9PW4mJihuPWUoIi5hdHRyaWJ1dGVzLWxpc3QiKS5odG1sKCkpLG49bi5yZXBsYWNlKC8oPzo8XCFcLVwtW15cLV0qXC1cLT58PGxpW14+XSo+fFwgXCApL2dpLCIiKSxuPW4ucmVwbGFjZSgvJm5ic3A7L2dpLCIgIiksbj1uLnJlcGxhY2UoLzxcL2xpW14+XSo+L2dpLCJ8Iiksbj1uLnJlcGxhY2UoL1xuL2dpLCIiKTt2YXIgYT1uLm1hdGNoKG5ldyBSZWdFeHAoL1x8KFx1NTRjMVx1NzI0Yyg/Olw6fFx1ZmYxYSlbXlx8XSspL2dpKSk7aWYoYSlmb3IodmFyIHI9MDtyPGEubGVuZ3RoO3IrKylpKz1hW3JdKyJ8Ijt2YXIgcz1uLm1hdGNoKG5ldyBSZWdFeHAoLygoPzpcdTdjZmJcdTUyMTd8XHU4ZDI3XHU1M2Y3fFx1NTc4Ylx1NTNmN3xcdTZiM2VcdTUzZjcpKD86XDp8XHVmZjFhKVteXHxdKykvZ2kpKTtpZihzKWZvcih2YXIgcj0wO3I8cy5sZW5ndGg7cisrKWkrPXNbcl0rInwiO3ZhciBsPW4ubWF0Y2gobmV3IFJlZ0V4cCgvKElTQk5bXlw6XHVmZjFhXSooPzpcOnxcdWZmMWEpW15cfF0rKS9naSkpO2lmKGwpZm9yKHZhciByPTA7cjxsLmxlbmd0aDtyKyspaSs9bFtyXSsifCI7dC5za2V5d29yZD1pLHQuY2F0X2lkPSIiO3ZhciBwPWUoIiN0Yi1iZWFjb24tYXBsdXMiKS5hdHRyKCJleHBhcmFtcyIpO2lmKHA9cCYmcC5tYXRjaCgvY2F0ZWdvcnk9aXRlbSU1ZihcZCspJi8pLHA9cCYmcFsxXSx0LmNhdF9pZD1wLCIiPT10LmNhdF9pZCl7dmFyIHA9ZSgiI2RldGFpbC1yZWNvbW1lbmQtdmlld2VkIikuYXR0cigiZGF0YS1jYXRpZCIpO3QuY2F0X2lkPXB9dC5yb290X2lkPWUoJyNKX0ZybUJpZCBpbnB1dFtuYW1lPSJyb290Q2F0SWQiXScpLnZhbCgpLHQucGljPWUoIiNKX0ltZ0Jvb3RoIikuYXR0cigic3JjIiksdC5waWMuaW5kZXhPZigiaHR0cHM6Iik9PT0tMSYmKHQucGljPSJodHRwOiIrdC5waWMpO3ZhciBkPWxvY2F0aW9uLmhyZWYubWF0Y2goL1s/Jl1pZD0oXGQrKS8pO2Q9ZCYmZFsxXTt2YXIgaD1lKCJtZXRhW25hbWU9J21pY3Jvc2NvcGUtZGF0YSddIikuYXR0cigiY29udGVudCIpLHU9aCYmaC5tYXRjaCgvdXNlcmlkPShcZCspLyk7bz11WzFdO3ZhciBtPWUoIiNKX1Byb21vQm94IC50Yi13clR1YW4tbnVtIikudGV4dCgpO3JldHVybiBtfHwobT1lKCIjSl9QcmljZSIpLnRleHQoKSksbXx8KG09ZSgiI0pfU3RyUHJpY2UiKS50ZXh0KCkpLG18fChtPWUoIi50bS1wcm9tby1wcmljZSAudG0tcHJpY2UiKS50ZXh0KCkpLG18fChtPWUoIiNKX1N0clByaWNlTW9kQm94IC50bS1wcmljZSIpLnRleHQoKSksbXx8KG09ZSgiLnRtLXByaWNlIikudGV4dCgpKSx0LnNob3BfbmFtZT1lKCIuc2hvcGtlZXBlciAucmlnaHQgYSIpLnRleHQoKSx0LnNob3BfYWRkcmVzPWUoIi5sb2N1cyAucmlnaHQiKS50ZXh0KCkucmVwbGFjZSgvKD86XHR8XG58XHMpL2dpLCIiKSx0LnByaWNlPW0sdC51c2VyaWQ9byx0Lm5hbWU9ZSgiI0pfRGV0YWlsTWV0YSAudGItZGV0YWlsLWhkIGgxIikudGV4dCgpLnJlcGxhY2UoL1xuL2csIiIpLnRyaW0oKSx0Lml0ZW1JZD1kLHR9LHRhb2JhbzpmdW5jdGlvbigpe3ZhciB0PWMoKSxuPWUoIi5hdHRyaWJ1dGVzLWxpc3QgdWwiKS5odG1sKCksaT0iIixvPSIiO251bGw9PW4mJihuPWUoIi5hdHRyaWJ1dGVzLWxpc3QiKS5odG1sKCkpLG49bi5yZXBsYWNlKC8oPzo8XCFcLVwtW15cLV0qXC1cLT58PGxpW14+XSo+fFwgXCApL2dpLCIiKSxuPW4ucmVwbGFjZSgvJm5ic3A7L2dpLCIgIiksbj1uLnJlcGxhY2UoLzxcL2xpW14+XSo+L2dpLCJ8Iiksbj1uLnJlcGxhY2UoL1xuL2dpLCIiKTt2YXIgYT1uLm1hdGNoKG5ldyBSZWdFeHAoL1x8KFx1NTRjMVx1NzI0Yyg/Olw6fFx1ZmYxYSlbXlx8XSspL2dpKSk7aWYoYSlmb3IodmFyIHI9MDtyPGEubGVuZ3RoO3IrKylpKz1hW3JdKyJ8Ijt2YXIgcz1uLm1hdGNoKG5ldyBSZWdFeHAoLygoPzpcdTdjZmJcdTUyMTd8XHU4ZDI3XHU1M2Y3fFx1NTc4Ylx1NTNmN3xcdTZiM2VcdTUzZjcpKD86XDp8XHVmZjFhKVteXHxdKykvZ2kpKTtpZihzKWZvcih2YXIgcj0wO3I8cy5sZW5ndGg7cisrKWkrPXNbcl0rInwiO3ZhciBsPW4ubWF0Y2gobmV3IFJlZ0V4cCgvKElTQk5bXlw6XHVmZjFhXSooPzpcOnxcdWZmMWEpW15cfF0rKS9naSkpO2lmKGwpZm9yKHZhciByPTA7cjxsLmxlbmd0aDtyKyspaSs9bFtyXSsifCI7dC5za2V5d29yZD1pLHQuY2F0X2lkPWUoIiNKX1BpbmUiKS5hdHRyKCJkYXRhLWNhdGlkIiksdC5yb290X2lkPWUoIiNKX1BpbmUiKS5hdHRyKCJkYXRhLXJvb3RpZCIpLHQucGljPWUoIiNKX0ltZ0Jvb3RoIikuYXR0cigic3JjIik7dmFyIHA9ZSgibWV0YVtuYW1lPSdtaWNyb3Njb3BlLWRhdGEnXSIpLmF0dHIoImNvbnRlbnQiKSxkPXAmJnAubWF0Y2goL3VzZXJpZD0oXGQrKS8pO289ZCYmZFsxXTt2YXIgaD1lKCIjSl9QcmljZSIpLnRleHQoKTtyZXR1cm4gdC5zaG9wX25hbWU9ZSgiLnNob3BrZWVwZXIgLnJpZ2h0IGEiKS50ZXh0KCksdC5zaG9wX2FkZHJlcz1lKCIubG9jdXMgLnJpZ2h0IikudGV4dCgpLnJlcGxhY2UoLyg/Olx0fFxufFxzKS9naSwiIiksdC5ubmlkPWxvY2F0aW9uLmhyZWYubWF0Y2goL1s/Jl1pZD0oWzAtOV0rKS8pJiZsb2NhdGlvbi5ocmVmLm1hdGNoKC9bPyZdaWQ9KFswLTldKykvKVsxXSx0LnByaWNlPWgsdC5uZXd0aXRsZT1lKCIjSl9UaXRsZSAudGItbWFpbi10aXRsZSIpLnRleHQoKS50cmltKCksdC5pdGVtSWQ9dC5ubmlkLHQudXNlcmlkPW8sdH0sInRhb2Jhby1zcHUiOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI2RldGFpbCAuZGV0YWlsLWhkIGgzIikudGV4dCgpLGlzYm46IiJ9fSx4aWppZTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5kZXRhaWxfc2hfcmlnaHQgaDEiKS50ZXh0KCksaXNibjoiIn19LGNhb21laXBhaTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNwcm9fbmFtZSBoMiIpLnRleHQoKSxpc2JuOiIifX0sZGFodW96aGFuOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb3BlcnR5IGgyIikudGV4dCgpLGlzYm46IiJ9fSxodW9saWRhOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmgxX3RpdGxlIGgxIikudGV4dCgpLGlzYm46IiJ9fSwiMTJkaWFuIjpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5nb29kc3RpdGxlIikudGV4dCgpLGlzYm46IiJ9fSwxMTE6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIuZGV0YWlsbmF2IHNwYW4iKS5sYXN0KCkudGV4dCgpLHQucHJpY2U9d2luZG93Ll9CRkQuQkZEX0lORk8ucHJpY2UsdH0sZGFveWFvOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3RfMV80IC5kX3RhYmxlXzMgLmZvbnRfMDEiKS50ZXh0KCksaXNibjoiIn19LGRvdWJhbjpmdW5jdGlvbigpe3ZhciB0PWUoIiNpbmZvIikuaHRtbCgpLG49IiIsaT10LmluZGV4T2YoIklTQk46Iiksbz10Lmxlbmd0aDtmb3IoaSs9MTI7aTxvO2krKyl0W2ldPj0iMCImJnRbaV08PSI5IiYmKG4rPXRbaV0pO2lmKCIiPT09bil7dmFyIGE9ZSgiI2NvbnRlbnQgLmluZGVudCIpLmVxKDEpLnRleHQoKS5tYXRjaCgvaXNibjogKFxkKykvKTthJiYobj1hWzFdLG49cyhuKSl9dmFyIHI9d2luZG93LmxvY2F0aW9uLmhyZWYudG9TdHJpbmcoKSxsPXIubWF0Y2goL2d3ZF9pc2JuPShcZCspLyk7IiI9PW4mJmwmJihuPWxbMV0pO3ZhciBwPWMoKTtyZXR1cm4gcC5pc2JuPW4scH0sImRvdWJhbi1kb25neGkiOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0LnRpdGxlPWUoIi5jb21tb2RpdHktbmFtZSBhIikudGV4dCgpLHR9LGl0MTY4OmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnRpdGxlMTAwIGgxIikudGV4dCgpLGlzYm46IiJ9fSxwY29ubGluZTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5wcm8tdGl0IC5uYW1lIikudGV4dCgpLGlzYm46IiJ9fSxwY3BvcDpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi50aXQxIGgxIikudGV4dCgpLGlzYm46IiJ9fSx5b2thOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnBJbmZvX2MyX2x1IGgyIikudGV4dCgpLGlzYm46IiJ9fSwiNTViYnMiOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmNwanNyaWdodF9uYW1lIGgxIikudGV4dCgpLGlzYm46IiJ9fSxvbmx5bGFkeTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5ibm5hZXJfdGV4dCIpLnRleHQoKSxpc2JuOiIifX0sIjI0ZHEiOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmdvb2RzbmFtZSIpLnRleHQoKSxpc2JuOiIifX0sbGluZ3NoaTpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNkZXRhaWxfYmIgaDMiKS50ZXh0KCksaXNibjoiIn19LG9ubHl0czpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIiNicmVhZCAubGFzdCIpLmVxKDEpLnRleHQoKSxpc2JuOiIifX0sd2lueHVhbjpmdW5jdGlvbigpe3ZhciB0PSIiO3Q9ZSgnbGk6Y29udGFpbnMoIkkgUyBCIE7vvJoiKScpLnRleHQoKS5zdWJzdHIoOCk7dmFyIG49IiI7cmV0dXJuIG49ZSgibWV0YVtuYW1lPSdrZXl3b3JkcyddIikuYXR0cigiY29udGVudCIpLHtuYW1lOm4saXNibjp0fX0sYmVpZmFib29rOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiI0xhYmVsSVNCTiIpLnRleHQoKTtyZXR1cm4gdD10LnJlcGxhY2UoLy0vZywiIikse25hbWU6ZSgiI0xhYmVsVGl0bGUiKS50ZXh0KCksaXNibjp0fX0sInNpbmEtdGVjaCI6ZnVuY3Rpb24oKXt2YXIgdD1lKCIuemNibGswMiBoMiIpLmh0bWwoKTtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIHQmJiIiIT10JiZudWxsIT10fHwodD1lKCIuUGFydEFUaXRsZSBoMiIpLmh0bWwoKSwidW5kZWZpbmVkIiE9dHlwZW9mIHQmJiIiIT10JiZudWxsIT10fHwodD1lKCIuSW5mbyBoMiIpLmh0bWwoKSwidW5kZWZpbmVkIiE9dHlwZW9mIHQmJiIiIT10JiZudWxsIT10fHwodD1lKCIucHJvZHVjdC1uYW1lIGgxIikuaHRtbCgpLCJ1bmRlZmluZWQiIT10eXBlb2YgdCYmIiIhPXQmJm51bGwhPXR8fCh0PWUoInRpdGxlIikuaHRtbCgpLnN1YnN0cigwLGUoInRpdGxlIikuaHRtbCgpLmluZGV4T2YoIl8iKSkpKSkpLHQuaW5kZXhPZigiPCIpPjAmJih0PXQuc3Vic3RyKDAsdC5pbmRleE9mKCI8IikpKSx0PXQucmVwbGFjZSgiJm5ic3A7IiwiIikse25hbWU6dCxpc2JuOiIifX0sInNpbmEtYmFieSI6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZHBfaW5mb190aXRsZSIpLnRleHQoKSxpc2JuOiIifX0sInNpbmEtZWxhZGllcyI6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuYmxrMDEgaDEiKS50ZXh0KCksaXNibjoiIn19LCJzb2h1LWl0IjpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi50aWwgaDIiKS50ZXh0KCksaXNibjoiIn19LCJzb2h1LXdvbWVuIjpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5yIGgyIHNwYW4iKS50ZXh0KCksaXNibjoiIn19LCIxNjMtZGlnaSI6ZnVuY3Rpb24oKXt2YXIgdD1lKCIuY29sQSBoMyIpLnRleHQoKTtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIHQmJm51bGwhPXQmJiIiIT10fHwodD1lKCIuY29sQSBoMSIpLnRleHQoKSkse25hbWU6dCxpc2JuOiIifX0sIjE2My1sYWR5IjpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIi5kZXRhaWxib3gtbWFpbiBoMSIpLnRleHQoKSxpc2JuOiIifX0sInFxLWRpZ2kiOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiLnRvcF9oZCBoMiIpLnRleHQoKTtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIHQmJiIiIT10JiZudWxsIT10fHwodD1lKCIuZm9udDA3NTEgc3BhbiIpLnRleHQoKSkse25hbWU6dCxpc2JuOiIifX0sInFxLWhlYSI6ZnVuY3Rpb24oKXt2YXIgdD1lKCIjcGRTaG93IGgxIikudGV4dCgpO3JldHVybiJ1bmRlZmluZWQiIT10eXBlb2YgdCYmIiIhPXQmJm51bGwhPXR8fCh0PWUoIiNwZFNob3cgLmxvbmdOYW1lIikudGV4dCgpKSx7bmFtZTp0LGlzYm46IiJ9fSwicXEtbGFkeSI6ZnVuY3Rpb24oKXt2YXIgdD1lKCIucHJvX2luZm8gLnRpdGxlIikudGV4dCgpO3JldHVybntuYW1lOnQsaXNibjoiIn19LHZpcHNob3A6ZnVuY3Rpb24oKXt2YXIgdD1mdW5jdGlvbigpe3ZhciB0O2lmKHdpbmRvdy5PX3ZpZXdlZCl0PXtjYXRfaWQ6d2luZG93Lk9fdmlld2VkLmNhdGVnb3J5X2lkLGNhdF9uYW1lOndpbmRvdy5PX3ZpZXdlZC5jYXRlZ29yeV9uYW1lfTtlbHNle3ZhciBuPWUoIiNKLWJvdHRvbS1hZENvZGUiKS5uZXh0KCkudGV4dCgpO258fChuPWUoIiNKX3RvcGJhcl9wb3BfdGVtcGxhdGUiKS5uZXh0KCkudGV4dCgpKSxuPS92YXIgT192aWV3ZWQgPSB7KFtcc1xTXSo/KX0vLmV4ZWMobiksbiYmKG49blsxXSk7dmFyIGk9LydjYXRlZ29yeV9pZCcgOiAnKFxkKyknLy5leGVjKG4pO2kmJihpPWlbMV0pO3ZhciBvPS8nY2F0ZWdvcnlfbmFtZScgOiAnKC4qPyknLy5leGVjKG4pO28mJihvPW9bMV0pLHQ9e2NhdF9uYW1lOm8sY2F0X2lkOml9fXJldHVybiB0fSxuPXQoKSxpPSIiO3JldHVybiBpPWUoIi5idF9sYXlvdXQgbGk6Y29udGFpbnMoJ+WVhuWTgeWQjeensCcpIC5idF9sdF9wYXJfcCIpLnRleHQoKSwiIj09aSYmKGk9ZS50cmltKGUoIi5wcm9faW5mbyAuZ29vZHNfcHJvdGl0IikudGV4dCgpKSksIiI9PWkmJihpPWUoIi5idF90aXRsZSIpLnRleHQoKS5yZXBsYWNlKC8oPzpcbnxcdHxccykvZ2ksIiIpKSx7cHJpY2U6ZSgiLnBib3gtcHJpY2UgZW0iKS50ZXh0KCksbmFtZTppLGlzYm46IiIsY2F0X2lkOm4uY2F0X2lkLGNhdF9uYW1lOm4uY2F0X25hbWUsYnJhbmRfc3RyaW5nOmUoIi5waWItdGl0bGUtY2xhc3MgYSIpLnRleHQoKX19LGoxOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3RhcmVhLXJpZ2h0LTEgSDEiKS50ZXh0KCksaXNibjoiIn19LHlvdWdvdTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi5nb29kc0NvbiAgLmYxNiIpLnRleHQoKSwiIj09dC5uYW1lJiYodC5uYW1lPWUoIi5nb29kc0NvbiBoMSIpLnRleHQoKS5yZXBsYWNlKC9ccy9nLCIiKSksZSgiI3lpdGlhblByaWNlIikmJih0LnByaWNlPWUoIiN5aXRpYW5QcmljZSIpLnRleHQoKSksdH0sanhkeWY6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIucHJvZHVjdCAucHJvX25hbWUiKS50ZXh0KCksaXNibjoiIn19LHlhb2Zhbmc6ZnVuY3Rpb24oKXt2YXIgdD1lKCIucHJvX3RpdGxlIikuaHRtbCgpO3JldHVybiB0LmluZGV4T2YoIjwiKT4wJiYodD10LnN1YnN0cigwLHQuaW5kZXhPZigiPCIpKSkse25hbWU6dCxpc2JuOiIifX0sdGlhbnRpYW46ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIuZGV0YWlsX21ieCAuY19lZCIpLnRleHQoKSxpc2JuOiIifX0sInRpYW50aWFuLXR1YW4iOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgndGQ6Y29udGFpbnMoIuWVhuWTgeWQjeensCIpK3RkIHNwYW4nKS50ZXh0KCksdC5wcmljZT1lKCIuYnV5X3ByaSIpLnRleHQoKSx0fSx5aWd1bzpmdW5jdGlvbigpe3JldHVybntuYW1lOmUudHJpbShlKCIubWFpbiAuY3BuYW1lIGgxIikudGV4dCgpKSxpc2JuOiIifX0saml1eGlhbjpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi5kbWFpbkJveCAuZGV0YWlsLWRlcGljdCAuZGVwaWN0LW5hbWUgaDEiKS50ZXh0KCksIiI9PXQubmFtZSYmKHQubmFtZT1lKCIuZGV0YWlsTmFtZSBoMiIpLnRleHQoKS5yZXBsYWNlKCIo56eB5Lq65a6a5Yi2KSIsIiIpKSx0LnByaWNlPWUoIiNfbm93UHJpY2VTdHIiKS50ZXh0KCksdH0sIm1laWxlbGUtdHVhbiI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7dC5uYW1lPWUoIiNKU190Z19nb29kc19uYW1lIikudGV4dCgpO3ZhciBuPWUoIiNKU19ibnJfc3RhdGUiKS50ZXh0KCkubWF0Y2goL1swLTldKy8pO3JldHVybiBuJiYodC5wcmljZT1uWzBdKSx0fSxlaGFpZXI6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIuYS1wcm9kdWN0LXRpdGxlIikudGV4dCgpLHQucHJpY2U9ZSgiLnByaWNldGFnIC5jdXItcHJpY2UiKS50ZXh0KCkubWF0Y2goL1swLTldKy8pWzBdLHR9LHVsZTpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIi5wcm9kdWN0SW5mbyBoMSIpLnRleHQoKSx0LnByaWNlPWUoIi5wcm9kdWN0UHJpY2UgLnByaWNlIHN0cm9uZyIpLnRleHQoKSx0fSxlc3ByaXQ6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIjaXRlbU5hbWUiKS50ZXh0KCkucmVwbGFjZSgvXHMvZywiIiksdC5wcmljZT1lKCIjcGRwUHJpY2UiKS50ZXh0KCkucmVwbGFjZSgvW++/pcKlXSsvLCIiKSx0fSxsaW5pbmc6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQubmFtZT1lKCIjcHJvZHVjdF9uYW1lIikudGV4dCgpLnJlcGxhY2UoL1xzL2csIiIpLHQucHJpY2U9ZSgiI29mZmVyUHJpY2UgLnYiKS50ZXh0KCkucmVwbGFjZSgvW1xz77+lwqVdL2csIiIpLHR9LG95ZWFoOmZ1bmN0aW9uKCl7dmFyIHQ9IiI7cmV0dXJuIHQ9ZSgibWV0YVtuYW1lPSdLZXl3b3JkcyddIikuYXR0cigiY29udGVudCIpLHtuYW1lOnQsaXNibjoiIn19LGx2eW91bWFsbDpmdW5jdGlvbigpe3JldHVybntuYW1lOmUoIm1ldGFbbmFtZT0na2V5d29yZHMnXSIpLmF0dHIoImNvbnRlbnQiKSxpc2JuOiIifX0sbGVmZW5nOmZ1bmN0aW9uKCl7dmFyIHQ9IiIsbj0iIjt0PWUudHJpbShlKCIucGF0aCIpLnRleHQoKS5zcGxpdCgiLyIpLnBvcCgpKSxuPSJodHRwOi8vcHJvZHVjdC5sZWZlbmcuY29tL3Byb2R1Y3QvIitlKCIjcHJvZHVjdElkIikudmFsKCkrIi5odG1sIjt2YXIgbz17dXJsOm4sbmFtZTp0LGlzYm46IiJ9O3JldHVybiBpLmRwLnByaWNlfHwoby5wcmljZT1lKCIuZGl0eS1wcmljZS1jIikudGV4dCgpKSxvfSx3YmlhbzpmdW5jdGlvbigpe3ZhciB0PWMoKTtyZXR1cm4gdC5uYW1lPWUoIiNpbmZvX29uX3NhbGUgaDEiKS50ZXh0KCksdC5wcmljZT1lKCIjcHJpY2UiKS50ZXh0KCksdH0sYmFuZ2dvOmZ1bmN0aW9uKCl7dmFyIHQ9YygpO3JldHVybiB0Lm5hbWU9ZSgiLm1ic2hvcF9kZXRhaWxfcGRicmFuZCBhIikudGV4dCgpK2UoIi5tYnNob3BfZGV0YWlsX3BkbmFtZSIpLnRleHQoKS5yZXBsYWNlKC9ccy9nLCIiKSx0LnByaWNlPWUoIiNzYWxlUHJpY2VUZXh0IikudGV4dCgpLHR9LHlvaG9idXk6ZnVuY3Rpb24oKXt2YXIgdD1jKCk7cmV0dXJuIHQucHJpY2U9ZSgiLnByb21vdGlvbi1wcmljZSAucHJpY2UiKS50ZXh0KCksdC5wcmljZXx8KHQucHJpY2U9ZSgiLnByb2R1Y3QtZGV0YWlsLXBhZ2UgLm1haW4gLnByaWNlIikudGV4dCgpKSx0Lm5hbWU9ZSgiLnByb2R1Y3QtZGV0YWlsLXBhZ2UgLm1haW4gLm5hbWUiKS50ZXh0KCksdH0sc3VuZGFuOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiI2J1eV9mb3JtIGRpdi5ib3g+ZGl2Lm5nLWluZm8+aDIiKS50ZXh0KCkscHJpY2U6ZSgiI2J1eV9mb3JtIGRpdi5ib3g+ZGl2Lm5nLXNpemUgc3Bhbi5wcmljZSIpLnRleHQoKX19LGppYWU6ZnVuY3Rpb24oKXtyZXR1cm57bmFtZTplKCIjY29udGVudCBkaXYuaXRlbS1pbnRybz5kaXYucHJvcGVydHk+aDEiKS50ZXh0KCkscHJpY2U6ZSgiI2NvbnRlbnQgZGl2Lml0ZW0taW50cm8+ZGl2LnByb3BlcnR5IC5pdGVtRGV0YWlsLWl0ZW1QcmljZSBzcGFuLmotaXRlbS1ub3ctcHJpY2UiKS50ZXh0KCl9fSx6YXpoaXB1OmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLmljX2NvbnRlbnQgZGl2LmdyaWRfbSBkaXYueGJhc2Vfcm93MT5oMSIpLnRleHQoKSxwcmljZTplKCIuaWNfY29udGVudCBkaXYuZ3JpZF9tIGRpdi54YmFzZV9yb3cyIHNwYW4ubW9kX3ByaWNlIikudGV4dCgpLnNwbGl0KCLvv6UiKVsyXS5zcGxpdCgiLiIpWzBdCn19LG1pY3Jvc29mdHN0b3JlOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiI2lubmVyIGRpdi5wZHBDb250ZW50PmRpdi5wZHBJbmZvPi5wZHBfbW9kdWxlX2luZm8+ZGl2LnRpdGxlPmgxIikudGV4dCgpfHxlKCIjaW5uZXIgZGl2LmNvbnRlbnQtYmxvY2sgLnJpZ2h0IGgyLnRpdGxlIikudGV4dCgpLG49ZSgiI2lubmVyIGRpdi5wZHBDb250ZW50PmRpdi5wZHBJbmZvPi5wZHBfbW9kdWxlX2luZm8+LnByaWNlQW5kUmFuaz5kaXYucHJpY2U+c3Bhbi5jdXJyZW50IikudGV4dCgpfHxlKCIjc2VsZWN0VmFyaWFudFByb2R1Y3Qgc3Bhbi5wcmljZSIpLnRleHQoKTtyZXR1cm57bmFtZTp0LHByaWNlOm59fSx4Z2RxOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3QtbWFpbiAucHJvZHVjdC10aXRsZXM+aDIiKS50ZXh0KCkscHJpY2U6ZSgiLnByb2R1Y3QtbWFpbiAucHJvZHVjdC1jb25jZXJucyBsaTpmaXJzdCAuYWN0aW9uLXByaWNlIikudGV4dCgpfX0seHRlcDpmdW5jdGlvbigpe3ZhciB0PWUoIi5nb29kc0RldGFpbHNCb3ggLmdvb2RzUHJpY2U+ZHQiKS50ZXh0KCksbj1lKCIuZ29vZHNEZXRhaWxzQm94IC5nb29kc1ByaWNlIGRkPnVsPmxpPmRpdjpmaXJzdD5zcGFuIikudGV4dCgpO3JldHVybiB0JiZufHwodD1lKCIud3JhcHBlciAuZ3JvdXBUaXR0bGUiKS50ZXh0KCksbj1lKCIud3JhcHBlciAuZ3JvdXBQcmljZUJveD5hPnNwYW4iKS50ZXh0KCkpLHtuYW1lOnQscHJpY2U6bn19LG1pZGVhOmZ1bmN0aW9uKCl7cmV0dXJue25hbWU6ZSgiLnByb2R1Y3Rfd3JhcD4ucHJvZHVjdF9yaWdodD5oMSIpLnRleHQoKSxwcmljZTplKCIucHJvZHVjdF93cmFwPi5wcm9kdWN0X3JpZ2h0IC5wcmljZSIpLnRleHQoKX19fTt0LmV4cG9ydHMuZ2V0PWZ1bmN0aW9uKHQpe2lmKDE9PT1pLnBhZ2VJbmZvLnR5cGUpcmV0dXJuIHZvaWQgdCgpO3A9aS5wYWdlSW5mby5zaXRlTmFtZTt2YXIgbj13aW5kb3cubG9jYXRpb24uaHJlZjt0cnl7cCYmcC5pbmRleE9mKCJhbWF6b24iKT4tMSYmKHA9ImFtYXpvbiIpO3ZhciBvPWhbcF0oKTtvLm9sZFByaWNlPW8ucHJpY2Usby5wcmljZSYmby5wcmljZS5tYXRjaCgvKD86XD98XO+8nykvKSYmKG8uYWN0aXZlUHJpY2U9ITApLG8ucHJpY2U9bChvLnByaWNlKSxvLm9sZFByaWNlPWwuZ2V0UHJpY2VCZWZvcmVFeGNoYW5nZVJhdGUoby5vbGRQcmljZSksby5zaXRlPXAsbnVsbD09by51cmwmJihudWxsIT1vLmhyZWY/by51cmw9by5ocmVmOm8udXJsPW4pfWNhdGNoKHMpe2kuZGVidWcmJmNvbnNvbGUubG9nKHMpO3ZhciBvPWMoKTtvLnNpdGU9cCxvLnVybD1ufWlmKCJ1bmRlZmluZWQiIT10eXBlb2Ygby51c2VsZXNzJiZvLnVzZWxlc3MpcmV0dXJuIG51bGw7aWYoby5pY29uPW8udXJsLnJlcGxhY2UoL15odHRwW3NdP1w6XC9cLy9nLCIiKSxvLmljb249by5pY29uLnJlcGxhY2UoL1wvLio/JC9nLCIiKSxvLmljb24rPSIvZmF2aWNvbi5pY28iLCJ1bmRlZmluZWQiIT10eXBlb2Ygby5pZCYmbnVsbCE9by5pZHx8KG8uaWQ9IiIpLCJ1bmRlZmluZWQiIT10eXBlb2Ygby5rZXl3b3JkJiZudWxsIT1vLmtleXdvcmR8fChvLmtleXdvcmQ9IiIpLCJ1bmRlZmluZWQiIT10eXBlb2Ygby5za2V5d29yZCYmbnVsbCE9by5za2V5d29yZHx8KG8uc2tleXdvcmQ9IiIpLCJ1bmRlZmluZWQiIT10eXBlb2Ygby5pc2JuJiZudWxsIT1vLmlzYm58fChvLmlzYm49IiIpLCJ1bmRlZmluZWQiIT10eXBlb2Ygby5uYW1lJiYiIiE9by5uYW1lfHwoby5uYW1lPWUoInRpdGxlIikuaHRtbCgpKSxpLmRwPW8sby5wcmljZSl0JiZ0KCk7ZWxzZXt2YXIgcD1pLnNpdGUsZD1yLmdldFNpdGVJZChwKTtkfHwoZD05OTk5KSxhLmluaXQoZCxmdW5jdGlvbihlKXtlJiZlPjAmJihvLm9sZFByaWNlPWUsby5wcmljZT1lKSx0JiZ0KCl9KX1yZXR1cm4gb319KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaSh0LGUsbil7ZnVuY3Rpb24gaSgpe2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKXt2YXIgYT10W2ldLHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcihhKTtpZihyKXJldHVybiBvKHIudGV4dENvbnRlbnQsZSxuKX1yZXR1cm4tMX1yZXR1cm4gZT1lfHwiLiIsbj1ufHwiLCIsaX1mdW5jdGlvbiBvKHQsZSxuKXtpZihlPWV8fCIuIixuPW58fCIsIix0PT09LTEpcmV0dXJuLTE7aWYodCYmKHQ9dC50b1N0cmluZygpLnJlcGxhY2UobiwiIiksZSYmIi4iIT09ZSYmKHQ9dC5yZXBsYWNlKGUsIi4iKSksdD10Lm1hdGNoKC9bMC05Ll0rLykpKXRyeXtyZXR1cm4gcGFyc2VGbG9hdCh0WzBdKX1jYXRjaChpKXtyZXR1cm4tMX1yZXR1cm4tMX1mdW5jdGlvbiBhKHQpe2Z1bmN0aW9uIGkoaSl7ZnVuY3Rpb24gbyh0KXtlLmRwLnByaWNlPXQsZS5kcC5vbGRQcmljZT10O3ZhciBpPSIiOyFlLmRwLm5hbWV8fCIzNjBidXkiIT1lLmRwLnNpdGUmJiJzdW5pbmciIT1lLmRwLnNpdGV8fChpPWUuZHAubmFtZS50cmltKCkpLG4oNDEpLnNlbmRQcmlDaGVjayhbe3VybDpkb2N1bWVudC5sb2NhdGlvbi5ocmVmLHByaWNlOnQsdGxlOmksY3JjMzI6IiJ9XSl9dmFyIGE9dCgpO2E9PT0tMXx8MD09YT9zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7byh0KCkpfSwyNTAwKToocz1hLG8oYSkpLGkoYSl9cmV0dXJuIGl9ZnVuY3Rpb24gcih0KXtyZXR1cm4gYShpKHQpKX12YXIgcz12b2lkIDAsbD17fTtsWzFdPVsiI3ByaWNlYmxvY2tfZGVhbHByaWNlIiwiI3ByaWNlYmxvY2tfc2FsZXByaWNlIiwiI3ByaWNlYmxvY2tfb3VycHJpY2UiLCIjdG1tU3dhdGNoZXMgLmEtYnV0dG9uLWlubmVyIC5hLWJ1dHRvbi10ZXh0IC5hLWNvbG9yLXByaWNlIiwiI3RtbVN3YXRjaGVzIC5hLWJ1dHRvbi1pbm5lciAgLmEtY29sb3Itc2Vjb25kYXJ5IHNwYW4iLCIjc29sZEJ5VGhpcmRQYXJ0eSAub2ZmZXItcHJpY2UiLCIjb2xwX2ZlYXR1cmVfZGl2IC5hLWNvbG9yLXByaWNlIiwiLmEtY29sb3ItcHJpY2UiXSxsWzJdPVsiI2RkLXByaWNlIiwiI2RfcHJpY2UiXSxsWzNdPVsiI2pkLXByaWNlIiwiLnAtcHJpY2UgLnByaWNlIiwiI3ByaWNlIiwiLnByaWNlIl0sbFs0XT1mdW5jdGlvbigpe2EoZnVuY3Rpb24odCl7dmFyIGU9dC5xdWVyeVNlbGVjdG9yKCIjb21IaWRkZW5QcmljZSIpLnZhbHVlO3JldHVybiBvKGUpfSl9LGxbMTBdPVsiI2RsX3NlbGxfcHJpY2UiXSxsWzEyXT1bImRpdi5wcm9tb3Rpb24tY29udGFpbmVyID4gcDpudGgtY2hpbGQoMikiXSxsWzEzXT1bIi5kaXR5LXByaWNlLWMiXSxsWzE0XT1bIi5wcmljZTEuc2FsZVByaWNlX2JpZyJdLGxbMTddPVsiLmxlZnRQcmljZSJdLGxbMThdPVsiLm1lc3NhZ2VfcHJpY2UiLCIubWVzc2FnZV90aXRsZV9uYW1lX2IiXSxsWzE5XT1bIi50ZWh1aU1vbmV5Il0sbFsyMV09WyIjcHJvZFByaWNlQWoiXSxsWzIyXT1bIiNwcm9kdWN0X3ByaWNlIl0sbFsyNF09WyIuZC1yZWFsLXByaWNlIl0sbFsyNV09WyIubWFpbnByaWNlIiwiLnNtYWxsLXByaWNlIl0sbFsyOF09WyIjcHJkUHJpY2UiLCIjc2FsZVByaWNlIl0sbFszMV09WyIjcHJpY2Vub3ciLCIjY3VycmVudF9wcmljZSIsIiNkZXRhaWxfcHJvbV9wcmljZSIsIiJdLGxbMzJdPVsiI2J1eVByaWNlIl0sbFszM109WyIjbGV5b3VqaWEiLCIuaXRlbV9sIC5mb250X251bSJdLGxbMzRdPVsiLnNlbFByaWNlIl0sbFszNV09WyIjcHJkX3ByaWNlX2RpdiJdLGxbNDBdPVsiLkdkX3Nob3BfUHJpY2UgYiJdLGxbNDFdPVsiLmpzLmpzaiBiIl0sbFs0M109WyIucHJpY2UiXSxsWzQ1XT1bIi5wcmljZSAuYWN0aW9uLXByaWNlIl0sbFs1MF09WyJwcm9fcHJvbW90aW9uX3ByaWNlIiwiI3Byb19tYWxsX3ByaWNlIl0sbFs1MV09WyIjU0dvb2RzUHJpY2UiXSxsWzU0XT1bIiNtcHJpY2UiXSxsWzYwXT1bIiN4eGpnIC5wcm9fYnV5X3NlbiIsIiN4eGpnIC5wcm9fYnV5X2RpcyBvcHRpb246bGFzdC1jaGlsZCJdLGxbNjFdPVsiLnRlaHVpamlhIGk6bGFzdC1jaGlsZCAudGhpc3ByaWNlIiwiLnByaWNlTGlzdDpsYXN0LWNoaWxkIHNwYW4iXSxsWzYyXT1bIi5pbmZvLW1haW4gLnByaWNlLW4gYiJdLGxbNjZdPVsiLllUUHJpY2UiXSxsWzcyXT1bIi5wcmljZV9ub3ciLCIiXSxsWzczXT1bIiNwcm9kdWN0U2hvd1ByaWNlIl0sbFs3NV09WyIuZnNrX2dvb2RzX3ByaWNlIiwiLmdkX3ByaWNlIl0sbFs4M109WyIjSl9Qcm9tb0JveCAudGItd3JUdWFuLW51bSIsIi50bS1wcm9tby1wcmljZSAudG0tcHJpY2UiLCIudG0tcHJpY2UiXSxsWzg0XT1bIi5idXlfcHJpIiwiLmR5bmFtaWMtcHJpY2UiXSxsWzg2XT1bIi5wcmljZV9udW0iLCIuZGVhbF9hY2NvdXRfdHdvIiwiLmp1bWVpX3ByaWNlIiwiLnByaWNlX25vdyJdLGxbOTNdPVsiI3lpdGlhblByaWNlIl0sbFs5NF09WyIuZ29vZF9wcmljZSJdLGxbOTddPVsiI3ByaWNlX2JpZyBlbSIsIi5GRkEgZW0iXSxsWzk4XT1bIi5wLXByaWNlIl0sbFs5OV09WyIjc2hvcHByaWNlIl0sbFsxMDBdPVsiI3NhbGVQcmljZVRleHQiXSxsWzEwMV09WyIubXlQcmljZSBlbSJdLGxbMTAyXT1bIiNqaWFnZSAubnVtYiJdLGxbMTAzXT1bIiNub3dQcmljZSBzdHJvbmciXSxsWzEwOF09WyIjc3BQcmljZSJdLGxbMTA5XT1bIi5za3UtcHJpY2UiXSxsWzExMF09WyIjYmstZC1wcmljZSJdLGxbMTE1XT1bIi5tcHJpY2UiLCIucF9tcCJdLGxbMTIzXT1bIiNKX1Byb21vUHJpY2VOdW0iLCIjSl9TdHJQcmljZSJdLGxbMTI1XT1bIi5kUHJpY2UiXSxsWzEyNl09WyIjcHJpY2Utc2YgLnByaWNlIl0sbFsxMjddPVsiI2ludHJvX3ByaWNlIC5wcmljZSJdLGxbMTI4XT1bIiNwcmljZSJdLGxbMTI5XT1bIiNKLXNhbGUtcHJpY2UiLCIuSi1wcmljZSJdLGxbMTM0XT1bIiNwcm8tcHJpY2UiXSxsWzEzNV09WyIuZGVfaW5mb19wcmljZSJdLGxbMTM4XT1bIiNFQ1NfU0hPUFBSSUNFIl0sbFsxNDBdPVsiLmdyb3VwZGV0YWlsX25vd3ByaWNlIiwiLmRzaW5nbGVfbm93cHJpY2UiXSxsWzE0MV09WyIjamlhbnlpUHJpY2UiXSxsWzE0Ml09WyIuc3BhcmUwMiJdLGxbMTQ1XT1bIiNwZHBQcmljZSAuZGlzY291bnQiLCIjcGRwUHJpY2UiLCIuZGlzY291Il0sbFsxNDZdPVsiLmFjdGlvbi1wcmljZSJdLGxbMTQ3XT1bIiNwb3N0UHJpY2UiXSxsWzE1Ml09WyIuZGV0YWlsLWl0ZW0tZ29sZCJdLGxbMTUzXT1bIiNnNV9wcmljZSJdLGxbMTU0XT1bIi5wcm9tb3RlX3ByaWNlIl0sbFsxNTVdPVsiLmN1ci1wcmljZSJdLGxbMTU2XT1bIiNzZWNvb1ByaWNlSnMiXSxsWzE1N109WyIjcHJvZF9wcmljZSJdLGxbMTU4XT1bIi5wcmljZTI0Il0sbFsxNjRdPVsiLmpnX2N1aG9uZyIsIiNteWpnY3Vob25nIl0sbFsxNjddPVsiLkpfbWlfZ29vZHNQcmljZSIsIi5tb25leSIsIi5KX2N1cnJlbnRQcmljZSIsIkpfcHJvUHJpY2UiLCIucHJpY2UiXSxsWzE2OF09WyIubGV0dl9wcmljZSIsIiNqc19wcmljZSJdLGxbMTc0XT1bIi5wcm8tcHJpY2UiXSxsWzE4MF09WyIjSl9wcm9kdWN0X3ZhbHVlIiwiLmluZm8tcHJpY2UiXSxsWzE4Ml09WyIuZGV0YWlsX3ByaWNlIiwiLmNvdXBvbl9wcmljZSJdLGxbMTg0XT1bIi5wcm9tb3Rpb24tcHJpY2UgLnByaWNlIiwiLnByaWNlIl0sbFsxODhdPVsiI2dvb2RzUHJpY2UiXSxsWzE5NF09WyIuYWN0aW9uLXByaWNlIl0sbFsxOTVdPVsiI2l0ZW1fcHJpY2UiXSxsWzE5Nl09WyIucHJpY2Ugc3Ryb25nIl0sbFsxOTddPVsiLm1zX3ByaWNlIHN0cm9uZyJdLGxbMjAyXT1bIiNKX05vd1ByaWNlIl0sbFsyMDNdPVsiI0pfTm93UHJpY2UiXSxsWzIxMF09WyIjZ19wcmljZSJdLGxbMjEzXT1bIiNvZmZlclByaWNlIl0sbFsyMjFdPVsiLnByaWNlIl0sbFsyMjJdPVsiI3JwcmljZSJdLGxbMjIzXT1bIi5jdXJyZW50UHJpY2UiXSxsWzIyNl09WyIubWFpblByaWNlIl0sbFsyMjddPVsiLnNhbGUtcHJpY2UiXSxsWzIyOF09bFsxXSxsWzIyOV09bFsxXSxsWzIzMF09WyIjcHJjSXN1bSJdLGxbMjMxXT1bIi5wLWN1cnJlbnQtcHJpY2UgLnAtcHJpY2UiXSxsWzIzMl09WyIuYWN0aW9uLXByaWNlIl0sbFsyMzNdPVsiLmpzLXBkcExvY2FsUHJpY2UiXSxsWzIzNF09WyIjc2FsZXByaWNlX3ZhbHVlIl0sbFsyMzVdPVsiLmRldGFpbF90emggc3BhbiJdLGxbMjM2XT1bIi5wcm9fcHJpY2Ugc3BhbiJdLGxbMjM3XT1bIi52aWV3LVNrdVByaWNlSW5mbyAucHJpY2UiLCIudmlldy1Ta3VQcmljZUluZm8gaSJdLGxbMjM4XT1bIiNwcmljZVNsb3QgLnByaWNlIiwiLl8zN1k2RCAuXzNyX091Il0sbFsyMzldPVsiLnByb2R1Y3QtcHJpY2UiXSxsWzI0MV09WyIucHJpY2VCbG9jayAuc2FsZVByaWNlIiwiLnByaWNlQmxvY2siXSxsWzI0Ml09WyIubmctYmluZGluZy53YWctYm9sZCJdLGxbMjQzXT1bIiNkaXNwbGF5UHJpY2UiXSxsWzI0NF09WyIucHJpY2UtbWFpbi1wcm9kdWN0IC5wcmljZS1jdXJyZW50IiwiLnByaWNlLWN1cnJlbnQiXSxsWzI0NV09WyIjZmluYWwtcHJpY2UiXSxsWzI0Nl09ZnVuY3Rpb24oKXthKGkoWyIjcHJpY2VibG9ja19kZWFscHJpY2UiLCIjcHJpY2VibG9ja19vdXJwcmljZSIsIiN0bW1Td2F0Y2hlcyAuYS1idXR0b24taW5uZXIgIC5hLWNvbG9yLXNlY29uZGFyeSBzcGFuIiwiI3NvbGRCeVRoaXJkUGFydHkgLm9mZmVyLXByaWNlIiwiI29scF9mZWF0dXJlX2RpdiAuYS1jb2xvci1wcmljZSJdLCIsIiwiLiIpKX0sbFsyNDddPVsiI3ByaWNpbmcgdGQuaGlnaGxpZ2h0Il0sbFsyNDhdPVsiLnByb2R1Y3QtcHJpY2UgLnByaWNlIl0sbFsyNDldPVsiI2pzLXByb2R1Y3QtaW5mb3JtYXRpb24tcHJpY2UgLnByb2R1Y3QtY3VycmVudC1wcmljZSIsIi5tYWluLXByb2R1Y3QtZGV0YWlscyAuY29tcGFyZS1wcmljZV9fZGlzcGxheSJdLGxbMjUxXT1bIi5wcm9kdWN0LXByaWNlLWNvbnRhaW5lciAucHJpY2Utc2FsZXMgIl0sbFsyNTJdPVsiLmRldGFpbC1wcmljZSIsInNfZGlzY291bnRwcmljZW5ldyIsIi5jdXRwcmljZXBvc2l0aW9uIl0sbFsyNTZdPVsiI3ByaWNlIl0sbFsyNTldPVsiI1ByaWNlIC5wcm9kdWN0UHJpY2UiXSxsWzI2MF09WyIjcHJvZHVjdFByaWNlIC5ub3dQcmljZSIsIiNwcm9kdWN0UHJpY2UiXSxsWzI2MV09WyIjcGRwTWFpblByaWNlIC5wT3VyUHJpY2VNIiwiI3BkcFN1YlByaWNlIC5wUmV0YWlsUHJpY2U6bnRoLWNoaWxkKDIpIiwiLnBSZXRhaWxQcmljZSIsIiNwZHBNYWluUHJpY2UiXSxsWzI2M109WyIucHJpY2VTYWxlIl0sbFsyNjRdPVsiLnByaWNlLXNldCJdLGxbMjY2XT1sWzFdLGxbMjY3XT1bIi5nb29kcy1kYXRhIC5nb29kcy1wcmljZSBzcGFuIl0sbFsyNjhdPVsiLmdvb2RzLXByaWNlLXIxIHN0cm9uZyJdLGxbMjY5XT1bIiNwcm9kdWN0Uk1CIl0sbFsyNzBdPVsiLmpfUHJpY2VOdW0iLCIucHJpY2UiXSxsWzI3MV09WyIucHJpY2UiLCIucHJvZHVjdF9wcmljZV9jb250Il0sbFsyNzJdPVsiLmFjdGlvbi1wcmljZSJdLGxbMjczXT1bIi5wcm9kdWN0X3RvcF9yIHNwYW4uZnMyMCJdLGxbMjc0XT1bIiNqU2NhcmVQcmljZSIsIi5qRmlyc3RQcmljZSJdLGxbMjc1XT1bIi5ybWItcHJpY2UiXSxsWzI3Nl09WyIuUHJpY2UiXSxsWzI3N109WyIjY3VyclByaWNlIl0sbFsyNzldPVsiLnByb2R1Y3RfcHJpY2UiLCJwcmljZV9ybWIiXSxsWzI4MF09WyIjZ29vZHNDdXJyZW50UHJpY2UiLCIucHJkc2FsZSBzdHJvbmciXSxsWzI4MV09WyIjYnFQcmljZSIsIi5wcmljZSBzcGFuIl0sbFsyODVdPVsiLnByaWNlIC5jdXJyZW50Il0sbFsyODZdPVsiLmotaXRlbS1ub3ctcHJpY2UiXSxsWzI4N109WycueHByaWNlX3ZhbFtpdGVtcHJvcD0ibG93UHJpY2UiXSddLGxbMjg4XT1bIi5hY3Rpb24tcHJpY2UiXSxsWzI4OV09WyIuY3VycmVudF9wcmljZSJdLGxbMjkwXT1bIi5wcmljZSJdLGxbMjkxXT1bIiNwcmljZURpdiAubm93UHJpY2UiXSxsWzI5Ml09WyIuaXRlbS1hY3RQcmljZSJdLGxbMjk0XT1bIiNzYWxlUHJpY2VTcGFuIl0sbFsyOTVdPVsiLnByaWNlLXNlbGwgLnByaWNlLW51bSJdLGxbMjk5XT1bIi5wcm9fcHJpY2UgLnByaWNlIl0sbFszMDBdPVsiI3ByaWNlRG9tSWQiXSxsWzMwNV09WyIuYXV0b1NoaXBQcmljZSIsIi5zaW5nbGVQcmljZSJdLGxbMzA2XT1bIi5wcm9kdWN0LXByaWNlIGRpdiJdLGxbMzExXT1bIi5wcm9kdWN0LWZ1bGxfX3ByaWNlIiwiLnNwcC1wcm9kdWN0X19taW5pLWJhZy1wcmljZS1zaXplIl0sbFszMTNdPVsiI2RldGFpbHMtcHJpY2UiXSxsWzMyOF09WyIuZ29vZHNwcmljZSJdLGxbMzMwXT1bIiN5b3VfcGF5LnByaWNlIiwiLnByaWNlIl0sbFszMzddPVsiLnByaWNlIl0sbFszMzhdPVsiLmpzLXByaWNlIl0sbFszNDBdPVsiLnNpbmdsZVByaWNlIl0sbFszNDFdPVsiLnByb2R1Y3QtcHJpY2UgLnByaWNlIl0sbFszNDNdPVsiLmJvc2UtcHJpY2VfX3ByaWNlIl0sbFszNDRdPVsiLml0ZW0tcHJpY2UiXSxsWzM0NV09WyIueXBZb3VQYXkiXSxsWzM0N109WyIjRmxhc2hQcmljZSJdLGxbMzQ4XT1bIi5nb29kcy1wcmljZSAucHJpY2UxIl0sbFszNDldPVsiLmotcmV0YWlsLXByaWNlIl0sbFszNTFdPVsiLnRtX2pnICNFQ1NfU0hPUFBSSUNFIiwiI0VDU19TSE9QUFJJQ0UiXSxsWzM1Ml09WyIucHJpY2UtYiAubmV3Il0sbFszNTRdPVsiLmRldGFpbC1sYXN0LXByaWNlIl0sbFszNTVdPVsiLnByaWNlLWl0ZW0uY3VycmVudCAudmFsdWUiXSxsWzM1Nl09WyIubS1wcmljZSJdLGxbMzU3XT1bIi5wcm9kdWN0LXByaWNlIC5wcmljZSJdLGxbMzYyXT1bIi5EZXRhaWxQcmljZUNvbnRhaW4gLlByaWNlTm93Il0sbFszNjNdPVsiLmN1cnJlbnQtcHJpY2UiXSxsWzM2NF09WyIucHJpY2UiXSxsWzM2NV09bFsyNDZdLGxbMzY2XT1sWzFdLGxbMzY3XT1bIi5pdGVtSW5mbyAucHJpY2UiXSxsWzM2OF09WyIjc2FsZVByaWNlSWQiXSxsWzM2OV09WyIjamQtcHJpY2UiXSxsWzM3MF09WyIjc2FsZXByaWNlIiwiI2thbHVsaVByaWNlIl0sbFszNzFdPVsnI3Nob3dfZ29vZHNfcHJpY2UgW25hbWU9Imdvb2RzX3JlYWxfcHJpY2UiXSddLGxbMzcyXT1bIi5wcmljZSJdLGxbMzczXT1bIiNiYl9wcmljZSJdLGxbMzc0XT1bIiNvcHIiXSxsWzM3Nl09WyIjSmdvb2RzUHJpY2UiXSxsWzM3N109WyIuYWN0aW9uLXByb19wcmljZSIsImFjdGlvbi1wcmljZSIsIi5wcmljZSJdLGxbMzc4XT1bIi5qRmlyc3RQcmljZSJdLGxbMzc5XT1bIi5hY3Rpb24tcHJpY2UiXSxsWzM4MF09WyIubm93LXByaWNlIl0sbFszODFdPVsiLnByaWNlQW5kU2VydmljZSAucHJpY2UiXSxsWzM4Ml09WyIuc2FsZS1wcmljZSJdLGxbMzg1XT1bIiNzYWxlUHJpY2UiXSxsWzM4Nl09WyIucHJpY2UtYm94IC5wcmljZS1wcm9kdWN0Il0sbFszODddPVsiLnNwYXJlMDJfcHJpY2UiXSxsWzM4OF09WyIuY3VycmVudC1wcmljZSJdLGxbMzg5XT1bIi5wcmljZS1pbmZvIC5jdXJyZW50LXByaWNlIl0sbFszOTBdPVsiLnNob3AtbmF0dXJlMSBbcHJpY2VdIl0sbFszOTFdPVsiLm0tcHJpY2UiXSxsWzM5Ml09WyIubm93LXByaWNlIl0sbFszOTNdPVsiLmN1cnJlbnQtcHJpY2UiXSxsWzM5NF09WyIuY3VycmVudC1wcmljZSAucHJpY2UtbnVtYmVyIl0sbFszOTVdPVsiLnJtYi1wcmljZSJdLGxbMzk2XT1bIi5ub3cgLnByaWNlIl0sbFszOTddPVsiLkRldGFpbFByaWNlIC5QcmljZU5vdyJdLGxbMzk4XT1bIi5sYXN0X3ByaWNlcyAucHJpY2UiXSxsWzM5OV09WyIucHJpY2UtbnVtYmVyIl0sbFs0MDBdPVsiLnByb2R1Y3QtcHJvcGVydHkgLmN1cnJlbnQtcHJpY2UiXSxsWzQwMV09WyIucHJvZHVjdC1zaG9wIC5QcmljZU5vdyJdLGxbNDAyXT1bIi5wcmljZS1udW1iZXIiXSxsWzQwM109ZnVuY3Rpb24oKXthKGkoWyIucHJpY2UtcHJvZHVjdGRlc2MiXSwiLCIsIi4iKSl9LGxbNDA0XT1bIi5wcmljZS1jdXJyZW50Il0sbFs0MDVdPVsiLnByaWNlLWluZm8gLnByaWNlIl0sbFs0MDZdPVsiLmQtcHJpY2UiXSxsWzQwN109WyIuZ29vZHMtcHJpY2UiXSxsWzQwOF09WyIjcHJvZHVjdC1zdW1tYXJ5IC5wcmljZSJdLGxbNDA5XT1bIi5wcmljZV9zYWxlIl0sbFs0MTBdPVsiLnNhbGVQcmljZSIsIi5ub3dQcmljZSJdLGxbNDExXT1bIiNza3VQcmljZSJdLGxbNDEyXT1bIiNpdGVtLXByaWNlIC5mb250LWJvbGQiLCIjaXRlbS1wcmljZSJdLGxbNDEzXT1bIiNwcm9kdWN0UHJpY2VJbmZvIC5tX3ByaWNlIl0sbFs0MTRdPVsiLndiLXByaWNlIHNwYW4iXSxsWzQxNV09WyIucHJvZHVjdC1wcmljZSAucHJpY2UiXSxsWzQxNl09WyIjcHJpY2UiXSxsWzQxN109WyIuc3BlY2lhbC1wcmljZSAucHJpY2UiLCIucHJpY2UiXSxsWzQxOF09WyIuZmluYWwiLCIuaGVyZV9wcmljZSBzdHJvbmciXSxsWzQxOV09WyIubWFya2V0LXByaWNlIl0sbFs0MjBdPVsiI3NhbGVQcmljZSJdLGxbNDIzXT1bIi5wcmljZSJdLGxbNDI0XT1bIi5wcmljZS1jdXJyZW50IiwiLnJlZ3VsYXItcHJpY2UiXSxsWzQyN109WyIucmVkU2FsZVByaWNlIiwiLnByb2R1Y3QtcHJpY2UtYmlnIC5wcmljZS13cmFwcGVyIl0sbFs0MjhdPVsiLm1vbmV0YXJ5LXByaWNlLXZhbHVlIl0sbFs0MjldPWxbNDI3XSxsWzQzMF09WyIubnVtX3NwYW4iXSxsWzQzMV09WyIjbWFsbF9wcmljZSJdLGxbNDMyXT1bIiNwcmljZV9jdXJyZW50Il0sbFs0MzNdPVsiLmFjdGlvbi1wcmljZSJdLGxbNDM0XT1bIi5wcmljZSJdLGxbNDM1XT1bIi5nb29kc3ByaWNlIl0sbFs5OTk5XT1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbih0KXt0KCl9fSx0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0LG4pe2lmKCJ3d3cuYW1hem9uLmRlIj09PWxvY2F0aW9uLmhvc3QpcmV0dXJuIHZvaWQgbihlLmRwLm9sZFByaWNlKTtpZihzKXJldHVybiB2b2lkIG4ocyk7dmFyIGk9bFt0XTtpIGluc3RhbmNlb2YgQXJyYXk/cihpKShuKTppIGluc3RhbmNlb2YgT2JqZWN0JiZpLnByb3RvdHlwZT9pKCkobik6bigpfX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGksbyl7InVzZSBzdHJpY3QiO3ZhciBhLHIscz1uKDQzKSxsPW4oNDQpLGM9bigxNCkscD1uKDEyKSxkPTAsaD17Y3JjYXJyOltdfSx1PXt5aWhhb2RpYW46W1siLnByb0ltZyBhLmltZyIsIi5wcm9QcmljZT5lbS5udW0iXV19LG09e3lpaGFvZGlhbjozMX0sZj17eWloYW9kaWFuOiIuY2xlYXJmaXg+I3BsaXN0In0sZz1mdW5jdGlvbih0LG4sbyl7Zm9yKHZhciBhPVtdLHI9ZSh0KS5sZW5ndGgscz0wO3M8cjtzKyspe3ZhciBsPWUodCkuZXEocykuZmluZChuKS5lcSgwKSxjPWUodCkuZXEocykuZmluZChvKS5lcSgwKTtpZihsJiZjKXt2YXIgcD1sLmF0dHIoImhyZWYiKXx8IiIsZD1jLnRleHQoKSx1PXgobCk7aWYodyhwKSljb250aW51ZTtpZihwPWkocCkscCYmZCYmdSl7aWYoaC5jcmNhcnIuaW5kZXhPZiYmaC5jcmNhcnIuaW5kZXhPZih1KT09PS0xJiYieCIhPT11KWguY3JjYXJyLnB1c2godSk7ZWxzZXtpZigieCIhPT11KWNvbnRpbnVlO3U9IiJ9YS5wdXNoKHt1cmw6cCxwcmljZTpkLGNyYzMyOnV9KX19fXJldHVybiBhfSx3PWZ1bmN0aW9uKHQpe3JldHVybiB0LmluZGV4T2YoIiIrby5leHROYW1lKT4tMXx8KCJ5aWhhb2RpYW4iPT1vLnNpdGUmJih0LmluZGV4T2YoInRyYWNrZXIueWhkLmNvbSIpPi0xfHx0LmluZGV4T2YoIml0ZW0ueWhkLmNvbSIpPT0tMSl8fCIzNjBidXkiPT1vLnNpdGUmJnQuaW5kZXhPZigiaXRlbS5qZC5jb20iKT09LTEpfSxpPWZ1bmN0aW9uKHQpe2lmKHQpe3ZhciBlPXQuaW5kZXhPZigiIyIpPi0xO3JldHVybiBlJiYodD10LnNsaWNlKDAsZSkpLDA9PT10LmluZGV4T2YoIi8vIik/Imh0dHA6Iit0OjA9PT10LmluZGV4T2YoIi8iKT8iIitsb2NhdGlvbi5ob3N0K3Q6dH19LHg9ZnVuY3Rpb24odCl7dmFyIG49IiI7c3dpdGNoKG8uc2l0ZSl7Y2FzZSJ5aWhhb2RpYW4iOnZhciBpPWUodCkuYXR0cigiaWQiKS5tYXRjaCgvcGRsaW5rMV8oXGQrKS8pO2kmJihuPWlbMV0pO2JyZWFrO2Nhc2Uic3VuaW5nIjpuPWUodCkucGFyZW50cygiLndyYXAiKS5maW5kKCJpbnB1dC5oaWRlbkluZm8iKS5hdHRyKCJkYXRhcHJvIikuc3BsaXQoInx8IilbMV07YnJlYWs7ZGVmYXVsdDpuPSJ4In1yZXR1cm4gbn0sYj1mdW5jdGlvbih0KXtmb3IodmFyIG49dVtvLnNpdGVdLGk9dC5sZW5ndGgsYT0wO2E8aTthKyspZm9yKHZhciByPXRbYV0scz0wO3M8bi5sZW5ndGg7cysrKXt2YXIgbD1uW3NdLGM9ZShyKyIgIitsWzBdKSxwPWUocisiICIrbFsxXSk7aWYoYy5sZW5ndGgmJnAubGVuZ3RoKXJldHVybiBnKHIsbFswXSxsWzFdKX19LF89ZnVuY3Rpb24odCl7aWYoMCE9PXQubGVuZ3RoKXt2YXIgZT1sLmdldFN1YlN0YXRpb25JZChvLnNpdGUpLGk9e3Byb3ZpbmNlX2lkOmUsaW5mbzp0fTtwKCJnZXRMaXN0SW5mb19pc19zZW5kIitvLnVuaW9uKyJfc2l0ZSIrby5sb2dzaXRlKSxjLmxvZygiZ2V0TGlzdEluZm9faXNfaW50byIpLGk9big0NSkuZ1ppcChpKTt2YXIgYT1tW28uc2l0ZV18fG0ubm93U2l0ZXx8cjtpZih3aW5kb3cuWE1MSHR0cFJlcXVlc3QpdHJ5e3ZhciBzPW5ldyBYTUxIdHRwUmVxdWVzdDtzLm9wZW4oIlBPU1QiLG8uc2VydmVyKyIvZXh0ZW5zaW9uP2FjPXNlbmRMaXN0SW5mbyZzaXRlX2lkPSIrYSsiJnU9IitvLnVuaW9uKSxzLnNlbmQoaSksYy5sb2coIuWunuaXtuaKk+WPluWPkemAgeivt+axgiIpfWNhdGNoKGQpe319fSx2PWZ1bmN0aW9uKCl7dmFyIHQ9MCxpPXZvaWQgMDtpZigic3VuaW5nIj09PW8uc2l0ZSllKHdpbmRvdykub24oInNjcm9sbCIsZnVuY3Rpb24obyl7dmFyIGE9ZSh3aW5kb3cpLnNjcm9sbFRvcCgpO2lmKGEtdD41MDApe2lmKHQ9YSxjbGVhclRpbWVvdXQoaSksZD44KXJldHVybjtpPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtkKyssbig0NykuaW5pdCh5KX0sMTUwMCl9fSk7ZWxzZXt2YXIgcj1lKCIiK2Zbby5zaXRlXSlbMF07aWYoIXIpcmV0dXJuO3IuYWRkRXZlbnRMaXN0ZW5lciYmci5hZGRFdmVudExpc3RlbmVyKCJET01TdWJ0cmVlTW9kaWZpZWQiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KGEpLGQ+MTV8fChhPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtkKys7dmFyIHQ9YihoLnNlbGVjdG9ycyk7MCE9PXQubGVuZ3RoJiZfKHQpfSwxZTMpKX0sITEpfX0seT1mdW5jdGlvbih0LGUpe20ubm93U2l0ZT10LF8oZSl9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9bmF2aWdhdG9yLnVzZXJBZ2VudDtpZigiZmlyZWZveCIhPT1vLmZyb21fZGV2aWNlJiYhdC5tYXRjaCgvRmlyZWZveC9pKSYmIWxvY2F0aW9uLmhvc3QubWF0Y2goL15tXC4vKSlpZih1W28uc2l0ZV0pe3ZhciBlPWZ1bmN0aW9uKCl7dmFyIHQ9cy5jaGVjaygpO3JldHVybiBoLnNlbGVjdG9ycz10LCF0fHx0JiYhdC5sZW5ndGg/e3Y6dm9pZCAwfTp2b2lkIHNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgZT1iKHQpOzAhPT1lLmxlbmd0aCYmKF8oZSksdigpKX0sMWUzKX0oKTtpZigib2JqZWN0Ij09dHlwZW9mIGUpcmV0dXJuIGUudn1lbHNle3RyeXtuKDQ3KS5pbml0KHkpfWNhdGNoKGkpe3AoImxpc3RJbmZvRXJyb3I6IitKU09OLnN0cmluZ2lmeShpKSl9bG9jYXRpb24uaG9zdC5pbmRleE9mKCJzdW5pbmciKT4tMSYmdigpfX0sdC5leHBvcnRzLnNlbmRQcmlDaGVjaz1mdW5jdGlvbih0KXtyPW4oNDcpLmdldFNpdGVJZChvLnNpdGUpLF8odCl9fSkuY2FsbChlLG4oNCksbig0MiksbigxKSl9LGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpe3Rocm93IG5ldyBFcnJvcigic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCIpfWZ1bmN0aW9uIGkoKXt0aHJvdyBuZXcgRXJyb3IoImNsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCIpfWZ1bmN0aW9uIG8odCl7aWYocD09PXNldFRpbWVvdXQpcmV0dXJuIHNldFRpbWVvdXQodCwwKTtpZigocD09PW58fCFwKSYmc2V0VGltZW91dClyZXR1cm4gcD1zZXRUaW1lb3V0LHNldFRpbWVvdXQodCwwKTt0cnl7cmV0dXJuIHAodCwwKX1jYXRjaChlKXt0cnl7cmV0dXJuIHAuY2FsbChudWxsLHQsMCl9Y2F0Y2goZSl7cmV0dXJuIHAuY2FsbCh0aGlzLHQsMCl9fX1mdW5jdGlvbiBhKHQpe2lmKGQ9PT1jbGVhclRpbWVvdXQpcmV0dXJuIGNsZWFyVGltZW91dCh0KTtpZigoZD09PWl8fCFkKSYmY2xlYXJUaW1lb3V0KXJldHVybiBkPWNsZWFyVGltZW91dCxjbGVhclRpbWVvdXQodCk7dHJ5e3JldHVybiBkKHQpfWNhdGNoKGUpe3RyeXtyZXR1cm4gZC5jYWxsKG51bGwsdCl9Y2F0Y2goZSl7cmV0dXJuIGQuY2FsbCh0aGlzLHQpfX19ZnVuY3Rpb24gcigpe2YmJnUmJihmPSExLHUubGVuZ3RoP209dS5jb25jYXQobSk6Zz0tMSxtLmxlbmd0aCYmcygpKX1mdW5jdGlvbiBzKCl7aWYoIWYpe3ZhciB0PW8ocik7Zj0hMDtmb3IodmFyIGU9bS5sZW5ndGg7ZTspe2Zvcih1PW0sbT1bXTsrK2c8ZTspdSYmdVtnXS5ydW4oKTtnPS0xLGU9bS5sZW5ndGh9dT1udWxsLGY9ITEsYSh0KX19ZnVuY3Rpb24gbCh0LGUpe3RoaXMuZnVuPXQsdGhpcy5hcnJheT1lfWZ1bmN0aW9uIGMoKXt9dmFyIHAsZCxoPXQuZXhwb3J0cz17fTshZnVuY3Rpb24oKXt0cnl7cD0iZnVuY3Rpb24iPT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0Om59Y2F0Y2godCl7cD1ufXRyeXtkPSJmdW5jdGlvbiI9PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0Oml9Y2F0Y2godCl7ZD1pfX0oKTt2YXIgdSxtPVtdLGY9ITEsZz0tMTtoLm5leHRUaWNrPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSlmb3IodmFyIG49MTtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKWVbbi0xXT1hcmd1bWVudHNbbl07bS5wdXNoKG5ldyBsKHQsZSkpLDEhPT1tLmxlbmd0aHx8Znx8byhzKX0sbC5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX0saC50aXRsZT0iYnJvd3NlciIsaC5icm93c2VyPSEwLGguZW52PXt9LGguYXJndj1bXSxoLnZlcnNpb249IiIsaC52ZXJzaW9ucz17fSxoLm9uPWMsaC5hZGRMaXN0ZW5lcj1jLGgub25jZT1jLGgub2ZmPWMsaC5yZW1vdmVMaXN0ZW5lcj1jLGgucmVtb3ZlQWxsTGlzdGVuZXJzPWMsaC5lbWl0PWMsaC5wcmVwZW5kTGlzdGVuZXI9YyxoLnByZXBlbmRPbmNlTGlzdGVuZXI9YyxoLmxpc3RlbmVycz1mdW5jdGlvbih0KXtyZXR1cm5bXX0saC5iaW5kaW5nPWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBFcnJvcigicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWQiKX0saC5jd2Q9ZnVuY3Rpb24oKXtyZXR1cm4iLyJ9LGguY2hkaXI9ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQiKX0saC51bWFzaz1mdW5jdGlvbigpe3JldHVybiAwfX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIG49eyIzNjBidXkiOltbL14oPzpodHRwfGh0dHBzKTpcL1wvd3d3XC5qZFwuY29tXC9waW5wYWlcLy4qXC5odG1sLywiI0pfZ29vZHNMaXN0IiwiI3BsaXN0IC5saXN0LWgiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvc2VhcmNoXC5qZFwuY29tXC9TZWFyY2hcP2tleXdvcmQvaSwiI0pfZ29vZHNMaXN0IGxpIiwiI3BsaXN0IC5saXN0LWgiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvbGlzdFwuamRcLmNvbS8sIiNKX21haW4gbGkiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvc2FsZVwuamRcLmNvbS8sImRpdi5sYXlvdXRjb250YWluZXIgLmxheW91dGFyZWEgLmxheW91dCAubGF5b3V0X29uZSJdXSwiNTFidXkiOltbL2h0dHA6XC9cL3NlYXJjaGV4XC55aXh1blwuY29tLywiI2NvbnRhaW5lciAuZ29vZHMiXSxbL2h0dHA6XC9cL2V2ZW50XC55aXh1blwuY29tLywidWwuaXRlbV9saXN0XzMiLCJkaXYuYmQiXSxbL2h0dHA6XC9cL3NhbGVcLnlpeHVuXC5jb20vLCIjSl9mbG9vckhvbGlkYXkgLmJkIl0sWy9odHRwOlwvXC9ldmVudFwueWl4dW5cLmNvbVwvZXZlbnRcLy4qXC5odG1sLywiLnBhZ2VfZXZlbnQiXV0sYW1hem9uOltbL2h0dHA6XC9cL3d3d1wuYW1hem9uXC5jblwvW2Etel1cLy8sImJvZHkiXV0sc3VuaW5nOltbLyg/Omh0dHBzOnxodHRwOilcL1wvY3V4aWFvXC5zdW5pbmdcLmNvbS8sIi5oZWFkLWltZy13cmFwcGVyIiwiLmZsb29yIl0sWy8oPzpodHRwczp8aHR0cDopXC9cL2xpc3RcLnN1bmluZ1wuY29tLywiLmdyaWQiLCIjZmlsdGVyLXJlc3VsdHMgbGkiXSxbLyg/Omh0dHBzOnxodHRwOilcL1wvc2VhcmNoXC5zdW5pbmdcLmNvbS8sIiNmaWx0ZXItcmVzdWx0cyBsaSJdLFsvKD86aHR0cHM6fGh0dHA6KVwvXC93d3dcLnN1bmluZ1wuY29tLywiI2ZpbHRlci1yZXN1bHRzIGxpIl1dLGRhbmdkYW5nOltbL2h0dHA6XC9cL3d3d1wuZGFuZ2RhbmdcLmNvbVwvYnJhbmRzXC8vLCIuc2VhcmNoX2xpc3QiXSxbL2h0dHA6XC9cL3NlYXJjaFwuZGFuZ2RhbmdcLmNvbS8sIi5iaWdpbWciLCIuY2xvdGhfZ29vZF9zb3J0Il0sWy9odHRwOlwvXC9ib29rXC5kYW5nZGFuZ1wuY29tLywiI2JkX2F1dG8gdWwiXSxbL2h0dHA6XC9cL2xpc3RcLmRhbmdkYW5nXC5jb20vLCIjYmQgLnJlc3VsdGxpc3QiXSxbL2h0dHA6XC9cL3Byb21vXC5kYW5nZGFuZ1wuY29tLywiLnByb21vdGlvbnNsaXN0X3dyYXBwZXIgLnByb19saXN0IiwiLnByb21vX2FjdGl2aXR5X3dyYXAiXSxbL2h0dHA6XC9cL3ZcLmRhbmdkYW5nXC5jb20vLCIjYmQgLnZfc2hvcF9ib3giXSxbL2h0dHA6XC9cL3RcLmRhbmdkYW5nXC5jb20vLCIjYmQgdWwiXV0sZ29tZTpbWy9odHRwOlwvXC9icmFuZFwuZ29tZVwuY29tXC5jbi8sIi5yZXN1bHQtd3JhcCJdLFsvaHR0cDpcL1wvbGlzdFwuZ29tZVwuY29tXC5jbi8sIi5uU2VhcmNoV2FycC1tYWluIl0sWy9odHRwOlwvXC9wcm9tXC5nb21lXC5jb21cLmNuLywiLnRwYWdlIC5wYWdldCIsIi5zaGFuZ3Bpbl9meCJdLFsvaHR0cDpcL1wvc2VhcmNoXC5nb21lXC5jb21cLmNuLywiLnJlc3VsdC13cmFwIiwibGkucHJvZHVjdC1pdGVtIl1dLHlpaGFvZGlhbjpbWy9odHRwOlwvXC9saXN0XC55aGRcLmNvbS8sIi5tb2RfcHJvZHVjdF9saXN0IC5tb2Rfc2VhcmNoX3BybyJdLFsvaHR0cDpcL1wvY21zXC55aGRcLmNvbS8sIiNjbXNCZ1BhdGggIl0sWy9odHRwOlwvXC9zZWFyY2hcLnloZFwuY29tLywiLm1vZF9wcm9kdWN0X2xpc3QgLm1vZF9zZWFyY2hfcHJvIl1dLGp1bWVpOltbL14oPzpodHRwfGh0dHBzKTpcL1wvc2VhcmNoXC5qdW1laVwuY29tLywiLnByb2R1Y3RzX3dyYXAiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvaGRcLmp1bWVpXC5jb20vLCIuYWN0X3Byb2R1Y3RfbGlzdCJdXSxqdW1laWdsb2JhbDpbWy9eKD86aHR0cHxodHRwcyk6XC9cL2hkXC5qdW1laWdsb2JhbFwuY29tLywiLmFjdF9wcm9kdWN0X2xpc3QiLCIubW9kZWxfcGFyZW50IHVsIl1dLHZtYWxsOltbL14oPzpodHRwfGh0dHBzKTpcL1wvd3d3XC52bWFsbFwuY29tXC8uKy8sIi5sYXlvdXQiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvc2FsZVwudm1hbGxcLmNvbS8sIi5ndWlkZS1iZCIsIiNhY3Rpdml0eV9tYWluIl0sWy9eKD86aHR0cHxodHRwcyk6XC9cL21tXC52bWFsbFwuY29tLywiLm5ldy1yZXNlcnZlLXRvcC13cnAiXV0sZmVpbml1OltbL14oPzpodHRwfGh0dHBzKTpcL1wvd3d3XC5mZWluaXVcLmNvbVwvLisvLCIuZWRpdERvbWFpbiIsIi5wcm9kdWN0c2hvdyIsIi5leGhpYml0aW9uIiwiI3RyYWNrZXJfY2F0ZWdvcnkiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvc2FsZVwuZmVpbml1XC5jb20vLCIudGl0bGVfYmcuY21zX3Bvb2wgdWwiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvc2VhcmNoXC5mZWluaXVcLmNvbS8sIiNjYXRhX2Nob29zZV9wcm9kdWN0Il1dLHlvdWdvdTpbWy9eKD86aHR0cHxodHRwcyk6XC9cL3d3d1wueW91Z291XC5jb21cLy4rLywiLnl1aTMtZyJdLFsvXig/Omh0dHB8aHR0cHMpOlwvXC9zZW91bFwueW91Z291XC5jb20vLCJkaXYubWFpbl9nb29kcyIsIi55dWkzLWciXV0sa2FvbGE6W1svXig/Omh0dHB8aHR0cHMpOlwvXC93d3dcLmthb2xhXC5jb21cLy4rLywibGkuZ29vZHMiLCIud3JhcCB1bCJdXSxqaXV4aWFuOltbL14oPzpodHRwfGh0dHBzKTpcL1wvd3d3XC5qaXV4aWFuXC5jb21cLy4rLywiLm1haW5Cb3giLCIuc2VxdWVuY2VfbGlzdCJdLFsvXig/Omh0dHB8aHR0cHMpOlwvXC9zcGVjaWFsXC5qaXV4aWFuXC5jb20vLCIuZm91cmJveCJdXSxzZmJlc3Q6W1svXig/Omh0dHB8aHR0cHMpOlwvXC93d3dcLnNmYmVzdFwuY29tXC8uKy8sIi5zZlJpZ2h0IiwiLnAtbGlzdCJdXSx2YW5jbDpbWy9eKD86aHR0cHxodHRwcyk6XC9cL3NcLnZhbmNsXC5jb20vLCJsaS5wcm9kdWN0d3JhcHBlciJdXSxmZW5ncXU6W1svXig/Omh0dHB8aHR0cHMpOlwvXC93d3dcLmZlbmdxdVwuY29tXC8uKy8sIi5tb2R1bGUiXV0sbGVmZW5nOltbL14oPzpodHRwfGh0dHBzKTpcL1wvc2VhcmNoXC5sZWZlbmdcLmNvbS8sIiNwcm9kdWN0RGl2R3JvdXAiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvYnJhbmRcLmxlZmVuZ1wuY29tLywiLm1ha2V1cCJdXSxlaGFpZXI6W1svXig/Omh0dHB8aHR0cHMpOlwvXC9zZWFyY2hcLmVoYWllclwuY29tLywidWwudWwtcHJvbGlzdCJdLFsvXig/Omh0dHB8aHR0cHMpOlwvXC93d3dcLmVoYWllclwuY29tXC8uKy8sInVsLnVsLWV4Y2VsIiwiLnRhYi1jb250IiwiLmtpbmRzLW1haW4iXV0seXVuaG91OltbL14oPzpodHRwfGh0dHBzKTpcL1wvc2VhcmNoXC55dW5ob3VcLmNvbS8sIiNqR29vZHNDbnQgLmdvb2RzLWxpc3RzIGRpdi5jb2xzIl0sWy9eKD86aHR0cHxodHRwcyk6XC9cL2xpc3RcLnl1bmhvdVwuY29tXC8uKy8sIiNqR29vZHNDbnQgLmdvb2RzLWxpc3RzIGRpdi5jb2xzIl1dLHVsZTpbWy9eKD86aHR0cHxodHRwcyk6XC9cLyg/IWl0ZW18d3d3KS4rXC51bGVcLmNvbVwvLisvLCIuZ29vZHNMaXN0IC5nb29kc0xpc3RCbG9jayBsaS5ub1ByZSJdXSxiYW5nZ286W1svXig/Omh0dHB8aHR0cHMpOlwvXC9zZWFyY2hcLmJhbmdnb1wuY29tLywiLm1ic2hvcF9wZExpc3QgbGkubWJzaG9wX2xpc3RQZENvbiJdXSxiYW9iZWlnZXppOltbL14oPzpodHRwfGh0dHBzKTpcL1wvc2VhcmNoXC5iYW9iZWlnZXppXC5jb20vLCIjbWFpbl9saXN0IC5wcm9faXRlbSJdLFsvXig/Omh0dHB8aHR0cHMpOlwvXC9saXN0XC5iYW9iZWlnZXppXC5jb20vLCIjbWFpbl9saXN0IC5wcm9faXRlbSJdLFsvXig/Omh0dHB8aHR0cHMpOlwvXC9pdGVtXC5iYW9iZWlnZXppXC5jb21cL1thLXpdK19bMC05XStcLy8sIiNtYWluX2xpc3QgLnByb19pdGVtIl1dLHpob25naml1OltbL14oPzpodHRwfGh0dHBzKTpcL1wvd3d3XC56aG9uZ2ppdVwuY25cL2xpc3RcLy8sIiNwbGlzdCBsaS5jbGVhcmZpeCJdLFsvXig/Omh0dHB8aHR0cHMpOlwvXC93d3dcLnpob25naml1XC5jblwvc2VhcmNoXC4vLCIjcGxpc3QgbGkuY2xlYXJmaXgiXSxbL14oPzpodHRwfGh0dHBzKTpcL1wvc1wuemhvbmdqaXVcLmNuXC9zZWFyY2hcL2luZGV4LywiLnJnX3NsX2xpc3QgdWwgbGkiXV19LGk9dm9pZCAwO3QuZXhwb3J0cy5jaGVjaz1mdW5jdGlvbih0KXtpZihpKXJldHVybiBpO2lmKHQ9ZS5zaXRlfHx0LCFuW3RdKXJldHVybiExO2Zvcih2YXIgbz1uW3RdLmxlbmd0aC0xO28+PTA7by0tKXt2YXIgYT1uW3RdW29dO2lmKGFbMF0udGVzdChsb2NhdGlvbi5ocmVmKSlyZXR1cm4gaT1hLnNsaWNlKDEpfX19KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyl7InVzZSBzdHJpY3QiO2k9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ9by5kcC5wcmljZTtyZXR1cm4gdCYmKHQ9TnVtYmVyKHQpKSx0fXZhciBlLGk9big0KSxhPW4oMjMpO3JldHVybntnZXRPbmxpbmVQcmljZTpmdW5jdGlvbihlKXtlPWV8fG8ucGFnZUluZm8uc2l0ZU5hbWU7dmFyIG49MDt0cnl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiB0aGlzLnByaWNlUGF0dGVybltlXSlmb3IodmFyIHI9dGhpcy5wcmljZVBhdHRlcm5bZV0ubGVuZ3RoLHM9dGhpcy5wcmljZVBhdHRlcm5bZV0sbD0wO2w8cjtsKyspdHJ5e3ZhciBjPXNbbF07aWYobj1pKGMrIjp2aXNpYmxlIikubGVuZ3RoJiZpKGMpLmVxKDApLnRleHQoKSwhbiljb250aW51ZTtpZihuPWEobikpYnJlYWt9Y2F0Y2gocCl7by5kZWJ1ZyYmY29uc29sZS5sb2cocCl9fWNhdGNoKHApe28uZGVidWcmJmNvbnNvbGUubG9nKHApfXJldHVybiAwIT1uJiYiIiE9bnx8KG49dCgpKSxufSxwcmljZVBhdHRlcm46e2Nvb2NhYTpbIiNFQ1NfU0hPUFBSSUNFIHNwYW46ZXEoMSkiLCIjRUNTX1NIT1BQUklDRSJdLG51YmlhOlsiLnBkdGJ5LXByaWNlIl0sY29vbHBhZDpbIi5wcm9kdWNlX3NjYWxsX3JpZ2h0X3RleHRiIHVsIGxpIHNwYW4ucHJvZHVjZV9zY2FsbF9yaWdodF90ZXh0eCJdLGxlbm92bzpbIi5sZW5vdm8tbWVtYmVyLXByaWNlIGZvbnQiLCIjZ3ByaWNlIl0sZ2p3OlsiI3NwUHJpY2UiLCIuZ291aml1X3ByaWNlIl0saG9tZXZ2OlsiLmh0X21vbmV5Il0seGlhb21pOlsiLmdvb2RzLWluZm8taGVhZCAuSl9taV9nb29kc1ByaWNlIiwiLkpfbWlfZ29vZHNQcmljZSIsIi5wcmljZSAubnVtIl0seGl1OlsiI3ByZF9wcmljZV9kaXYgLnN0eWxlMyJdLG1vb25iYXNhOlsiI3Bfc2FsZXByaWNlIiwiLmRldGFpbHByaWNlIiwiLmxlZnRQcmljZSBiIl0sajE6WyIjamlhbnlpUHJpY2UiXSxzOlsiLnNhbGVQcmljZV9iaWciXSxsZXRhbzpbIiNzcGVjaWFsKy5sdHByaWNlIiwiLmx0cHJpY2UiXSxtdXlpbmd6aGlqaWE6WyIucC1wcmljZSJdLHBhaXhpZTpbIiNqc19jdXJyZW50X3ByaWNlIl0semhpd286WyIubXVtZXIiLCIuZHNpbmdsZV9ub3dwcmljZSJdLGJvb2tzY2hpbmE6WyJzcGFuLnRoaXNwcmljZSIsIi50aGlzcHJpY2UiXSxsZXlvdTpbIiNsZXlvdWppYSJdLHRhb2JhbzpbIi50bS1wcm9tby1wcmljZSAudG0tcHJpY2UiLCIudGItd3JUdWFuLW51bSIsIiNKX1N0clByaWNlTW9kQm94IC50bS1wcmljZSIsIiNKX1Byb21vUHJpY2UgLnRiLXJtYi1udW0iLCIjSl9Qcm9tb0JveCAuSl9DdXJQcmljZSIsIiNKX1N0clByaWNlIiwiLnRiaWQtZGV0YWlsLXByaWNlIl0sInRhb2Jhby1qdSI6WyIuY3VycmVudFByaWNlIl0sdG1hbGw6WyIjSl9QcmljZSIsIiNKX1N0clByaWNlIiwiLnRtLXByb21vLXByaWNlIC50bS1wcmljZSIsIiNKX1N0clByaWNlTW9kQm94IC50bS1wcmljZSIsIi50bS1wcmljZSJdLGFtYXpvbjpbIiNwcmljZWJsb2NrX291cnByaWNlIiwiLnByaWNlTGFyZ2UiXSwiZ29tZS1xIjpbIi5wcmljZSJdLGRhbmdkYW5nOlsiI3Byb21vX3ByaWNlIiwiLnByaWNlTGFyZ2UiLCIjc2FsZVByaWNlVGFnIiwiI2RfcHJpY2UiXSxtMTg6WyIuZGV0YWlsc0FyZWEgc3Ryb25nW2RhdGEtcHJpY2VdIl0sc2VwaG9yYTpbIi5wcm9EZXRJbmZvIC5wcm9QcmljZSBzcGFuIl0sdGFveGllOlsiI2RpdnR4cHJpY2UgLmQtcmVhbC1wcmljZSJdLGx1c2VuOlsiI1Byb2R1Y3RQcmljZSJdLG1iYW9iYW86WyIucHJpY2UtbnVtIl0sY2h1bnNodWl0YW5nOlsiLnR1YW4tYnV5LXRleHQiLCIuR2Rfc2hvcF9QcmljZSBkdCJdLG95ZWFoOlsiLnByaWNlc3R5Il0seDpbIi5wcm9fYmlnX3JpZ2h0IC5saXN0IC5qc2pbc3R5bGVePXRleHRdIiwiLmpzaiBiIl0sbm81OlsiLnByb2RSZWRUeHQucHJpY2UiXSwiMzYwa3hyIjpbIiNwcm9fbWFsbF9wcmljZSJdLG02Z286WyIjU0dvb2RzUHJpY2UiXSxsaWtlZmFjZTpbIi50UHJjMS50UHJjT24+ZGl2PmIiLCIjanJ0aiJdLG1vcmVmb29kOlsiLnByby1pbmZvIC50ZXh0MiJdLHlhb2Zhbmc6WyIuc194aWFuamlhXzE0MDUxOSJdLCI5OXJlYWQiOlsiI3BhbmVsLXJpZ2h0IC5wcm8tSW5mb0xpc3QgbGkgc3Bhbi5mLVByaWNlIl0sImNoaW5hLXB1YiI6WyIjeHhqZyAucHJvX2J1eV9zZW4iLCIucHJvX2J1eV9zZW4iXSx3aW54dWFuOlsiLnByaWNlLW4gZGQgYiJdLGVmZWlodTpbIi51aV9wcmljZSBzdHJvbmcgZW0iXSxoYXBwaWdvOlsiI3JlYWxfcHJpY2UiXSxnYXA6WyIjcHJvZHVjdFNob3dQcmljZSJdLHRpYW50aWFuOlsiLnh4X3ByaWNlIl0seGlqaWU6WyIuZGV0YWlsX3Byb19kXzEiXSxsaW5nc2hpOlsiI3Nob3BwcmljZSJdLGJhbmdnbzpbIiNzYWxlUHJpY2VUZXh0Il0seWVzbXl3aW5lOlsiLmV4cGxhaW4gLm15UHJpY2UiXSxqeGR5ZjpbIiN6Y19qaWFnZSAuanhQcmljZSJdLHRvb3RvbzpbIiNwcmljZSJdLHptNzpbIiNFQ1NfU0hPUFBSSUNFIl0sbWlxaTpbIi5sZWZ0X3RvcFRhYmxlX2J0biJdLGppdW1laTpbIiNqaWFnZSAuY3V4aWFvIC5udW1iIHN0cm9uZyJdLG9raHFiOlsiLmN6LW51bSJdLGJvb2t1dTpbIiNiay1kLXByaWNlIl0sdGFvM2M6WyIuZGV0YWlsX2luZm9fcm0xIGNpdGUiXSxkMTpbIi5wX21wIl0scnVpeWk6WyIuZ29vZHMtcHJpY2UgLnByaWNlMSJdLGxhbWl1OlsiLmFjdGlvbi1wcmljZSJdLHdiaWFvOlsiI2c1X3ByaWNlIl0sZWhhaWVyOlsiLmN1ci1wcmljZSJdLHNlY29vOlsiI3NlY29vUHJpY2VKcyJdLHhpZnVxdWFuOlsiLmpnX2N1aG9uZyJdLHlpZ3VvOlsiLnByby1wcmljZT5kaXYgc3Ryb25nIl0seXVtbXk3NzpbIi5jcHJpY2UgLnByaWNlIl0sZnJ1aXRkYXk6WyIucHJvZF9wcmljZSIsIiNqcS1wcmljZSJdLHp1aXBpbjpbIi5kZXRhaWxfcHJpY2UiXSx5b2hvYnV5OlsiLnByaWNlLXNhbGUiXSxpa2p0YW86WyIjRUNTX0dPT0RTX0FNT1VOVCJdLG1peWFiYW9iZWk6WyIjaXRlbV9wcmljZSJdLHVsZTpbIi5wcm9kdWN0UHJpY2UgLnByaWNlIHN0cm9uZyJdLG1pbnNoZW5nZWM6WyIubXNfcHJpY2UgLmRkIHN0cm9uZyJdLHdhbmdmdWppbmc6WyIjcHJvLXByaWNlIC5jb3N0Il0sbWVpbGVsZTpbIiNKU19lZmZlY3RfcHJpY2UiXSxzdXB1eTpbIiNTaG93UHJpY2UiLCIuZ29vZF9kX3ByaWNlbmV3IiwiI2dfcHJpY2UiXSxsaW5pbmc6WyIjb2ZmZXJQcmljZSAudiJdLHJyczpbIi5jdXItcHJpY2UiXSxsaWZldmM6WyIjc2hvcHBpbmdQYW5lbFVwcGVyIC5zaG9wcGluZ0luZm8gLnNhbGVQcmljZSJdLHltYXRvdTpbIiNwcm9EZXRhaWwgLnByb21vdGlvbiAuY291bnQiXSxranQ6WyIubWFpblByaWNlIl0sbG9naXRlY2g6WyIuc2FsZS1wcmljZSJdLHhpamk6WyIuYWN0aW9uLXByaWNlIl0sbmlrZTpbIi5leHAtcGRwLXByb2R1Y3QtcHJpY2UtY29udGFpbmVyIC5leHAtcGRwLWxvY2FsLXByaWNlIl0sIjM2MGthZCI6WyIjcHJpY2VudW1iZXIiXSxtZWljaTpbIi5wcmljZSIsIi5wcm9fcHJpY2UgLmNfcHVycGxlIl0sYmVpYmVpOlsiI2RldGFpbC1tZXRhIC5wcmljZS1pbmZvIC5wcmljZSJdLCIxMDB5dWUiOlsiLmFjdGlvbi1wcmljZSIsIiNwcmljZSJdLGRhbGluZzpbIi5nb29kcy1wcmljZSAuYm9sZCJdLHNmaHQ6WyIuZ29vZHMtcHJpY2UtcjEgc3Ryb25nIl0sIjM2MGJ1eSI6WyIjamQtcHJpY2UiLCIjcHJpY2VpbmZvIiwiI3RlYW1TdGF0dXMgLnAtcHJpY2UiLCIjc3VtbWFyeS1wcmljZSIsIi5zdW1tYXJ5LXByaWNlIC5wLXByaWNlIC5wcmljZSJdLCI1MWJ1eSI6WyIueHByaWNlX3ZhbFtpdGVtcHJvcD0nbG93UHJpY2UnXSIsIi54cHJpY2VfdmFsW2l0ZW1wcm9wPSdwcmljZSddIiwiLnByaWNlX2ZvbnQiXSxzdW5pbmc6WyIjcHJvbW90aW9uUHJpY2UiLCIjcHJvbW90aW9uUHJpY2UgZW0iLCIjaXNxdWlja0J1eUJveFByaWNlIGVtIiwiI2Jvb2twcmRwcmljZSIsIiNuZXRQcmljZSBlbSIsIiNtYWluUHJpY2UgZW0iLCIjcnBQcmljZSIsIiNwcm9tb1ByaWNlIiwiI2VQcmljZSBlbSJdLHlpaGFvZGlhbjpbIiNkZXRhaWxfcHJvbV9wcmljZSIsIiNjdXJyZW50X3ByaWNlIiwiI3Byb2R1Y3RGYWNhZGVQcmljZSIsIiNub25NZW1iZXJQcmljZSBzdHJvbmciLCIucHJpY2Vib3giXSx2YW5jbDpbIi5jdXhpYW9QcmljZSBzdHJvbmciXSxnb21lOlsiI3ByZFByaWNlIiwiLmRldGFpbCAucHJpY2UiXSxva2J1eTpbIiNwcm9kUHJpY2VBaiJdLHZqaWE6WyIjU3BlY2lhbFByaWNlIl0sanVtZWk6WyIubmV3ZGVhbF9kZWFsX3ByaWNlIiwiLnByaWNlX25vdyIsIiNtYWxsX3ByaWNlIiwiLmRlYWxfb3JpX3ByaWNlIC5kZWFsX2FjY291dF90d28iXSxqdW1laWdsb2JhbDpbIi5qdW1laV9wcmljZSJdLHlvdWdvdTpbIi54c2J1eV9pdG0gc3Ryb25nLnByaWNlIiwiI3lpdGlhblByaWNlIGkiLCIjeWl0aWFuUHJpY2UiXSxzaG9waW46WyIuc2VsUHJpY2Ugc3BhbjplcSgxKSIsIi5zaG9waW5qZzEiXSx2bWFsbDpbIiNwcm8tcHJpY2UiXSxzZmJlc3Q6WyIucHJpY2VCb3ggLnByaWNlIiwiLnByaWNlIiwiI3ByaWNlIGZvbnQiXSxvdWt1OlsiI3BkQWxsUHJpY2UgLnByYyIsIi5zYWxlLXByaWNlIl0sd29tYWk6WyIjYnV5UHJpY2UiXSwiYmFpZHUtd2VpZ291IjpbIiNuZXctcHJpY2UiLCIub2xkLXByaWNlIl0seWludGFpOlsic3Bhbi55dC1udW0iLCIueXQtbnVtIl0sZmVpbml1OlsiI3ByaWNlRm4iLCIjSl9wcm9kdWN0X3ZhbHVlIC5mbi1ybWItbnVtIl0saml1eGlhbjpbIiNhY3RQcmljZVByaWNlIiwiI19ub3dQcmljZVN0ciJdLHpvbDpbIi5wcmljZS10eXBlIl0sZmVpZmVpOlsiLnByaWNlLWJveCAucHJpY2UtZGV0YWlsIiwiLnByaWNlLWluZm8tdmFsdWUiLCIucHJpY2UtYm94Il0sa3pqMzY1OlsiI3JwcmljZSJdLGthb2xhOlsiI2pzX2N1cnJlbnRQcmljZSJdLG1ldGFvOlsiLnBpX3ByaWNlX2JveF9yb3cgLnBib3hfcHJpY2UiLCIucHJpY2Vfc2VuZHBsYWNlIC5wcmljZSJdLHBoaWxpcHM6WyIucGRjLWJsdWUtYyBzcGFuIl0sdGNsOlsiI3ByaWNlQnV5Il0sY2hhbmdob25nOlsiLnRpX3NjYyBzdHJvbmciXSxrb25rYTpbIi5hY3Rpb24tcHJpY2UiXSxoaXNlbnNlOlsiLmlubGlzdCAuZmx2YSJdLGluZWlnbzpbIiNVTFByaWNlIGZvbnQiXSxza2c6WyIucHJvZHVjdFNhbGUgLnNhbGVQcmljZSJdLCJrLXRvdWNoIjpbIi5wcm9jaWUiXSxnaW9uZWU6WyIjSmdvb2RzUHJpY2UiXSxvcHBvOlsiLmJ1eWluZy1wcmljZSAucHJpY2UiXSx2aXZvOlsiLmFjdGlvbi1wcmljZSJdLGdyYWluZ2VyOlsiI3N1bW1hcnktcHJpY2UgLnAtcHJpY2UiXSxlYmF5OlsiI3ByY0lzdW0iXSwidGFvYmFvLTk1MDk1IjpbIiNKX1Byb21vUHJpY2UgLnRtLXByaWNlIl0sbWVpbGlzaHVvOlsiI3ByaWNlLW5vdyJdLG1vZ3VqaWU6WyIjSl9Ob3dQcmljZSJdLHNlcGhvcmFjcHM6WyIucHJvRGV0SW5mbyAucHJvUHJpY2Ugc3BhbiJdLHN0cmF3YmVycnluZXQ6WyIjZGl2U2hvcFByaWNlIC5tdC0xMCJdLGppYTpbIi5zYWxlLXByaWNlIHNwYW4iXSxsZW1hbGw6WyIjYWRkYml0cyJdLGhhbmR1OlsiLnByb21vdGVfcHJpY2UiXSx0YW9zaHU6WyIjcHJpY2UtdHh0Il0sY2FtZWw6WyIjcHJvZF9wcmljZSJdLHF1d2FuOlsiI3ByaWNlX2dvb2RzX2RpdiBzdHJvbmciXSxsZWZlbmc6WyIuZGl0eS1wcmljZS1jIHNwYW4iXSwiMTM5c2hvcCI6WyIjYmRqIl0sd2FuZ2ppdTpbIiNmaW5hbFByaWNlVmFsdWUiXSxsaWVibzpbIiM4X0N1clByaWNlIl0sYWltZXI6WyIjcG9zdFByaWNlIGVtIl0sa2FkYW5nOlsiI0pfUHJpY2UiXSxsaXppOlsiI3NfcHJpY2UiXSxtZXRyb21hbGw6WyIucHJvRHByaWNlIl0scGJhOlsiLnByaWNlIl0sc2hhbmdwaW46WyIuc3BEZXRhaWxfc3BQcmljZUJpZ1JlZCBpIl0sbWFzYW1hc286WyIucHJpY2UyNCJdLHpoZW46WyIjc2FsZS1wcmljZSJdLHpoZW5waW46WyIjc2FsZS1wcmljZSJdLHNwb3J0aWNhOlsiLnNwZWNpYWwtcHJpY2UtdGl0dGxlKy5wcmljZSJdLG1pbGllcjpbIi5iaWdfcHJpY2UiXSxub3A6WyIuYWN0aW9uLXByaWNlIl0sYmJyZWFkeTpbIi5hY3Rpb24tZmxhc2hidXlfcHJpY2UiXSxxaW5xaW5iYWJ5OlsiLmNvbnRlbnQtbWFpbi16ay0xIl0sc2FzYTpbIi5wcmljZSAuYWN0aW9uLXByaWNlIl0sIjVsdXgiOlsiLmZza19nb29kc19wcmljZSJdLGFsaWV4cHJlc3M6WyIjc2t1LWRpc2NvdW50LXByaWNlIl0sc2hvcGJvcDpbIi5wcmljZUJsb2NrIl0sZmVuZ3F1OlsiLmdvb2RzLXByaWNlLXIxIHN0cm9uZyJdLGtlZWRlOlsiLm1lc3NhZ2VfcHJpY2UiXSxzaG93am95OlsiLmpfUHJpY2VOdW0iXSxlYXNlZXllczpbIi5mb250QXJpYWwiXSx5dW5ob3U6WyIuakZpcnN0UHJpY2UiXSwiNTFkaW4iOlsiLnByb2R1Y3RfcHJpY2UgYiJdLGFpZGFpOlsiI190aGlzZnAiXSxzcGlkZXI6WyIuaG1jcHR3b19zampnIl0senpsMzY1OlsiLmdvb2RzLXByaWNlIC5wcmljZTEiXX0sc3ViU3RhdGlvblBhdHRlcm46eyI1MWJ1eSI6InByaWQiLHlpaGFvZGlhbjoicHJvdmluY2VJZCIsd29tYWk6InNpdGVpbmZvdGVtcCIsc3VuaW5nOiJjaXR5SWQifSxnZXRTdWJTdGF0aW9uSWQ6ZnVuY3Rpb24odCl7aWYoZSlyZXR1cm4gZTtpZih0PXR8fG8ucGFnZUluZm8uc2l0ZU5hbWUsInVuZGVmaW5lZCIhPXR5cGVvZiB0aGlzLnN1YlN0YXRpb25QYXR0ZXJuW3RdKWZvcih2YXIgbj10aGlzLnN1YlN0YXRpb25QYXR0ZXJuW3RdKyI9IixhPWRvY3VtZW50LmNvb2tpZS5zcGxpdCgiOyIpLHI9MDtyPGEubGVuZ3RoO3IrKyl7dmFyIHM9YVtyXTtpZihzPWkudHJpbShzKSwwPT1zLmluZGV4T2Yobikpe3ZhciBsPXMuc3Vic3RyaW5nKG4ubGVuZ3RoLHMubGVuZ3RoKTtpZigiNTFidXkiPT10KXRyeXt2YXIgYz1sLmluZGV4T2YoIl8iKTtjPj0wJiYobD1sLnN1YnN0cihjKzEpKX1jYXRjaChwKXt9cmV0dXJuIGU9bCxsfX1yZXR1cm4iIn0sdHJ5R2V0TGF6eUxvYWRQcmljZTpmdW5jdGlvbih0LGUsbixhLHIpe3ZhciBzPSIiLGw9MCxjPXsidG1hbGwuY29tIjoiLnRtLXByaWNlLC50Yi13clR1YW4tbnVtIiwidGFvYmFvLmNvbSI6Ii50Yi1kZXRhaWwtcHJpY2Ugc3Ryb25nOm5vdCguZGVsKSJ9O3RyeXtzPWNbdF19Y2F0Y2gocCl7by5kZWJ1ZyYmY29uc29sZS5sb2cocCkscz0iIn12YXIgZD1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2lmKCsrbCxpKHMpLmxlbmd0aHx8bD41KXt2YXIgbz0iIjtpKHMpLmxlbmd0aCYmKG89aShzKS50ZXh0KCkuc3BsaXQoIi0iKVswXSxvPXBhcnNlRmxvYXQoby5yZXBsYWNlKC9bXjAtOS5dL2csIiIpKSxvPXBhcnNlSW50KDEwMCpvKS8xMDAsbz1vLnRvRml4ZWQoMikpLG4rPSImcHJpY2U9IitvKyImc2l0ZT0iK3Quc3BsaXQoIi4iKVswXSxjbGVhckludGVydmFsKGQpLGUobixhLHIpfX0sMWUzKX19fS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9big0Nik7dC5leHBvcnRzLmdaaXA9ZnVuY3Rpb24odCl7cmV0dXJuIGkuZ3ppcChKU09OLnN0cmluZ2lmeSh0KSl9LHQuZXhwb3J0cy51bkd6aXA9ZnVuY3Rpb24odCl7cmV0dXJuIEpTT04ucGFyc2UoaS51bmd6aXAodCkpfX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLGk7IWZ1bmN0aW9uKGUpe3QuZXhwb3J0cz1lKCl9KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIHQoZSxuLG8pe2Z1bmN0aW9uIGEocyxsKXtpZighbltzXSl7aWYoIWVbc10pe3ZhciBjPSJmdW5jdGlvbiI9PXR5cGVvZiBpJiZpO2lmKCFsJiZjKXJldHVybiBpKHMsITApO2lmKHIpcmV0dXJuIHIocywhMCk7dmFyIHA9bmV3IEVycm9yKCJDYW5ub3QgZmluZCBtb2R1bGUgJyIrcysiJyIpO3Rocm93IHAuY29kZT0iTU9EVUxFX05PVF9GT1VORCIscH12YXIgZD1uW3NdPXtleHBvcnRzOnt9fTtlW3NdWzBdLmNhbGwoZC5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciBuPWVbc11bMV1bdF07cmV0dXJuIGEobj9uOnQpfSxkLGQuZXhwb3J0cyx0LGUsbixvKX1yZXR1cm4gbltzXS5leHBvcnRzfWZvcih2YXIgcj0iZnVuY3Rpb24iPT10eXBlb2YgaSYmaSxzPTA7czxvLmxlbmd0aDtzKyspYShvW3NdKTtyZXR1cm4gYX0oezE6W2Z1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaSh0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBpKSlyZXR1cm4gbmV3IGkodCk7dGhpcy5vcHRpb25zPWwuYXNzaWduKHtsZXZlbDp4LG1ldGhvZDpfLGNodW5rU2l6ZToxNjM4NCx3aW5kb3dCaXRzOjE1LG1lbUxldmVsOjgsc3RyYXRlZ3k6Yix0bzoiIn0sdHx8e30pO3ZhciBlPXRoaXMub3B0aW9ucztlLnJhdyYmZS53aW5kb3dCaXRzPjA/ZS53aW5kb3dCaXRzPS1lLndpbmRvd0JpdHM6ZS5nemlwJiZlLndpbmRvd0JpdHM+MCYmZS53aW5kb3dCaXRzPDE2JiYoZS53aW5kb3dCaXRzKz0xNiksdGhpcy5lcnI9MCx0aGlzLm1zZz0iIix0aGlzLmVuZGVkPSExLHRoaXMuY2h1bmtzPVtdLHRoaXMuc3RybT1uZXcgZCx0aGlzLnN0cm0uYXZhaWxfb3V0PTA7dmFyIG49cy5kZWZsYXRlSW5pdDIodGhpcy5zdHJtLGUubGV2ZWwsZS5tZXRob2QsZS53aW5kb3dCaXRzLGUubWVtTGV2ZWwsZS5zdHJhdGVneSk7aWYobiE9PWYpdGhyb3cgbmV3IEVycm9yKHBbbl0pO2lmKGUuaGVhZGVyJiZzLmRlZmxhdGVTZXRIZWFkZXIodGhpcy5zdHJtLGUuaGVhZGVyKSxlLmRpY3Rpb25hcnkpe3ZhciBvO2lmKG89InN0cmluZyI9PXR5cGVvZiBlLmRpY3Rpb25hcnk/Yy5zdHJpbmcyYnVmKGUuZGljdGlvbmFyeSk6IltvYmplY3QgQXJyYXlCdWZmZXJdIj09PWguY2FsbChlLmRpY3Rpb25hcnkpP25ldyBVaW50OEFycmF5KGUuZGljdGlvbmFyeSk6ZS5kaWN0aW9uYXJ5LG49cy5kZWZsYXRlU2V0RGljdGlvbmFyeSh0aGlzLnN0cm0sbyksbiE9PWYpdGhyb3cgbmV3IEVycm9yKHBbbl0pO3RoaXMuX2RpY3Rfc2V0PSEwfX1mdW5jdGlvbiBvKHQsZSl7dmFyIG49bmV3IGkoZSk7aWYobi5wdXNoKHQsITApLG4uZXJyKXRocm93IG4ubXNnO3JldHVybiBuLnJlc3VsdH1mdW5jdGlvbiBhKHQsZSl7cmV0dXJuIGU9ZXx8e30sZS5yYXc9ITAsbyh0LGUpfWZ1bmN0aW9uIHIodCxlKXtyZXR1cm4gZT1lfHx7fSxlLmd6aXA9ITAsbyh0LGUpfXZhciBzPXQoIi4vemxpYi9kZWZsYXRlIiksbD10KCIuL3V0aWxzL2NvbW1vbiIpLGM9dCgiLi91dGlscy9zdHJpbmdzIikscD10KCIuL3psaWIvbWVzc2FnZXMiKSxkPXQoIi4vemxpYi96c3RyZWFtIiksaD1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLHU9MCxtPTQsZj0wLGc9MSx3PTIseD0tMSxiPTAsXz04O2kucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCxlKXt2YXIgbixpLG89dGhpcy5zdHJtLGE9dGhpcy5vcHRpb25zLmNodW5rU2l6ZTtpZih0aGlzLmVuZGVkKXJldHVybiExO2k9ZT09PX5+ZT9lOmU9PT0hMD9tOnUsInN0cmluZyI9PXR5cGVvZiB0P28uaW5wdXQ9Yy5zdHJpbmcyYnVmKHQpOiJbb2JqZWN0IEFycmF5QnVmZmVyXSI9PT1oLmNhbGwodCk/by5pbnB1dD1uZXcgVWludDhBcnJheSh0KTpvLmlucHV0PXQsby5uZXh0X2luPTAsby5hdmFpbF9pbj1vLmlucHV0Lmxlbmd0aDtkb3tpZigwPT09by5hdmFpbF9vdXQmJihvLm91dHB1dD1uZXcgbC5CdWY4KGEpLG8ubmV4dF9vdXQ9MCxvLmF2YWlsX291dD1hKSxuPXMuZGVmbGF0ZShvLGkpLG4hPT1nJiZuIT09ZilyZXR1cm4gdGhpcy5vbkVuZChuKSx0aGlzLmVuZGVkPSEwLCExOzAhPT1vLmF2YWlsX291dCYmKDAhPT1vLmF2YWlsX2lufHxpIT09bSYmaSE9PXcpfHwoInN0cmluZyI9PT10aGlzLm9wdGlvbnMudG8/dGhpcy5vbkRhdGEoYy5idWYyYmluc3RyaW5nKGwuc2hyaW5rQnVmKG8ub3V0cHV0LG8ubmV4dF9vdXQpKSk6dGhpcy5vbkRhdGEobC5zaHJpbmtCdWYoby5vdXRwdXQsby5uZXh0X291dCkpKX13aGlsZSgoby5hdmFpbF9pbj4wfHwwPT09by5hdmFpbF9vdXQpJiZuIT09Zyk7cmV0dXJuIGk9PT1tPyhuPXMuZGVmbGF0ZUVuZCh0aGlzLnN0cm0pLHRoaXMub25FbmQobiksdGhpcy5lbmRlZD0hMCxuPT09Zik6aSE9PXd8fCh0aGlzLm9uRW5kKGYpLG8uYXZhaWxfb3V0PTAsITApfSxpLnByb3RvdHlwZS5vbkRhdGE9ZnVuY3Rpb24odCl7dGhpcy5jaHVua3MucHVzaCh0KX0saS5wcm90b3R5cGUub25FbmQ9ZnVuY3Rpb24odCl7dD09PWYmJigic3RyaW5nIj09PXRoaXMub3B0aW9ucy50bz90aGlzLnJlc3VsdD10aGlzLmNodW5rcy5qb2luKCIiKTp0aGlzLnJlc3VsdD1sLmZsYXR0ZW5DaHVua3ModGhpcy5jaHVua3MpKSx0aGlzLmNodW5rcz1bXSx0aGlzLmVycj10LHRoaXMubXNnPXRoaXMuc3RybS5tc2d9LG4uRGVmbGF0ZT1pLG4uZGVmbGF0ZT1vLG4uZGVmbGF0ZVJhdz1hLG4uZ3ppcD1yfSx7Ii4vdXRpbHMvY29tbW9uIjozLCIuL3V0aWxzL3N0cmluZ3MiOjQsIi4vemxpYi9kZWZsYXRlIjo4LCIuL3psaWIvbWVzc2FnZXMiOjEzLCIuL3psaWIvenN0cmVhbSI6MTV9XSwyOltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkodCl7aWYoISh0aGlzIGluc3RhbmNlb2YgaSkpcmV0dXJuIG5ldyBpKHQpO3RoaXMub3B0aW9ucz1zLmFzc2lnbih7Y2h1bmtTaXplOjE2Mzg0LHdpbmRvd0JpdHM6MCx0bzoiIn0sdHx8e30pO3ZhciBlPXRoaXMub3B0aW9ucztlLnJhdyYmZS53aW5kb3dCaXRzPj0wJiZlLndpbmRvd0JpdHM8MTYmJihlLndpbmRvd0JpdHM9LWUud2luZG93Qml0cywwPT09ZS53aW5kb3dCaXRzJiYoZS53aW5kb3dCaXRzPS0xNSkpLCEoZS53aW5kb3dCaXRzPj0wJiZlLndpbmRvd0JpdHM8MTYpfHx0JiZ0LndpbmRvd0JpdHN8fChlLndpbmRvd0JpdHMrPTMyKSxlLndpbmRvd0JpdHM+MTUmJmUud2luZG93Qml0czw0OCYmMD09PSgxNSZlLndpbmRvd0JpdHMpJiYoZS53aW5kb3dCaXRzfD0xNSksdGhpcy5lcnI9MCx0aGlzLm1zZz0iIix0aGlzLmVuZGVkPSExLHRoaXMuY2h1bmtzPVtdLHRoaXMuc3RybT1uZXcgZCx0aGlzLnN0cm0uYXZhaWxfb3V0PTA7dmFyIG49ci5pbmZsYXRlSW5pdDIodGhpcy5zdHJtLGUud2luZG93Qml0cyk7aWYobiE9PWMuWl9PSyl0aHJvdyBuZXcgRXJyb3IocFtuXSk7dGhpcy5oZWFkZXI9bmV3IGgsci5pbmZsYXRlR2V0SGVhZGVyKHRoaXMuc3RybSx0aGlzLmhlYWRlcil9ZnVuY3Rpb24gbyh0LGUpe3ZhciBuPW5ldyBpKGUpO2lmKG4ucHVzaCh0LCEwKSxuLmVycil0aHJvdyBuLm1zZztyZXR1cm4gbi5yZXN1bHR9ZnVuY3Rpb24gYSh0LGUpe3JldHVybiBlPWV8fHt9LGUucmF3PSEwLG8odCxlKX12YXIgcj10KCIuL3psaWIvaW5mbGF0ZSIpLHM9dCgiLi91dGlscy9jb21tb24iKSxsPXQoIi4vdXRpbHMvc3RyaW5ncyIpLGM9dCgiLi96bGliL2NvbnN0YW50cyIpLHA9dCgiLi96bGliL21lc3NhZ2VzIiksZD10KCIuL3psaWIvenN0cmVhbSIpLGg9dCgiLi96bGliL2d6aGVhZGVyIiksdT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO2kucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCxlKXt2YXIgbixpLG8sYSxwLGQsaD10aGlzLnN0cm0sbT10aGlzLm9wdGlvbnMuY2h1bmtTaXplLGY9dGhpcy5vcHRpb25zLmRpY3Rpb25hcnksZz0hMTtpZih0aGlzLmVuZGVkKXJldHVybiExO2k9ZT09PX5+ZT9lOmU9PT0hMD9jLlpfRklOSVNIOmMuWl9OT19GTFVTSCwic3RyaW5nIj09dHlwZW9mIHQ/aC5pbnB1dD1sLmJpbnN0cmluZzJidWYodCk6IltvYmplY3QgQXJyYXlCdWZmZXJdIj09PXUuY2FsbCh0KT9oLmlucHV0PW5ldyBVaW50OEFycmF5KHQpOmguaW5wdXQ9dCxoLm5leHRfaW49MCxoLmF2YWlsX2luPWguaW5wdXQubGVuZ3RoO2Rve2lmKDA9PT1oLmF2YWlsX291dCYmKGgub3V0cHV0PW5ldyBzLkJ1ZjgobSksaC5uZXh0X291dD0wLGguYXZhaWxfb3V0PW0pLG49ci5pbmZsYXRlKGgsYy5aX05PX0ZMVVNIKSxuPT09Yy5aX05FRURfRElDVCYmZiYmKGQ9InN0cmluZyI9PXR5cGVvZiBmP2wuc3RyaW5nMmJ1ZihmKToiW29iamVjdCBBcnJheUJ1ZmZlcl0iPT09dS5jYWxsKGYpP25ldyBVaW50OEFycmF5KGYpOmYsbj1yLmluZmxhdGVTZXREaWN0aW9uYXJ5KHRoaXMuc3RybSxkKSksbj09PWMuWl9CVUZfRVJST1ImJmc9PT0hMCYmKG49Yy5aX09LLGc9ITEpLG4hPT1jLlpfU1RSRUFNX0VORCYmbiE9PWMuWl9PSylyZXR1cm4gdGhpcy5vbkVuZChuKSx0aGlzLmVuZGVkPSEwLCExO2gubmV4dF9vdXQmJigwIT09aC5hdmFpbF9vdXQmJm4hPT1jLlpfU1RSRUFNX0VORCYmKDAhPT1oLmF2YWlsX2lufHxpIT09Yy5aX0ZJTklTSCYmaSE9PWMuWl9TWU5DX0ZMVVNIKXx8KCJzdHJpbmciPT09dGhpcy5vcHRpb25zLnRvPyhvPWwudXRmOGJvcmRlcihoLm91dHB1dCxoLm5leHRfb3V0KSxhPWgubmV4dF9vdXQtbyxwPWwuYnVmMnN0cmluZyhoLm91dHB1dCxvKSxoLm5leHRfb3V0PWEsaC5hdmFpbF9vdXQ9bS1hLGEmJnMuYXJyYXlTZXQoaC5vdXRwdXQsaC5vdXRwdXQsbyxhLDApLHRoaXMub25EYXRhKHApKTp0aGlzLm9uRGF0YShzLnNocmlua0J1ZihoLm91dHB1dCxoLm5leHRfb3V0KSkpKSwwPT09aC5hdmFpbF9pbiYmMD09PWguYXZhaWxfb3V0JiYoZz0hMCk7Cn13aGlsZSgoaC5hdmFpbF9pbj4wfHwwPT09aC5hdmFpbF9vdXQpJiZuIT09Yy5aX1NUUkVBTV9FTkQpO3JldHVybiBuPT09Yy5aX1NUUkVBTV9FTkQmJihpPWMuWl9GSU5JU0gpLGk9PT1jLlpfRklOSVNIPyhuPXIuaW5mbGF0ZUVuZCh0aGlzLnN0cm0pLHRoaXMub25FbmQobiksdGhpcy5lbmRlZD0hMCxuPT09Yy5aX09LKTppIT09Yy5aX1NZTkNfRkxVU0h8fCh0aGlzLm9uRW5kKGMuWl9PSyksaC5hdmFpbF9vdXQ9MCwhMCl9LGkucHJvdG90eXBlLm9uRGF0YT1mdW5jdGlvbih0KXt0aGlzLmNodW5rcy5wdXNoKHQpfSxpLnByb3RvdHlwZS5vbkVuZD1mdW5jdGlvbih0KXt0PT09Yy5aX09LJiYoInN0cmluZyI9PT10aGlzLm9wdGlvbnMudG8/dGhpcy5yZXN1bHQ9dGhpcy5jaHVua3Muam9pbigiIik6dGhpcy5yZXN1bHQ9cy5mbGF0dGVuQ2h1bmtzKHRoaXMuY2h1bmtzKSksdGhpcy5jaHVua3M9W10sdGhpcy5lcnI9dCx0aGlzLm1zZz10aGlzLnN0cm0ubXNnfSxuLkluZmxhdGU9aSxuLmluZmxhdGU9byxuLmluZmxhdGVSYXc9YSxuLnVuZ3ppcD1vfSx7Ii4vdXRpbHMvY29tbW9uIjozLCIuL3V0aWxzL3N0cmluZ3MiOjQsIi4vemxpYi9jb25zdGFudHMiOjYsIi4vemxpYi9nemhlYWRlciI6OSwiLi96bGliL2luZmxhdGUiOjExLCIuL3psaWIvbWVzc2FnZXMiOjEzLCIuL3psaWIvenN0cmVhbSI6MTV9XSwzOltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPSJ1bmRlZmluZWQiIT10eXBlb2YgVWludDhBcnJheSYmInVuZGVmaW5lZCIhPXR5cGVvZiBVaW50MTZBcnJheSYmInVuZGVmaW5lZCIhPXR5cGVvZiBJbnQzMkFycmF5O24uYXNzaWduPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7ZS5sZW5ndGg7KXt2YXIgbj1lLnNoaWZ0KCk7aWYobil7aWYoIm9iamVjdCIhPXR5cGVvZiBuKXRocm93IG5ldyBUeXBlRXJyb3IobisibXVzdCBiZSBub24tb2JqZWN0Iik7Zm9yKHZhciBpIGluIG4pbi5oYXNPd25Qcm9wZXJ0eShpKSYmKHRbaV09bltpXSl9fXJldHVybiB0fSxuLnNocmlua0J1Zj1mdW5jdGlvbih0LGUpe3JldHVybiB0Lmxlbmd0aD09PWU/dDp0LnN1YmFycmF5P3Quc3ViYXJyYXkoMCxlKToodC5sZW5ndGg9ZSx0KX07dmFyIG89e2FycmF5U2V0OmZ1bmN0aW9uKHQsZSxuLGksbyl7aWYoZS5zdWJhcnJheSYmdC5zdWJhcnJheSlyZXR1cm4gdm9pZCB0LnNldChlLnN1YmFycmF5KG4sbitpKSxvKTtmb3IodmFyIGE9MDthPGk7YSsrKXRbbythXT1lW24rYV19LGZsYXR0ZW5DaHVua3M6ZnVuY3Rpb24odCl7dmFyIGUsbixpLG8sYSxyO2ZvcihpPTAsZT0wLG49dC5sZW5ndGg7ZTxuO2UrKylpKz10W2VdLmxlbmd0aDtmb3Iocj1uZXcgVWludDhBcnJheShpKSxvPTAsZT0wLG49dC5sZW5ndGg7ZTxuO2UrKylhPXRbZV0sci5zZXQoYSxvKSxvKz1hLmxlbmd0aDtyZXR1cm4gcn19LGE9e2FycmF5U2V0OmZ1bmN0aW9uKHQsZSxuLGksbyl7Zm9yKHZhciBhPTA7YTxpO2ErKyl0W28rYV09ZVtuK2FdfSxmbGF0dGVuQ2h1bmtzOmZ1bmN0aW9uKHQpe3JldHVybltdLmNvbmNhdC5hcHBseShbXSx0KX19O24uc2V0VHlwZWQ9ZnVuY3Rpb24odCl7dD8obi5CdWY4PVVpbnQ4QXJyYXksbi5CdWYxNj1VaW50MTZBcnJheSxuLkJ1ZjMyPUludDMyQXJyYXksbi5hc3NpZ24obixvKSk6KG4uQnVmOD1BcnJheSxuLkJ1ZjE2PUFycmF5LG4uQnVmMzI9QXJyYXksbi5hc3NpZ24obixhKSl9LG4uc2V0VHlwZWQoaSl9LHt9XSw0OltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkodCxlKXtpZihlPDY1NTM3JiYodC5zdWJhcnJheSYmcnx8IXQuc3ViYXJyYXkmJmEpKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsby5zaHJpbmtCdWYodCxlKSk7Zm9yKHZhciBuPSIiLGk9MDtpPGU7aSsrKW4rPVN0cmluZy5mcm9tQ2hhckNvZGUodFtpXSk7cmV0dXJuIG59dmFyIG89dCgiLi9jb21tb24iKSxhPSEwLHI9ITA7dHJ5e1N0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxbMF0pfWNhdGNoKHMpe2E9ITF9dHJ5e1N0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxuZXcgVWludDhBcnJheSgxKSl9Y2F0Y2gocyl7cj0hMX1mb3IodmFyIGw9bmV3IG8uQnVmOCgyNTYpLGM9MDtjPDI1NjtjKyspbFtjXT1jPj0yNTI/NjpjPj0yNDg/NTpjPj0yNDA/NDpjPj0yMjQ/MzpjPj0xOTI/MjoxO2xbMjU0XT1sWzI1NF09MSxuLnN0cmluZzJidWY9ZnVuY3Rpb24odCl7dmFyIGUsbixpLGEscixzPXQubGVuZ3RoLGw9MDtmb3IoYT0wO2E8czthKyspbj10LmNoYXJDb2RlQXQoYSksNTUyOTY9PT0oNjQ1MTImbikmJmErMTxzJiYoaT10LmNoYXJDb2RlQXQoYSsxKSw1NjMyMD09PSg2NDUxMiZpKSYmKG49NjU1MzYrKG4tNTUyOTY8PDEwKSsoaS01NjMyMCksYSsrKSksbCs9bjwxMjg/MTpuPDIwNDg/MjpuPDY1NTM2PzM6NDtmb3IoZT1uZXcgby5CdWY4KGwpLHI9MCxhPTA7cjxsO2ErKyluPXQuY2hhckNvZGVBdChhKSw1NTI5Nj09PSg2NDUxMiZuKSYmYSsxPHMmJihpPXQuY2hhckNvZGVBdChhKzEpLDU2MzIwPT09KDY0NTEyJmkpJiYobj02NTUzNisobi01NTI5Njw8MTApKyhpLTU2MzIwKSxhKyspKSxuPDEyOD9lW3IrK109bjpuPDIwNDg/KGVbcisrXT0xOTJ8bj4+PjYsZVtyKytdPTEyOHw2MyZuKTpuPDY1NTM2PyhlW3IrK109MjI0fG4+Pj4xMixlW3IrK109MTI4fG4+Pj42JjYzLGVbcisrXT0xMjh8NjMmbik6KGVbcisrXT0yNDB8bj4+PjE4LGVbcisrXT0xMjh8bj4+PjEyJjYzLGVbcisrXT0xMjh8bj4+PjYmNjMsZVtyKytdPTEyOHw2MyZuKTtyZXR1cm4gZX0sbi5idWYyYmluc3RyaW5nPWZ1bmN0aW9uKHQpe3JldHVybiBpKHQsdC5sZW5ndGgpfSxuLmJpbnN0cmluZzJidWY9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBvLkJ1ZjgodC5sZW5ndGgpLG49MCxpPWUubGVuZ3RoO248aTtuKyspZVtuXT10LmNoYXJDb2RlQXQobik7cmV0dXJuIGV9LG4uYnVmMnN0cmluZz1mdW5jdGlvbih0LGUpe3ZhciBuLG8sYSxyLHM9ZXx8dC5sZW5ndGgsYz1uZXcgQXJyYXkoMipzKTtmb3Iobz0wLG49MDtuPHM7KWlmKGE9dFtuKytdLGE8MTI4KWNbbysrXT1hO2Vsc2UgaWYocj1sW2FdLHI+NCljW28rK109NjU1MzMsbis9ci0xO2Vsc2V7Zm9yKGEmPTI9PT1yPzMxOjM9PT1yPzE1Ojc7cj4xJiZuPHM7KWE9YTw8Nnw2MyZ0W24rK10sci0tO3I+MT9jW28rK109NjU1MzM6YTw2NTUzNj9jW28rK109YTooYS09NjU1MzYsY1tvKytdPTU1Mjk2fGE+PjEwJjEwMjMsY1tvKytdPTU2MzIwfDEwMjMmYSl9cmV0dXJuIGkoYyxvKX0sbi51dGY4Ym9yZGVyPWZ1bmN0aW9uKHQsZSl7dmFyIG47Zm9yKGU9ZXx8dC5sZW5ndGgsZT50Lmxlbmd0aCYmKGU9dC5sZW5ndGgpLG49ZS0xO24+PTAmJjEyOD09PSgxOTImdFtuXSk7KW4tLTtyZXR1cm4gbjwwP2U6MD09PW4/ZTpuK2xbdFtuXV0+ZT9uOmV9fSx7Ii4vY29tbW9uIjozfV0sNTpbZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBpKHQsZSxuLGkpe2Zvcih2YXIgbz02NTUzNSZ0fDAsYT10Pj4+MTYmNjU1MzV8MCxyPTA7MCE9PW47KXtyPW4+MmUzPzJlMzpuLG4tPXI7ZG8gbz1vK2VbaSsrXXwwLGE9YStvfDA7d2hpbGUoLS1yKTtvJT02NTUyMSxhJT02NTUyMX1yZXR1cm4gb3xhPDwxNnwwfWUuZXhwb3J0cz1pfSx7fV0sNjpbZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtlLmV4cG9ydHM9e1pfTk9fRkxVU0g6MCxaX1BBUlRJQUxfRkxVU0g6MSxaX1NZTkNfRkxVU0g6MixaX0ZVTExfRkxVU0g6MyxaX0ZJTklTSDo0LFpfQkxPQ0s6NSxaX1RSRUVTOjYsWl9PSzowLFpfU1RSRUFNX0VORDoxLFpfTkVFRF9ESUNUOjIsWl9FUlJOTzotMSxaX1NUUkVBTV9FUlJPUjotMixaX0RBVEFfRVJST1I6LTMsWl9CVUZfRVJST1I6LTUsWl9OT19DT01QUkVTU0lPTjowLFpfQkVTVF9TUEVFRDoxLFpfQkVTVF9DT01QUkVTU0lPTjo5LFpfREVGQVVMVF9DT01QUkVTU0lPTjotMSxaX0ZJTFRFUkVEOjEsWl9IVUZGTUFOX09OTFk6MixaX1JMRTozLFpfRklYRUQ6NCxaX0RFRkFVTFRfU1RSQVRFR1k6MCxaX0JJTkFSWTowLFpfVEVYVDoxLFpfVU5LTk9XTjoyLFpfREVGTEFURUQ6OH19LHt9XSw3OltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoKXtmb3IodmFyIHQsZT1bXSxuPTA7bjwyNTY7bisrKXt0PW47Zm9yKHZhciBpPTA7aTw4O2krKyl0PTEmdD8zOTg4MjkyMzg0XnQ+Pj4xOnQ+Pj4xO2Vbbl09dH1yZXR1cm4gZX1mdW5jdGlvbiBvKHQsZSxuLGkpe3ZhciBvPWEscj1pK247dF49LTE7Zm9yKHZhciBzPWk7czxyO3MrKyl0PXQ+Pj44Xm9bMjU1Jih0XmVbc10pXTtyZXR1cm4gdF4tMX12YXIgYT1pKCk7ZS5leHBvcnRzPW99LHt9XSw4OltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkodCxlKXtyZXR1cm4gdC5tc2c9cVtlXSxlfWZ1bmN0aW9uIG8odCl7cmV0dXJuKHQ8PDEpLSh0PjQ/OTowKX1mdW5jdGlvbiBhKHQpe2Zvcih2YXIgZT10Lmxlbmd0aDstLWU+PTA7KXRbZV09MH1mdW5jdGlvbiByKHQpe3ZhciBlPXQuc3RhdGUsbj1lLnBlbmRpbmc7bj50LmF2YWlsX291dCYmKG49dC5hdmFpbF9vdXQpLDAhPT1uJiYoQS5hcnJheVNldCh0Lm91dHB1dCxlLnBlbmRpbmdfYnVmLGUucGVuZGluZ19vdXQsbix0Lm5leHRfb3V0KSx0Lm5leHRfb3V0Kz1uLGUucGVuZGluZ19vdXQrPW4sdC50b3RhbF9vdXQrPW4sdC5hdmFpbF9vdXQtPW4sZS5wZW5kaW5nLT1uLDA9PT1lLnBlbmRpbmcmJihlLnBlbmRpbmdfb3V0PTApKX1mdW5jdGlvbiBzKHQsZSl7Ti5fdHJfZmx1c2hfYmxvY2sodCx0LmJsb2NrX3N0YXJ0Pj0wP3QuYmxvY2tfc3RhcnQ6LTEsdC5zdHJzdGFydC10LmJsb2NrX3N0YXJ0LGUpLHQuYmxvY2tfc3RhcnQ9dC5zdHJzdGFydCxyKHQuc3RybSl9ZnVuY3Rpb24gbCh0LGUpe3QucGVuZGluZ19idWZbdC5wZW5kaW5nKytdPWV9ZnVuY3Rpb24gYyh0LGUpe3QucGVuZGluZ19idWZbdC5wZW5kaW5nKytdPWU+Pj44JjI1NSx0LnBlbmRpbmdfYnVmW3QucGVuZGluZysrXT0yNTUmZX1mdW5jdGlvbiBwKHQsZSxuLGkpe3ZhciBvPXQuYXZhaWxfaW47cmV0dXJuIG8+aSYmKG89aSksMD09PW8/MDoodC5hdmFpbF9pbi09byxBLmFycmF5U2V0KGUsdC5pbnB1dCx0Lm5leHRfaW4sbyxuKSwxPT09dC5zdGF0ZS53cmFwP3QuYWRsZXI9SSh0LmFkbGVyLGUsbyxuKToyPT09dC5zdGF0ZS53cmFwJiYodC5hZGxlcj1CKHQuYWRsZXIsZSxvLG4pKSx0Lm5leHRfaW4rPW8sdC50b3RhbF9pbis9byxvKX1mdW5jdGlvbiBkKHQsZSl7dmFyIG4saSxvPXQubWF4X2NoYWluX2xlbmd0aCxhPXQuc3Ryc3RhcnQscj10LnByZXZfbGVuZ3RoLHM9dC5uaWNlX21hdGNoLGw9dC5zdHJzdGFydD50Lndfc2l6ZS1kdD90LnN0cnN0YXJ0LSh0Lndfc2l6ZS1kdCk6MCxjPXQud2luZG93LHA9dC53X21hc2ssZD10LnByZXYsaD10LnN0cnN0YXJ0K3B0LHU9Y1thK3ItMV0sbT1jW2Ercl07dC5wcmV2X2xlbmd0aD49dC5nb29kX21hdGNoJiYobz4+PTIpLHM+dC5sb29rYWhlYWQmJihzPXQubG9va2FoZWFkKTtkbyBpZihuPWUsY1tuK3JdPT09bSYmY1tuK3ItMV09PT11JiZjW25dPT09Y1thXSYmY1srK25dPT09Y1thKzFdKXthKz0yLG4rKztkbzt3aGlsZShjWysrYV09PT1jWysrbl0mJmNbKythXT09PWNbKytuXSYmY1srK2FdPT09Y1srK25dJiZjWysrYV09PT1jWysrbl0mJmNbKythXT09PWNbKytuXSYmY1srK2FdPT09Y1srK25dJiZjWysrYV09PT1jWysrbl0mJmNbKythXT09PWNbKytuXSYmYTxoKTtpZihpPXB0LShoLWEpLGE9aC1wdCxpPnIpe2lmKHQubWF0Y2hfc3RhcnQ9ZSxyPWksaT49cylicmVhazt1PWNbYStyLTFdLG09Y1thK3JdfX13aGlsZSgoZT1kW2UmcF0pPmwmJjAhPT0tLW8pO3JldHVybiByPD10Lmxvb2thaGVhZD9yOnQubG9va2FoZWFkfWZ1bmN0aW9uIGgodCl7dmFyIGUsbixpLG8sYSxyPXQud19zaXplO2Rve2lmKG89dC53aW5kb3dfc2l6ZS10Lmxvb2thaGVhZC10LnN0cnN0YXJ0LHQuc3Ryc3RhcnQ+PXIrKHItZHQpKXtBLmFycmF5U2V0KHQud2luZG93LHQud2luZG93LHIsciwwKSx0Lm1hdGNoX3N0YXJ0LT1yLHQuc3Ryc3RhcnQtPXIsdC5ibG9ja19zdGFydC09cixuPXQuaGFzaF9zaXplLGU9bjtkbyBpPXQuaGVhZFstLWVdLHQuaGVhZFtlXT1pPj1yP2ktcjowO3doaWxlKC0tbik7bj1yLGU9bjtkbyBpPXQucHJldlstLWVdLHQucHJldltlXT1pPj1yP2ktcjowO3doaWxlKC0tbik7bys9cn1pZigwPT09dC5zdHJtLmF2YWlsX2luKWJyZWFrO2lmKG49cCh0LnN0cm0sdC53aW5kb3csdC5zdHJzdGFydCt0Lmxvb2thaGVhZCxvKSx0Lmxvb2thaGVhZCs9bix0Lmxvb2thaGVhZCt0Lmluc2VydD49Y3QpZm9yKGE9dC5zdHJzdGFydC10Lmluc2VydCx0Lmluc19oPXQud2luZG93W2FdLHQuaW5zX2g9KHQuaW5zX2g8PHQuaGFzaF9zaGlmdF50LndpbmRvd1thKzFdKSZ0Lmhhc2hfbWFzazt0Lmluc2VydCYmKHQuaW5zX2g9KHQuaW5zX2g8PHQuaGFzaF9zaGlmdF50LndpbmRvd1thK2N0LTFdKSZ0Lmhhc2hfbWFzayx0LnByZXZbYSZ0LndfbWFza109dC5oZWFkW3QuaW5zX2hdLHQuaGVhZFt0Lmluc19oXT1hLGErKyx0Lmluc2VydC0tLCEodC5sb29rYWhlYWQrdC5pbnNlcnQ8Y3QpKTspO313aGlsZSh0Lmxvb2thaGVhZDxkdCYmMCE9PXQuc3RybS5hdmFpbF9pbil9ZnVuY3Rpb24gdSh0LGUpe3ZhciBuPTY1NTM1O2ZvcihuPnQucGVuZGluZ19idWZfc2l6ZS01JiYobj10LnBlbmRpbmdfYnVmX3NpemUtNSk7Oyl7aWYodC5sb29rYWhlYWQ8PTEpe2lmKGgodCksMD09PXQubG9va2FoZWFkJiZlPT09TylyZXR1cm4gX3Q7aWYoMD09PXQubG9va2FoZWFkKWJyZWFrfXQuc3Ryc3RhcnQrPXQubG9va2FoZWFkLHQubG9va2FoZWFkPTA7dmFyIGk9dC5ibG9ja19zdGFydCtuO2lmKCgwPT09dC5zdHJzdGFydHx8dC5zdHJzdGFydD49aSkmJih0Lmxvb2thaGVhZD10LnN0cnN0YXJ0LWksdC5zdHJzdGFydD1pLHModCwhMSksMD09PXQuc3RybS5hdmFpbF9vdXQpKXJldHVybiBfdDtpZih0LnN0cnN0YXJ0LXQuYmxvY2tfc3RhcnQ+PXQud19zaXplLWR0JiYocyh0LCExKSwwPT09dC5zdHJtLmF2YWlsX291dCkpcmV0dXJuIF90fXJldHVybiB0Lmluc2VydD0wLGU9PT1EPyhzKHQsITApLDA9PT10LnN0cm0uYXZhaWxfb3V0P3l0Omt0KTp0LnN0cnN0YXJ0PnQuYmxvY2tfc3RhcnQmJihzKHQsITEpLDA9PT10LnN0cm0uYXZhaWxfb3V0KT9fdDpfdH1mdW5jdGlvbiBtKHQsZSl7Zm9yKHZhciBuLGk7Oyl7aWYodC5sb29rYWhlYWQ8ZHQpe2lmKGgodCksdC5sb29rYWhlYWQ8ZHQmJmU9PT1PKXJldHVybiBfdDtpZigwPT09dC5sb29rYWhlYWQpYnJlYWt9aWYobj0wLHQubG9va2FoZWFkPj1jdCYmKHQuaW5zX2g9KHQuaW5zX2g8PHQuaGFzaF9zaGlmdF50LndpbmRvd1t0LnN0cnN0YXJ0K2N0LTFdKSZ0Lmhhc2hfbWFzayxuPXQucHJldlt0LnN0cnN0YXJ0JnQud19tYXNrXT10LmhlYWRbdC5pbnNfaF0sdC5oZWFkW3QuaW5zX2hdPXQuc3Ryc3RhcnQpLDAhPT1uJiZ0LnN0cnN0YXJ0LW48PXQud19zaXplLWR0JiYodC5tYXRjaF9sZW5ndGg9ZCh0LG4pKSx0Lm1hdGNoX2xlbmd0aD49Y3QpaWYoaT1OLl90cl90YWxseSh0LHQuc3Ryc3RhcnQtdC5tYXRjaF9zdGFydCx0Lm1hdGNoX2xlbmd0aC1jdCksdC5sb29rYWhlYWQtPXQubWF0Y2hfbGVuZ3RoLHQubWF0Y2hfbGVuZ3RoPD10Lm1heF9sYXp5X21hdGNoJiZ0Lmxvb2thaGVhZD49Y3Qpe3QubWF0Y2hfbGVuZ3RoLS07ZG8gdC5zdHJzdGFydCsrLHQuaW5zX2g9KHQuaW5zX2g8PHQuaGFzaF9zaGlmdF50LndpbmRvd1t0LnN0cnN0YXJ0K2N0LTFdKSZ0Lmhhc2hfbWFzayxuPXQucHJldlt0LnN0cnN0YXJ0JnQud19tYXNrXT10LmhlYWRbdC5pbnNfaF0sdC5oZWFkW3QuaW5zX2hdPXQuc3Ryc3RhcnQ7d2hpbGUoMCE9PS0tdC5tYXRjaF9sZW5ndGgpO3Quc3Ryc3RhcnQrK31lbHNlIHQuc3Ryc3RhcnQrPXQubWF0Y2hfbGVuZ3RoLHQubWF0Y2hfbGVuZ3RoPTAsdC5pbnNfaD10LndpbmRvd1t0LnN0cnN0YXJ0XSx0Lmluc19oPSh0Lmluc19oPDx0Lmhhc2hfc2hpZnRedC53aW5kb3dbdC5zdHJzdGFydCsxXSkmdC5oYXNoX21hc2s7ZWxzZSBpPU4uX3RyX3RhbGx5KHQsMCx0LndpbmRvd1t0LnN0cnN0YXJ0XSksdC5sb29rYWhlYWQtLSx0LnN0cnN0YXJ0Kys7aWYoaSYmKHModCwhMSksMD09PXQuc3RybS5hdmFpbF9vdXQpKXJldHVybiBfdH1yZXR1cm4gdC5pbnNlcnQ9dC5zdHJzdGFydDxjdC0xP3Quc3Ryc3RhcnQ6Y3QtMSxlPT09RD8ocyh0LCEwKSwwPT09dC5zdHJtLmF2YWlsX291dD95dDprdCk6dC5sYXN0X2xpdCYmKHModCwhMSksMD09PXQuc3RybS5hdmFpbF9vdXQpP190OnZ0fWZ1bmN0aW9uIGYodCxlKXtmb3IodmFyIG4saSxvOzspe2lmKHQubG9va2FoZWFkPGR0KXtpZihoKHQpLHQubG9va2FoZWFkPGR0JiZlPT09TylyZXR1cm4gX3Q7aWYoMD09PXQubG9va2FoZWFkKWJyZWFrfWlmKG49MCx0Lmxvb2thaGVhZD49Y3QmJih0Lmluc19oPSh0Lmluc19oPDx0Lmhhc2hfc2hpZnRedC53aW5kb3dbdC5zdHJzdGFydCtjdC0xXSkmdC5oYXNoX21hc2ssbj10LnByZXZbdC5zdHJzdGFydCZ0LndfbWFza109dC5oZWFkW3QuaW5zX2hdLHQuaGVhZFt0Lmluc19oXT10LnN0cnN0YXJ0KSx0LnByZXZfbGVuZ3RoPXQubWF0Y2hfbGVuZ3RoLHQucHJldl9tYXRjaD10Lm1hdGNoX3N0YXJ0LHQubWF0Y2hfbGVuZ3RoPWN0LTEsMCE9PW4mJnQucHJldl9sZW5ndGg8dC5tYXhfbGF6eV9tYXRjaCYmdC5zdHJzdGFydC1uPD10Lndfc2l6ZS1kdCYmKHQubWF0Y2hfbGVuZ3RoPWQodCxuKSx0Lm1hdGNoX2xlbmd0aDw9NSYmKHQuc3RyYXRlZ3k9PT1ZfHx0Lm1hdGNoX2xlbmd0aD09PWN0JiZ0LnN0cnN0YXJ0LXQubWF0Y2hfc3RhcnQ+NDA5NikmJih0Lm1hdGNoX2xlbmd0aD1jdC0xKSksdC5wcmV2X2xlbmd0aD49Y3QmJnQubWF0Y2hfbGVuZ3RoPD10LnByZXZfbGVuZ3RoKXtvPXQuc3Ryc3RhcnQrdC5sb29rYWhlYWQtY3QsaT1OLl90cl90YWxseSh0LHQuc3Ryc3RhcnQtMS10LnByZXZfbWF0Y2gsdC5wcmV2X2xlbmd0aC1jdCksdC5sb29rYWhlYWQtPXQucHJldl9sZW5ndGgtMSx0LnByZXZfbGVuZ3RoLT0yO2RvKyt0LnN0cnN0YXJ0PD1vJiYodC5pbnNfaD0odC5pbnNfaDw8dC5oYXNoX3NoaWZ0XnQud2luZG93W3Quc3Ryc3RhcnQrY3QtMV0pJnQuaGFzaF9tYXNrLG49dC5wcmV2W3Quc3Ryc3RhcnQmdC53X21hc2tdPXQuaGVhZFt0Lmluc19oXSx0LmhlYWRbdC5pbnNfaF09dC5zdHJzdGFydCk7d2hpbGUoMCE9PS0tdC5wcmV2X2xlbmd0aCk7aWYodC5tYXRjaF9hdmFpbGFibGU9MCx0Lm1hdGNoX2xlbmd0aD1jdC0xLHQuc3Ryc3RhcnQrKyxpJiYocyh0LCExKSwwPT09dC5zdHJtLmF2YWlsX291dCkpcmV0dXJuIF90fWVsc2UgaWYodC5tYXRjaF9hdmFpbGFibGUpe2lmKGk9Ti5fdHJfdGFsbHkodCwwLHQud2luZG93W3Quc3Ryc3RhcnQtMV0pLGkmJnModCwhMSksdC5zdHJzdGFydCsrLHQubG9va2FoZWFkLS0sMD09PXQuc3RybS5hdmFpbF9vdXQpcmV0dXJuIF90fWVsc2UgdC5tYXRjaF9hdmFpbGFibGU9MSx0LnN0cnN0YXJ0KyssdC5sb29rYWhlYWQtLX1yZXR1cm4gdC5tYXRjaF9hdmFpbGFibGUmJihpPU4uX3RyX3RhbGx5KHQsMCx0LndpbmRvd1t0LnN0cnN0YXJ0LTFdKSx0Lm1hdGNoX2F2YWlsYWJsZT0wKSx0Lmluc2VydD10LnN0cnN0YXJ0PGN0LTE/dC5zdHJzdGFydDpjdC0xLGU9PT1EPyhzKHQsITApLDA9PT10LnN0cm0uYXZhaWxfb3V0P3l0Omt0KTp0Lmxhc3RfbGl0JiYocyh0LCExKSwwPT09dC5zdHJtLmF2YWlsX291dCk/X3Q6dnR9ZnVuY3Rpb24gZyh0LGUpe2Zvcih2YXIgbixpLG8sYSxyPXQud2luZG93Ozspe2lmKHQubG9va2FoZWFkPD1wdCl7aWYoaCh0KSx0Lmxvb2thaGVhZDw9cHQmJmU9PT1PKXJldHVybiBfdDtpZigwPT09dC5sb29rYWhlYWQpYnJlYWt9aWYodC5tYXRjaF9sZW5ndGg9MCx0Lmxvb2thaGVhZD49Y3QmJnQuc3Ryc3RhcnQ+MCYmKG89dC5zdHJzdGFydC0xLGk9cltvXSxpPT09clsrK29dJiZpPT09clsrK29dJiZpPT09clsrK29dKSl7YT10LnN0cnN0YXJ0K3B0O2RvO3doaWxlKGk9PT1yWysrb10mJmk9PT1yWysrb10mJmk9PT1yWysrb10mJmk9PT1yWysrb10mJmk9PT1yWysrb10mJmk9PT1yWysrb10mJmk9PT1yWysrb10mJmk9PT1yWysrb10mJm88YSk7dC5tYXRjaF9sZW5ndGg9cHQtKGEtbyksdC5tYXRjaF9sZW5ndGg+dC5sb29rYWhlYWQmJih0Lm1hdGNoX2xlbmd0aD10Lmxvb2thaGVhZCl9aWYodC5tYXRjaF9sZW5ndGg+PWN0PyhuPU4uX3RyX3RhbGx5KHQsMSx0Lm1hdGNoX2xlbmd0aC1jdCksdC5sb29rYWhlYWQtPXQubWF0Y2hfbGVuZ3RoLHQuc3Ryc3RhcnQrPXQubWF0Y2hfbGVuZ3RoLHQubWF0Y2hfbGVuZ3RoPTApOihuPU4uX3RyX3RhbGx5KHQsMCx0LndpbmRvd1t0LnN0cnN0YXJ0XSksdC5sb29rYWhlYWQtLSx0LnN0cnN0YXJ0KyspLG4mJihzKHQsITEpLDA9PT10LnN0cm0uYXZhaWxfb3V0KSlyZXR1cm4gX3R9cmV0dXJuIHQuaW5zZXJ0PTAsZT09PUQ/KHModCwhMCksMD09PXQuc3RybS5hdmFpbF9vdXQ/eXQ6a3QpOnQubGFzdF9saXQmJihzKHQsITEpLDA9PT10LnN0cm0uYXZhaWxfb3V0KT9fdDp2dH1mdW5jdGlvbiB3KHQsZSl7Zm9yKHZhciBuOzspe2lmKDA9PT10Lmxvb2thaGVhZCYmKGgodCksMD09PXQubG9va2FoZWFkKSl7aWYoZT09PU8pcmV0dXJuIF90O2JyZWFrfWlmKHQubWF0Y2hfbGVuZ3RoPTAsbj1OLl90cl90YWxseSh0LDAsdC53aW5kb3dbdC5zdHJzdGFydF0pLHQubG9va2FoZWFkLS0sdC5zdHJzdGFydCsrLG4mJihzKHQsITEpLDA9PT10LnN0cm0uYXZhaWxfb3V0KSlyZXR1cm4gX3R9cmV0dXJuIHQuaW5zZXJ0PTAsZT09PUQ/KHModCwhMCksMD09PXQuc3RybS5hdmFpbF9vdXQ/eXQ6a3QpOnQubGFzdF9saXQmJihzKHQsITEpLDA9PT10LnN0cm0uYXZhaWxfb3V0KT9fdDp2dH1mdW5jdGlvbiB4KHQsZSxuLGksbyl7dGhpcy5nb29kX2xlbmd0aD10LHRoaXMubWF4X2xhenk9ZSx0aGlzLm5pY2VfbGVuZ3RoPW4sdGhpcy5tYXhfY2hhaW49aSx0aGlzLmZ1bmM9b31mdW5jdGlvbiBiKHQpe3Qud2luZG93X3NpemU9Mip0Lndfc2l6ZSxhKHQuaGVhZCksdC5tYXhfbGF6eV9tYXRjaD1UW3QubGV2ZWxdLm1heF9sYXp5LHQuZ29vZF9tYXRjaD1UW3QubGV2ZWxdLmdvb2RfbGVuZ3RoLHQubmljZV9tYXRjaD1UW3QubGV2ZWxdLm5pY2VfbGVuZ3RoLHQubWF4X2NoYWluX2xlbmd0aD1UW3QubGV2ZWxdLm1heF9jaGFpbix0LnN0cnN0YXJ0PTAsdC5ibG9ja19zdGFydD0wLHQubG9va2FoZWFkPTAsdC5pbnNlcnQ9MCx0Lm1hdGNoX2xlbmd0aD10LnByZXZfbGVuZ3RoPWN0LTEsdC5tYXRjaF9hdmFpbGFibGU9MCx0Lmluc19oPTB9ZnVuY3Rpb24gXygpe3RoaXMuc3RybT1udWxsLHRoaXMuc3RhdHVzPTAsdGhpcy5wZW5kaW5nX2J1Zj1udWxsLHRoaXMucGVuZGluZ19idWZfc2l6ZT0wLHRoaXMucGVuZGluZ19vdXQ9MCx0aGlzLnBlbmRpbmc9MCx0aGlzLndyYXA9MCx0aGlzLmd6aGVhZD1udWxsLHRoaXMuZ3ppbmRleD0wLHRoaXMubWV0aG9kPUssdGhpcy5sYXN0X2ZsdXNoPS0xLHRoaXMud19zaXplPTAsdGhpcy53X2JpdHM9MCx0aGlzLndfbWFzaz0wLHRoaXMud2luZG93PW51bGwsdGhpcy53aW5kb3dfc2l6ZT0wLHRoaXMucHJldj1udWxsLHRoaXMuaGVhZD1udWxsLHRoaXMuaW5zX2g9MCx0aGlzLmhhc2hfc2l6ZT0wLHRoaXMuaGFzaF9iaXRzPTAsdGhpcy5oYXNoX21hc2s9MCx0aGlzLmhhc2hfc2hpZnQ9MCx0aGlzLmJsb2NrX3N0YXJ0PTAsdGhpcy5tYXRjaF9sZW5ndGg9MCx0aGlzLnByZXZfbWF0Y2g9MCx0aGlzLm1hdGNoX2F2YWlsYWJsZT0wLHRoaXMuc3Ryc3RhcnQ9MCx0aGlzLm1hdGNoX3N0YXJ0PTAsdGhpcy5sb29rYWhlYWQ9MCx0aGlzLnByZXZfbGVuZ3RoPTAsdGhpcy5tYXhfY2hhaW5fbGVuZ3RoPTAsdGhpcy5tYXhfbGF6eV9tYXRjaD0wLHRoaXMubGV2ZWw9MCx0aGlzLnN0cmF0ZWd5PTAsdGhpcy5nb29kX21hdGNoPTAsdGhpcy5uaWNlX21hdGNoPTAsdGhpcy5keW5fbHRyZWU9bmV3IEEuQnVmMTYoMipzdCksdGhpcy5keW5fZHRyZWU9bmV3IEEuQnVmMTYoMiooMiphdCsxKSksdGhpcy5ibF90cmVlPW5ldyBBLkJ1ZjE2KDIqKDIqcnQrMSkpLGEodGhpcy5keW5fbHRyZWUpLGEodGhpcy5keW5fZHRyZWUpLGEodGhpcy5ibF90cmVlKSx0aGlzLmxfZGVzYz1udWxsLHRoaXMuZF9kZXNjPW51bGwsdGhpcy5ibF9kZXNjPW51bGwsdGhpcy5ibF9jb3VudD1uZXcgQS5CdWYxNihsdCsxKSx0aGlzLmhlYXA9bmV3IEEuQnVmMTYoMipvdCsxKSxhKHRoaXMuaGVhcCksdGhpcy5oZWFwX2xlbj0wLHRoaXMuaGVhcF9tYXg9MCx0aGlzLmRlcHRoPW5ldyBBLkJ1ZjE2KDIqb3QrMSksYSh0aGlzLmRlcHRoKSx0aGlzLmxfYnVmPTAsdGhpcy5saXRfYnVmc2l6ZT0wLHRoaXMubGFzdF9saXQ9MCx0aGlzLmRfYnVmPTAsdGhpcy5vcHRfbGVuPTAsdGhpcy5zdGF0aWNfbGVuPTAsdGhpcy5tYXRjaGVzPTAsdGhpcy5pbnNlcnQ9MCx0aGlzLmJpX2J1Zj0wLHRoaXMuYmlfdmFsaWQ9MH1mdW5jdGlvbiB2KHQpe3ZhciBlO3JldHVybiB0JiZ0LnN0YXRlPyh0LnRvdGFsX2luPXQudG90YWxfb3V0PTAsdC5kYXRhX3R5cGU9VixlPXQuc3RhdGUsZS5wZW5kaW5nPTAsZS5wZW5kaW5nX291dD0wLGUud3JhcDwwJiYoZS53cmFwPS1lLndyYXApLGUuc3RhdHVzPWUud3JhcD91dDp4dCx0LmFkbGVyPTI9PT1lLndyYXA/MDoxLGUubGFzdF9mbHVzaD1PLE4uX3RyX2luaXQoZSksTSk6aSh0LCQpfWZ1bmN0aW9uIHkodCl7dmFyIGU9dih0KTtyZXR1cm4gZT09PU0mJmIodC5zdGF0ZSksZX1mdW5jdGlvbiBrKHQsZSl7cmV0dXJuIHQmJnQuc3RhdGU/MiE9PXQuc3RhdGUud3JhcD8kOih0LnN0YXRlLmd6aGVhZD1lLE0pOiR9ZnVuY3Rpb24geih0LGUsbixvLGEscil7aWYoIXQpcmV0dXJuICQ7dmFyIHM9MTtpZihlPT09VSYmKGU9NiksbzwwPyhzPTAsbz0tbyk6bz4xNSYmKHM9MixvLT0xNiksYTwxfHxhPlF8fG4hPT1LfHxvPDh8fG8+MTV8fGU8MHx8ZT45fHxyPDB8fHI+SilyZXR1cm4gaSh0LCQpOzg9PT1vJiYobz05KTt2YXIgbD1uZXcgXztyZXR1cm4gdC5zdGF0ZT1sLGwuc3RybT10LGwud3JhcD1zLGwuZ3poZWFkPW51bGwsbC53X2JpdHM9byxsLndfc2l6ZT0xPDxsLndfYml0cyxsLndfbWFzaz1sLndfc2l6ZS0xLGwuaGFzaF9iaXRzPWErNyxsLmhhc2hfc2l6ZT0xPDxsLmhhc2hfYml0cyxsLmhhc2hfbWFzaz1sLmhhc2hfc2l6ZS0xLGwuaGFzaF9zaGlmdD1+figobC5oYXNoX2JpdHMrY3QtMSkvY3QpLGwud2luZG93PW5ldyBBLkJ1ZjgoMipsLndfc2l6ZSksbC5oZWFkPW5ldyBBLkJ1ZjE2KGwuaGFzaF9zaXplKSxsLnByZXY9bmV3IEEuQnVmMTYobC53X3NpemUpLGwubGl0X2J1ZnNpemU9MTw8YSs2LGwucGVuZGluZ19idWZfc2l6ZT00KmwubGl0X2J1ZnNpemUsbC5wZW5kaW5nX2J1Zj1uZXcgQS5CdWY4KGwucGVuZGluZ19idWZfc2l6ZSksbC5kX2J1Zj1sLmxpdF9idWZzaXplPj4xLGwubF9idWY9MypsLmxpdF9idWZzaXplLGwubGV2ZWw9ZSxsLnN0cmF0ZWd5PXIsbC5tZXRob2Q9bix5KHQpfWZ1bmN0aW9uIGoodCxlKXtyZXR1cm4geih0LGUsSyx0dCxldCxaKX1mdW5jdGlvbiBDKHQsZSl7dmFyIG4scyxwLGQ7aWYoIXR8fCF0LnN0YXRlfHxlPkZ8fGU8MClyZXR1cm4gdD9pKHQsJCk6JDtpZihzPXQuc3RhdGUsIXQub3V0cHV0fHwhdC5pbnB1dCYmMCE9PXQuYXZhaWxfaW58fHMuc3RhdHVzPT09YnQmJmUhPT1EKXJldHVybiBpKHQsMD09PXQuYXZhaWxfb3V0P1c6JCk7aWYocy5zdHJtPXQsbj1zLmxhc3RfZmx1c2gscy5sYXN0X2ZsdXNoPWUscy5zdGF0dXM9PT11dClpZigyPT09cy53cmFwKXQuYWRsZXI9MCxsKHMsMzEpLGwocywxMzkpLGwocyw4KSxzLmd6aGVhZD8obChzLChzLmd6aGVhZC50ZXh0PzE6MCkrKHMuZ3poZWFkLmhjcmM/MjowKSsocy5nemhlYWQuZXh0cmE/NDowKSsocy5nemhlYWQubmFtZT84OjApKyhzLmd6aGVhZC5jb21tZW50PzE2OjApKSxsKHMsMjU1JnMuZ3poZWFkLnRpbWUpLGwocyxzLmd6aGVhZC50aW1lPj44JjI1NSksbChzLHMuZ3poZWFkLnRpbWU+PjE2JjI1NSksbChzLHMuZ3poZWFkLnRpbWU+PjI0JjI1NSksbChzLDk9PT1zLmxldmVsPzI6cy5zdHJhdGVneT49R3x8cy5sZXZlbDwyPzQ6MCksbChzLDI1NSZzLmd6aGVhZC5vcykscy5nemhlYWQuZXh0cmEmJnMuZ3poZWFkLmV4dHJhLmxlbmd0aCYmKGwocywyNTUmcy5nemhlYWQuZXh0cmEubGVuZ3RoKSxsKHMscy5nemhlYWQuZXh0cmEubGVuZ3RoPj44JjI1NSkpLHMuZ3poZWFkLmhjcmMmJih0LmFkbGVyPUIodC5hZGxlcixzLnBlbmRpbmdfYnVmLHMucGVuZGluZywwKSkscy5nemluZGV4PTAscy5zdGF0dXM9bXQpOihsKHMsMCksbChzLDApLGwocywwKSxsKHMsMCksbChzLDApLGwocyw5PT09cy5sZXZlbD8yOnMuc3RyYXRlZ3k+PUd8fHMubGV2ZWw8Mj80OjApLGwocyx6dCkscy5zdGF0dXM9eHQpO2Vsc2V7dmFyIGg9Sysocy53X2JpdHMtODw8NCk8PDgsdT0tMTt1PXMuc3RyYXRlZ3k+PUd8fHMubGV2ZWw8Mj8wOnMubGV2ZWw8Nj8xOjY9PT1zLmxldmVsPzI6MyxofD11PDw2LDAhPT1zLnN0cnN0YXJ0JiYoaHw9aHQpLGgrPTMxLWglMzEscy5zdGF0dXM9eHQsYyhzLGgpLDAhPT1zLnN0cnN0YXJ0JiYoYyhzLHQuYWRsZXI+Pj4xNiksYyhzLDY1NTM1JnQuYWRsZXIpKSx0LmFkbGVyPTF9aWYocy5zdGF0dXM9PT1tdClpZihzLmd6aGVhZC5leHRyYSl7Zm9yKHA9cy5wZW5kaW5nO3MuZ3ppbmRleDwoNjU1MzUmcy5nemhlYWQuZXh0cmEubGVuZ3RoKSYmKHMucGVuZGluZyE9PXMucGVuZGluZ19idWZfc2l6ZXx8KHMuZ3poZWFkLmhjcmMmJnMucGVuZGluZz5wJiYodC5hZGxlcj1CKHQuYWRsZXIscy5wZW5kaW5nX2J1ZixzLnBlbmRpbmctcCxwKSkscih0KSxwPXMucGVuZGluZyxzLnBlbmRpbmchPT1zLnBlbmRpbmdfYnVmX3NpemUpKTspbChzLDI1NSZzLmd6aGVhZC5leHRyYVtzLmd6aW5kZXhdKSxzLmd6aW5kZXgrKztzLmd6aGVhZC5oY3JjJiZzLnBlbmRpbmc+cCYmKHQuYWRsZXI9Qih0LmFkbGVyLHMucGVuZGluZ19idWYscy5wZW5kaW5nLXAscCkpLHMuZ3ppbmRleD09PXMuZ3poZWFkLmV4dHJhLmxlbmd0aCYmKHMuZ3ppbmRleD0wLHMuc3RhdHVzPWZ0KX1lbHNlIHMuc3RhdHVzPWZ0O2lmKHMuc3RhdHVzPT09ZnQpaWYocy5nemhlYWQubmFtZSl7cD1zLnBlbmRpbmc7ZG97aWYocy5wZW5kaW5nPT09cy5wZW5kaW5nX2J1Zl9zaXplJiYocy5nemhlYWQuaGNyYyYmcy5wZW5kaW5nPnAmJih0LmFkbGVyPUIodC5hZGxlcixzLnBlbmRpbmdfYnVmLHMucGVuZGluZy1wLHApKSxyKHQpLHA9cy5wZW5kaW5nLHMucGVuZGluZz09PXMucGVuZGluZ19idWZfc2l6ZSkpe2Q9MTticmVha31kPXMuZ3ppbmRleDxzLmd6aGVhZC5uYW1lLmxlbmd0aD8yNTUmcy5nemhlYWQubmFtZS5jaGFyQ29kZUF0KHMuZ3ppbmRleCsrKTowLGwocyxkKX13aGlsZSgwIT09ZCk7cy5nemhlYWQuaGNyYyYmcy5wZW5kaW5nPnAmJih0LmFkbGVyPUIodC5hZGxlcixzLnBlbmRpbmdfYnVmLHMucGVuZGluZy1wLHApKSwwPT09ZCYmKHMuZ3ppbmRleD0wLHMuc3RhdHVzPWd0KX1lbHNlIHMuc3RhdHVzPWd0O2lmKHMuc3RhdHVzPT09Z3QpaWYocy5nemhlYWQuY29tbWVudCl7cD1zLnBlbmRpbmc7ZG97aWYocy5wZW5kaW5nPT09cy5wZW5kaW5nX2J1Zl9zaXplJiYocy5nemhlYWQuaGNyYyYmcy5wZW5kaW5nPnAmJih0LmFkbGVyPUIodC5hZGxlcixzLnBlbmRpbmdfYnVmLHMucGVuZGluZy1wLHApKSxyKHQpLHA9cy5wZW5kaW5nLHMucGVuZGluZz09PXMucGVuZGluZ19idWZfc2l6ZSkpe2Q9MTticmVha31kPXMuZ3ppbmRleDxzLmd6aGVhZC5jb21tZW50Lmxlbmd0aD8yNTUmcy5nemhlYWQuY29tbWVudC5jaGFyQ29kZUF0KHMuZ3ppbmRleCsrKTowLGwocyxkKX13aGlsZSgwIT09ZCk7cy5nemhlYWQuaGNyYyYmcy5wZW5kaW5nPnAmJih0LmFkbGVyPUIodC5hZGxlcixzLnBlbmRpbmdfYnVmLHMucGVuZGluZy1wLHApKSwwPT09ZCYmKHMuc3RhdHVzPXd0KX1lbHNlIHMuc3RhdHVzPXd0O2lmKHMuc3RhdHVzPT09d3QmJihzLmd6aGVhZC5oY3JjPyhzLnBlbmRpbmcrMj5zLnBlbmRpbmdfYnVmX3NpemUmJnIodCkscy5wZW5kaW5nKzI8PXMucGVuZGluZ19idWZfc2l6ZSYmKGwocywyNTUmdC5hZGxlciksbChzLHQuYWRsZXI+PjgmMjU1KSx0LmFkbGVyPTAscy5zdGF0dXM9eHQpKTpzLnN0YXR1cz14dCksMCE9PXMucGVuZGluZyl7aWYocih0KSwwPT09dC5hdmFpbF9vdXQpcmV0dXJuIHMubGFzdF9mbHVzaD0tMSxNfWVsc2UgaWYoMD09PXQuYXZhaWxfaW4mJm8oZSk8PW8obikmJmUhPT1EKXJldHVybiBpKHQsVyk7aWYocy5zdGF0dXM9PT1idCYmMCE9PXQuYXZhaWxfaW4pcmV0dXJuIGkodCxXKTtpZigwIT09dC5hdmFpbF9pbnx8MCE9PXMubG9va2FoZWFkfHxlIT09TyYmcy5zdGF0dXMhPT1idCl7dmFyIG09cy5zdHJhdGVneT09PUc/dyhzLGUpOnMuc3RyYXRlZ3k9PT1YP2cocyxlKTpUW3MubGV2ZWxdLmZ1bmMocyxlKTtpZihtIT09eXQmJm0hPT1rdHx8KHMuc3RhdHVzPWJ0KSxtPT09X3R8fG09PT15dClyZXR1cm4gMD09PXQuYXZhaWxfb3V0JiYocy5sYXN0X2ZsdXNoPS0xKSxNO2lmKG09PT12dCYmKGU9PT1FP04uX3RyX2FsaWduKHMpOmUhPT1GJiYoTi5fdHJfc3RvcmVkX2Jsb2NrKHMsMCwwLCExKSxlPT09TCYmKGEocy5oZWFkKSwwPT09cy5sb29rYWhlYWQmJihzLnN0cnN0YXJ0PTAscy5ibG9ja19zdGFydD0wLHMuaW5zZXJ0PTApKSkscih0KSwwPT09dC5hdmFpbF9vdXQpKXJldHVybiBzLmxhc3RfZmx1c2g9LTEsTX1yZXR1cm4gZSE9PUQ/TTpzLndyYXA8PTA/UjooMj09PXMud3JhcD8obChzLDI1NSZ0LmFkbGVyKSxsKHMsdC5hZGxlcj4+OCYyNTUpLGwocyx0LmFkbGVyPj4xNiYyNTUpLGwocyx0LmFkbGVyPj4yNCYyNTUpLGwocywyNTUmdC50b3RhbF9pbiksbChzLHQudG90YWxfaW4+PjgmMjU1KSxsKHMsdC50b3RhbF9pbj4+MTYmMjU1KSxsKHMsdC50b3RhbF9pbj4+MjQmMjU1KSk6KGMocyx0LmFkbGVyPj4+MTYpLGMocyw2NTUzNSZ0LmFkbGVyKSkscih0KSxzLndyYXA+MCYmKHMud3JhcD0tcy53cmFwKSwwIT09cy5wZW5kaW5nP006Uil9ZnVuY3Rpb24gUyh0KXt2YXIgZTtyZXR1cm4gdCYmdC5zdGF0ZT8oZT10LnN0YXRlLnN0YXR1cyxlIT09dXQmJmUhPT1tdCYmZSE9PWZ0JiZlIT09Z3QmJmUhPT13dCYmZSE9PXh0JiZlIT09YnQ/aSh0LCQpOih0LnN0YXRlPW51bGwsZT09PXh0P2kodCxIKTpNKSk6JH1mdW5jdGlvbiBQKHQsZSl7dmFyIG4saSxvLHIscyxsLGMscCxkPWUubGVuZ3RoO2lmKCF0fHwhdC5zdGF0ZSlyZXR1cm4gJDtpZihuPXQuc3RhdGUscj1uLndyYXAsMj09PXJ8fDE9PT1yJiZuLnN0YXR1cyE9PXV0fHxuLmxvb2thaGVhZClyZXR1cm4gJDtmb3IoMT09PXImJih0LmFkbGVyPUkodC5hZGxlcixlLGQsMCkpLG4ud3JhcD0wLGQ+PW4ud19zaXplJiYoMD09PXImJihhKG4uaGVhZCksbi5zdHJzdGFydD0wLG4uYmxvY2tfc3RhcnQ9MCxuLmluc2VydD0wKSxwPW5ldyBBLkJ1Zjgobi53X3NpemUpLEEuYXJyYXlTZXQocCxlLGQtbi53X3NpemUsbi53X3NpemUsMCksZT1wLGQ9bi53X3NpemUpLHM9dC5hdmFpbF9pbixsPXQubmV4dF9pbixjPXQuaW5wdXQsdC5hdmFpbF9pbj1kLHQubmV4dF9pbj0wLHQuaW5wdXQ9ZSxoKG4pO24ubG9va2FoZWFkPj1jdDspe2k9bi5zdHJzdGFydCxvPW4ubG9va2FoZWFkLShjdC0xKTtkbyBuLmluc19oPShuLmluc19oPDxuLmhhc2hfc2hpZnRebi53aW5kb3dbaStjdC0xXSkmbi5oYXNoX21hc2ssbi5wcmV2W2kmbi53X21hc2tdPW4uaGVhZFtuLmluc19oXSxuLmhlYWRbbi5pbnNfaF09aSxpKys7d2hpbGUoLS1vKTtuLnN0cnN0YXJ0PWksbi5sb29rYWhlYWQ9Y3QtMSxoKG4pfXJldHVybiBuLnN0cnN0YXJ0Kz1uLmxvb2thaGVhZCxuLmJsb2NrX3N0YXJ0PW4uc3Ryc3RhcnQsbi5pbnNlcnQ9bi5sb29rYWhlYWQsbi5sb29rYWhlYWQ9MCxuLm1hdGNoX2xlbmd0aD1uLnByZXZfbGVuZ3RoPWN0LTEsbi5tYXRjaF9hdmFpbGFibGU9MCx0Lm5leHRfaW49bCx0LmlucHV0PWMsdC5hdmFpbF9pbj1zLG4ud3JhcD1yLE19dmFyIFQsQT10KCIuLi91dGlscy9jb21tb24iKSxOPXQoIi4vdHJlZXMiKSxJPXQoIi4vYWRsZXIzMiIpLEI9dCgiLi9jcmMzMiIpLHE9dCgiLi9tZXNzYWdlcyIpLE89MCxFPTEsTD0zLEQ9NCxGPTUsTT0wLFI9MSwkPS0yLEg9LTMsVz0tNSxVPS0xLFk9MSxHPTIsWD0zLEo9NCxaPTAsVj0yLEs9OCxRPTksdHQ9MTUsZXQ9OCxudD0yOSxpdD0yNTYsb3Q9aXQrMStudCxhdD0zMCxydD0xOSxzdD0yKm90KzEsbHQ9MTUsY3Q9MyxwdD0yNTgsZHQ9cHQrY3QrMSxodD0zMix1dD00MixtdD02OSxmdD03MyxndD05MSx3dD0xMDMseHQ9MTEzLGJ0PTY2NixfdD0xLHZ0PTIseXQ9MyxrdD00LHp0PTM7VD1bbmV3IHgoMCwwLDAsMCx1KSxuZXcgeCg0LDQsOCw0LG0pLG5ldyB4KDQsNSwxNiw4LG0pLG5ldyB4KDQsNiwzMiwzMixtKSxuZXcgeCg0LDQsMTYsMTYsZiksbmV3IHgoOCwxNiwzMiwzMixmKSxuZXcgeCg4LDE2LDEyOCwxMjgsZiksbmV3IHgoOCwzMiwxMjgsMjU2LGYpLG5ldyB4KDMyLDEyOCwyNTgsMTAyNCxmKSxuZXcgeCgzMiwyNTgsMjU4LDQwOTYsZildLG4uZGVmbGF0ZUluaXQ9aixuLmRlZmxhdGVJbml0Mj16LG4uZGVmbGF0ZVJlc2V0PXksbi5kZWZsYXRlUmVzZXRLZWVwPXYsbi5kZWZsYXRlU2V0SGVhZGVyPWssbi5kZWZsYXRlPUMsbi5kZWZsYXRlRW5kPVMsbi5kZWZsYXRlU2V0RGljdGlvbmFyeT1QLG4uZGVmbGF0ZUluZm89InBha28gZGVmbGF0ZSAoZnJvbSBOb2RlY2EgcHJvamVjdCkifSx7Ii4uL3V0aWxzL2NvbW1vbiI6MywiLi9hZGxlcjMyIjo1LCIuL2NyYzMyIjo3LCIuL21lc3NhZ2VzIjoxMywiLi90cmVlcyI6MTR9XSw5OltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoKXt0aGlzLnRleHQ9MCx0aGlzLnRpbWU9MCx0aGlzLnhmbGFncz0wLHRoaXMub3M9MCx0aGlzLmV4dHJhPW51bGwsdGhpcy5leHRyYV9sZW49MCx0aGlzLm5hbWU9IiIsdGhpcy5jb21tZW50PSIiLHRoaXMuaGNyYz0wLHRoaXMuZG9uZT0hMX1lLmV4cG9ydHM9aX0se31dLDEwOltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPTMwLG89MTI7ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7dmFyIG4sYSxyLHMsbCxjLHAsZCxoLHUsbSxmLGcsdyx4LGIsXyx2LHksayx6LGosQyxTLFA7bj10LnN0YXRlLGE9dC5uZXh0X2luLFM9dC5pbnB1dCxyPWErKHQuYXZhaWxfaW4tNSkscz10Lm5leHRfb3V0LFA9dC5vdXRwdXQsbD1zLShlLXQuYXZhaWxfb3V0KSxjPXMrKHQuYXZhaWxfb3V0LTI1NykscD1uLmRtYXgsZD1uLndzaXplLGg9bi53aGF2ZSx1PW4ud25leHQsbT1uLndpbmRvdyxmPW4uaG9sZCxnPW4uYml0cyx3PW4ubGVuY29kZSx4PW4uZGlzdGNvZGUsYj0oMTw8bi5sZW5iaXRzKS0xLF89KDE8PG4uZGlzdGJpdHMpLTE7dDpkb3tnPDE1JiYoZis9U1thKytdPDxnLGcrPTgsZis9U1thKytdPDxnLGcrPTgpLHY9d1tmJmJdO2U6Zm9yKDs7KXtpZih5PXY+Pj4yNCxmPj4+PXksZy09eSx5PXY+Pj4xNiYyNTUsMD09PXkpUFtzKytdPTY1NTM1JnY7ZWxzZXtpZighKDE2JnkpKXtpZigwPT09KDY0JnkpKXt2PXdbKDY1NTM1JnYpKyhmJigxPDx5KS0xKV07Y29udGludWUgZX1pZigzMiZ5KXtuLm1vZGU9bzticmVhayB0fXQubXNnPSJpbnZhbGlkIGxpdGVyYWwvbGVuZ3RoIGNvZGUiLG4ubW9kZT1pO2JyZWFrIHR9az02NTUzNSZ2LHkmPTE1LHkmJihnPHkmJihmKz1TW2ErK108PGcsZys9OCksays9ZiYoMTw8eSktMSxmPj4+PXksZy09eSksZzwxNSYmKGYrPVNbYSsrXTw8ZyxnKz04LGYrPVNbYSsrXTw8ZyxnKz04KSx2PXhbZiZfXTtuOmZvcig7Oyl7aWYoeT12Pj4+MjQsZj4+Pj15LGctPXkseT12Pj4+MTYmMjU1LCEoMTYmeSkpe2lmKDA9PT0oNjQmeSkpe3Y9eFsoNjU1MzUmdikrKGYmKDE8PHkpLTEpXTtjb250aW51ZSBufXQubXNnPSJpbnZhbGlkIGRpc3RhbmNlIGNvZGUiLG4ubW9kZT1pO2JyZWFrIHR9aWYoej02NTUzNSZ2LHkmPTE1LGc8eSYmKGYrPVNbYSsrXTw8ZyxnKz04LGc8eSYmKGYrPVNbYSsrXTw8ZyxnKz04KSkseis9ZiYoMTw8eSktMSx6PnApe3QubXNnPSJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFjayIsbi5tb2RlPWk7YnJlYWsgdH1pZihmPj4+PXksZy09eSx5PXMtbCx6Pnkpe2lmKHk9ei15LHk+aCYmbi5zYW5lKXt0Lm1zZz0iaW52YWxpZCBkaXN0YW5jZSB0b28gZmFyIGJhY2siLG4ubW9kZT1pO2JyZWFrIHR9aWYoaj0wLEM9bSwwPT09dSl7aWYoais9ZC15LHk8ayl7ay09eTtkbyBQW3MrK109bVtqKytdO3doaWxlKC0teSk7aj1zLXosQz1QfX1lbHNlIGlmKHU8eSl7aWYoais9ZCt1LXkseS09dSx5PGspe2stPXk7ZG8gUFtzKytdPW1baisrXTt3aGlsZSgtLXkpO2lmKGo9MCx1PGspe3k9dSxrLT15O2RvIFBbcysrXT1tW2orK107d2hpbGUoLS15KTtqPXMteixDPVB9fX1lbHNlIGlmKGorPXUteSx5PGspe2stPXk7ZG8gUFtzKytdPW1baisrXTt3aGlsZSgtLXkpO2o9cy16LEM9UH1mb3IoO2s+MjspUFtzKytdPUNbaisrXSxQW3MrK109Q1tqKytdLFBbcysrXT1DW2orK10say09MztrJiYoUFtzKytdPUNbaisrXSxrPjEmJihQW3MrK109Q1tqKytdKSl9ZWxzZXtqPXMtejtkbyBQW3MrK109UFtqKytdLFBbcysrXT1QW2orK10sUFtzKytdPVBbaisrXSxrLT0zO3doaWxlKGs+Mik7ayYmKFBbcysrXT1QW2orK10saz4xJiYoUFtzKytdPVBbaisrXSkpfWJyZWFrfX1icmVha319d2hpbGUoYTxyJiZzPGMpO2s9Zz4+MyxhLT1rLGctPWs8PDMsZiY9KDE8PGcpLTEsdC5uZXh0X2luPWEsdC5uZXh0X291dD1zLHQuYXZhaWxfaW49YTxyPzUrKHItYSk6NS0oYS1yKSx0LmF2YWlsX291dD1zPGM/MjU3KyhjLXMpOjI1Ny0ocy1jKSxuLmhvbGQ9ZixuLmJpdHM9Z319LHt9XSwxMTpbZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBpKHQpe3JldHVybih0Pj4+MjQmMjU1KSsodD4+PjgmNjUyODApKygoNjUyODAmdCk8PDgpKygoMjU1JnQpPDwyNCl9ZnVuY3Rpb24gbygpe3RoaXMubW9kZT0wLHRoaXMubGFzdD0hMSx0aGlzLndyYXA9MCx0aGlzLmhhdmVkaWN0PSExLHRoaXMuZmxhZ3M9MCx0aGlzLmRtYXg9MCx0aGlzLmNoZWNrPTAsdGhpcy50b3RhbD0wLHRoaXMuaGVhZD1udWxsLHRoaXMud2JpdHM9MCx0aGlzLndzaXplPTAsdGhpcy53aGF2ZT0wLHRoaXMud25leHQ9MCx0aGlzLndpbmRvdz1udWxsLHRoaXMuaG9sZD0wLHRoaXMuYml0cz0wLHRoaXMubGVuZ3RoPTAsdGhpcy5vZmZzZXQ9MCx0aGlzLmV4dHJhPTAsdGhpcy5sZW5jb2RlPW51bGwsdGhpcy5kaXN0Y29kZT1udWxsLHRoaXMubGVuYml0cz0wLHRoaXMuZGlzdGJpdHM9MCx0aGlzLm5jb2RlPTAsdGhpcy5ubGVuPTAsdGhpcy5uZGlzdD0wLHRoaXMuaGF2ZT0wLHRoaXMubmV4dD1udWxsLHRoaXMubGVucz1uZXcgeC5CdWYxNigzMjApLHRoaXMud29yaz1uZXcgeC5CdWYxNigyODgpLHRoaXMubGVuZHluPW51bGwsdGhpcy5kaXN0ZHluPW51bGwsdGhpcy5zYW5lPTAsdGhpcy5iYWNrPTAsdGhpcy53YXM9MH1mdW5jdGlvbiBhKHQpe3ZhciBlO3JldHVybiB0JiZ0LnN0YXRlPyhlPXQuc3RhdGUsdC50b3RhbF9pbj10LnRvdGFsX291dD1lLnRvdGFsPTAsdC5tc2c9IiIsZS53cmFwJiYodC5hZGxlcj0xJmUud3JhcCksZS5tb2RlPUwsZS5sYXN0PTAsZS5oYXZlZGljdD0wLGUuZG1heD0zMjc2OCxlLmhlYWQ9bnVsbCxlLmhvbGQ9MCxlLmJpdHM9MCxlLmxlbmNvZGU9ZS5sZW5keW49bmV3IHguQnVmMzIoZnQpLGUuZGlzdGNvZGU9ZS5kaXN0ZHluPW5ldyB4LkJ1ZjMyKGd0KSxlLnNhbmU9MSxlLmJhY2s9LTEsVCk6SX1mdW5jdGlvbiByKHQpe3ZhciBlO3JldHVybiB0JiZ0LnN0YXRlPyhlPXQuc3RhdGUsZS53c2l6ZT0wLGUud2hhdmU9MCxlLnduZXh0PTAsYSh0KSk6SX1mdW5jdGlvbiBzKHQsZSl7dmFyIG4saTtyZXR1cm4gdCYmdC5zdGF0ZT8oaT10LnN0YXRlLGU8MD8obj0wLGU9LWUpOihuPShlPj40KSsxLGU8NDgmJihlJj0xNSkpLGUmJihlPDh8fGU+MTUpP0k6KG51bGwhPT1pLndpbmRvdyYmaS53Yml0cyE9PWUmJihpLndpbmRvdz1udWxsKSxpLndyYXA9bixpLndiaXRzPWUscih0KSkpOkl9ZnVuY3Rpb24gbCh0LGUpe3ZhciBuLGk7cmV0dXJuIHQ/KGk9bmV3IG8sdC5zdGF0ZT1pLGkud2luZG93PW51bGwsbj1zKHQsZSksbiE9PVQmJih0LnN0YXRlPW51bGwpLG4pOkl9ZnVuY3Rpb24gYyh0KXtyZXR1cm4gbCh0LHh0KX1mdW5jdGlvbiBwKHQpe2lmKGJ0KXt2YXIgZTtmb3IoZz1uZXcgeC5CdWYzMig1MTIpLHc9bmV3IHguQnVmMzIoMzIpLGU9MDtlPDE0NDspdC5sZW5zW2UrK109ODtmb3IoO2U8MjU2Oyl0LmxlbnNbZSsrXT05O2Zvcig7ZTwyODA7KXQubGVuc1tlKytdPTc7Zm9yKDtlPDI4ODspdC5sZW5zW2UrK109ODtmb3IoeSh6LHQubGVucywwLDI4OCxnLDAsdC53b3JrLHtiaXRzOjl9KSxlPTA7ZTwzMjspdC5sZW5zW2UrK109NTt5KGosdC5sZW5zLDAsMzIsdywwLHQud29yayx7Yml0czo1fSksYnQ9ITF9dC5sZW5jb2RlPWcsdC5sZW5iaXRzPTksdC5kaXN0Y29kZT13LHQuZGlzdGJpdHM9NX1mdW5jdGlvbiBkKHQsZSxuLGkpe3ZhciBvLGE9dC5zdGF0ZTtyZXR1cm4gbnVsbD09PWEud2luZG93JiYoYS53c2l6ZT0xPDxhLndiaXRzLGEud25leHQ9MCxhLndoYXZlPTAsYS53aW5kb3c9bmV3IHguQnVmOChhLndzaXplKSksaT49YS53c2l6ZT8oeC5hcnJheVNldChhLndpbmRvdyxlLG4tYS53c2l6ZSxhLndzaXplLDApLGEud25leHQ9MCxhLndoYXZlPWEud3NpemUpOihvPWEud3NpemUtYS53bmV4dCxvPmkmJihvPWkpLHguYXJyYXlTZXQoYS53aW5kb3csZSxuLWksbyxhLnduZXh0KSxpLT1vLGk/KHguYXJyYXlTZXQoYS53aW5kb3csZSxuLWksaSwwKSxhLnduZXh0PWksYS53aGF2ZT1hLndzaXplKTooYS53bmV4dCs9byxhLnduZXh0PT09YS53c2l6ZSYmKGEud25leHQ9MCksYS53aGF2ZTxhLndzaXplJiYoYS53aGF2ZSs9bykpKSwwfWZ1bmN0aW9uIGgodCxlKXt2YXIgbixvLGEscixzLGwsYyxoLHUsbSxmLGcsdyxmdCxndCx3dCx4dCxidCxfdCx2dCx5dCxrdCx6dCxqdCxDdD0wLFN0PW5ldyB4LkJ1ZjgoNCksUHQ9WzE2LDE3LDE4LDAsOCw3LDksNiwxMCw1LDExLDQsMTIsMywxMywyLDE0LDEsMTVdO2lmKCF0fHwhdC5zdGF0ZXx8IXQub3V0cHV0fHwhdC5pbnB1dCYmMCE9PXQuYXZhaWxfaW4pcmV0dXJuIEk7bj10LnN0YXRlLG4ubW9kZT09PVgmJihuLm1vZGU9Sikscz10Lm5leHRfb3V0LGE9dC5vdXRwdXQsYz10LmF2YWlsX291dCxyPXQubmV4dF9pbixvPXQuaW5wdXQsbD10LmF2YWlsX2luLGg9bi5ob2xkLHU9bi5iaXRzLG09bCxmPWMsa3Q9VDt0OmZvcig7Oylzd2l0Y2gobi5tb2RlKXtjYXNlIEw6aWYoMD09PW4ud3JhcCl7bi5tb2RlPUo7YnJlYWt9Zm9yKDt1PDE2Oyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYoMiZuLndyYXAmJjM1NjE1PT09aCl7bi5jaGVjaz0wLFN0WzBdPTI1NSZoLFN0WzFdPWg+Pj44JjI1NSxuLmNoZWNrPV8obi5jaGVjayxTdCwyLDApLGg9MCx1PTAsbi5tb2RlPUQ7YnJlYWt9aWYobi5mbGFncz0wLG4uaGVhZCYmKG4uaGVhZC5kb25lPSExKSwhKDEmbi53cmFwKXx8KCgoMjU1JmgpPDw4KSsoaD4+OCkpJTMxKXt0Lm1zZz0iaW5jb3JyZWN0IGhlYWRlciBjaGVjayIsbi5tb2RlPWh0O2JyZWFrfWlmKCgxNSZoKSE9PUUpe3QubXNnPSJ1bmtub3duIGNvbXByZXNzaW9uIG1ldGhvZCIsbi5tb2RlPWh0O2JyZWFrfWlmKGg+Pj49NCx1LT00LHl0PSgxNSZoKSs4LDA9PT1uLndiaXRzKW4ud2JpdHM9eXQ7ZWxzZSBpZih5dD5uLndiaXRzKXt0Lm1zZz0iaW52YWxpZCB3aW5kb3cgc2l6ZSIsbi5tb2RlPWh0O2JyZWFrfW4uZG1heD0xPDx5dCx0LmFkbGVyPW4uY2hlY2s9MSxuLm1vZGU9NTEyJmg/WTpYLGg9MCx1PTA7YnJlYWs7Y2FzZSBEOmZvcig7dTwxNjspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fWlmKG4uZmxhZ3M9aCwoMjU1Jm4uZmxhZ3MpIT09RSl7dC5tc2c9InVua25vd24gY29tcHJlc3Npb24gbWV0aG9kIixuLm1vZGU9aHQ7YnJlYWt9aWYoNTczNDQmbi5mbGFncyl7dC5tc2c9InVua25vd24gaGVhZGVyIGZsYWdzIHNldCIsbi5tb2RlPWh0O2JyZWFrfW4uaGVhZCYmKG4uaGVhZC50ZXh0PWg+PjgmMSksNTEyJm4uZmxhZ3MmJihTdFswXT0yNTUmaCxTdFsxXT1oPj4+OCYyNTUsbi5jaGVjaz1fKG4uY2hlY2ssU3QsMiwwKSksaD0wLHU9MCxuLm1vZGU9RjtjYXNlIEY6Zm9yKDt1PDMyOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9bi5oZWFkJiYobi5oZWFkLnRpbWU9aCksNTEyJm4uZmxhZ3MmJihTdFswXT0yNTUmaCxTdFsxXT1oPj4+OCYyNTUsU3RbMl09aD4+PjE2JjI1NSxTdFszXT1oPj4+MjQmMjU1LG4uY2hlY2s9XyhuLmNoZWNrLFN0LDQsMCkpLGg9MCx1PTAsbi5tb2RlPU07Y2FzZSBNOmZvcig7dTwxNjspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fW4uaGVhZCYmKG4uaGVhZC54ZmxhZ3M9MjU1Jmgsbi5oZWFkLm9zPWg+PjgpLDUxMiZuLmZsYWdzJiYoU3RbMF09MjU1JmgsU3RbMV09aD4+PjgmMjU1LG4uY2hlY2s9XyhuLmNoZWNrLFN0LDIsMCkpLGg9MCx1PTAsbi5tb2RlPVI7Y2FzZSBSOmlmKDEwMjQmbi5mbGFncyl7Zm9yKDt1PDE2Oyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9bi5sZW5ndGg9aCxuLmhlYWQmJihuLmhlYWQuZXh0cmFfbGVuPWgpLDUxMiZuLmZsYWdzJiYoU3RbMF09MjU1JmgsU3RbMV09aD4+PjgmMjU1LG4uY2hlY2s9XyhuLmNoZWNrLFN0LDIsMCkpLGg9MCx1PTB9ZWxzZSBuLmhlYWQmJihuLmhlYWQuZXh0cmE9bnVsbCk7bi5tb2RlPSQ7Y2FzZSAkOmlmKDEwMjQmbi5mbGFncyYmKGc9bi5sZW5ndGgsZz5sJiYoZz1sKSxnJiYobi5oZWFkJiYoeXQ9bi5oZWFkLmV4dHJhX2xlbi1uLmxlbmd0aCxuLmhlYWQuZXh0cmF8fChuLmhlYWQuZXh0cmE9bmV3IEFycmF5KG4uaGVhZC5leHRyYV9sZW4pKSx4LmFycmF5U2V0KG4uaGVhZC5leHRyYSxvLHIsZyx5dCkpLDUxMiZuLmZsYWdzJiYobi5jaGVjaz1fKG4uY2hlY2ssbyxnLHIpKSxsLT1nLHIrPWcsbi5sZW5ndGgtPWcpLG4ubGVuZ3RoKSlicmVhayB0O24ubGVuZ3RoPTAsbi5tb2RlPUg7Y2FzZSBIOmlmKDIwNDgmbi5mbGFncyl7aWYoMD09PWwpYnJlYWsgdDtnPTA7ZG8geXQ9b1tyK2crK10sbi5oZWFkJiZ5dCYmbi5sZW5ndGg8NjU1MzYmJihuLmhlYWQubmFtZSs9U3RyaW5nLmZyb21DaGFyQ29kZSh5dCkpO3doaWxlKHl0JiZnPGwpO2lmKDUxMiZuLmZsYWdzJiYobi5jaGVjaz1fKG4uY2hlY2ssbyxnLHIpKSxsLT1nLHIrPWcseXQpYnJlYWsgdH1lbHNlIG4uaGVhZCYmKG4uaGVhZC5uYW1lPW51bGwpO24ubGVuZ3RoPTAsbi5tb2RlPVc7Y2FzZSBXOmlmKDQwOTYmbi5mbGFncyl7aWYoMD09PWwpYnJlYWsgdDtnPTA7ZG8geXQ9b1tyK2crK10sbi5oZWFkJiZ5dCYmbi5sZW5ndGg8NjU1MzYmJihuLmhlYWQuY29tbWVudCs9U3RyaW5nLmZyb21DaGFyQ29kZSh5dCkpO3doaWxlKHl0JiZnPGwpO2lmKDUxMiZuLmZsYWdzJiYobi5jaGVjaz1fKG4uY2hlY2ssbyxnLHIpKSxsLT1nLHIrPWcseXQpYnJlYWsgdH1lbHNlIG4uaGVhZCYmKG4uaGVhZC5jb21tZW50PW51bGwpO24ubW9kZT1VO2Nhc2UgVTppZig1MTImbi5mbGFncyl7Zm9yKDt1PDE2Oyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYoaCE9PSg2NTUzNSZuLmNoZWNrKSl7dC5tc2c9ImhlYWRlciBjcmMgbWlzbWF0Y2giLG4ubW9kZT1odDticmVha31oPTAsdT0wfW4uaGVhZCYmKG4uaGVhZC5oY3JjPW4uZmxhZ3M+PjkmMSxuLmhlYWQuZG9uZT0hMCksdC5hZGxlcj1uLmNoZWNrPTAsbi5tb2RlPVg7YnJlYWs7Y2FzZSBZOmZvcig7dTwzMjspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fXQuYWRsZXI9bi5jaGVjaz1pKGgpLGg9MCx1PTAsbi5tb2RlPUc7Y2FzZSBHOmlmKDA9PT1uLmhhdmVkaWN0KXJldHVybiB0Lm5leHRfb3V0PXMsdC5hdmFpbF9vdXQ9Yyx0Lm5leHRfaW49cix0LmF2YWlsX2luPWwsbi5ob2xkPWgsbi5iaXRzPXUsTjt0LmFkbGVyPW4uY2hlY2s9MSxuLm1vZGU9WDtjYXNlIFg6aWYoZT09PVN8fGU9PT1QKWJyZWFrIHQ7Y2FzZSBKOmlmKG4ubGFzdCl7aD4+Pj03JnUsdS09NyZ1LG4ubW9kZT1jdDticmVha31mb3IoO3U8Mzspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fXN3aXRjaChuLmxhc3Q9MSZoLGg+Pj49MSx1LT0xLDMmaCl7Y2FzZSAwOm4ubW9kZT1aO2JyZWFrO2Nhc2UgMTppZihwKG4pLG4ubW9kZT1udCxlPT09UCl7aD4+Pj0yLHUtPTI7YnJlYWsgdH1icmVhaztjYXNlIDI6bi5tb2RlPVE7YnJlYWs7Y2FzZSAzOnQubXNnPSJpbnZhbGlkIGJsb2NrIHR5cGUiLG4ubW9kZT1odH1oPj4+PTIsdS09MjticmVhaztjYXNlIFo6Zm9yKGg+Pj49NyZ1LHUtPTcmdTt1PDMyOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYoKDY1NTM1JmgpIT09KGg+Pj4xNl42NTUzNSkpe3QubXNnPSJpbnZhbGlkIHN0b3JlZCBibG9jayBsZW5ndGhzIixuLm1vZGU9aHQ7YnJlYWt9aWYobi5sZW5ndGg9NjU1MzUmaCxoPTAsdT0wLG4ubW9kZT1WLGU9PT1QKWJyZWFrIHQ7Y2FzZSBWOm4ubW9kZT1LO2Nhc2UgSzppZihnPW4ubGVuZ3RoKXtpZihnPmwmJihnPWwpLGc+YyYmKGc9YyksMD09PWcpYnJlYWsgdDt4LmFycmF5U2V0KGEsbyxyLGcscyksbC09ZyxyKz1nLGMtPWcscys9ZyxuLmxlbmd0aC09ZzticmVha31uLm1vZGU9WDticmVhaztjYXNlIFE6Zm9yKDt1PDE0Oyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYobi5ubGVuPSgzMSZoKSsyNTcsaD4+Pj01LHUtPTUsbi5uZGlzdD0oMzEmaCkrMSxoPj4+PTUsdS09NSxuLm5jb2RlPSgxNSZoKSs0LGg+Pj49NCx1LT00LG4ubmxlbj4yODZ8fG4ubmRpc3Q+MzApe3QubXNnPSJ0b28gbWFueSBsZW5ndGggb3IgZGlzdGFuY2Ugc3ltYm9scyIsbi5tb2RlPWh0O2JyZWFrfW4uaGF2ZT0wLG4ubW9kZT10dDtjYXNlIHR0OmZvcig7bi5oYXZlPG4ubmNvZGU7KXtmb3IoO3U8Mzspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fW4ubGVuc1tQdFtuLmhhdmUrK11dPTcmaCxoPj4+PTMsdS09M31mb3IoO24uaGF2ZTwxOTspbi5sZW5zW1B0W24uaGF2ZSsrXV09MDtpZihuLmxlbmNvZGU9bi5sZW5keW4sbi5sZW5iaXRzPTcsenQ9e2JpdHM6bi5sZW5iaXRzfSxrdD15KGssbi5sZW5zLDAsMTksbi5sZW5jb2RlLDAsbi53b3JrLHp0KSxuLmxlbmJpdHM9enQuYml0cyxrdCl7dC5tc2c9ImludmFsaWQgY29kZSBsZW5ndGhzIHNldCIsbi5tb2RlPWh0O2JyZWFrfW4uaGF2ZT0wLG4ubW9kZT1ldDtjYXNlIGV0OmZvcig7bi5oYXZlPG4ubmxlbituLm5kaXN0Oyl7Zm9yKDtDdD1uLmxlbmNvZGVbaCYoMTw8bi5sZW5iaXRzKS0xXSxndD1DdD4+PjI0LHd0PUN0Pj4+MTYmMjU1LHh0PTY1NTM1JkN0LCEoZ3Q8PXUpOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYoeHQ8MTYpaD4+Pj1ndCx1LT1ndCxuLmxlbnNbbi5oYXZlKytdPXh0O2Vsc2V7aWYoMTY9PT14dCl7Zm9yKGp0PWd0KzI7dTxqdDspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fWlmKGg+Pj49Z3QsdS09Z3QsMD09PW4uaGF2ZSl7dC5tc2c9ImludmFsaWQgYml0IGxlbmd0aCByZXBlYXQiLG4ubW9kZT1odDticmVha315dD1uLmxlbnNbbi5oYXZlLTFdLGc9MysoMyZoKSxoPj4+PTIsdS09Mn1lbHNlIGlmKDE3PT09eHQpe2ZvcihqdD1ndCszO3U8anQ7KXtpZigwPT09bClicmVhayB0O2wtLSxoKz1vW3IrK108PHUsdSs9OH1oPj4+PWd0LHUtPWd0LHl0PTAsZz0zKyg3JmgpLGg+Pj49Myx1LT0zfWVsc2V7Zm9yKGp0PWd0Kzc7dTxqdDspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fWg+Pj49Z3QsdS09Z3QseXQ9MCxnPTExKygxMjcmaCksaD4+Pj03LHUtPTd9aWYobi5oYXZlK2c+bi5ubGVuK24ubmRpc3Qpe3QubXNnPSJpbnZhbGlkIGJpdCBsZW5ndGggcmVwZWF0IixuLm1vZGU9aHQ7YnJlYWt9Zm9yKDtnLS07KW4ubGVuc1tuLmhhdmUrK109eXR9fWlmKG4ubW9kZT09PWh0KWJyZWFrO2lmKDA9PT1uLmxlbnNbMjU2XSl7dC5tc2c9ImludmFsaWQgY29kZSAtLSBtaXNzaW5nIGVuZC1vZi1ibG9jayIsbi5tb2RlPWh0O2JyZWFrfWlmKG4ubGVuYml0cz05LHp0PXtiaXRzOm4ubGVuYml0c30sa3Q9eSh6LG4ubGVucywwLG4ubmxlbixuLmxlbmNvZGUsMCxuLndvcmssenQpLG4ubGVuYml0cz16dC5iaXRzLGt0KXt0Lm1zZz0iaW52YWxpZCBsaXRlcmFsL2xlbmd0aHMgc2V0IixuLm1vZGU9aHQ7YnJlYWt9aWYobi5kaXN0Yml0cz02LG4uZGlzdGNvZGU9bi5kaXN0ZHluLHp0PXtiaXRzOm4uZGlzdGJpdHN9LGt0PXkoaixuLmxlbnMsbi5ubGVuLG4ubmRpc3Qsbi5kaXN0Y29kZSwwLG4ud29yayx6dCksbi5kaXN0Yml0cz16dC5iaXRzLGt0KXt0Lm1zZz0iaW52YWxpZCBkaXN0YW5jZXMgc2V0IixuLm1vZGU9aHQ7YnJlYWt9aWYobi5tb2RlPW50LGU9PT1QKWJyZWFrIHQ7Y2FzZSBudDpuLm1vZGU9aXQ7Y2FzZSBpdDppZihsPj02JiZjPj0yNTgpe3QubmV4dF9vdXQ9cyx0LmF2YWlsX291dD1jLHQubmV4dF9pbj1yLHQuYXZhaWxfaW49bCxuLmhvbGQ9aCxuLmJpdHM9dSx2KHQsZikscz10Lm5leHRfb3V0LGE9dC5vdXRwdXQsYz10LmF2YWlsX291dCxyPXQubmV4dF9pbixvPXQuaW5wdXQsbD10LmF2YWlsX2luLGg9bi5ob2xkLHU9bi5iaXRzLG4ubW9kZT09PVgmJihuLmJhY2s9LTEpO2JyZWFrfWZvcihuLmJhY2s9MDtDdD1uLmxlbmNvZGVbaCYoMTw8bi5sZW5iaXRzKS0xXSxndD1DdD4+PjI0LHd0PUN0Pj4+MTYmMjU1LHh0PTY1NTM1JkN0LCEoZ3Q8PXUpOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYod3QmJjA9PT0oMjQwJnd0KSl7Zm9yKGJ0PWd0LF90PXd0LHZ0PXh0O0N0PW4ubGVuY29kZVt2dCsoKGgmKDE8PGJ0K190KS0xKT4+YnQpXSxndD1DdD4+PjI0LHd0PUN0Pj4+MTYmMjU1LHh0PTY1NTM1JkN0LCEoYnQrZ3Q8PXUpOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aD4+Pj1idCx1LT1idCxuLmJhY2srPWJ0fWlmKGg+Pj49Z3QsdS09Z3Qsbi5iYWNrKz1ndCxuLmxlbmd0aD14dCwwPT09d3Qpe24ubW9kZT1sdDticmVha31pZigzMiZ3dCl7bi5iYWNrPS0xLG4ubW9kZT1YO2JyZWFrfWlmKDY0Jnd0KXt0Lm1zZz0iaW52YWxpZCBsaXRlcmFsL2xlbmd0aCBjb2RlIixuLm1vZGU9aHQ7YnJlYWt9bi5leHRyYT0xNSZ3dCxuLm1vZGU9b3Q7Y2FzZSBvdDppZihuLmV4dHJhKXtmb3IoanQ9bi5leHRyYTt1PGp0Oyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9bi5sZW5ndGgrPWgmKDE8PG4uZXh0cmEpLTEsaD4+Pj1uLmV4dHJhLHUtPW4uZXh0cmEsbi5iYWNrKz1uLmV4dHJhfW4ud2FzPW4ubGVuZ3RoLG4ubW9kZT1hdDtjYXNlIGF0OmZvcig7Q3Q9bi5kaXN0Y29kZVtoJigxPDxuLmRpc3RiaXRzKS0xXSxndD1DdD4+PjI0LHd0PUN0Pj4+MTYmMjU1LHh0PTY1NTM1JkN0LCEoZ3Q8PXUpOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYoMD09PSgyNDAmd3QpKXtmb3IoYnQ9Z3QsX3Q9d3QsdnQ9eHQ7Q3Q9bi5kaXN0Y29kZVt2dCsoKGgmKDE8PGJ0K190KS0xKT4+YnQpXSxndD1DdD4+PjI0LHd0PUN0Pj4+MTYmMjU1LHh0PTY1NTM1JkN0LCEoYnQrZ3Q8PXUpOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aD4+Pj1idCx1LT1idCxuLmJhY2srPWJ0fWlmKGg+Pj49Z3QsdS09Z3Qsbi5iYWNrKz1ndCw2NCZ3dCl7dC5tc2c9ImludmFsaWQgZGlzdGFuY2UgY29kZSIsbi5tb2RlPWh0O2JyZWFrfW4ub2Zmc2V0PXh0LG4uZXh0cmE9MTUmd3Qsbi5tb2RlPXJ0O2Nhc2UgcnQ6aWYobi5leHRyYSl7Zm9yKGp0PW4uZXh0cmE7dTxqdDspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGgrPW9bcisrXTw8dSx1Kz04fW4ub2Zmc2V0Kz1oJigxPDxuLmV4dHJhKS0xLGg+Pj49bi5leHRyYSx1LT1uLmV4dHJhLG4uYmFjays9bi5leHRyYX1pZihuLm9mZnNldD5uLmRtYXgpe3QubXNnPSJpbnZhbGlkIGRpc3RhbmNlIHRvbyBmYXIgYmFjayIsbi5tb2RlPWh0O2JyZWFrfW4ubW9kZT1zdDtjYXNlIHN0OmlmKDA9PT1jKWJyZWFrIHQ7aWYoZz1mLWMsbi5vZmZzZXQ+Zyl7aWYoZz1uLm9mZnNldC1nLGc+bi53aGF2ZSYmbi5zYW5lKXt0Lm1zZz0iaW52YWxpZCBkaXN0YW5jZSB0b28gZmFyIGJhY2siLG4ubW9kZT1odDticmVha31nPm4ud25leHQ/KGctPW4ud25leHQsdz1uLndzaXplLWcpOnc9bi53bmV4dC1nLGc+bi5sZW5ndGgmJihnPW4ubGVuZ3RoKSxmdD1uLndpbmRvd31lbHNlIGZ0PWEsdz1zLW4ub2Zmc2V0LGc9bi5sZW5ndGg7Zz5jJiYoZz1jKSxjLT1nLG4ubGVuZ3RoLT1nO2RvIGFbcysrXT1mdFt3KytdO3doaWxlKC0tZyk7MD09PW4ubGVuZ3RoJiYobi5tb2RlPWl0KTticmVhaztjYXNlIGx0OmlmKDA9PT1jKWJyZWFrIHQ7YVtzKytdPW4ubGVuZ3RoLGMtLSxuLm1vZGU9aXQ7YnJlYWs7Y2FzZSBjdDppZihuLndyYXApe2Zvcig7dTwzMjspe2lmKDA9PT1sKWJyZWFrIHQ7bC0tLGh8PW9bcisrXTw8dSx1Kz04fWlmKGYtPWMsdC50b3RhbF9vdXQrPWYsbi50b3RhbCs9ZixmJiYodC5hZGxlcj1uLmNoZWNrPW4uZmxhZ3M/XyhuLmNoZWNrLGEsZixzLWYpOmIobi5jaGVjayxhLGYscy1mKSksZj1jLChuLmZsYWdzP2g6aShoKSkhPT1uLmNoZWNrKXt0Lm1zZz0iaW5jb3JyZWN0IGRhdGEgY2hlY2siLG4ubW9kZT1odDticmVha31oPTAsdT0wfW4ubW9kZT1wdDtjYXNlIHB0OmlmKG4ud3JhcCYmbi5mbGFncyl7Zm9yKDt1PDMyOyl7aWYoMD09PWwpYnJlYWsgdDtsLS0saCs9b1tyKytdPDx1LHUrPTh9aWYoaCE9PSg0Mjk0OTY3Mjk1Jm4udG90YWwpKXt0Lm1zZz0iaW5jb3JyZWN0IGxlbmd0aCBjaGVjayIsbi5tb2RlPWh0O2JyZWFrfWg9MCx1PTB9bi5tb2RlPWR0O2Nhc2UgZHQ6a3Q9QTticmVhayB0O2Nhc2UgaHQ6a3Q9QjticmVhayB0O2Nhc2UgdXQ6cmV0dXJuIHE7Y2FzZSBtdDpkZWZhdWx0OnJldHVybiBJfXJldHVybiB0Lm5leHRfb3V0PXMsdC5hdmFpbF9vdXQ9Yyx0Lm5leHRfaW49cix0LmF2YWlsX2luPWwsbi5ob2xkPWgsbi5iaXRzPXUsKG4ud3NpemV8fGYhPT10LmF2YWlsX291dCYmbi5tb2RlPGh0JiYobi5tb2RlPGN0fHxlIT09QykpJiZkKHQsdC5vdXRwdXQsdC5uZXh0X291dCxmLXQuYXZhaWxfb3V0KT8obi5tb2RlPXV0LHEpOihtLT10LmF2YWlsX2luLGYtPXQuYXZhaWxfb3V0LHQudG90YWxfaW4rPW0sdC50b3RhbF9vdXQrPWYsbi50b3RhbCs9ZixuLndyYXAmJmYmJih0LmFkbGVyPW4uY2hlY2s9bi5mbGFncz9fKG4uY2hlY2ssYSxmLHQubmV4dF9vdXQtZik6YihuLmNoZWNrLGEsZix0Lm5leHRfb3V0LWYpKSx0LmRhdGFfdHlwZT1uLmJpdHMrKG4ubGFzdD82NDowKSsobi5tb2RlPT09WD8xMjg6MCkrKG4ubW9kZT09PW50fHxuLm1vZGU9PT1WPzI1NjowKSwoMD09PW0mJjA9PT1mfHxlPT09QykmJmt0PT09VCYmKGt0PU8pLGt0KX1mdW5jdGlvbiB1KHQpe2lmKCF0fHwhdC5zdGF0ZSlyZXR1cm4gSTt2YXIgZT10LnN0YXRlO3JldHVybiBlLndpbmRvdyYmKGUud2luZG93PW51bGwpLHQuc3RhdGU9bnVsbCxUfWZ1bmN0aW9uIG0odCxlKXt2YXIgbjtyZXR1cm4gdCYmdC5zdGF0ZT8obj10LnN0YXRlLDA9PT0oMiZuLndyYXApP0k6KG4uaGVhZD1lLGUuZG9uZT0hMSxUKSk6SX1mdW5jdGlvbiBmKHQsZSl7dmFyIG4saSxvLGE9ZS5sZW5ndGg7cmV0dXJuIHQmJnQuc3RhdGU/KG49dC5zdGF0ZSwwIT09bi53cmFwJiZuLm1vZGUhPT1HP0k6bi5tb2RlPT09RyYmKGk9MSxpPWIoaSxlLGEsMCksaSE9PW4uY2hlY2spP0I6KG89ZCh0LGUsYSxhKSk/KG4ubW9kZT11dCwKcSk6KG4uaGF2ZWRpY3Q9MSxUKSk6SX12YXIgZyx3LHg9dCgiLi4vdXRpbHMvY29tbW9uIiksYj10KCIuL2FkbGVyMzIiKSxfPXQoIi4vY3JjMzIiKSx2PXQoIi4vaW5mZmFzdCIpLHk9dCgiLi9pbmZ0cmVlcyIpLGs9MCx6PTEsaj0yLEM9NCxTPTUsUD02LFQ9MCxBPTEsTj0yLEk9LTIsQj0tMyxxPS00LE89LTUsRT04LEw9MSxEPTIsRj0zLE09NCxSPTUsJD02LEg9NyxXPTgsVT05LFk9MTAsRz0xMSxYPTEyLEo9MTMsWj0xNCxWPTE1LEs9MTYsUT0xNyx0dD0xOCxldD0xOSxudD0yMCxpdD0yMSxvdD0yMixhdD0yMyxydD0yNCxzdD0yNSxsdD0yNixjdD0yNyxwdD0yOCxkdD0yOSxodD0zMCx1dD0zMSxtdD0zMixmdD04NTIsZ3Q9NTkyLHd0PTE1LHh0PXd0LGJ0PSEwO24uaW5mbGF0ZVJlc2V0PXIsbi5pbmZsYXRlUmVzZXQyPXMsbi5pbmZsYXRlUmVzZXRLZWVwPWEsbi5pbmZsYXRlSW5pdD1jLG4uaW5mbGF0ZUluaXQyPWwsbi5pbmZsYXRlPWgsbi5pbmZsYXRlRW5kPXUsbi5pbmZsYXRlR2V0SGVhZGVyPW0sbi5pbmZsYXRlU2V0RGljdGlvbmFyeT1mLG4uaW5mbGF0ZUluZm89InBha28gaW5mbGF0ZSAoZnJvbSBOb2RlY2EgcHJvamVjdCkifSx7Ii4uL3V0aWxzL2NvbW1vbiI6MywiLi9hZGxlcjMyIjo1LCIuL2NyYzMyIjo3LCIuL2luZmZhc3QiOjEwLCIuL2luZnRyZWVzIjoxMn1dLDEyOltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPXQoIi4uL3V0aWxzL2NvbW1vbiIpLG89MTUsYT04NTIscj01OTIscz0wLGw9MSxjPTIscD1bMyw0LDUsNiw3LDgsOSwxMCwxMSwxMywxNSwxNywxOSwyMywyNywzMSwzNSw0Myw1MSw1OSw2Nyw4Myw5OSwxMTUsMTMxLDE2MywxOTUsMjI3LDI1OCwwLDBdLGQ9WzE2LDE2LDE2LDE2LDE2LDE2LDE2LDE2LDE3LDE3LDE3LDE3LDE4LDE4LDE4LDE4LDE5LDE5LDE5LDE5LDIwLDIwLDIwLDIwLDIxLDIxLDIxLDIxLDE2LDcyLDc4XSxoPVsxLDIsMyw0LDUsNyw5LDEzLDE3LDI1LDMzLDQ5LDY1LDk3LDEyOSwxOTMsMjU3LDM4NSw1MTMsNzY5LDEwMjUsMTUzNywyMDQ5LDMwNzMsNDA5Nyw2MTQ1LDgxOTMsMTIyODksMTYzODUsMjQ1NzcsMCwwXSx1PVsxNiwxNiwxNiwxNiwxNywxNywxOCwxOCwxOSwxOSwyMCwyMCwyMSwyMSwyMiwyMiwyMywyMywyNCwyNCwyNSwyNSwyNiwyNiwyNywyNywyOCwyOCwyOSwyOSw2NCw2NF07ZS5leHBvcnRzPWZ1bmN0aW9uKHQsZSxuLG0sZixnLHcseCl7dmFyIGIsXyx2LHksayx6LGosQyxTLFA9eC5iaXRzLFQ9MCxBPTAsTj0wLEk9MCxCPTAscT0wLE89MCxFPTAsTD0wLEQ9MCxGPW51bGwsTT0wLFI9bmV3IGkuQnVmMTYobysxKSwkPW5ldyBpLkJ1ZjE2KG8rMSksSD1udWxsLFc9MDtmb3IoVD0wO1Q8PW87VCsrKVJbVF09MDtmb3IoQT0wO0E8bTtBKyspUltlW24rQV1dKys7Zm9yKEI9UCxJPW87ST49MSYmMD09PVJbSV07SS0tKTtpZihCPkkmJihCPUkpLDA9PT1JKXJldHVybiBmW2crK109MjA5NzE1MjAsZltnKytdPTIwOTcxNTIwLHguYml0cz0xLDA7Zm9yKE49MTtOPEkmJjA9PT1SW05dO04rKyk7Zm9yKEI8TiYmKEI9TiksRT0xLFQ9MTtUPD1vO1QrKylpZihFPDw9MSxFLT1SW1RdLEU8MClyZXR1cm4tMTtpZihFPjAmJih0PT09c3x8MSE9PUkpKXJldHVybi0xO2ZvcigkWzFdPTAsVD0xO1Q8bztUKyspJFtUKzFdPSRbVF0rUltUXTtmb3IoQT0wO0E8bTtBKyspMCE9PWVbbitBXSYmKHdbJFtlW24rQV1dKytdPUEpO2lmKHQ9PT1zPyhGPUg9dyx6PTE5KTp0PT09bD8oRj1wLE0tPTI1NyxIPWQsVy09MjU3LHo9MjU2KTooRj1oLEg9dSx6PS0xKSxEPTAsQT0wLFQ9TixrPWcscT1CLE89MCx2PS0xLEw9MTw8Qix5PUwtMSx0PT09bCYmTD5hfHx0PT09YyYmTD5yKXJldHVybiAxO2Zvcih2YXIgVT0wOzspe1UrKyxqPVQtTyx3W0FdPHo/KEM9MCxTPXdbQV0pOndbQV0+ej8oQz1IW1crd1tBXV0sUz1GW00rd1tBXV0pOihDPTk2LFM9MCksYj0xPDxULU8sXz0xPDxxLE49XztkbyBfLT1iLGZbaysoRD4+TykrX109ajw8MjR8Qzw8MTZ8U3wwO3doaWxlKDAhPT1fKTtmb3IoYj0xPDxULTE7RCZiOyliPj49MTtpZigwIT09Yj8oRCY9Yi0xLEQrPWIpOkQ9MCxBKyssMD09PS0tUltUXSl7aWYoVD09PUkpYnJlYWs7VD1lW24rd1tBXV19aWYoVD5CJiYoRCZ5KSE9PXYpe2ZvcigwPT09TyYmKE89Qiksays9TixxPVQtTyxFPTE8PHE7cStPPEkmJihFLT1SW3ErT10sIShFPD0wKSk7KXErKyxFPDw9MTtpZihMKz0xPDxxLHQ9PT1sJiZMPmF8fHQ9PT1jJiZMPnIpcmV0dXJuIDE7dj1EJnksZlt2XT1CPDwyNHxxPDwxNnxrLWd8MH19cmV0dXJuIDAhPT1EJiYoZltrK0RdPVQtTzw8MjR8NjQ8PDE2fDApLHguYml0cz1CLDB9fSx7Ii4uL3V0aWxzL2NvbW1vbiI6M31dLDEzOltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2UuZXhwb3J0cz17MjoibmVlZCBkaWN0aW9uYXJ5IiwxOiJzdHJlYW0gZW5kIiwwOiIiLCItMSI6ImZpbGUgZXJyb3IiLCItMiI6InN0cmVhbSBlcnJvciIsIi0zIjoiZGF0YSBlcnJvciIsIi00IjoiaW5zdWZmaWNpZW50IG1lbW9yeSIsIi01IjoiYnVmZmVyIGVycm9yIiwiLTYiOiJpbmNvbXBhdGlibGUgdmVyc2lvbiJ9fSx7fV0sMTQ6W2Z1bmN0aW9uKHQsZSxuKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gaSh0KXtmb3IodmFyIGU9dC5sZW5ndGg7LS1lPj0wOyl0W2VdPTB9ZnVuY3Rpb24gbyh0LGUsbixpLG8pe3RoaXMuc3RhdGljX3RyZWU9dCx0aGlzLmV4dHJhX2JpdHM9ZSx0aGlzLmV4dHJhX2Jhc2U9bix0aGlzLmVsZW1zPWksdGhpcy5tYXhfbGVuZ3RoPW8sdGhpcy5oYXNfc3RyZWU9dCYmdC5sZW5ndGh9ZnVuY3Rpb24gYSh0LGUpe3RoaXMuZHluX3RyZWU9dCx0aGlzLm1heF9jb2RlPTAsdGhpcy5zdGF0X2Rlc2M9ZX1mdW5jdGlvbiByKHQpe3JldHVybiB0PDI1Nj9sdFt0XTpsdFsyNTYrKHQ+Pj43KV19ZnVuY3Rpb24gcyh0LGUpe3QucGVuZGluZ19idWZbdC5wZW5kaW5nKytdPTI1NSZlLHQucGVuZGluZ19idWZbdC5wZW5kaW5nKytdPWU+Pj44JjI1NX1mdW5jdGlvbiBsKHQsZSxuKXt0LmJpX3ZhbGlkPkotbj8odC5iaV9idWZ8PWU8PHQuYmlfdmFsaWQmNjU1MzUscyh0LHQuYmlfYnVmKSx0LmJpX2J1Zj1lPj5KLXQuYmlfdmFsaWQsdC5iaV92YWxpZCs9bi1KKToodC5iaV9idWZ8PWU8PHQuYmlfdmFsaWQmNjU1MzUsdC5iaV92YWxpZCs9bil9ZnVuY3Rpb24gYyh0LGUsbil7bCh0LG5bMiplXSxuWzIqZSsxXSl9ZnVuY3Rpb24gcCh0LGUpe3ZhciBuPTA7ZG8gbnw9MSZ0LHQ+Pj49MSxuPDw9MTt3aGlsZSgtLWU+MCk7cmV0dXJuIG4+Pj4xfWZ1bmN0aW9uIGQodCl7MTY9PT10LmJpX3ZhbGlkPyhzKHQsdC5iaV9idWYpLHQuYmlfYnVmPTAsdC5iaV92YWxpZD0wKTp0LmJpX3ZhbGlkPj04JiYodC5wZW5kaW5nX2J1Zlt0LnBlbmRpbmcrK109MjU1JnQuYmlfYnVmLHQuYmlfYnVmPj49OCx0LmJpX3ZhbGlkLT04KX1mdW5jdGlvbiBoKHQsZSl7dmFyIG4saSxvLGEscixzLGw9ZS5keW5fdHJlZSxjPWUubWF4X2NvZGUscD1lLnN0YXRfZGVzYy5zdGF0aWNfdHJlZSxkPWUuc3RhdF9kZXNjLmhhc19zdHJlZSxoPWUuc3RhdF9kZXNjLmV4dHJhX2JpdHMsdT1lLnN0YXRfZGVzYy5leHRyYV9iYXNlLG09ZS5zdGF0X2Rlc2MubWF4X2xlbmd0aCxmPTA7Zm9yKGE9MDthPD1YO2ErKyl0LmJsX2NvdW50W2FdPTA7Zm9yKGxbMip0LmhlYXBbdC5oZWFwX21heF0rMV09MCxuPXQuaGVhcF9tYXgrMTtuPEc7bisrKWk9dC5oZWFwW25dLGE9bFsyKmxbMippKzFdKzFdKzEsYT5tJiYoYT1tLGYrKyksbFsyKmkrMV09YSxpPmN8fCh0LmJsX2NvdW50W2FdKysscj0wLGk+PXUmJihyPWhbaS11XSkscz1sWzIqaV0sdC5vcHRfbGVuKz1zKihhK3IpLGQmJih0LnN0YXRpY19sZW4rPXMqKHBbMippKzFdK3IpKSk7aWYoMCE9PWYpe2Rve2ZvcihhPW0tMTswPT09dC5ibF9jb3VudFthXTspYS0tO3QuYmxfY291bnRbYV0tLSx0LmJsX2NvdW50W2ErMV0rPTIsdC5ibF9jb3VudFttXS0tLGYtPTJ9d2hpbGUoZj4wKTtmb3IoYT1tOzAhPT1hO2EtLSlmb3IoaT10LmJsX2NvdW50W2FdOzAhPT1pOylvPXQuaGVhcFstLW5dLG8+Y3x8KGxbMipvKzFdIT09YSYmKHQub3B0X2xlbis9KGEtbFsyKm8rMV0pKmxbMipvXSxsWzIqbysxXT1hKSxpLS0pfX1mdW5jdGlvbiB1KHQsZSxuKXt2YXIgaSxvLGE9bmV3IEFycmF5KFgrMSkscj0wO2ZvcihpPTE7aTw9WDtpKyspYVtpXT1yPXIrbltpLTFdPDwxO2ZvcihvPTA7bzw9ZTtvKyspe3ZhciBzPXRbMipvKzFdOzAhPT1zJiYodFsyKm9dPXAoYVtzXSsrLHMpKX19ZnVuY3Rpb24gbSgpe3ZhciB0LGUsbixpLGEscj1uZXcgQXJyYXkoWCsxKTtmb3Iobj0wLGk9MDtpPCQtMTtpKyspZm9yKHB0W2ldPW4sdD0wO3Q8MTw8ZXRbaV07dCsrKWN0W24rK109aTtmb3IoY3Rbbi0xXT1pLGE9MCxpPTA7aTwxNjtpKyspZm9yKGR0W2ldPWEsdD0wO3Q8MTw8bnRbaV07dCsrKWx0W2ErK109aTtmb3IoYT4+PTc7aTxVO2krKylmb3IoZHRbaV09YTw8Nyx0PTA7dDwxPDxudFtpXS03O3QrKylsdFsyNTYrYSsrXT1pO2ZvcihlPTA7ZTw9WDtlKyspcltlXT0wO2Zvcih0PTA7dDw9MTQzOylydFsyKnQrMV09OCx0Kysscls4XSsrO2Zvcig7dDw9MjU1OylydFsyKnQrMV09OSx0Kysscls5XSsrO2Zvcig7dDw9Mjc5OylydFsyKnQrMV09Nyx0Kysscls3XSsrO2Zvcig7dDw9Mjg3OylydFsyKnQrMV09OCx0Kysscls4XSsrO2Zvcih1KHJ0LFcrMSxyKSx0PTA7dDxVO3QrKylzdFsyKnQrMV09NSxzdFsyKnRdPXAodCw1KTtodD1uZXcgbyhydCxldCxIKzEsVyxYKSx1dD1uZXcgbyhzdCxudCwwLFUsWCksbXQ9bmV3IG8obmV3IEFycmF5KDApLGl0LDAsWSxaKX1mdW5jdGlvbiBmKHQpe3ZhciBlO2ZvcihlPTA7ZTxXO2UrKyl0LmR5bl9sdHJlZVsyKmVdPTA7Zm9yKGU9MDtlPFU7ZSsrKXQuZHluX2R0cmVlWzIqZV09MDtmb3IoZT0wO2U8WTtlKyspdC5ibF90cmVlWzIqZV09MDt0LmR5bl9sdHJlZVsyKlZdPTEsdC5vcHRfbGVuPXQuc3RhdGljX2xlbj0wLHQubGFzdF9saXQ9dC5tYXRjaGVzPTB9ZnVuY3Rpb24gZyh0KXt0LmJpX3ZhbGlkPjg/cyh0LHQuYmlfYnVmKTp0LmJpX3ZhbGlkPjAmJih0LnBlbmRpbmdfYnVmW3QucGVuZGluZysrXT10LmJpX2J1ZiksdC5iaV9idWY9MCx0LmJpX3ZhbGlkPTB9ZnVuY3Rpb24gdyh0LGUsbixpKXtnKHQpLGkmJihzKHQsbikscyh0LH5uKSksSS5hcnJheVNldCh0LnBlbmRpbmdfYnVmLHQud2luZG93LGUsbix0LnBlbmRpbmcpLHQucGVuZGluZys9bn1mdW5jdGlvbiB4KHQsZSxuLGkpe3ZhciBvPTIqZSxhPTIqbjtyZXR1cm4gdFtvXTx0W2FdfHx0W29dPT09dFthXSYmaVtlXTw9aVtuXX1mdW5jdGlvbiBiKHQsZSxuKXtmb3IodmFyIGk9dC5oZWFwW25dLG89bjw8MTtvPD10LmhlYXBfbGVuJiYobzx0LmhlYXBfbGVuJiZ4KGUsdC5oZWFwW28rMV0sdC5oZWFwW29dLHQuZGVwdGgpJiZvKyssIXgoZSxpLHQuaGVhcFtvXSx0LmRlcHRoKSk7KXQuaGVhcFtuXT10LmhlYXBbb10sbj1vLG88PD0xO3QuaGVhcFtuXT1pfWZ1bmN0aW9uIF8odCxlLG4pe3ZhciBpLG8sYSxzLHA9MDtpZigwIT09dC5sYXN0X2xpdClkbyBpPXQucGVuZGluZ19idWZbdC5kX2J1ZisyKnBdPDw4fHQucGVuZGluZ19idWZbdC5kX2J1ZisyKnArMV0sbz10LnBlbmRpbmdfYnVmW3QubF9idWYrcF0scCsrLDA9PT1pP2ModCxvLGUpOihhPWN0W29dLGModCxhK0grMSxlKSxzPWV0W2FdLDAhPT1zJiYoby09cHRbYV0sbCh0LG8scykpLGktLSxhPXIoaSksYyh0LGEsbikscz1udFthXSwwIT09cyYmKGktPWR0W2FdLGwodCxpLHMpKSk7d2hpbGUocDx0Lmxhc3RfbGl0KTtjKHQsVixlKX1mdW5jdGlvbiB2KHQsZSl7dmFyIG4saSxvLGE9ZS5keW5fdHJlZSxyPWUuc3RhdF9kZXNjLnN0YXRpY190cmVlLHM9ZS5zdGF0X2Rlc2MuaGFzX3N0cmVlLGw9ZS5zdGF0X2Rlc2MuZWxlbXMsYz0tMTtmb3IodC5oZWFwX2xlbj0wLHQuaGVhcF9tYXg9RyxuPTA7bjxsO24rKykwIT09YVsyKm5dPyh0LmhlYXBbKyt0LmhlYXBfbGVuXT1jPW4sdC5kZXB0aFtuXT0wKTphWzIqbisxXT0wO2Zvcig7dC5oZWFwX2xlbjwyOylvPXQuaGVhcFsrK3QuaGVhcF9sZW5dPWM8Mj8rK2M6MCxhWzIqb109MSx0LmRlcHRoW29dPTAsdC5vcHRfbGVuLS0scyYmKHQuc3RhdGljX2xlbi09clsyKm8rMV0pO2ZvcihlLm1heF9jb2RlPWMsbj10LmhlYXBfbGVuPj4xO24+PTE7bi0tKWIodCxhLG4pO289bDtkbyBuPXQuaGVhcFsxXSx0LmhlYXBbMV09dC5oZWFwW3QuaGVhcF9sZW4tLV0sYih0LGEsMSksaT10LmhlYXBbMV0sdC5oZWFwWy0tdC5oZWFwX21heF09bix0LmhlYXBbLS10LmhlYXBfbWF4XT1pLGFbMipvXT1hWzIqbl0rYVsyKmldLHQuZGVwdGhbb109KHQuZGVwdGhbbl0+PXQuZGVwdGhbaV0/dC5kZXB0aFtuXTp0LmRlcHRoW2ldKSsxLGFbMipuKzFdPWFbMippKzFdPW8sdC5oZWFwWzFdPW8rKyxiKHQsYSwxKTt3aGlsZSh0LmhlYXBfbGVuPj0yKTt0LmhlYXBbLS10LmhlYXBfbWF4XT10LmhlYXBbMV0saCh0LGUpLHUoYSxjLHQuYmxfY291bnQpfWZ1bmN0aW9uIHkodCxlLG4pe3ZhciBpLG8sYT0tMSxyPWVbMV0scz0wLGw9NyxjPTQ7Zm9yKDA9PT1yJiYobD0xMzgsYz0zKSxlWzIqKG4rMSkrMV09NjU1MzUsaT0wO2k8PW47aSsrKW89cixyPWVbMiooaSsxKSsxXSwrK3M8bCYmbz09PXJ8fChzPGM/dC5ibF90cmVlWzIqb10rPXM6MCE9PW8/KG8hPT1hJiZ0LmJsX3RyZWVbMipvXSsrLHQuYmxfdHJlZVsyKktdKyspOnM8PTEwP3QuYmxfdHJlZVsyKlFdKys6dC5ibF90cmVlWzIqdHRdKysscz0wLGE9bywwPT09cj8obD0xMzgsYz0zKTpvPT09cj8obD02LGM9Myk6KGw9NyxjPTQpKX1mdW5jdGlvbiBrKHQsZSxuKXt2YXIgaSxvLGE9LTEscj1lWzFdLHM9MCxwPTcsZD00O2ZvcigwPT09ciYmKHA9MTM4LGQ9MyksaT0wO2k8PW47aSsrKWlmKG89cixyPWVbMiooaSsxKSsxXSwhKCsrczxwJiZvPT09cikpe2lmKHM8ZCl7ZG8gYyh0LG8sdC5ibF90cmVlKTt3aGlsZSgwIT09LS1zKX1lbHNlIDAhPT1vPyhvIT09YSYmKGModCxvLHQuYmxfdHJlZSkscy0tKSxjKHQsSyx0LmJsX3RyZWUpLGwodCxzLTMsMikpOnM8PTEwPyhjKHQsUSx0LmJsX3RyZWUpLGwodCxzLTMsMykpOihjKHQsdHQsdC5ibF90cmVlKSxsKHQscy0xMSw3KSk7cz0wLGE9bywwPT09cj8ocD0xMzgsZD0zKTpvPT09cj8ocD02LGQ9Myk6KHA9NyxkPTQpfX1mdW5jdGlvbiB6KHQpe3ZhciBlO2Zvcih5KHQsdC5keW5fbHRyZWUsdC5sX2Rlc2MubWF4X2NvZGUpLHkodCx0LmR5bl9kdHJlZSx0LmRfZGVzYy5tYXhfY29kZSksdih0LHQuYmxfZGVzYyksZT1ZLTE7ZT49MyYmMD09PXQuYmxfdHJlZVsyKm90W2VdKzFdO2UtLSk7cmV0dXJuIHQub3B0X2xlbis9MyooZSsxKSs1KzUrNCxlfWZ1bmN0aW9uIGoodCxlLG4saSl7dmFyIG87Zm9yKGwodCxlLTI1Nyw1KSxsKHQsbi0xLDUpLGwodCxpLTQsNCksbz0wO288aTtvKyspbCh0LHQuYmxfdHJlZVsyKm90W29dKzFdLDMpO2sodCx0LmR5bl9sdHJlZSxlLTEpLGsodCx0LmR5bl9kdHJlZSxuLTEpfWZ1bmN0aW9uIEModCl7dmFyIGUsbj00MDkzNjI0NDQ3O2ZvcihlPTA7ZTw9MzE7ZSsrLG4+Pj49MSlpZigxJm4mJjAhPT10LmR5bl9sdHJlZVsyKmVdKXJldHVybiBxO2lmKDAhPT10LmR5bl9sdHJlZVsxOF18fDAhPT10LmR5bl9sdHJlZVsyMF18fDAhPT10LmR5bl9sdHJlZVsyNl0pcmV0dXJuIE87Zm9yKGU9MzI7ZTxIO2UrKylpZigwIT09dC5keW5fbHRyZWVbMiplXSlyZXR1cm4gTztyZXR1cm4gcX1mdW5jdGlvbiBTKHQpe2Z0fHwobSgpLGZ0PSEwKSx0LmxfZGVzYz1uZXcgYSh0LmR5bl9sdHJlZSxodCksdC5kX2Rlc2M9bmV3IGEodC5keW5fZHRyZWUsdXQpLHQuYmxfZGVzYz1uZXcgYSh0LmJsX3RyZWUsbXQpLHQuYmlfYnVmPTAsdC5iaV92YWxpZD0wLGYodCl9ZnVuY3Rpb24gUCh0LGUsbixpKXtsKHQsKEw8PDEpKyhpPzE6MCksMyksdyh0LGUsbiwhMCl9ZnVuY3Rpb24gVCh0KXtsKHQsRDw8MSwzKSxjKHQsVixydCksZCh0KX1mdW5jdGlvbiBBKHQsZSxuLGkpe3ZhciBvLGEscj0wO3QubGV2ZWw+MD8odC5zdHJtLmRhdGFfdHlwZT09PUUmJih0LnN0cm0uZGF0YV90eXBlPUModCkpLHYodCx0LmxfZGVzYyksdih0LHQuZF9kZXNjKSxyPXoodCksbz10Lm9wdF9sZW4rMys3Pj4+MyxhPXQuc3RhdGljX2xlbiszKzc+Pj4zLGE8PW8mJihvPWEpKTpvPWE9bis1LG4rNDw9byYmZSE9PS0xP1AodCxlLG4saSk6dC5zdHJhdGVneT09PUJ8fGE9PT1vPyhsKHQsKEQ8PDEpKyhpPzE6MCksMyksXyh0LHJ0LHN0KSk6KGwodCwoRjw8MSkrKGk/MTowKSwzKSxqKHQsdC5sX2Rlc2MubWF4X2NvZGUrMSx0LmRfZGVzYy5tYXhfY29kZSsxLHIrMSksXyh0LHQuZHluX2x0cmVlLHQuZHluX2R0cmVlKSksZih0KSxpJiZnKHQpfWZ1bmN0aW9uIE4odCxlLG4pe3JldHVybiB0LnBlbmRpbmdfYnVmW3QuZF9idWYrMip0Lmxhc3RfbGl0XT1lPj4+OCYyNTUsdC5wZW5kaW5nX2J1Zlt0LmRfYnVmKzIqdC5sYXN0X2xpdCsxXT0yNTUmZSx0LnBlbmRpbmdfYnVmW3QubF9idWYrdC5sYXN0X2xpdF09MjU1Jm4sdC5sYXN0X2xpdCsrLDA9PT1lP3QuZHluX2x0cmVlWzIqbl0rKzoodC5tYXRjaGVzKyssZS0tLHQuZHluX2x0cmVlWzIqKGN0W25dK0grMSldKyssdC5keW5fZHRyZWVbMipyKGUpXSsrKSx0Lmxhc3RfbGl0PT09dC5saXRfYnVmc2l6ZS0xfXZhciBJPXQoIi4uL3V0aWxzL2NvbW1vbiIpLEI9NCxxPTAsTz0xLEU9MixMPTAsRD0xLEY9MixNPTMsUj0yNTgsJD0yOSxIPTI1NixXPUgrMSskLFU9MzAsWT0xOSxHPTIqVysxLFg9MTUsSj0xNixaPTcsVj0yNTYsSz0xNixRPTE3LHR0PTE4LGV0PVswLDAsMCwwLDAsMCwwLDAsMSwxLDEsMSwyLDIsMiwyLDMsMywzLDMsNCw0LDQsNCw1LDUsNSw1LDBdLG50PVswLDAsMCwwLDEsMSwyLDIsMywzLDQsNCw1LDUsNiw2LDcsNyw4LDgsOSw5LDEwLDEwLDExLDExLDEyLDEyLDEzLDEzXSxpdD1bMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwyLDMsN10sb3Q9WzE2LDE3LDE4LDAsOCw3LDksNiwxMCw1LDExLDQsMTIsMywxMywyLDE0LDEsMTVdLGF0PTUxMixydD1uZXcgQXJyYXkoMiooVysyKSk7aShydCk7dmFyIHN0PW5ldyBBcnJheSgyKlUpO2koc3QpO3ZhciBsdD1uZXcgQXJyYXkoYXQpO2kobHQpO3ZhciBjdD1uZXcgQXJyYXkoUi1NKzEpO2koY3QpO3ZhciBwdD1uZXcgQXJyYXkoJCk7aShwdCk7dmFyIGR0PW5ldyBBcnJheShVKTtpKGR0KTt2YXIgaHQsdXQsbXQsZnQ9ITE7bi5fdHJfaW5pdD1TLG4uX3RyX3N0b3JlZF9ibG9jaz1QLG4uX3RyX2ZsdXNoX2Jsb2NrPUEsbi5fdHJfdGFsbHk9TixuLl90cl9hbGlnbj1UfSx7Ii4uL3V0aWxzL2NvbW1vbiI6M31dLDE1OltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIGkoKXt0aGlzLmlucHV0PW51bGwsdGhpcy5uZXh0X2luPTAsdGhpcy5hdmFpbF9pbj0wLHRoaXMudG90YWxfaW49MCx0aGlzLm91dHB1dD1udWxsLHRoaXMubmV4dF9vdXQ9MCx0aGlzLmF2YWlsX291dD0wLHRoaXMudG90YWxfb3V0PTAsdGhpcy5tc2c9IiIsdGhpcy5zdGF0ZT1udWxsLHRoaXMuZGF0YV90eXBlPTIsdGhpcy5hZGxlcj0wfWUuZXhwb3J0cz1pfSx7fV0sIi8iOltmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPXQoIi4vbGliL3V0aWxzL2NvbW1vbiIpLmFzc2lnbixvPXQoIi4vbGliL2RlZmxhdGUiKSxhPXQoIi4vbGliL2luZmxhdGUiKSxyPXQoIi4vbGliL3psaWIvY29uc3RhbnRzIikscz17fTtpKHMsbyxhLHIpLGUuZXhwb3J0cz1zfSx7Ii4vbGliL2RlZmxhdGUiOjEsIi4vbGliL2luZmxhdGUiOjIsIi4vbGliL3V0aWxzL2NvbW1vbiI6MywiLi9saWIvemxpYi9jb25zdGFudHMiOjZ9XX0se30sW10pKCIvIil9KX0sZnVuY3Rpb24odCxlLG4peyJ1c2Ugc3RyaWN0Ijt2YXIgaT17IlxcLmpkXFwuY29tIjoiMzYwYnV5IiwiZGFuZ2RhbmdcXC5jb20iOiJkYW5nZGFuZyIsInZtZWlcXC5jb20iOiJ2bWVpIiwidG9vdG9vXFwuY24iOiJ0b290b28iLCJ3d3dcXC5zcGlkZXJcXC5jb21cXC5jbiI6InNwaWRlciIsIi4qP2JvcWlpXFwuY29tIjoiYm9xaWkiLCJ3d3dcXC41MWRpblxcLmNvbSI6IjUxZGluIiwid3d3XFwuaGFpdHVuY3VuXFwuY29tIjoiaGFpdHVuY3VuIiwieXVuaG91XFwuY29tIjoieXVuaG91IiwiLio/dmlwXFwuY29tIjoidmlwIiwid3d3XFwubWFsbHZ2XFwuY29tIjoiaG9tZXZ2IiwicmF5aVxcLmNuIjoicmF5aSIsInd3d1xcLnlhb2ZhbmdcXC5jbiI6Inlhb2ZhbmciLCJ3d3dcXC5saWtlZmFjZVxcLmNvbSI6Imxpa2VmYWNlIiwid3d3XFwuZ3VvcGlcXC5jb20iOiJndW9waSIsInd3d1xcLm1lbmdsdVxcLmNvbSI6Im1lbmdsdSIsIiguKj8pXFwubTE4XFwuY29tIjoibTE4IiwiXFwuZWZlaWh1XFwuY29tIjoiZWZlaWh1IiwiLy93d3dcXC5tZWlcXC5jb20vc2lsby8uKi1ldmVudC1ldmVudFxcLmh0bWwiOiJtZWkiLCJiZW5sYWlcXC5jb20iOiJiZW5sYWkiLCIvL3d3d1xcLmtqdFxcLmNvbSI6ImtqdCIsInd3d1xcLmtqdFxcLmNvbSI6ImtqdCIsImJlc3RpbmZvb2RzLmNvbSI6ImJlc3RpbmZvb2RzIiwiXFwuajFcXC5jb20iOiJqMSIsInl1bW15NzdcXC5jb20iOiJ5dW1teTc3IiwiXFwuMzYwa3hyXFwuY29tIjoiMzYwa3hyIiwiaXRlbVxcLmZlaW5pdVxcLmNvbSI6ImZlaW5pdSIsInNob3BcXC5sZW5vdm9tb2JpbGVcXC5jb20iOiJsZW5vdm8iLCJzdXB1eVxcLmNvbSI6InN1cHV5Iiwic3VwdW1hbGxcXC5jb20iOiJzdXB1bWFsbCIsInlvaG9idXlcXC5jb20iOiJ5b2hvYnV5IiwibWY5MTBcXC5jb20iOiJtZjkxMCIsInN1bmRhblxcLmNvbSI6InN1bmRhbiIsIlxcLnRhbzNjXFwuY29tIjoidGFvM2MiLCJhaWRhaVxcLmNvbSI6ImFpZGFpIiwieFxcLmNvbVxcLmNuIjoieCIsImZlaWZlaVxcLig/OmNufGNvbSkiOiJmZWlmZWkiLCJsb3ZvXFwuY24iOiJsb3ZvIiwieWludGFpXFwuY29tIjoieWludGFpIiwiYmFuZ2dvXFwuY29tIjoiYmFuZ2dvIiwiNWx1eFxcLmNvbSI6IjVsdXgiLCJhbWF6b25cXC5kZSI6ImFtYXpvbl9kZSIsIlxcLnBhaXhpZVxcLm5ldCI6InBhaXhpZSIsIlxcLmhhbmR1XFwuY29tIjoiaGFuZHUiLCJcXC5nb3VcXC5jb20iOiJtNmdvIiwibWluc2hlbmdlY1xcLmNvbSI6Im1pbnNoZW5nZWMiLCJsZW1hbGxcXC5jb20iOiJsZW1hbGwiLCJvY2pcXC5jb21cXC5jbiI6Im9jaiIsIm5pa2VcXC5jb20iOiJuaWtlIiwic2ZiZXN0XFwuKD86aGt8Y29tKSI6InNmYmVzdCIsIlxcLndpbnh1YW5cXC5jb20iOiJ3aW54dWFuIiwiXFwuc2hvcGluXFwubmV0Ijoic2hvcGluIiwiXFwubWJhb2Jhb1xcLmNvbSI6Im1iYW9iYW8iLCJ3d3dcXC55bWF0b3VcXC5jb20iOiJ5bWF0b3UiLCJjb29jYWFcXC5jb20iOiJjb29jYWEiLCIxMTFcXC5jb21cXC5jbiI6IjExMSIsInNob3BcXC5sZW5vdm9cXC5jb21cXC5jbiI6Imxlbm92byIsImZydWl0ZGF5XFwuY29tIjoiZnJ1aXRkYXkiLCJhbWF6b25cXC5lcyI6ImFtYXpvbiIsIm1laWNpXFwuY29tIjoibWVpY2kiLCJiZWliZWlcXC5jb20iOiJiZWliZWkiLCJrZWVkZVxcLmNvbSI6ImtlZWRlIiwia2VkZVxcLmNvbSI6ImtlZWRlIiwieGlqaWUuY29tIjoieGlqaWUiLCJjYW1lbC5jb20uY24iOiJjYW1lbCIsIm1laXR1YW5cXC5jb20iOiJtZWl0dWFuIiwiXFwuYW1hem9uXFwuY24iOiJhbWF6b24iLCJcXC5hbWF6b25cXC5jb20iOiJhbWF6b25fdXMiLCJsZW5vdm9cXC5jb20iOiJsZW5vdm8iLCJlYXNlZXllc1xcLmNvbSI6ImVhc2VleWVzIiwiYWltZXJcXC5jb21cXC5jbiI6ImFpbWVyIiwic2hvd2pveVxcLmNvbSI6InNob3dqb3kiLCJ5ZXNteXdpbmVcXC5jb20iOiJ5ZXNteXdpbmUiLCJ0aWFudGlhblxcLmNvbSI6InRpYW50aWFuIiwiXFwuZ2FwXFwuY24iOiJnYXAiLCJ3YW5nZnVqaW5nXFwuY29tIjoid2FuZ2Z1amluZyIsIlxcLm1laVxcLmNvbSI6Im1laSIsImFtYXpvblxcLmNhIjoiYW1hem9uX2NhIiwic2Vjb29cXC5jb20iOiJzZWNvbyIsInd3d1xcLm1ldGFvXFwuY29tIjoibWV0YW8iLCJtZXRhb1xcLmNvbSI6Im1ldGFvIiwiYW1hem9uXFwuY29tXFwuYnIiOiJhbWF6b24iLCJiYWl5YW5nd2FuZy5jb20iOiJiYWl5YW5nd2FuZyIsImJvb2t1dVxcLmNvbSI6ImJvb2t1dSIsIjEwMHl1ZVxcLmNvbSI6IjEwMHl1ZSIsIm1laWxlbGVcXC5jb20iOiJtZWlsZWxlIiwiZDFcXC5jb21cXC5jbiI6ImQxIiwibVxcLmQxXFwuY24iOiJkMSIsIi50YXF1LmNuIjoidGFxdSIsImxldGFvXFwuY29tIjoibGV0YW8iLCJ3d3dcXC5rYW9sYVxcLmNvbSI6Imthb2xhIiwibGFtaXVcXC5jb20iOiJsYW1pdSIsIlxcLnZtYWxsXFwuY29tIjoidm1hbGwiLCJtb3JlZm9vZFxcLmNvbSI6Im1vcmVmb29kIiwiXFwueGlqaS5jb20iOiJ4aWppIiwic2hvcFxcLmxldHZcXC5jb20iOiJsZW1hbGwiLCJ2amlhXFwuY29tIjoidmppYSIsInN0YXBsZXNcXC5jbiI6InN0YXBsZXMiLCJcXC56bTdcXC5jbiI6InptNyIsIlxcLig/Om1vb25iYXNhfGtvcmlybHxydXRpc2hlcnxzdW9yYW5nfGFsYXZlc3xpbmcyaW5nfDAtMTAwc3xxamhlcmJ8bW9udGVhbW9yKVxcLmNvbSI6Im1vb25iYXNhIiwiZmVuZ3F1XFwuY29tIjoiZmVuZ3F1IiwiYmVzdGtlZXBcXC5jbiI6ImJlc3RrZWVwIiwib2NqXFwua3IiOiJvY2oiLCJhbWF6b25cXC5jb1xcLmpwIjoiYW1hem9uX2pwIiwiemhlblxcLmNvbSI6InpoZW4iLCJcXC54aXVcXC5jb20iOiJ4aXUiLCIoXFwuKT9ob21ldnZcXC5jb20iOiJob21ldnYiLCJkYWxpbmcuY29tIjoiZGFsaW5nIiwiYW1hem9uXFwuaW4iOiJhbWF6b24iLCJmZWluaXVcXC5jb20iOiJmZWluaXUiLCJqaXVtZWlcXC5jb20iOiJqaXVtZWkiLCJ0YW94aWVcXC5jb20iOiJ0YW94aWUiLCJhbWF6b25cXC5pdCI6ImFtYXpvbiIsInphemhpcHVcXC5jb20iOiJ6YXpoaXB1IiwiXFwuYmxcXC5jb20iOiJibCIsIi4qP2JsXFwuY29tIjoiYmwiLCJ5b3UuMTYzLmNvbSI6InlvdTE2MyIsImxpbmdzaGlcXC5jb20iOiJsaW5nc2hpIiwiaHVhXFwuY29tIjoiaHVhIiwiXFwubTZnb1xcLmNvbSI6Im02Z28iLCJsZWZlbmdcXC5jb20iOiJsZWZlbmciLCIzNjBrYWRcXC5jb20iOiIzNjBrYWQiLCJcXC45OXJlYWRcXC5jb20iOiI5OXJlYWQiLCJcXC5taXFpXFwuY24iOiJtaXFpIiwicWlucWluYmFieVxcLmNvbSI6InFpbnFpbmJhYnkiLCJ2YW5jbFxcLmNvbSI6InZhbmNsIiwiXFwuaml1eGlhblxcLmNvbSI6ImppdXhpYW4iLCJqaWFlXFwuY29tIjoiamlhZSIsIm1pZGVhXFwuY29tIjoibWlkZWEiLCJhbWF6b25cXC5jb21cXC5teCI6ImFtYXpvbiIsInhpZnVxdWFuXFwuY29tIjoieGlmdXF1YW4iLCJhbWF6b25cXC5jb20iOiJhbWF6b25fdXMiLCJ3YW5naml1XFwuY29tIjoid2FuZ2ppdSIsImFtYXpvblxcLm5sIjoiYW1hem9uIiwiXFwub2tidXlcXC5jb20iOiJva2J1eSIsImFtYXpvblxcLmNvbVxcLmF1IjoiYW1hem9uIiwic2FzYVxcLmNvbSI6InNhc2EiLCIoXFwuKT95aWd1b1xcLmNvbSI6InlpZ3VvIiwibXV5aW5nemhpamlhXFwuY29tIjoibXV5aW5nemhpamlhIiwiLio/enVpcGluXFwuY24iOiJ6dWlwaW4iLCJcXC56aGl3b1xcLmNvbSI6InpoaXdvIiwic3RvcmVcXC5sb2dpdGVjaFxcLmNvbVxcLmNuIjoibG9naXRlY2giLCJcXC5uZXdlZ2coXFwuY29tKT9cXC5jbiI6Im5ld2VnZyIsImVmb3RpbGVcXC5jb20iOiJlZm90aWxlIiwiXFwub3VrdVxcLmNvbSI6Im91a3UiLCJcXC5ubzVcXC5jb21cXC5jbiI6Im5vNSIsImhhaWVyamluZ3NodWlcXC5jb20iOiJoYWllcmppbmdzaHVpIiwid3d3XFwua3pqMzY1XFwuY29tIjoia3pqMzY1Iiwid2JpYW9cXC5jbiI6IndiaWFvIiwiXFwubHVzZW5cXC5jb20iOiJsdXNlbiIsImp1bWVpXFwuY29tIjoianVtZWkiLCJ4Z2RxXFwuY29tIjoieGdkcSIsIm1pYVxcLmNvbSI6Im1peWFiYW9iZWkiLCJtaXlhYmFvYmVpLmhrIjoibWl5YWJhb2JlaSIsInVsZVxcLmNvbSI6InVsZSIsIlxcLm9raHFiXFwuY29tIjoib2tocWIiLCJqaWFua2VcXC5jb20iOiJqaWFua2UiLCJcXC5qeGR5ZlxcLmNvbSI6Imp4ZHlmIiwieHRlcFxcLmNvbVxcLmNuIjoieHRlcCIsImd1b2ppbWFtaS5jb20iOiJndW9qaW1hbWkiLCJlaGFpZXJcXC5jb20iOiJlaGFpZXIiLCJsYnhjblxcLmNvbSI6ImxieGNuIiwiXFwuY2FtZWxcXC5jb21cXC5jbiI6ImNhbWVsIiwiKD86dml2aWFufGxpbmttYXNhfG1hc2FtYXNvKVxcLig/OmNvbXxjbikiOiJtYXNhbWFzbyIsImxpZmV2Yy5jb20iOiJsaWZldmMiLCJjaHVuc2h1aXRhbmdcXC5jb20iOiJjaHVuc2h1aXRhbmciLCJcXC5ib29rc2NoaW5hXFwuY29tIjoiYm9va3NjaGluYSIsImxleW91XFwuY29tXFwuY24iOiJsZXlvdSIsIlxcLnlvdWdvdVxcLmNvbSI6InlvdWdvdSIsImFtYXpvblxcLmNvXFwudWsiOiJhbWF6b25fdWsiLCJnandcXC5jb20iOiJnanciLCJsaW5pbmdcXC5jb20iOiJsaW5pbmciLCJcXC5zXFwuY24iOiJzY24iLCJoaXNlbnNlXFwuY29tIjoiaGlzZW5zZSIsIlxcLmNoaW5hLXB1YlxcLmNvbSI6ImNoaW5hcHViIiwianVtZWlnbG9iYWxcXC5jb20iOiJqdW1laSIsIlxcLih4aWFvKT9taVxcLmNvbSI6Im1pIiwiXFwuc2VwaG9yYVxcLmNuIjoic2VwaG9yYSIsImppbnhpYW5nLmNvbSI6Imp4ZHlmIiwicHVyY290dG9uLmNvbSI6InB1cmNvdHRvbiIsIndzdHguY29tIjoid3N0eCIsInpob25naml1LmNuIjoiemhvbmdqaXUiLCJ3d3cua2FsdWxpLmNvbSI6ImthbHVsaSIsIm1hbGwudG84dG8uY29tIjoidG84dG8iLCJ3d3cub3Bwb3Nob3AuY24iOiJvcHBvc2hvcCIsImJhb2JlaWdlemkuY29tIjoiYmFvYmVpZ2V6aSIsInd3dy5tYXJrbWFsbC5jb20iOiJtYXJrbWFsbCIsImhhcHBpZ29cXC5jb20iOiJoYXBwaWdvIiwiYW9sYWlnb1xcLmNvbSI6ImFvbGFpZ28iLCJza2dcXC5jb20iOiJza2ciLCJjb29scGFkXFwuY29tIjoiY29vbHBhZCIsImRpeGludG9uZ1xcLmNvbSI6ImRpeGludG9uZyIsInZpdm9cXC5jb21cXC5jbiI6InZpdm8iLCJsdW9sYWlcXC5jbiI6Imx1b2xhaSIsImFvbXlnb2RcXC5jb20iOiJhb215Z29kIiwic3Vhbmp1emlcXC5jb20iOiJzdWFuanV6aSIsImdpb25lZVxcLmNvbSI6Imdpb25lZSIsInlhbzEyM1xcLmNvbSI6InlhbzEyMyIsInR1aHVcXC5jbiI6InR1aHUiLCJ3YWxtYXJ0XFwuY29tIjoid2FsbWFydCIsInZzaWdvXFwuY24iOiJ2c2lnbyIsImxvb2tmYW50YXN0aWNcXC5jb20iOiJsb29rZmFudGFzdGljIiwiYXNoZm9yZFxcLmNvbSI6ImFzaGZvcmQiLCJzaG9wYm9wXFwuY29tIjoic2hvcGJvcCIsIjZwbVxcLmNvbSI6IjZwbSIsImFtYXpvblxcLmZyIjoiYW1hem9uX2ZyIiwic3VuaW5nXFwuY29tIjoic3VuaW5nIiwiZ29tZS5jb20uY24iOiJnb21lIiwic1xcLnRhb2Jhb1xcLmNvbSI6InRhb2JhbyIsImxpc3RcXC50bWFsbFxcLmNvbSI6InRtYWxsIiwieWhkLmNvbSI6InlpaGFvZGlhbiJ9LG89e2FtYXpvbjoxLGRhbmdkYW5nOjIsIjM2MGJ1eSI6Myx6b2w6NCxmZ2xhZHk6NSxvdWt1OjYsbmV3ZWdnOjcsa2ltaXNzOjgscmVkYmFieTo5LG0xODoxMCxzZXBob3JhOjEyLGxlZmVuZzoxMyxzY246MTQsIjUxYnV5IjoxNSxtZW5nbHU6MTYsbW9vbmJhc2E6MTcsa2VlZGU6MTgsdmFuY2w6MTksb2tidXk6MjEsbGV0YW86MjIsYnV5MDA3OjIzLHRhb3hpZToyNCxzdW5pbmc6MjUsY29vODoyNixsdXNlbjoyNyxnb21lOjI4LGRhemhvbmdkaWFucWk6MjkseWloYW9kaWFuOjMxLHdvbWFpOjMyLGxleW91OjMzLHNob3BpbjozNCx4aXU6MzUsbWJhb2JhbzozNix2amlhOjM3LCI3Y3YiOjM4LHFpbnFpbmJhYnk6MzksY2h1bnNodWl0YW5nOjQwLHg6NDEsZ3VvcGk6NDIsbm81OjQzLHNhc2E6NDUsIjM2MGt4ciI6NTAsbTZnbzo1MSxsaWtlZmFjZTo1Mixtb3JlZm9vZDo1NCx5YW9mYW5nOjU2LCI5OXJlYWQiOjU5LGNoaW5hcHViOjYwLGJvb2tzY2hpbmE6NjEsd2lueHVhbjo2MixlZmVpaHU6NjMseWludGFpOjY2LGhhcHBpZ286NzIsZ2FwOjczLCI1bHV4Ijo3NSx0bWFsbDo4Myx0aWFudGlhbjo4NCx4aWppZTo4NSxqdW1laTo4Nix5b3Vnb3U6OTMsMTExOjk0LGppYW5rZTo5NyxtdXlpbmd6aGlqaWE6OTgsbGluZ3NoaTo5OSxiYW5nZ286MTAwLHllc215d2luZToxMDEsaml1bWVpOjEwMixqaXV4aWFuOjEwMyxnanc6MTA4LG9raHFiOjEwOSxib29rdXU6MTEwLHRhbzNjOjExMSxkMToxMTUscmF5aToxMjAscGFpeGllOjEyMix0YW9iYW86MTIzLGhvbWV2djoxMjQsanhkeWY6MTI1LHNmYmVzdDoxMjYsYmVubGFpOjEyNyx0b290b286MTI4LHR1b3R1bzoxMjgsdmlwOjEyOSx2bWFsbDoxMzQsbGVub3ZvOjEzNSxhcHBsZToxMzYsem03OjEzOCxtaXFpOjEzOSx6aGl3bzoxNDAsajE6MTQxLHdhbmdqaXU6MTQyLGxhbWl1OjE0NixhaW1lcjoxNDcsd2JpYW86MTUzLGhhbmR1OjE1NCxlaGFpZXI6MTU1LHNlY29vOjE1NixjYW1lbDoxNTcsbWFzYW1hc286MTU4LHpoZW46MTYyLHhpZnVxdWFuOjE2NCxtaToxNjcsbGVtYWxsOjE2OCxtZWl0dWFuOjE3MixjdHJpcDoxNzMseWlndW86MTc0LHl1bW15Nzc6MTc1LGZydWl0ZGF5OjE3OCxmZWluaXU6MTgwLGZlaWZlaToxODEsenVpcGluOjE4Mix5b2hvYnV5OjE4NCxsdm1hbWE6MTg1LGJlc3RrZWVwOjE4OCxtZjkxMDoxOTQsbWFya21hbGw6MTk0LG1peWFiYW9iZWk6MTk1LHVsZToxOTYsbWluc2hlbmdlYzoxOTcsd2FuZ2Z1amluZzoxOTgsbnVvbWk6MTk5LG1laWxlbGU6MjAxLG1vZ3VqaWU6MjAzLGVsb25nOjIwNixzdXB1bWFsbDoyMTAsbHk6MjExLGxpbmluZzoyMTMsc3ByaW5ndG91cjoyMTUsaGFpZXJqaW5nc2h1aToyMTcsY29vY2FhOjIxOCxsaWZldmM6MjIwLGt6ajM2NToyMjIsa2FvbGE6MjIzLHltYXRvdToyMjQsbWV0YW86MjI1LGtqdDoyMjYsbG9naXRlY2g6MjI3LGFtYXpvbl91czoyMjgsYW1hem9uX2pwOjIyOSx4aWppOjIzMixuaWtlOjIzMywiMzYwa2FkIjoyMzQsbGJ4Y246MjM1LG1laWNpOjIzNixiZWliZWk6MjM3LCI2cG0iOjIzOCxzaG9wYm9wOjI0MSxhbWF6b25fZGU6MjQ2LGFzaGZvcmQ6MjQ3LGxvb2tmYW50YXN0aWM6MjQ4LHZzaWdvOjI1MiwiMTAweXVlIjoyNTYsYW1hem9uX3VrOjI2NixkYWxpbmc6MjY3LGZlbmdxdToyNjgsbWVpOjI2OSxzaG93am95OjI3MCxvY2o6MjcxLHN1bmRhbjoyNzIsZWFzZWV5ZXM6MjczLHl1bmhvdToyNzQsaGFpdHVuY3VuOjI3NSx3YWxtYXJ0OjI3Nix2bWVpOjI3NyxqZ2I6Mjc4LCI1MWRpbiI6Mjc5LGFpZGFpOjI4MCxib3FpaToyODEsdG91cnNmb3JmdW46MjgyLGx1bHV0cmlwOjI4MyxzcGlkZXI6Mjg0LGppYWU6Mjg2LHphemhpcHU6Mjg3LHhnZHE6Mjg4LHh0ZXA6Mjg5LG1pZGVhOjI5MCxzdGFwbGVzOjI5MSxlZm90aWxlOjI5Mixsb3ZvOjI5NCxodWE6Mjk1LHpoZTgwMDoyOTYsdHVodToyOTksdGFxdTozMTMsYmw6MzQ3LGJlc3RpbmZvb2RzOjM0OCx5b3UxNjM6MzQ5LGd1b2ppbWFtaTozNTEsYmFpeWFuZ3dhbmc6MzUyLGp1YW5waTozNjAscHVyY290dG9uOjM2NCxhbWF6b25fZnI6MzY1LGFtYXpvbl9jYTozNjYsd3N0eDozNjcsaGlzZW5zZTozNjgsemhvbmdqaXU6MzY5LGthbHVsaTozNzAsdG84dG86MzcxLG9wcG9zaG9wOjM3MixiYW9iZWlnZXppOjM3Myx5YW8xMjM6Mzc0LGdpb25lZTozNzYsc3Vhbmp1emk6Mzc3LGFvbXlnb2Q6Mzc4LGx1b2xhaTozNzksdml2bzozODAsZGl4aW50b25nOjM4MSxjb29scGFkOjM4Mixza2c6MzgzLGFvbGFpZ286Mzg1fSxhPXswOiLotK3nianlhZoiLDE6IuS6mumprOmAiiIsMjoi5b2T5b2T572RIiwzOiLkuqzkuJzllYbln44iLDQ6IuS4reWFs+adkeWcqOe6vyIsNToi6aOO5bCa5LyK5Lq6572RIiw2OiLmrKfphbfnvZEiLDc6IuaWsOibi+S4reWbvSIsODoi6Ze66Jyc572RIiw5OiLnuqLlranlrZAiLDEwOiLpuqbnvZEiLDExOiLllK/kvIrllYbln44iLDEyOiLkuJ3oipnlhbAiLDEzOiLkuZDonILnvZEiLDE0OiLlkI3pnovlupMiLDE1OiLmmJPov4XnvZEiLDE2OiLmoqbpnLLml7blsJrnvZEiLDE3OiLmoqboiq3ojo4iLDE4OiLlj6/lvpfnnLzplZznvZEiLDE5OiLlh6HlrqLor5rlk4EiLDIwOiLmt5jnp4At55m+5Li96Z6L5LiaIiwyMToi5aW95LmQ5LmwIiwyMjoi5LmQ5reYIiwyMzoi5aWl6K6v6L+Q5Yqo5ZWG5Z+OIiwyNDoi5reY6Z6L572RIiwyNToi6IuP5a6B5piT6LStIiwyNjoi5bqT5be0572RKOWbvee+jikiLDI3OiLnu7/mo67mlbDnoIEiLDI4OiLlm73nvo7lnKjnur8iLDI5OiLlpKfkuK3nlLXlmagiLDMwOiLlm73nvo7kvZPogrIiLDMxOiLkuIDlj7flupciLDMyOiLkuK3nsq7miJHkubDnvZEiLDMzOiLkuZDlj4vlrZXlqbTnq6UiLDM0OiLkuIrlk4HmipjmiaMiLDM1OiLotbDnp4DnvZEiLDM2OiLpuqbljIXljIUiLDM3OiJWKyjlh6HlrqIpIiwzODoi5LiD5b2p6LC3IiwzOToi5Lqy5Lqy5a6d6LSd5ZWG5Z+OIiw0MDoi5pil5rC05aCCIiw0MToi5qGU6Imy5oiQ5Lq6Iiw0Mjoi5p6c55qu572RIiw0MzoiTm815pe25bCa5bm/5Zy6Iiw0NDoiSURTSEUuQ09NIiw0NToi6aaZ5riv6I6O6I6OIiw0NjoiREhD5Lit5Zu9Iiw0Nzoi54On5YyF572RIiw0ODoi5pel5YWo6aOfIiw0OToi56ys5Lmd5aSn6YGTIiw1MDoi5byA5b+D5Lq65aSn6I2v5oi/Iiw1MToi6bqm5LmQ6LStIiw1Mjoi5oKm576O5Li9Iiw1Mzoi5oqi6bKc572RIiw1NDoi54yr6K+a6aOf5ZOBIiw1NToi6ICA54K5MTAw55m+6LSn5ZWG5Z+OIiw1Njoi6I2v5oi/572RIiw1Nzoi5Lit5YWz5p2R5Zyo57q/5ZWG5Z+OIiw1ODoi5Li95a625a6d6LSdIiw1OToiOTnnvZHkuIrkuabln44iLDYwOiLkupLliqjlh7rniYjnvZEiLDYxOiLkuK3lm73lm77kuabnvZEiLDYyOiLmlofovannvZEiLDYzOiLpo57omY7kuZDotK0iLDY1OiLoh7Tnvo7nvZEoU2tpblN0b3JlIENoaW5hKSIsNjY6IumTtuazsOeZvui0pyIsNjc6Iui2o+eOqSIsNjg6IlVyQ29zbWUiLDY5OiLojYnojpPnvZEiLDcwOiLpnLLlgKnnvZEiLDcxOiLphbfov5DliqgiLDcyOiLlv6vkuZDotK0iLDczOiJHQVDkuK3lm70iLDc0OiLlppnkuZDkuZDmr43lqbTnlKjlk4HllYbln44iLDc1OiLnrKzkupTlpKfpgZPlpaLkvojlk4HnvZEiLDc2OiLlsI/kuLvkurrnvZEiLDc3OiLlrpzlrrblrrblsYXlrpjnvZEiLDc4OiLmlrDkuIPlpKnnlLXlmajnvZEiLDc5OiLovr7oipnlpq7lrpjnvZEiLDgwOiLlpKrlubPmtIvkurLlrZDnvZEiLDgxOiLlpKrlubPmtIvlrrblsYXnvZEiLDgyOiLnvKTotK3nvZEo57qi5a2p5a2QKSIsODM6IuWkqeeMqyIsODQ6IuWkqeWkqee9kSIsODU6Iuilv+ihl+i/kOWKqOe9kSIsODY6IuiBmue+juS8mOWTgSIsODc6IuWwj+eGiuWcqOe6v+WVhuWfjiIsODg6IuiNieiOk+a0vuWMluWmhuWTgeWVhuWfjiIsODk6IuWkp+i0p+agiOe9keS4iui2heW4giIsOTA6IuWQjeWTgeaJk+aKmCIsOTE6Iua0u+WKm+i+vuS/neWBpeWTgee9kSIsOTI6IjEy54K56Zu26aOfIiw5Mzoi5LyY6LSt572RIiw5NDoiMeiNr+e9kSIsOTU6IuWvvOiNr+e9kSjkuIrmtbflpI3nvo7lpKfoja/miL8pIiw5Njoi54Of5oKm572RIiw5Nzoi5YGl5a6i572RIiw5ODoi5q+N5am05LmL5a62Iiw5OToi5Lit5Zu96Zu26aOf572RIiwxMDA6IumCpui0ree9kSIsMTAxOiLkuZ/kubDphZIiLDEwMjoi6YWS576O572RIiwxMDM6IumFkuS7mee9kSIsMTA0OiLmg6DlgaXlurfllYbln44iLDEwNToi5bel6LS45a6255S1IiwxMDY6IuWQjueOm+eJuee9keS4iui2heW4giIsMTA3OiLomY7miZHor4botKciLDEwODoi6LSt6YWS572RIiwxMDk6IuWNjuW8uuWMl+WVhuWfjiIsMTEwOiLljZrlupPkuabln44iLDExMToi6auY6bi/5ZWG5Z+OIiwxMTI6Iuilv+WNlWlnbzUiLDExMzoi5paw5LiW55WM55m+6LSnIiwxMTQ6IuaxieWFieeZvui0pyIsMTE1OiJEMeS8mOWwmiIsMTE2OiLmmJPmlq/mnaXnpo8iLDExNzoi5LyY5oKm55Sf5rS7IiwxMTg6IuaPkuW6p+e9kSIsMTE5OiJPUkJJU+S4reWbvSIsMTIwOiLplJDmhI/nvZEiLDEyMToi5LyYMeWunei0nSIsMTIyOiLmi43pnovnvZEiLDEyMzoi5reY5a6d572RIiwxMjQ6IuS4uuS4uue9kSIsMTI1OiLph5HosaHnvZEiLDEyNjoi6aG65Liw5LyY6YCJIiwxMjc6IuacrOadpeeUn+a0uyIsMTI4OiLmsrHmsrHlt6XnpL4iLDEyOToi5ZSv5ZOB5LyaIiwxMzA6IuiBmuWwmue9kSIsMTMxOiLkv4/nianmgoTor60iLDEzMjoi5aSp5ZOB572RIiwxMzQ6IuWNjuS4uuWVhuWfjiIsMTM1OiLogZTmg7PllYbln44iLDEzNjoi6Iu55p6c5a6Y572RIiwxMzg6IuWNk+e+jue9kSIsMTM5OiLnsbPlpYfnvZEiLDE0MDoi55+l5oiR6I2v5aaGIiwxNDE6IuWBpeS4gOe9kSIsMTQyOiLnvZHphZLnvZEiLDE0Mzoi5q+U5bqm5YWLIiwxNDQ6IuijguW4m+acjemlsCIsMTQ1OiJFU1BSSVTkuK3mloflrpjnvZEiLDE0Njoi5YWw57yq5YaF6KGjIiwxNDc6IueIseaFleWumOe9kSIsMTQ4OiLljaHlvZPnvZEiLDE0OToi5Li95a2Q576O5aaGIiwxNTA6Ium6puW+t+m+mSIsMTUxOiJQQkHnvo7lpoYiLDE1Mjoi5bCa5ZOB572RIiwxNTM6IuS4h+ihqOe9kSIsMTU0OiLpn6npg73ooaPoiI0iLDE1NToi5rW35bCU5ZWG5Z+OIiwxNTY6IuWvuuW6k+e9kSIsMTU3OiLpqobpqbzlrpjmlrnllYbln44iLDE1ODoi546b6JCo546b57SiIiwxNTk6Ik5PUOeUt+ijhSIsMTYwOiLniZvlsJTlrpjnvZEiLDE2MToi6auY6KGX572RIiwxNjI6IuePjeWTgee9kSIsMTYzOiLmlq/ms6LluJ3ljaEiLDE2NDoi55qZ6IKk5rOJIiwxNjU6Iuexs+eykuWEvyIsMTY3OiLlsI/nsbPllYbln44iLDE2ODoi5LmQ6KeG5ZWG5Z+OIiwxNjk6IuWkmueci+mYheivuyIsMTcwOiJRUee9kei0rSIsMTcxOiLlpKfkvJfngrnor4QiLDE3Mjoi576O5ZuiIiwxNzM6IuaQuueoi+e9kSIsMTc0OiLmmJPmnpznvZEiLDE3NToi576O5ZGz5LiD5LiDIiwxNzg6IuWkqeWkqeaenOWbrSIsMTc5OiLogZrnvo7mtbflpJbotK0iLDE4MDoi6aOe54mb572RIiwxODE6IumjnumjnuWVhuWfjiIsMTgyOiLphonlk4HllYbln44iLDE4Mzoi6LSd5aSH572RIiwxODQ6Iuaciei0pyIsMTg1OiLpqbTlpojlpojml4XmuLjnvZEiLDE4Njoi6Z2S6IqS5p6cIiwxODc6IuS8mOW9qee9kSIsMTg4OiLot6jlooPmt5giLDE4OToi5YyF5YyF5qCRIiwxOTA6Iua7oeW6p+e9kSIsMTkxOiLkuIDln47kuIDlk4EiLDE5Mjoi5Lit5Zu96Laz5b2p572RIiwxOTM6IuWPkeW9qee9kSIsMTk0OiLpqazlhYvljY7oj7IiLDE5NToi6Jyc6Iq9IiwxOTY6IumCruS5kOe9kSIsMTk3OiLmsJHnlJ/llYbln44iLDE5ODoi546L5bqc5LqV572R5LiK5ZWG5Z+OIiwxOTk6IueZvuW6puezr+exsyIsMjAwOiLljrvlk6rlhL/nvZEiLDIwMToi576O5LmQ5LmQIiwyMDI6Iue+juS4veivtCIsMjAzOiLomJHoj4fooZciLDIwNDoi56qd56qd5ZuiIiwyMDU6IumUpuaxn+S5i+aYnyIsMjA2OiLoibrpvpnml4XooYznvZEiLDIwNzoi5biD5LiB6YWS5bqXIiwyMDg6IuiKkuaenOe9kSIsMjA5OiI1MDDlvannpajnvZEiLDIxMDoi6YCf5pmu5ZWG5Z+OIiwyMTE6IuWQjOeoi+e9kSIsMjEzOiLmnY7lroHlrpjmlrnllYbln44iLDIxNDoi5paw5Lic5pa55Zyo57q/IiwyMTU6IuaYpeeni+aXhea4uCIsMjE2OiLmsLjkuZDnpajliqEiLDIxNzoi5rW35bCU5YeA5rC05ZWG5Z+OIiwyMTg6IumFt+W8gOWVhuWfjiIsMjE5OiLprYXml4/lnKjnur/llYblupciLDIyMDoiTGlmZVZDIiwyMjE6IuWKquavlOS6muWumOe9kSIsMjIyOiLlurfkuYvlrrbnvZHkuIroja/lupciLDIyMzoi6ICD5ouJ5rW36LStIiwyMjQ6Iua0i+eggeWktCIsMjI1OiLonJzmt5giLDIyNjoi6Leo5aKD6YCaIiwyMjc6Iue9l+aKgOWumOe9kSIsMjI4OiLkuprpqazpgIrnvo7lm70iLDIyOToi5Lqa6ams6YCK5pel5pysIiwyMzA6ImVCYXkiLDIzMToiQWxpRXhwcmVzcyIsMjMyOiLopb/pm4bnvZEiLDIzMzoiTmlrZSIsMjM0OiLlurfniLHlpJrnvZHkuIroja/lupciLDIzNToi6ICB55m+5aeT572R5LiK6I2v5bqXIiwyMzY6Iue+juilv+aXtuWwmiIsMjM3OiLotJ3otJ3nvZEiLDIzODoiNlBNIiwyMzk6IkdOQ+e+juWbveWumOe9kSIsMjQwOiJNWUhBQklUIiwyNDE6IlNIT1BCT1AiLDI0MjoiV2FsZ3JlZW5zIiwyNDM6IlNUUCIsMjQ0OiLnvo7lm73mlrDom4siLDI0NToiSm9tYXNob3AiLDI0Njoi5Lqa6ams6YCK5b635Zu9IiwyNDc6IkFzaGZvcmQiLDI0ODoiTG9va0ZhbnRhc3RpYyIsMjQ5OiJSRUkiLDI1MDoiaUhlcmIiLDI1MToiQ2FydGVyJ3MiLDI1Mjoi6KeG5a6i55y86ZWc572RIiwyNTM6IkVORC4iLDI1NDoiQ2FtcFNhdmVyIiwyNTU6IuS5kOWkqeWbvemZhSIsMjU2OiLnmb7mgqbnvZEiLDI1NzoiV29vdCIsMjU4OiLmtbfmt5jln44iLDI1OToiSm9lJ3MgTkIgT3V0bGV0IiwyNjA6IkZpbmlzaExpbmUiLDI2MToiVml0YWNvc3QiLDI2MjoiR3JvdXBvbiIsMjYzOiJNYWN5J3MiLDI2NDoiTW9vc2VqYXciLDI2NToiR0lMVCIsMjY2OiLkuprpqazpgIroi7Hlm70iLDI2Nzoi6L6+5LukIiwyNjg6IuS4sOi2o+a1t+a3mCIsMjY5OiLprYXlipvmg6AiLDI3MDoi5bCa5aaG572RIiwyNzE6IuS4nOaWuUNKIiwyNzI6IumhuueUtee9keS4iuWVhuWfjiIsMjczOiLmmJPop4bnvZEiLDI3NDoi5LqR54y0572RIiwyNzU6Iua1t+ixmuadkSIsMjc2OiJXYWxtYXJ0IiwyNzc6IuWUr+e+jue+juWmhiIsMjc4OiLph5Hnro3mo5LmtbflpJbotK0iLDI3OToi5oiR6KaB6K6iIiwyODA6IueIseaItOe9kSIsMjgxOiLms6LlpYflrqDnianllYbln44iLDI4Mjoi6YCU6aOO572RIiwyODM6Iui3r+i3r+ihjCIsMjg0OiLonJjom5vnvZEiLDI4NToi5b6u6L2v5Lit5Zu9IiwyODY6IuWKoOaEj+aWsOWTgSIsMjg3OiLmnYLlv5fpk7oiLDI4ODoi5bCP54uX55S15ZmoIiwyODk6IueJueatpeWumOaWueWVhuWfjiIsMjkwOiLnvo7nmoTllYbln44iLDI5MToi5Y+y5rOw5Y2aIiwyOTI6IuaWueWkquWVhuWfjiIsMjkzOiLotJ3mgJ3lrqIiLDI5NDoiTE9WT+Wutue6uiIsMjk1OiLkuK3lm73pspzoirHnpLzlk4HnvZEiLDI5Njoi5oqYODAwIiwyOTc6IuaatOmjjlRWIiwyOTg6IumAlOWutue9kSIsMjk5OiLpgJTomY7lhbvovabnvZEiLDMwMDoiSFRD5a6Y5pa55ZWG5Z+OIiwzMDE6InJvc2Vvbmx55a6Y572RIiwzMDI6IuiejTM2MCIsMzAzOiLkvaDmiJHotLciLDMwNDoiQ29zbWUgU2hvcHBpbmciLDMwNToiRGlhcGVycyIsMzA2OiJXaW5kZWxuLmRlIiwzMDc6IkJhYnluZW8uZGUiLDMwODoiRXNjZW50dWFsIiwzMDk6IlRoZVdhdGNoZXJ5IiwzMTA6IlNha3MgRmlmdGggQXZlbnVlIiwzMTE6IkVzdGVlIExhdWRlciIsMzEyOiJCaWMgQ2FtZXJhIiwzMTM6IuS7lui2oyIsMzE0OiLnqbfmuLjnvZEiLDMxNToi5r6z5paw5LyY6YCJIiwzMTY6IuaXoOWNsOiJr+WTgSIsMzE3OiJHbWFya2V0IiwzMTg6IjEx5Y+36KGXIiwzMTk6IlNtYXJ0YmFyZ2FpbnMiLDMyMDoi6ZuF6JmO5pel5pys5ZWG5Z+OIiwzMjE6IuW4g+mygeaYjuaItOWwlCIsMzIyOiJNaWtpaG91c2UiLDMyMzoiVG95c1JVc+aXpeacrOWumOe9kSIsMzI0OiJDb21mb3J0Rmlyc3QiLDMyNToi6YeR5a6d6LSdIiwzMjY6IkFsYmVlIEJhYnkiLDMyNzoiQmFieW1hcmt0IiwzMjg6IlVHR+WumOe9kSIsMzI5OiJOZWltYW4gTWFyY3VzIiwzMzA6IlNob2VidXkiLDMzMToiU3p1bCIsMzMyOiJUaW1leCIsMzMzOiJLYXkgSmV3ZWxlcnMiLDMzNDoiZVdhdGNoZXMiLDMzNToiU3dhcm92c2tp576O5Zu95a6Y572RIiwzMzY6IldvcmxkIG9mIFdhdGNoZXMiLDMzNzoiRGFuaWVsIFdlbGxpbmd0b24iLDMzODoiQmVhdXR5IEJheSIsMzM5OiJCZWF1dHkuY29tIiwzNDA6IkJlYXV0eSBCYXIiLDM0MToiU2tpblN0b3JlIiwzNDI6IuWFsOiKnemfqeWbveWumOe9kSIsMzQzOiJCT1NF576O5Zu95a6Y572RIiwzNDQ6IkJlc3QgQnV5IiwzNDU6IkImSCIsMzQ2OiLntKLlsLzml6XmnKzlrpjnvZEiLDM0Nzoi55m+6IGUIiwzNDg6Iua6kOWTgeS8mOi0rSIsMzQ5OiLnvZHmmJPkuKXpgIkiLDM1MDoi6ZSm5rGf5Zu96ZmFIiwzNTE6IuWbvemZheWmiOWSqiIsMzUyOiLnmb7mtIvllYbln44iLDM1Mzoi6YGo5ri4572RIiwzNTQ6IlJveSBZb3VuZ+S4reaWh+WumOe9kSIsMzU1OiJNZWRpaGVhbOS4reaWh+WumOe9kSIsMzU2OiIxMDAxIHBoYXJtYWNpZXPkuK3mloflrpjnvZEiLDM1NzoiTG9va2ZhbnRhc3RpY+S4reaWh+WumOe9kSIsMzU5OiLlvIDlv4Pkv53kv53pmannvZEiLDM2MDoi5Y2355qu572RIiwzNjE6IkJvb2tpbmcuY29tIiwzNjI6Iua+s+a0slBP6I2v5oi/5Lit5paH5a6Y572RIiwzNjM6IuW+t+WbvUJB5L+d6ZWW6I2v5oi/5Lit5paH572RIiwzNjQ6IuWFqOajieaXtuS7oyIsMzY1OiLkuprpqazpgIrms5Xlm70iLDM2Njoi5Lqa6ams6YCK5Yqg5ou/5aSnIiwzNjc6IuWkluiuvuWkqeS4iyIsMzY4OiLmtbfkv6HllYbln44iLDM2OToi5Lit6YWS572RIiwzNzA6IuWNoei3r+mHjCIsMzcxOiLlnJ/lt7TlhZTlrrblsYXllYbln44iLDM3MjoiT1BQT+WcqOe6v+WVhuWfjiIsMzczOiLlrp3otJ3moLzlrZAiLDM3NDoi5Zu96I2v572RIiwzNzU6IueZvueoi+aXheihjOe9kSIsMzc2OiLph5Hnq4vmiYvmnLrlrpjnvZEiLDM3Nzoi6YW45qmY5a2QIiwzNzg6IuWlpeS5sOWutuWFqOeQg+i0rSIsMzc5OiLnvZfojrHlrpjmlrnllYbln44iLDM4MDoiVklWT+WumOaWueWVhuWfjiIsMzgxOiLov6rkv6HpgJrlrpjmlrnllYbln44iLDM4Mjoi6YW35rS+5ZWG5Z+OIiwzODM6IlNLR+WumOe9kSIsMzg0OiLniLHlpYfoiboiLDM4NToi5aWl6I6x6LStIiwzODY6Iuavj+aXpeS8mOmynCIsMzg3OiLlnIPnpZ7ot6jlooMiLDM4ODoiRmVlbHVuaXF1ZeS4reaWh+e9kSIsMzg5OiJDaGVtaXN0IERpcmVjdOS4reaWh+e9kSIsMzkwOiJOZXQgUGhhcm1hY3nkuK3mlofnvZEiLDM5MToiUGhhcm1hY3kgNCBMZXNz5Lit5paH572RIiwzOTI6IlBoYXJtYWN5IERpcmVjdOS4reaWh+e9kSIsMzkzOiJBbWNhbOS4reaWh+e9kSIsMzk0OiJMYSBSZWRvdXRl5Lit5paH572RIiwzOTU6IuW+t+WbvVVLQeS8mOWNoeacieacuuS4reaWh+e9kSIsMzk2OiJFcndpbiBNdWVsbGVy56mG5YuS5a625bGF5Lit5paH572RIiwzOTc6Iktpd2kgRGlzY292ZXJ55Lit5paH572RIiwzOTg6IlNwcmluZ2xhbmXkuK3mlofnvZEiLDM5OToi5b635Zu9SkFLTy1P5am056ul55So5ZOB5Lit5paH572RIiw0MDA6IkVhc3lUb3lz5Lit5paH56uZIiw0MDE6IuiLseWbvVRMQ+S4reaWh+e9kSIsNDAyOiLms5Xlm71CTeW9vOa0i+e+jumjnyIsNDAzOiJEZXdhcmVu5b635Zu954uu5a2Q5a625Lit5paH572RIiw0MDQ6IkRD5b635byP5bq357q/5LiK6I2v5oi/5Lit5paH5a6Y572RIiw0MDU6IuiNt+WFsOS5i+WutuS4reaWh+ermSIsNDA2OiLpsb/psbznvZEiLDQwNzoiS2l3aVN0YXJjYXJl5a6Y572RIiw0MDg6IlpVS+iBlOaDs+aJi+acuuWVhuWfjiIsNDA5OiJLaWVobCdz576O5Zu95a6Y572RIiw0MTA6IlphcHBvcyIsNDExOiJDT0FDSOiUu+mpsOS4reWbveWumOe9kSIsNDEyOiJZT09Y5Lit5paH5a6Y572RIiw0MTM6IumfqeWbvTEx6KGX5Lit5paH5a6Y572RIiw0MTQ6IuiLsei2hea1t+a3mCIsNDE1OiJIUWhhaXIuY29tIiw0MTY6IkthdGUgU3BhZGUiLDQxNzoiVml0YWZ55Lit5paH5a6Y572RIiw0MTg6IuS5kOWkqee9kei0rSIsNDE5OiLlrrbkuZDnpo/nvZHkuIrllYbln44iLDQyMDoi6Iy25LiD572RIiw0MjE6IuaZruazveWkp+iNr+aIvyIsNDIyOiJLb2hsJ3MiLDQyMzoiQm9keSBCdWlsZGluZyIsNDI0OiJOb3Jkc3Ryb20iLDQyNToiQ29zdGNvIiw0MjY6IlRhcmdldCIsNDI3OiJLbWFydCIsNDI4OiJPdmVyc3RvY2siLDQyOToiU2VhcnMiLDQzMDoi6ICB5p2/55S15Zmo5a6Y5pa55ZWG5Z+OIiw0MzE6IueLl+awkee9keWVhuWfjiIsNDMyOiLpo57np5HllYbln44iLDQzMzoi5qyn5pmu54Wn5piOIiw0MzQ6IuS4lueVjOWptOerpee9kSIsNDM1OiLnm4rkuLDlpKfoja/miL8iLDQzNjoi5aW96K6i572RIiw0Mzc6IueIseWbnuaUtiIsNDM4OiLph47lhb3mtL4iLDQzOToi5Lmd54mn5Y2r5rW05a6Y5pa55ZWG5Z+OIiw0NDA6IuS4g+WMueeLvOWumOaWueWVhuWfjiIsNDQxOiLpk77lrrYiLDQ0Mjoi5oiR54ix5oiR5a62Iiw0NDM6IuWFremXtOaIv+engOWcuiIsNDQ0OiLlhavnmb7mlrnnvZHkuIroja/lupciLDQ0NToi5LyY6ZuG5ZOBIiw0NDY6IuS5sOWNluWunSIsNDQ3OiLkvJjkvJfnvZEiLDQ0ODoi54ix5bq35Zu95a6+5YGl5bq35ZWG5Z+OIiw0NDk6Iue7tOS5n+e6s+mFkuW6l+WumOe9kSIsNDUwOiJNJ0NBS0UiLDQ1MToi576O6Imy5ZWG5Z+OIiw0NTI6IuivuuW/g+ibi+ezleWumOe9kSIsNDUzOiLnroDljZXlrabkuaDnvZEiLDQ1NDoi57K+5Y2O5Zyo57q/Iiw0NTU6Iuahg+iKseWdniIsNDU2OiLpkrvnn7PlsI/puJ/lrpjnvZEiLDQ1Nzoi5bq3576O5YGl5bq35ZWG5Z+OIiw0NTg6IuS9kOWNoeS8iuWumOe9kSIsNDU5OiLmt5jkuabnvZEiLDQ2MDoi54ix5LmL6LC3Iiw0NjE6IumTgeWPi+aXheihjOe9kSIsNDYyOiLojobnlLDnvZEiLDQ2Mzoi5ZGz5aSa576O5a6Y572RIiw0NjQ6Iuael+a4hei9qeWumOe9kSIsNDY3OiLnvo7lm73otK3niannvZEiLDQ2ODoi5ZOB5bCa5rGHIiw0Njk6IuafkueJjOWumOaWueWVhuWfjiIsNDcwOiLmuLjlpJrlpJrlrqLmoIgiLDQ3MToiMTY4OOW5s+S7t+eyvumAiSIsNDcyOiLkvJjkuKrnvZEiLDQ3Mzoi5aSn5py0572RIiw0NzQ6IuiWh+ivuuWonOWumOe9kSIsNDc1OiLolJrok53lm77kuabnvZEiLDQ3Njoi5bGx6ISJ5oi35aSWIiw0Nzc6IuS9lemHkeaYjOWumOe9kSIsNDc4OiLkubDojLbnvZEiLDQ3OToi5LyYZee9kSIsNDgwOiI1MVlPVeaXhea4uOe9kSIsNDgxOiLljJflj5Hlm77kuabnvZEiLDQ4Mjoi5pm25ZOB572RIiw0ODM6IuWNjuS9l+iNr+aIvyIsNDg0OiLlqIHplIvllYbln44iLDQ4NToi6K+65LiA6Imv5ZOBIiw0ODY6IuWSjOiMtue9kSIsNDg3OiLlpKnml7bmsYflrpjnvZEiLDQ4ODoi6Laj572R5ZWG5Z+OIiw0ODk6IuicnOafmuaXheihjCIsNDkwOiLlpb3oja/luIjnvZHkuIroja/lupciLDQ5MToiSURY54ix5a6a5a6iIiw0OTI6IuS8mOmbhTEwMCIsNDkzOiJTJlPlpbPoo4UiLDQ5NDoi5YCp56Kn576O5Zu95a6Y572RIiw0OTU6IuWNjuWkj2XlvZMiLDQ5NjoiQnJvb2tzIEJyb3RoZXJzIiw0OTc6Iuasp+e+jua3mCIsNDk4OiLljbDpgJrlpKnkuIsiLDQ5OToi5ZOl5Lym5q+U5Lqa576O5Zu95a6Y572RIiw1MDA6IkJFU1TlhajnkIPotK0iLDUwMToiTmV3IEJhbGFuY2Xnvo7lm73lrpjnvZEiLDUwMjoi5LiH6ZuG5a6iIiw1MDM6IkJhbGx56Iux5Zu95a6Y572RIiw1MDQ6IuS4gOWXqOenn+i9piIsNTA1OiLlmInliKnmiJAiLDUwNjoi5aSa5bqG5bGL5Lit5paH5a6Y572RIiw1MDc6IkZvcmV2ZXIgMjEiLDUwODoi5pGp55m75aSn6YGTIiw1MDk6IuacqOm4n+efreennyIsNTEwOiLmnIDkvJrmuLgiLDUxMToi5Lit5Y6f5Zyw5LqnIiw1MTI6IkJvYmJpIEJyb3du576O5Zu95a6Y572RIiw1MTM6IlN1cGVyLWluIiw1MTQ6Iuaxiei0ree9kSIsNTE1OiJMZXZpc+W+t+WbveWumOe9kSIsNTE2OiLmlpDkuZBGSUxB5a6Y5pa55ZWG5Z+OIiw1MTc6IuWMoeWogeS4reWbveWumOaWueWVhuWfjiIsNTE4OiJOZXh0576O5Zu95a6Y572RIiw1MTk6ImlUcmlw54ix5Y675peF6KGM572RIiw1MjA6IuaLieaJi+e9kSIsNTIxOiLlha3kuLDllYbln44iLDUyMjoi5ZCM5LuB5aCC5aSp54S25reYIiw1MjM6IuaIkeiuouiKsSIsNTI0OiJGb29kaSIsNTI1OiLkuK3lm73mo67mnpfpo5/lk4HnvZEiLDUyNjoi6aaZ5riv5Y2T5oKm5YyW5aaG5ZOBIiw1Mjc6Iue7tOS7lui0rSIsNTI4OiLph5HmtbfpqazllYbln44iLDUyOToi5Lqu5YGl5aW96I2v5oi/Iiw1MzA6IuWUseWQp+ebtOaSremXtCIsNTMxOiJPYWtsZXnnvo7lm73lrpjnvZEiLDUzMjoi6YC46KGM572RIiw1MzM6IkNsYXJrc+e+juWbveWumOe9kSIsNTM0OiJTdGFyd29vZCBIb3RlbHMiLDUzNToiTWFycmlvdHTkuIfosarnvo7lm73lrpjnvZEiLDUzNjoiWWVzIFN0eWxlIiw1Mzc6IkV2aXN15Lit5paH5a6Y572RIiw1Mzg6IkxpZmUncyBFYXN5Iiw1Mzk6IuWuoOWuoOeGiuWumOaWueWVhuWfjiIsNTQwOiIwMDYx5r6z5rSy5Yi26YCgIiw1NDE6IktL6aaG5YWo55CD6LStIiw1NDI6IlN0eWxlIE8nQ2xvY2siLDU0Mzoi6YWN5aS45YWo55CD6LStIiw1NDQ6IkFpciBGcmFuY2UiLDU0NToiQWNjb3IgSG90ZWxz5Lit5paH5a6Y572RIiw1NDY6IlNwYWNlLk5LIiw1NDc6IuWXqOWOqOaIvyIsNTQ4OiJXIENvbmNlcHQiLDU0OToiR0FOVOiLseWbveWumOe9kSIsNTUwOiJDQVQgRm9vdHdlYXLoi7Hlm73lrpjnvZEiLDU1MToiU2F1Y29ueeiLseWbveWumOe9kSIsNTUyOiLpgKDkvZzlrrblsYUiLDU1Mzoi5bCP5aSp6bmF5a6Y5pa55ZWG5Z+OIiw1NTQ6IkNBTueci+WwmuWVhuWfjiIsNTU1OiLml7blsJrml6XorrAiLDU1NjoiR3Vlc3PmvrPlpKfliKnkuprlrpjnvZEiLDU1NzoiRXRpaGFkIEFpcndheXMiLDU1ODoiRklJTOWVhuWfjiIsNTU5OiLlhY3nqI7mmJPotK0iLDU2MDoi54m56LSt56S+Iiw1NjE6IldpZ2dsZeS4reaWh+WumOe9kSIsNTYyOiJNZWxpc3Nh6aaZ5riv5a6Y572RIiw1NjM6Iuenkeayg+aWr+WumOaWueWVhuWfjiIsNTY0OiJDYWx2aW4gS2xlaW4iLDU2NToiTUVNRUJPWOe+jue+jueusSIsNTY2OiJIaWx0b27nvo7lm73lrpjnvZEiLDU2NzoiUmV2b2x2ZSBDbG90aGluZyIsNTY4OiLotYTnlJ/loILnvo7lm73lrpjnvZEiLDU2OToi5aiH6Z+16K+X576O5Zu95a6Y572RIiw1NzA6IlN0YXJidWNrc+e+juWbveWumOe9kSIsNTcxOiJSYXktQmFu576O5Zu95a6Y572RIiw1NzI6IlB1bWHnvo7lm73lrpjnvZEiLDU3MzoiTmF1dGljYee+juWbveWumOe9kSIsNTc0OiJMYSBNZXLnvo7lm73lrpjnvZEiLDU3NToiS2lwbGluZ+e+juWbveWumOe9kSIsNTc2OiJKdXJsaXF1Zee+juWbveWumOe9kSIsNTc3OiJIdXNoIFB1cHBpZXMiLDU3ODoiT3JpZ2luc+e+juWbveWumOe9kSIsNTc5OiJGb2xsaSBGb2xsaWXnvo7lm73lrpjnvZEiLDU4MDoiTCdPY2NpdGFuZee+juWbveWumOe9kSIsNTgxOiLpuqbnlLAiLDU4Mjoi5oOg5pmu5a6Y5pa55ZWG5Z+OIiw1ODM6IuWbveWkp+WcsOS6pyIsNTg0OiLpppblrrbllYbln44iLDU4NToi6Z2S5bKbUeaIv+e9kSIsNTg2OiLlub/lt57lrrblrrbpobrmiL/kuqfnvZEiLDU4Nzoi5p2t5bee6LGq5LiW5Y2O6YKm5oi/5Lqn572RIiw1ODg6IkhlYWx0aFBvc3QiLDU4OToi5oi/5aSp5LiLIiw1OTA6IuaipuaDs+S5puWfjiIsNTkxOiLmtbfkvJjkuJbnuqrppoYiLDU5Mjoi5omr6LSn54m55Y2WIiw1OTM6IueDreaLjee9kSIsNTk0OiLomoLomoHnn63np58iLDU5NToi6ZO256Wo572RIiw1OTY6IueIseiZjuS/nSIsNTk3OiJJbmNha2XlrpjnvZEiLDU5ODoi6IGa5pif55u05pKtIiw1OTk6IuiJuue9kSIsNjAwOiLlurfovonml4XooYznvZEiLDYwMToi5a6J6YCC6LSt5rW35aSW5ZWG5Z+OIiw2MDI6Iumcuembs+eIuOeIuOa1t+a3mOW5s+WPsCIsNjAzOiLlsI/niZvlnKjnur8iLDYwNDoiQUhBVkEiLDYwNToiRmlmdGgiLDYwNjoiVGhlIFdhdGNoIEh1dCIsNjA3OiJCYWJ5SGF2ZW7kuK3mlofnvZEiLDYwODoi546r5Li9572RIiw2MDk6IkdldCBUaGUgTGFiZWwg5Lit5paH572RIiw2MTA6IuadvuWxi+eZvui0p+S4reaWh+e9kSIsNjExOiJUaW1iZXJsYW5kIiw2MTI6IlRvcG1hbiIsNjEzOiJIb21lQXdheSIsNjE0OiJCZWF1dHkgRXhwZXJ0Iiw2MTU6Iua1t+icnOS4pemAiSIsNjE2OiJNYW5raW5kIiw2MTc6IlRoZSBIdXQiLDYxODoiVG9wc2hvcCIsNjE5OiJNYW1hbGFkZW4iLDYyMDoiVHJhdmVsZXIgc3RvcmUiLDYyMToiVHJhdmVsem9vIiw2MjI6IlVNSSBDaGlsZHJlbidzIFNob2VzIiw2MjM6IuaWsOengOS4vee+juWbveWumOe9kSIsNjI0OiJGZXJyYXJpIFN0b3JlIiw2MjU6IldpbGxlciBUcmF2ZWwiLDYyNjoiVW5pbmVlZCIsNjI3OiJBY25lIFN0dWRpb3PkuK3mlofnvZEiLDYyODoiQWVyb3Bvc3RhbGUiLDYyOToiQWdvZGHkuK3mlofnq5kiLDYzMDoiQWxiYSBNb2RhIiw2MzE6IkFsbGJlYXV0eSIsNjMyOiJBbGxTYWludHMiLDYzMzoiQWxsc29sZSIsNjM0OiJVcmJhbiBPdXRmaXR0ZXJzIiw2MzU6IlZpdGFiaW90aWNzIiw2MzY6IkJlbGxlIE1haXNvbiIsNjM3OiLotJ3njrLlpoPnvo7lm73lrpjnvZEiLDYzODoiQkggQ29zbWV0aWNzIiw2Mzk6Iue+juiOseaWsOmdkuW5tCIsNjQwOiJWaXRhbWluIEJheSIsNjQxOiJXYWl0cm9zZSIsNjQyOiJXb2xmb3JkIiw2NDM6IkJvb2hvbyIsNjQ0OiJCb290cy5jb20iLDY0NToiQnJpdGlzaCBDb3JuZXIgU2hvcCIsNjQ2OiLlrpzkurrotLciLDY0Nzoi6JCk55+z5ZWG5Z+OIiw2NDg6IkNvZ2dsZXMuY29tIiw2NDk6IkNvcnNldCBEZWFsIiw2NTA6IkNPVFRPTiBPTiIsNjUxOiJDcm9jc+iLseWbveWumOe9kSIsNjUyOiJDUlVJU0UiLDY1MzoiRGVsbOe+juWbveWumOe9kSIsNjU0OiJEZXJtc3RvcmUiLDY1NToiRGlzbmV5IFN0b3JlIiw2NTY6IkRvcm90aHkgUGVya2lucyIsNjU3OiLnl5jnl5jlurflrpjmlrnllYbln44iLDY1ODoi5bqm5YGH5a6iIiw2NTk6IkR1bmUgTG9uZG9uIiw2NjA6IkVhc3RiYXkiLDY2MToiRWFzdCBEYW5l5Lit5paH572RIiw2NjI6IlphZnVsIiw2NjM6IlphdnZpIiw2NjQ6IkZlaW5rZWl0LmRlIiw2NjU6ImVpYm1hcmt0Iiw2NjY6IkJlbGx1bmHkuK3mlofnvZEiLDY2NzoiRW1pcmF0ZXPpmL/ogZTphYvoiKoiLDY2ODoiRWFzdGVybiBNb3VudGFpbiBTcG9ydHMiLDY2OToiRVRFUk5BIiw2NzA6IkV1cmFpbCIsNjcxOiJFeGFudGUgRGlldCIsNjcyOiJFeHBlZGlhIFVLIiw2NzM6IkZBTEtFIiw2NzQ6IkZhbW91cyBGb290d2VhciIsNjc1OiJCb25wb250Iiw2NzY6IkZvcmVvIiw2Nzc6Iue9keS/oSIsNjc4OiJGb3JldmVyIFVuaXF1ZSIsNjc5OiJGb3J6aWVyaSIsNjgwOiJGcmVlIENvdW50cnkiLDY4MToiQ0VSUlVUSSAxODgxIiw2ODI6IkZyZW5jaCBDb25uZWN0aW9uIiw2ODM6IkdpZnQgbGFuZCIsNjg0OiJDdWx0IEJlYXV0eSIsNjg1OiJGYW5jeSIsNjg2OiJLZW50JkN1cndlbiIsNjg3OiJHcm93IEdvcmdlb3Vz5Lit5paH572RIiw2ODg6IktvcmVhbk1hbGzkuK3mlofnq5kiLDY4OToiU1RZTEVCT1AuY29tIiw2OTA6IkhPVEVMIElORk8iLDY5MToiSG91c2Ugb2YgRnJhc2VyIiw2OTI6IuaDoOenn+i9piIsNjkzOiJWaXRhbWluIFBsYW5ldCIsNjk0OiJXb3cgTWFsbCIsNjk1OiJJV09PVCIsNjk2OiLorrLnqbbllYbln44iLDY5NzoiWUEtTUFOIiw2OTg6Iua1t+S/neS/nemZqSIsNjk5OiJKdWljeSBDb3V0dXJlIiw3MDA6IktlbmtvIiw3MDE6IlRoZSBqZXdlbCBodXQiLDcwMjoiS0lLT+e+juWbveWumOe9kSIsNzAzOiJMYW5jZXIgU2tpbmNhcmUiLDcwNDoiTEVHTyBzaG9wIiw3MDU6Ik1vc3MgQnJvcyIsNzA2OiJMb3JkICYgVGF5bG9yIiw3MDc6IlN0eWxlbmFuZGHkuK3mlofnvZEiLDcwODoi5Lq65Y2r5pm6572RIiw3MDk6IuaciemBk+e/u+ivkSIsNzEwOiJGaWx0aHkgRnJhZ3JhbmNlIiw3MTE6Ium6puefpee9kSIsNzEyOiJNYXRjaGVzRmFzaGlvbiIsNzEzOiLmnb7mnKzmuIUiLDcxNDoi56e75Yqo5ZWG6KGXIiw3MTU6Ik1pY3Jvc29mdCBTdG9yZSIsNzE2OiJNaW8gU2tpbmNhcmXkuK3mlofnq5kiLDcxNzoiTWlzcyBTZWxmcmlkZ2UiLDcxODoiTW91bnRhaW4gR2VhciIsNzE5OiIzNjDlpb3oja8iLDcyMDoiTXkgQmFnIiw3MjE6Ik15cHJvdGVpbiIsNzIyOiLnvo7pqpHmmJPotK3llYbln44iLDcyMzoiTXl2aXRhbWlucyIsNzI0OiJORVQtQS1QT1JURVLkuK3mlofnvZEiLDcyNToiTmV3IEJhbGFuY2Xoi7Hlm73lrpjnvZEiLDcyNjoi5Y+u5b2T5b+r6I2vIiw3Mjc6Ik5ldyBMb29rIiw3Mjg6IuS4reWNjuS8muiuoee9keagoSIsNzI5OiLlv4Xov4jlrpjnvZEiLDczMDoi6ICQ5YWL6aaZ5riv5a6Y572RIiw3MzE6IuiAkOWFi+W3tOilv+WumOe9kSIsNzMyOiLmmKDlrqLnm7Tmkq0iLDczMzoiTmV3IFlvcmsgJiBDb21wYW55Iiw3MzQ6Ik9hc2lz6Iux5Zu95a6Y572RIiw3MzU6Ik9yYml0eiIsNzM2OiJPcmNoaXJhIiw3Mzc6Ik9yaWdpbnPoi7Hlm73lrpjnvZEiLDczODoiUGV0U21hcnQiLDczOToi5ZCb6J6N6LS3Iiw3NDA6IuWTquaLjee9kSIsNzQxOiLmoLzlipvlrpjmlrnllYbln44iLDc0MjoiUHJvQmlrZUtpdCIsNzQzOiJRYXRhciBBaXJ3YXlz5Y2h5aGU5bCU6Iiq56m6Iiw3NDQ6IlJhZGxleeiLseWbveWumOe9kSIsNzQ1OiLlronogZTkv53pmakiLDc0NjoiUmFscGggTGF1cmVuIiw3NDc6IlJlYmVjY2EgTWlua29mZiIsNzQ4OiLkvJjnsbPnvZEiLDc0OToiMjFDYWtlIiw3NTA6IlJlbnRhbGNhciIsNzUxOiJEci4gUGllcnJlIFJpY2F1ZCIsNzUyOiJSb2NrcG9ydCIsNzUzOiJSdWVsYWxhIiw3NTQ6IjU25Lq65peF5ri4572RIiw3NTU6IlNha3MgRmlmdGggQXZlbnVlIE9GRiA1VEgiLDc1Njoi5a6J57qz5aGU5ouJIiw3NTc6IlNDMjQuY29tIiw3NTg6Iui9pumAn+mAkuenn+i9piIsNzU5OiJTSE9FUy5DT00iLDc2MDoiU3ByaW5nIiw3NjE6IlNpbXBseSBTdXBwbGVtZW50cyIsNzYyOiLlrpzlkozotK3niakiLDc2MzoiRmFyZmV0Y2jkuK3mlofnvZEiLDc2NDoiU3NlbnNlIiw3NjU6IlN0ZXZlIE1hZGRlbiIsNzY2OiJGcmVlIFBlb3BsZeS4reaWh+e9kSIsNzY3OiLpq5jmkJzmmJMiLDc2ODoiaU1vbW9rb+S4reaWh+e9kSIsNzY5OiLmt5josYYiLDc3MDoiTWljaGFlbCBLb3Jz5Lit5paH572RIiw3NzE6IuS4ieS9s+i0reeJqSIsNzcyOiLogZTph5HmiYAiLDc3Mzoi5a6F6LGG572RIiw3NzQ6Iue9keaYk+S6kSIsNzc1OiLlvrflm73oja/miL9hcG8uY29t5Lit5paH572RIiw3NzY6Iuivu+enkiIsNzc3OiLlpb3kuqvllYbln44iLDc3ODoi6KW/54uX5YWo55CD6LStIiw3Nzk6IueOqeWTque9kSIsNzgwOiLntKvpqazotKLooYwiLDc4MToi6YeR54yr6ZO254yrIiw3ODI6Iui3qOWig+e9kSIsNzgzOiJNaWxsZW5uaXVtJkNvcHRob3JuZSBIb3RlbHPkuK3mlofnvZEiLDc4NDoiUmVlYm9ueiIsNzg1OiLolofnvo7pk7oiLDc4Njoi5LqU5rSy5Lya5rW36LStIiw3ODc6IuaDoOWutuaciSIsNzg4OiJNZWxpIE1lbG/kuK3mlofnvZEiLDc4OToi5bCP6LSi6L+3Iiw3OTA6IkFzaGZvcmTkuK3mlofnvZEiLDc5MToi6Z+p5Zu9Q0pPTm1hcnTkuK3mlofnvZEiLDc5Mjoi55uK6ZKx572RIiw3OTM6IlRIRSBHUkFOROS4reaWh+WFjeeojuW6lyIsNzk0OiLmrKfov6rlip7lhawiLDc5NToi5aSp6Jm5572R5LiK5ZWG5Z+OIiw3OTY6IuS7peWyreWBpeW6t+WfjiIsNzk3OiLlrqLot6/ml4XooYwiLDEwMDE6IuS6mumprOmAiuesrOS4ieaWuSIsMTAwMzoi5Lqs5Lic5omL5py656uvIiwxMDE1OiLmmJPov4XljJfkuqwiLDEwMjU6IuiLj+WugeWMl+S6rCIsMTAzMToi5LiA5Y+35bqX5LiK5rW3IiwxMDMyOiLkuK3nsq7miJHkubDnvZHljY7kuJwiLDExMjQ6IuS4uuS4uue9keWMl+S6rCIsMTEyNjoi6aG65Liw5LiK5rW3IiwyMDAzOiLkuqzkuJzlvq7kv6Hnq68iLDIwMTU6IuaYk+i/heW5v+S4nCIsMjAyNToi6IuP5a6B5bm/5beeIiwyMDMxOiLkuIDlj7flupflub/kuJwiLDIwMzI6IuS4reeyruaIkeS5sOWNjuWNlyIsMjEyNjoi6aG65Liw5bm/5beeIiwzMDE1OiLmmJPov4XmuZbljJciLDMwMjU6IuiLj+WugeaIkOmDvSIsMzAzMToi5LiA5Y+35bqX5rmW5YyXIiw0MDMxOiLkuIDlj7flupflm5vlt50ifTt0LmV4cG9ydHMuZ2V0U2l0ZUlkPWZ1bmN0aW9uKHQpe3JldHVybiBvW3RdfSx0LmV4cG9ydHMuZ2V0U2l0ZU5hbWU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8KGU9b1t0XSksYVtlXX07dmFyIHI9ZnVuY3Rpb24odCxlKXt2YXIgaT1uKDQ4KSxhPS0xO2lmKChhPW9bdF0pJiZpW2FdKXt2YXIgcj1pW2FdKGRvY3VtZW50KTtyJiYoci53YWl0P3NldFRpbWVvdXQoZnVuY3Rpb24oKXtyPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGRvY3VtZW50Ll9saW5rcyksZShhLHIpfSw1NTAwKTplKGEscikpfX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlIGluIGkpaWYoZG9jdW1lbnQubG9jYXRpb24uaG9zdG5hbWUubWF0Y2goZSkpe3IoaVtlXSx0KTticmVha319fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt2YXIgbj17dGltZW91dDoxZTMsdGxlRWRpdDpmdW5jdGlvbih0KXtyZXR1cm4gdD10fHwiIix0PXQucmVwbGFjZSgiW+W5v+WRil0iLCIiKX0scHJpY2VGb3JtYXR0ZXI6ZnVuY3Rpb24odCxlLG4saSl7ZT1lfHwiLiIsbj1ufHwiLCIsdD0iIit0O3ZhciBvPXQucmVwbGFjZShuLCIiKS5yZXBsYWNlKGUsIi4iKTtpZihvPW8ubWF0Y2goL1swLTkuXSsvKSl0cnl7cmV0dXJuIHBhcnNlRmxvYXQobyl9Y2F0Y2goYSl7cmV0dXJuLTF9fSx0ZW1wbGF0ZTpmdW5jdGlvbih0LGUsaSxvKXtmb3IodmFyIGE9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh0KSxyPVtdLHM9MDtzPGEubGVuZ3RoOysrcyl0cnl7dmFyIGw9YVtzXS5xdWVyeVNlbGVjdG9yKGUpLmhyZWYsYz1hW3NdLnF1ZXJ5U2VsZWN0b3IoaSk7aWYoIWMpY29udGludWU7dmFyIHA9Yy50ZXh0Q29udGVudC50cmltKCk7aWYoIXApY29udGludWU7aWYobyl7dmFyIGQ9YVtzXS5xdWVyeVNlbGVjdG9yKG8pO2lmKCFkKWNvbnRpbnVlO3ZhciBoPWQudGV4dENvbnRlbnQudHJpbSgpfXIucHVzaCh7dXJsOmwscHJpY2U6bi5wcmljZUZvcm1hdHRlcihwKSx0bGU6aHx8IiIsY3JjMzI6IiJ9KX1jYXRjaCh1KXtjb250aW51ZX1yZXR1cm4gcn19O25bMV09ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLGk9dC5xdWVyeVNlbGVjdG9yQWxsKCIucy1yZXN1bHQtaXRlbSIpLG89MDtvPGkubGVuZ3RoOysrbyl0cnl7Zm9yKHZhciBhPWlbb10ucXVlcnlTZWxlY3RvcigiLnMtYWNjZXNzLWltYWdlIik7IWEucGFyZW50Tm9kZS5ocmVmJiZhLnBhcmVudE5vZGUhPXQuYm9keTspYT1hLnBhcmVudE5vZGU7aWYoYS5wYXJlbnROb2RlPT10LmJvZHkpY29udGludWU7dmFyIHI9YS5wYXJlbnROb2RlLmhyZWYscz1pW29dLnF1ZXJ5U2VsZWN0b3IoImRpdj4uYS1zcGFjaW5nLW1pbmk+LmEtc3BhY2luZy1ub25lPmE+c3Bhbi5hLWNvbG9yLXByaWNlIiksbD1pW29dLnF1ZXJ5U2VsZWN0b3IoImRpdj4uYS1zcGFjaW5nLW1pbmk+LmEtc3BhY2luZy1ub25lPmEucy1jb2xvci10d2lzdGVyLXRpdGxlLWxpbmsgaDIiKTtzfHwocz1pW29dLnF1ZXJ5U2VsZWN0b3IoInNwYW4uYS1jb2xvci1wcmljZSIpKSxsPW4udGxlRWRpdChsLnRleHRDb250ZW50KSxlLnB1c2goe3VybDpyLHByaWNlOm4ucHJpY2VGb3JtYXR0ZXIocy50ZXh0Q29udGVudCksdGxlOmwsY3JjMzI6IiJ9KX1jYXRjaChjKXtjb250aW51ZX1yZXR1cm4gZX0sblsyXT1mdW5jdGlvbih0KXt2YXIgZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIiNzZWFyY2hfbmF0dXJlX3JnIGxpIik7ZS5sZW5ndGh8fChlPXQucXVlcnlTZWxlY3RvckFsbCgiI2NvbnRlbnQgLnNob3BfYm94IikpLGUubGVuZ3RofHwoZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIi5zaG9wbGlzdD51bD5saSIpKTtmb3IodmFyIGk9W10sbz0wO288ZS5sZW5ndGg7KytvKXRyeXt2YXIgYT1lW29dLnF1ZXJ5U2VsZWN0b3IoImEucGljIikuaHJlZixyPWVbb10ucXVlcnlTZWxlY3RvcigiLnByaWNlPnNwYW4iKS50ZXh0Q29udGVudCxzPWVbb10ucXVlcnlTZWxlY3RvcigicC5uYW1lPmEiKS50ZXh0Q29udGVudDtpLnB1c2goe3VybDphLHByaWNlOm4ucHJpY2VGb3JtYXR0ZXIociksdGxlOnMsY3JjMzI6IiJ9KX1jYXRjaChsKXtjb250aW51ZX1yZXR1cm4gaX0sblszXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLm0tbGlzdCAuZ2wtd2FycD5saSIsIi5wLWltZz5hIiwiLnAtcHJpY2UgZW0raSIsIi5wLW5hbWU+YT5lbSIpfSxuWzZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuaXRlbS1ibG9jayIsImEuY3RyLXRyYWNrIiwiYS5wcmljZSIpfSxuWzddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIubWFpbiAucHJvbGlzdD5saSIsImEiLCJzcGFuLnByaWNlIil9LG5bMTBdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuaXRlbSIsImEudGhtYiIsIi5wcmM+c3Ryb25nIil9LG5bMTJdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjc2VhcmNoUmVzdWx0TGlzdERpdiBsaSIsIi5wcm9QaWM+YSIsIi5wcm9QcmljZSIpfSxuWzEzXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3Byb2R1Y3REaXZHcm91cD4ucHJ1d3JhcCIsImEiLCJzcGFuLnByaWNlIil9LG5bMTRdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucHJvZHVjdF9saXN0PmRsIiwiZHQ+YSIsImkucHJpY2UiKX0sblsxNl09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5zbUxpc3Q+dWw+bGkiLCIucHJvMTU1IGEiLCJzcGFuLm9mZiIpfSxuWzE3XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmNoYXBMaXN0IGRsIiwiYSIsInNwYW4+Zm9udCIpfSxuWzE4XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI2dvb2RzUGFuZWwgbGlbY2xhc3NdIiwiYSIsIi5jbGFzc2lmeV9wcmljZT5zcGFuIil9LG5bMTldPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjdmFuY2xwcm9kdWN0cz51bD5saSIsIi5waWMgYSIsIi5TcHJpY2UiKX0sblsyMV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5nbC1pdGVtIiwiLmdsLWltZz5hIiwiLm9rcHJpY2UiKX0sblsyMl09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wcm9fbGlzdCB1bCBsaSIsIi5wcm9faW1nPmEiLCIucHJvX3ByaWNlIil9LG5bMjRdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjbGlzdD51bD5saSIsIi5waWM+YSIsIi5yZWFsLXByaWNlPmVtIil9LG5bMjVdPWZ1bmN0aW9uKHQpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5fbGlua3M9bi50ZW1wbGF0ZSgiLnByb2R1Y3QtbGlzdCBsaSIsImEuc2VsbFBvaW50IiwiLnByaWNlLWJveCAuZGVmLXByaWNlIiwiLnRpdGxlLXNlbGxpbmctcG9pbnQiKX0sMmUzKSx7d2FpdDohMH19LG5bMjddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuc2hvd3MiLCJhIiwiLm5ldyIpfSxuWzI4XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3Byb2R1Y3QtYm94PmxpIiwiYS5pdGVtLWxpbmsiLCIucHJpY2UiKX0sblszMV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiNpdGVtU2VhcmNoTGlzdCAubW9kX3NlYXJjaF9wcm8iLCIucHJvSW1nIGEiLCIucHJvUHJpY2UgLm51bSIpOwp9LG5bMzNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucHJvcGljTGlzdCAucHJvZHVjdHMiLCIucGljPmEiLCIuZGlzUHJpY2UiKX0sblszNF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5jb250ZW50IHVsIGxpIiwiYSIsInN0cm9uZy5wcmljZSIpfSxuWzM1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLml0ZW0iLCIucGljPmEiLCJzcGFuLnNob3dwcmljZSIpfSxuWzM2XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI2pzLWdvb2RzLWxpc3Q+dWw+bGkiLCJhIiwic3Ryb25nLnJlZCIpfSxuWzM5XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3Byb2FjdGl2ZT5saSIsIi5wcm8taW1nIGEiLCIucHJpY2UgYi5mb250WUhlaSIpfSxuWzQwXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLkxfYm94bGlzdCIsImR0PmEiLCIuTF9ybWJfeHVqIil9LG5bNDFdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuc19wcm9fbGlzdCBsaSIsIi5waWM+YSIsIi5wcmljZSIpfSxuWzQyXT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5xdWVyeVNlbGVjdG9yQWxsKCIjbWFpbl90YWJsZT50Ym9keT50ci5pbWcsI21haW5fdGFibGU+dGJvZHk+dHIucHJpY2UiKSxpPVtdLG89MDtvPGUubGVuZ3RoO28rPTIpdHJ5e2Zvcih2YXIgYT1lW29dLnF1ZXJ5U2VsZWN0b3JBbGwoInRkIikscj1lW28rMV0ucXVlcnlTZWxlY3RvckFsbCgidGQiKSxzPTA7czxhLmxlbmd0aDsrK3Mpe3ZhciBsPWFbc10ucXVlcnlTZWxlY3RvcigiYSIpLmhyZWYsYz1yW3NdLnF1ZXJ5U2VsZWN0b3IoInNwYW4ucHJpY2UiKS50ZXh0Q29udGVudDtpLnB1c2goe3VybDpsLHByaWNlOm4ucHJpY2VGb3JtYXR0ZXIoYyksY3JjMzI6IiJ9KX19Y2F0Y2gocCl7Y29udGludWV9cmV0dXJuIGl9LG5bNDNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuY3BsaXN0PmRsIiwiZHQgYSIsIi5wcm8tcHJpY2U+c3Bhbj5zcGFuIil9LG5bNDVdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjZ2FsbGVyeV9zaG93PnVsPmxpIiwiLmFycml2YWxzLXBpYyBhIiwic3Bhbi5wcmljZSIpfSxuWzUxXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnJlc3VsdD51bD5saSIsImEucGljYSIsIi5wcmljZS1pbmZvIHN0cm9uZyIpfSxuWzUyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgidWwudExzdDIgbGkiLCJhLnRJbWciLCJzcGFuLnRQcmMiKX0sbls1NF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5nb29kc19saXN0IiwiLmltZz5hIiwnc3BhbltkYXRhdHlwZT0icHJpY2UiXScpfSxuWzU5XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmxpc3Rfcl9saXN0IiwiaDEgYSIsIi5mLVByaWNlOmxhc3QtY2hpbGQiKX0sbls2MF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5zZWFyY2hfcmVzdWx0IHRhYmxlIiwiLnJlc3VsdF9uYW1lIGEiLCIuYm9va19kaXMgYiIpfSxuWzYxXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmJvb2tDb250ZW50IiwiLnRpdGxlaW4iLCJzcGFuLnJlZDEyIil9LG5bNjJdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjbGlzdD5saSIsIi5pbWcgYSIsIi5wcmljZS1uIil9LG5bNjNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjSmxpc3Q+bGkiLCIudWlfcGltZz5hIiwiLnVpX3BwcmljZV9lPmVtIil9LG5bNjZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucC1saXN0SW5mbyIsIi5wLWxpc3RJbWdCaWcgYSIsIi5wLWxpc3RQcmljZSBzdHJvbmciKX0sbls3Ml09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5zbF9saXN0X3VsPmxpIiwiLmdvb2RzLXBpYz5hIiwiLnNsX3ByaWNlMT5zcGFuIil9LG5bNzNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuY2F0ZWdvcnlQcm9kdWN0SXRlbSIsIi5wcm9kdWN0LWltYWdlPmEiLCIuc3BlY2lhbC1wcmljZSAucHJpY2U+LnByaWNlIil9LG5bNzVdPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIi5zdGJsb2NrX2JvZHk+ZGw+ZGQiKSxpPVtdLG89MDtvPGUubGVuZ3RoOysrbyl0cnl7dmFyIGE9ZVtvXS5xdWVyeVNlbGVjdG9yKCJhIikuaHJlZixyPWVbb10ucXVlcnlTZWxlY3RvcigiLmNvYzJhNjdkIikuY2hpbGROb2Rlc1swXS50ZXh0Q29udGVudDtpLnB1c2goe3VybDphLHByaWNlOm4ucHJpY2VGb3JtYXR0ZXIociksY3JjMzI6IiJ9KX1jYXRjaChzKXtjb250aW51ZX1yZXR1cm4gaX0sbls4M109ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQucXVlcnlTZWxlY3RvckFsbCgiI0pfSXRlbUxpc3QgZGl2LnByb2R1Y3QiKSxpPVtdLG89MDtvPGUubGVuZ3RoOysrbyl0cnl7dmFyIGE9ZVtvXS5xdWVyeVNlbGVjdG9yKCJhLnByb2R1Y3RJbWciKS5ocmVmLHI9ZVtvXS5xdWVyeVNlbGVjdG9yKCIucHJvZHVjdFByaWNlIGVtIikudGV4dENvbnRlbnQscz1lW29dLnF1ZXJ5U2VsZWN0b3IoIi5wcm9kdWN0VGl0bGUgYSIpLnRleHRDb250ZW50LnRyaW0oKTtpLnB1c2goe3VybDphLHRsZTpzLHByaWNlOm4ucHJpY2VGb3JtYXR0ZXIociksY3JjMzI6IiJ9KX1jYXRjaChsKXtjb250aW51ZX1yZXR1cm4gaX0sbls4NF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5yZ19zbF9saXN0PnVsPmxpIiwiLmxpc3QxIiwiLmxpc3QzPnNwYW4iKX0sbls4NV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5nb29kc19vbmUiLCIuY29tX2xpbmsiLCIueGpfbGlzdF9wcm9fdGV4dDI+LnhqX2xpc3RfcHJvX3RleHQyIil9LG5bODZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucHJvZHVjdHNfd3JhcD51bD5saSIsIi5zX2xfcGljPmEiLCIuc2VhcmNoX2xpc3RfcHJpY2U+c3BhbiIpfSxuWzkzXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3Byb0xpc3Q+bGkiLCJhIiwiLnByaWNlX3NjPmVtPmkiKX0sbls5NF09ZnVuY3Rpb24odCl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9saW5rcz1uLnRlbXBsYXRlKCIjaXRlbVNlYXJjaExpc3Q+bGkiLCI6bm90KC5ub25lKSBhIiwiOm5vdCgubm9uZSkgLnByaWNlPnNwYW46Zmlyc3QtY2hpbGQiKX0sbi50aW1lb3V0KSx7d2FpdDohMH19LG5bOTddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucHJvLWNvbj5saSIsImEucHJvLWNoZWNrIiwiLnByby1ib3R4dCBzcGFuIil9LG5bOThdPWZ1bmN0aW9uKHQpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5fbGlua3M9bi50ZW1wbGF0ZSgiLmdvb2RzX2xpc3Q+bGkiLCJhIiwnc3BhbltkYXRhLXR5cGU9InByaWNlIl0nKX0sbi50aW1lb3V0KSx7d2FpdDohMH19LG5bOTldPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIi5zbmFja193cmFwPnVsPmxpIiksaT1bXSxvPTA7bzxlLmxlbmd0aDsrK28pdHJ5e3ZhciBhPWVbb10ucXVlcnlTZWxlY3RvcigiYSIpLmhyZWYscj1lW29dLnF1ZXJ5U2VsZWN0b3IoIi5wcmljZSIpLmNoaWxkTm9kZXNbMF0udGV4dENvbnRlbnQ7aS5wdXNoKHt1cmw6YSxwcmljZTpuLnByaWNlRm9ybWF0dGVyKHIpLGNyYzMyOiIifSl9Y2F0Y2gocyl7Y29udGludWV9cmV0dXJuIGl9LG5bMTAwXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLm1ic2hvcF9saXN0UGRDb24iLCJhIiwiLm1ic2hvcF9saXN0UGRUZXh0PmIiKX0sblsxMDFdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucGljbGlzdD5saSIsImEiLCIucHJpY2Ugc3Ryb25nIil9LG5bMTAyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmduX21fbGlzdF9hIiwiYSIsIi5nbl9tX2xpc3RfcHJpY2UgLmI+c3BhbiIpfSxuWzEwM109ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wcm9MaXN0U2VhcmNoPnVsPmxpIiwiYSIsIi5wcmljZSIpfSxuWzEwOF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5tYWluX3dyYXA+Lm1pbl9pbiIsIi5wcm9kdWN0SW1nLXdyYXAgYSIsIi5wcm9kdWN0UHJpY2U+ZW0+c3Ryb25nIil9LG5bMTA5XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnJlc3VsdF9saXN0X2NvbnRhaW5lcj51bD5saSIsIi50aHVtYl9waWN0dXJlIGEiLCIucHJpY2VfaT5lbSIpfSxuWzExMF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5ib29rcy1saXN0IiwiYSIsIi5sbD5iIil9LG5bMTE1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3JfbGlzdCAubGlib3giLCIuZ19zaW1nPmEiLCIuZ19tcHJpY2UgZm9udCIpfSxuWzEyMF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5Hb29kc1NlYXJjaFdyYXA+dGFibGU+dGJvZHk+dHI+dGQiLCIuZ29vZHBpYz5hIiwiLnByaWNlMSIpfSxuWzEyMl09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wcm9saXN0PmxpIiwiLnByb2JveD5hIiwiLmluZm8+YiIpfSxuWzEyM109ZnVuY3Rpb24odCl7Zm9yKHZhciBpPXQucXVlcnlTZWxlY3RvckFsbCgiI21haW5zcnAtaXRlbWxpc3QgZGl2Lml0ZW1zPi5pdGVtIiksbz1bXSxhPTA7YTxpLmxlbmd0aDsrK2EpdHJ5e3ZhciByPWlbYV0ucXVlcnlTZWxlY3RvcigiLnBpYy1ib3ggYS5waWMtbGluayIpLmdldEF0dHJpYnV0ZSgiZGF0YS1uaWQiKSxzPSJodHRwczovL2l0ZW0udGFvYmFvLmNvbS9pdGVtLmh0bT9pZD0iK3IsbD1pW2FdLnF1ZXJ5U2VsZWN0b3IoIi5jdHgtYm94IC5wcmljZSIpLnRleHRDb250ZW50LGM9aVthXS5xdWVyeVNlbGVjdG9yKCIuY3R4LWJveCAudGl0bGUgLkpfQ2xpY2tTdGF0IikudGV4dENvbnRlbnQudHJpbSgpLHA9ZShpW2FdKS5maW5kKCIuc2ltaWxhcnMgYVtocmVmXTpjb250YWlucyjlkIzmrL4pIikuYXR0cigiaHJlZiIpO3AmJihwPXAubWF0Y2goLyZ1bmlxcGlkPShbMC05LV0rKS8pWzFdKSxvLnB1c2goe25pZDpyLHVuaXFwaWQ6cHx8IiIsdXJsOnMsdGxlOmMscHJpY2U6bi5wcmljZUZvcm1hdHRlcihsKSxjcmMzMjoiIn0pfWNhdGNoKGQpe2NvbnRpbnVlfXJldHVybiBvfSxuWzEyNF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5saXN0X3BpYz4uaXRlbSIsIi5nb29kcy1waWMgYSIsIi5zYWxlLXByaWNlIil9LG5bMTI1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3NlYXJjaFBMaXN0PnVsPmxpIiwiLnBJbWcgYSIsIi5wcmljZSIpfSxuWzEyNl09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5saXN0LWFsbD5saSIsIi5waWMgYSIsIi5wcmljZSBzdHJvbmciKX0sblsxMjddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjQ29udGVudD5kbCIsIi5waWMgYSIsInAucHJpY2UiKX0sblsxMjhdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjbGlzdF9nb29kc2xpc3Q+bGkiLCIucHJvX2ltZz5hIiwiLnByb19wcmljZT5iIil9LG5bMTI5XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI0pfc2VhcmNoQ2F0TGlzdD4uZ29vZHMtbGlzdC1pdGVtIiwiLmdvb2RzLWltYWdlPmEiLCIucHJpY2UiKX0sblsxMzRdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucHJvLWxpc3Q+dWw+bGkiLCJhIiwiLnAtcHJpY2U+YiIpfSxuWzEzNV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiNwcm9kdWN0TGlzdD5saSIsIi5zZWFyY2hfcHJvX2ltZyIsIi5zZWFyY2hfcHJvX3ByaWNlIil9LG5bMTM4XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmdvb2RzX3RhYmxlX2xpc3Q+dWw+bGkiLCIuZ190X2xpc3RfbT5hIiwiLmdvb2RzX3RhYmxlX2xpc3QgLmZsIil9LG5bMTQwXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI2JmZF9zaG93X2Z1PmxpIiwiLmdvb2RzX2ltZyBhIiwiLnByaWNlX2RheSIpfSxuWzE0MV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5saXN0c2VhcmNoLW9uZSIsIi5saXN0c2VhcmNoLXp0aW1nIGEiLCIubGlzdHNlYXJjaC1wcmljZT5zcGFuIil9LG5bMTQyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnNob3BfbGlzdF9pdGVtPnVsPmxpIiwiLnBfaSBhIiwiLnBfbSIpfSxuWzE0Nl09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiNnYWxsZXJ5X3Nob3cgdWw+bGkiLCIuZ29vZHMtcGljIGEiLCJpbnMucHJpY2UiKX0sblsxNDddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuaW5mb1Nob3A+bGkiLCJkaXY+YSIsInNwYW4udHJhY2siKX0sblsxNTNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjc2VhcmNoX2dvb2RzX2xpc3Q+dWw+bGkiLCJkZDpub3QoW2NsYXNzXSk+YSIsImR0IC5zX3ByaWNlIil9LG5bMTU0XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3RpbGUgbGkiLCIuYm94Q29udD5hIiwiLnByaWNlIil9LG5bMTU1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2xpc3QtYm94PnVsPmxpIiwiYSIsIi5zdHJvbmctcHJpY2UiKX0sblsxNTZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuY29tbW9kaXR5LWxpc3Q+ZGwiLCJhIiwiLmRsX3ByaWNlPnNwYW4iKX0sblsxNTddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucHJvX2xpc3RfdWw+bGkiLCJhIiwiLnNhbGVQcmljZSIpfSxuWzE1OF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5pbl9tYXNhOm5vdChbaWRdKSB1bD5saSIsIi5pbl9tYXNhX3VwIGEiLCIuaW5fcHJpY2U+ZW0+c3BhbjpudGgtb2YtdHlwZSgyKSIpfSxuWzE2NF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi51bGxpc3Rjb250PmxpIiwiYSIsInN0cm9uZyIpfSxuWzE2N109ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQucXVlcnlTZWxlY3RvckFsbCgiLmdvb2RzLWxpc3Q+ZGl2IiksaT1bXSxvPTA7bzxlLmxlbmd0aDsrK28pdHJ5e3ZhciBhPWVbb10ucXVlcnlTZWxlY3RvcigiYSIpLmhyZWYscj1lW29dLnF1ZXJ5U2VsZWN0b3IoIi5wcmljZSIpLmNoaWxkTm9kZXNbMF0udGV4dENvbnRlbnQ7aS5wdXNoKHt1cmw6YSxwcmljZTpuLnByaWNlRm9ybWF0dGVyKHIpLGNyYzMyOiIifSl9Y2F0Y2gocyl7Y29udGludWV9cmV0dXJuIGl9LG5bMTY4XT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5xdWVyeVNlbGVjdG9yQWxsKCIucmVzdWx0X2xpc3Q+bGkiKSxpPVtdLG89MDtvPGUubGVuZ3RoOysrbyl0cnl7dmFyIGE9ZVtvXS5xdWVyeVNlbGVjdG9yKCIucHJvX2ltZyBhIikuZ2V0QXR0cmlidXRlKCJkYXRhLXVybCIpLHI9ZVtvXS5xdWVyeVNlbGVjdG9yKCIucHJvX3ByaWNlPnNwYW4ucmVkIikudGV4dENvbnRlbnQudHJpbSgpO2kucHVzaCh7dXJsOmEscHJpY2U6bi5wcmljZUZvcm1hdHRlcihyKSxjcmMzMjoiIn0pfWNhdGNoKHMpe2NvbnRpbnVlfX0sblsxNzRdPWZ1bmN0aW9uKHQpe3JldHVybiBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dC5fbGlua3M9bi50ZW1wbGF0ZSgiLnByb2R1Y3RfaXRlbSIsIi5wX2ltZyBhIiwiLnByaWNlPnN0cm9uZyIpfSxuLnRpbWVvdXQpLHt3YWl0OiEwfX0sblsxNzhdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuZi1saXN0IC5sZWZ0cGFydD51bD5saSIsImEiLCIucy1pbmZvPi5zLXVuaXQiKX0sblsxODBdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIudS1tLWdvb2RzPnVsPmxpIiwiLnAtaW1nLkpfcF9pbWcgYSIsIi5KX25vd19wcmljZSIpfSxuWzE4Ml09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi50ZWFfcHJvZHVjdHMgLnByb2R1Y3RzX2JveCIsIi5wcm9faW1nPnNwYW4+YSIsIi56cF9wcmljZT5zcGFuIil9LG5bMTg0XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmdvb2RzLWNvbnRhaW5lcj5kaXYuZ29vZC1pbmZvIiwnYVtocmVmKj0iaXRlbSJdJywiLnByaWNlPnNwYW46bGFzdC1jaGlsZCIpfSxuWzE4OF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5saXN0VGFibGU+bGkiLCJhIiwiLmdvb2RzLXByaWNlIil9LG5bMTk0XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI0pfZ29vZHNMaXN0PnVsPmxpIiwiYSIsIi5wLXByaWNlPnN0cm9uZz5pIil9LG5bMTk1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLkxjb24uY29udGVudD5kaXYuYmxvY2siLCJhIiwnc3BhbltpZF49InNhbGVfcHJpY2UiXScpfSxuWzE5Nl09ZnVuY3Rpb24odCl7cmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXt0Ll9saW5rcz1uLnRlbXBsYXRlKCIuZ29vZHNMaXN0QmxvY2s+dWw+bGkiLCIuaW1nPmEiLCIudWxlUHJpY2U+c3Ryb25nIil9LG4udGltZW91dCkse3dhaXQ6ITB9fSxuWzE5N109ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5pdGVtTGlzdD5kaXYucHJvZHVjdCIsImEiLCdlbVtuYW1lPSJwcmljZSJdJyl9LG5bMjAxXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmxpc3QtZ29vZHM6Zmlyc3QtY2hpbGQ+bGkiLCJhIiwiLkpTX2FzeW5jX3ByaWNlIil9LG5bMjEwXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI3VsX2NvbnRlbnQ+bGkiLCIubGlzdF9nb29kX2ltZz5hIiwiLmxpc3RfZ29vZF9wcmljZV9uZXciKX0sblsyMTNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuY2F0ZV9zZWFyY2hfY29udGVudCAuc2VsSXRlbSIsImEiLCIuaHByaWNlLnByaWNlIil9LG5bMjE3XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2R1Y3RfbGlzdD5saSIsImEiLCJkaXY+YiIpfSxuWzIxOF09ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQucXVlcnlTZWxlY3RvckFsbCgiI3R2X2xpc3Q+dWw+bGkiKSxpPVtdLG89MDtvPGUubGVuZ3RoOysrbyl0cnl7dmFyIGE9ZVtvXS5xdWVyeVNlbGVjdG9yKCJhIikuaHJlZi5yZXBsYWNlKCJnZXQiLCJnb29kc0RldGFpbEJ1eSIpLHI9ZVtvXS5xdWVyeVNlbGVjdG9yKCIucHJvZHVjdF9zaG93X3JpZ2h0X3ByaWNlIikudGV4dENvbnRlbnQ7aS5wdXNoKHt1cmw6YSxwcmljZTpuLnByaWNlRm9ybWF0dGVyKHIpLGNyYzMyOiIifSl9Y2F0Y2gocyl7Y29udGludWV9cmV0dXJuIGl9LG5bMjIwXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2R1Y3RQaWMiLCJhLnByb1BpYyIsIi5wcm9kdWN0UHJpY2UiKX0sblsyMjJdPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIi5nb29kc0l0ZW0+bGkiKSxpPVtdLG89MDtvPGUubGVuZ3RoOysrbyl0cnl7dmFyIGE9ZVtvXS5xdWVyeVNlbGVjdG9yKCJhIikuaHJlZixyPWVbb10ucXVlcnlTZWxlY3RvcigiLnByaWNlIikuY2hpbGROb2Rlc1swXS50ZXh0Q29udGVudDtpLnB1c2goe3VybDphLHByaWNlOm4ucHJpY2VGb3JtYXR0ZXIociksY3JjMzI6IiJ9KX1jYXRjaChzKXtjb250aW51ZX1yZXR1cm4gaX0sblsyMjNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjcmVzdWx0PmxpIiwiYSIsIi5jdXIiKX0sblsyMjRdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjcHJvZHVjdC1saXN0ID5saSIsImEucHJvZHVjdC1pbWciLCIucHJpY2UiKX0sblsyMjVdPWZ1bmN0aW9uKHQpe2lmKHQucXVlcnlTZWxlY3RvckFsbCgiLnNwZWNpYWwtdWwiKS5sZW5ndGgpcmV0dXJuIG4udGVtcGxhdGUoIi5zcGVjaWFsLXVsPmxpIiwiYSIsIi5zLXByb2R1Y3Qtc2FsZS1wcmljZSIpO2Zvcih2YXIgZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIi5wcm9kLWxpc3QucHJvZC1jb2xzMy1saXN0OmZpcnN0LWNoaWxkPmxpIiksaT1bXSxvPTA7bzxlLmxlbmd0aDsrK28pdHJ5e3ZhciBhPWVbb10ucXVlcnlTZWxlY3RvcigiYSIpLmhyZWYscj1lW29dLnF1ZXJ5U2VsZWN0b3IoIi5wcmljZSIpLmNoaWxkTm9kZXNbMF0udGV4dENvbnRlbnQ7aS5wdXNoKHt1cmw6YSxwcmljZTpuLnByaWNlRm9ybWF0dGVyKHIpLGNyYzMyOiIifSl9Y2F0Y2gocyl7Y29udGludWV9cmV0dXJuIGl9LG5bMjI2XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2xpc3QubGlzdGhvdmVyPmxpIiwiLmltZyBhIiwiLnByaWNlLnByaWNlMTYiKX0sblsyMjddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIucHJvZHVjdExpc3QtbGlzdC11bD5saSIsIi5wLWltZyBhIiwiLnByaWNlPnN0cm9uZyIpfSxuWzIyOF09blsxXSxuWzIyOV09blsxXSxuWzIzMl09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5nYWxsZXJ5LWdyaWQgdWw+bGkiLCJhIiwiLmdvb2RzLXByaWNlIGlucy5wcmljZSIpfSxuWzIzM109ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5ncmlkLWl0ZW0iLCIuZ3JpZC1pdGVtLWltYWdlIGEiLCIucHJpY2VzPi5sb2NhbCIpfSxuWzIzNF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5Qcm9kdWN0bGlzdD5saSIsIi5waWM+YSIsIi5wcmkiKX0sblsyMzVdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuc2VhcmNoX2Nob2xpc3Q+dWw+bGkiLCIudWNvbF9wX2ltZz5hIiwiLnVjb2xfcF93b2Qgc3BhbjpudGgtY2hpbGQoMSkiKX0sblsyMzZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjcHJvZHVjdC1saXN0PnVsPmxpIiwiYSIsIi5wcm9kdWN0X3AgLmNfcHVycGxlLCAucHJvZHVjdF9wIC5wcm9kdWN0X2FjdGl2ZSIpfSxuWzIzN109ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQucXVlcnlTZWxlY3RvckFsbCgiLnZpZXctSXRlbUxpc3RJdGVtIiksaT1bXSxvPTA7bzxlLmxlbmd0aDsrK28pdHJ5e3ZhciBhPWVbb10ucXVlcnlTZWxlY3RvcigiYSIpLmhyZWYscj1bZVtvXS5xdWVyeVNlbGVjdG9yKCIucHJpY2UtaW50IikudGV4dENvbnRlbnQudHJpbSgpLGVbb10ucXVlcnlTZWxlY3RvcigiLnByaWNlLWRlY2ltYWwiKS50ZXh0Q29udGVudC50cmltKCldLmpvaW4oIiIpO2kucHVzaCh7dXJsOmEscHJpY2U6bi5wcmljZUZvcm1hdHRlcihyKSxjcmMzMjoiIn0pfWNhdGNoKHMpe2NvbnRpbnVlfXJldHVybiBpfSxuWzIzOF09ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQucXVlcnlTZWxlY3RvckFsbCgiI3NlYXJjaFJlc3VsdHM+YSIpLGk9W10sbz0wO288ZS5sZW5ndGg7KytvKXRyeXt2YXIgYT1lW29dLmhyZWYscj1lW29dLnF1ZXJ5U2VsZWN0b3IoIi5wcmljZS02cG0iKS50ZXh0Q29udGVudC50cmltKCk7aS5wdXNoKHt1cmw6YSxwcmljZTpuLnByaWNlRm9ybWF0dGVyKHIpLGNyYzMyOiIifSl9Y2F0Y2gocyl7Y29udGludWV9cmV0dXJuIGl9LG5bMjQxXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2R1Y3QtbGlzdD51bD5saSIsImEucGhvdG8iLCIucmV0YWlsLXByaWNlIil9LG5bMjQ2XT1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10saT10LnF1ZXJ5U2VsZWN0b3JBbGwoIi5zLXJlc3VsdC1pdGVtIiksbz0wO288aS5sZW5ndGg7KytvKXRyeXtmb3IodmFyIGE9aVtvXS5xdWVyeVNlbGVjdG9yKCIucy1hY2Nlc3MtaW1hZ2UiKTshYS5wYXJlbnROb2RlLmhyZWYmJmEucGFyZW50Tm9kZSE9dC5ib2R5OylhPWEucGFyZW50Tm9kZTtpZihhLnBhcmVudE5vZGU9PXQuYm9keSljb250aW51ZTt2YXIgcj1hLnBhcmVudE5vZGUuaHJlZixzPWlbb10ucXVlcnlTZWxlY3RvcigiZGl2Pi5hLXNwYWNpbmctbWluaT4uYS1zcGFjaW5nLW5vbmU+YT5zcGFuIik7c3x8KHM9aVtvXS5xdWVyeVNlbGVjdG9yKCJzcGFuLmEtY29sb3ItcHJpY2UiKSksZS5wdXNoKHt1cmw6cixwcmljZTpuLnByaWNlRm9ybWF0dGVyKHMudGV4dENvbnRlbnQsIiwiLCIuIiwyNDYpLGNyYzMyOiIifSl9Y2F0Y2gobCl7Y29udGludWV9cmV0dXJuIGV9LG5bMjQ3XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmF1dG9tYXRpY1Njcm9sbFByb2R1Y3RzTGlzdD5kaXYiLCJhIiwiLnByb2R1Y3QtcHJpY2UiKX0sblsyNDhdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjZGl2U2VhcmNoUmVzdWx0cz5kaXY+ZGl2IiwiLnByb2R1Y3QtaW1hZ2U+YTpmaXJzdC1jaGlsZCIsIi5pdGVtX3ByaWNlIil9LG5bMjUyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnNlYXJjaF9sc3Q+dWw+bGkiLCIuTnByb19pbWc+YSIsIi5zaWdvcHJpY2UiKX0sblsyNTZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuY29udC1nZD5saSIsImEiLCIubmV3LXByaWNlPnNwYW46Zmlyc3QtY2hpbGQiKX0sblsyNjZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIjcmVzdWx0c0NvbCB1bC5zLXJlc3VsdC1saXN0PmxpIiwiYS5hLWxpbmstbm9ybWFsIiwiLmEtY29sb3ItcHJpY2UiKX0sblsyNjddPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuc2VhcmNobGlzdD51bD5saSIsImEiLCIubm93LXByaWNlIil9LG5bMjY4XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2R1Y3QtMS1saXN0PmxpIiwiYSIsInN0cm9uZyIpfSxuWzI2OV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiNjb250ZW50RGl2PmRpdi5saXN0cHJvZHVjdCIsImEiLCJzcGFuLnJlZCIpfSxuWzI3MF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi53aWRnZXQtYnJpY2staXRlbSIsIi5icmljay1waWMiLCIucHJpY2UiKX0sblsyNzFdPWZ1bmN0aW9uKHQpe3JldHVybiB0LnF1ZXJ5U2VsZWN0b3JBbGwoIi5wdl9zaG9wX2xpc3RfY29udGVudC5ub3JtYWxfbGlzdCIpLmxlbmd0aD9uLnRlbXBsYXRlKCIucHZfc2hvcF9saXN0X2NvbnRlbnQ+ZGl2Lml0ZW0xIiwiYSIsIi5wcmljZT5lbSIpOm4udGVtcGxhdGUoIi5pdGVtMSIsIi5pbWFnZSBhIiwiLnByaWNlPmVtIil9LG5bMjcyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI2dhbGxlcnlfc2hvdyB1bD5saSIsIi5nb29kcy1waWM+YSIsIi5wcmljZSIpfSxuWzI3M109ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5pdGVtU2VhcmNoUmVzdWx0LmJveC1pdGVtcy1yZXN1bHQ+dWw+bGkiLCIuaW1hZ2VzIGEiLCIucHJpY2U+c3Ryb25nIil9LG5bMjc0XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmdvb2RzLWxpc3RzPmRpdiIsImEuZ29vZHMtaW1nIiwiLnAtbm9ybWFsIil9LG5bMjc1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2R1Y3RzLWdyaWQ+bGkiLCJhLnByb2R1Y3QtaW1hZ2UiLCIucmVndWxhci1wcmljZSIpfSxuWzI3Nl09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiN0aWxlLWNvbnRhaW5lcj5kaXYiLCIuanMtcHJvZHVjdC10aXRsZSIsIi5wcmljZS1kaXNwbGF5Iil9LG5bMjc3XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2R1Y3RfbGlzdC5wcm9kdWN0X2xpc3RfdjI+dWw+bGkiLCIucGljIiwiLnByaWNlPnN0cm9uZyIpfSxuWzI3OV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiNyZXN1bHQ+dWwiLCJhLmltZ19maWd1cmUiLCIuYm91dGlxdWVfcHJpY2UiKX0sblsyODBdPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIiNwcm9OdW0+bGkiKSxpPVtdLG89MDtvPGUubGVuZ3RoOysrbyl0cnl7dmFyIGE9ZVtvXS5xdWVyeVNlbGVjdG9yKCdhW2hyZWZePSIvUHJvIl0nKS5ocmVmLHI9ZVtvXS5xdWVyeVNlbGVjdG9yKCIucHJvcHJpY2UiKTtyPXIuY2hpbGROb2Rlc1tyLmNoaWxkTm9kZXMubGVuZ3RoLTFdLnRleHRDb250ZW50LGkucHVzaCh7dXJsOmEscHJpY2U6bi5wcmljZUZvcm1hdHRlcihyKSxjcmMzMjoiIn0pfWNhdGNoKHMpe2NvbnRpbnVlfXJldHVybiBpfSxuWzI4MV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wcm9kdWN0X2xpc3Q+bGkiLCJhIiwnc3Ryb25nW2lkXj0icHJpY2VhdCJdJyl9LG5bMjg0XT1mdW5jdGlvbih0KXtyZXR1cm4gdC5xdWVyeVNlbGVjdG9yQWxsKCIucnNsdEFsbCIpLmxlbmd0aD9uLnRlbXBsYXRlKCIucnNsdEFsbD51bD5saSIsImEiLCIucmVkMiIpOnQucXVlcnlTZWxlY3RvckFsbCgiLnByb2R1Y2xiX2NwMSIpLmxlbmd0aD9uLnRlbXBsYXRlKCIucHJvZHVjbGJfY3A+LnByb2R1Y2xiX2NwMSIsImEiLCIuZm9udDE0X3JlZCIpOm4udGVtcGxhdGUoIi5wcnN0Z2RsaXN0PmxpIiwiYSIsIi5mMTgiKX0sblsyODZdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuai1pdGVtLWxpc3QtbGkiLCIuYS1waWMiLCIuaXRlbS1wcmljZSIpfSxuWzI4N109ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiNpdGVtTGlzdD5saSIsImEiLCIubW9kX3ByaWNlOmZpcnN0LWNoaWxkIil9LG5bMjg4XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI2dhbGxlcnlfc2hvdyB1bD5saSIsImEiLCIuZ29vZHMtcHJpY2UgaW5zIil9LG5bMjg5XT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5xdWVyeVNlbGVjdG9yKCJpZnJhbWUjbSIpLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQsaT1lLnF1ZXJ5U2VsZWN0b3JBbGwoIi5wcm9fbGlzdD5saSIpLG89W10sYT0wO2E8aS5sZW5ndGg7KythKXRyeXt2YXIgcj1pW2FdLnF1ZXJ5U2VsZWN0b3IoIi5wcm9faW1nIikuaHJlZixzPWlbYV0ucXVlcnlTZWxlY3RvcigiLnByb19wcmljZT5zcGFuPmIiKS50ZXh0Q29udGVudC50cmltKCk7by5wdXNoKHt1cmw6cixwcmljZTpuLnByaWNlRm9ybWF0dGVyKHMpLGNyYzMyOiIifSl9Y2F0Y2gobCl7Y29udGludWV9cmV0dXJuIG99LG5bMjkwXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmhwcm9kdWN0IiwiYSIsIi5wcmljZT5lbSIpfSxuWzI5MV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5jZ19tYWluQ29udGVudD5kaXYuY2dfcHJvIiwiYSIsIi5wcm9fcHJpY2U+c3Ryb25nIil9LG5bMjkyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnJlc3VsdD51bD5saSIsImEiLCIuaXRlbS1wcmljZSIpfSxuWzI5NF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wcm9saXN0aXRlbXMiLCIuYWQtaW1hZ2Utd3JhcHBlciBhIiwiYmlnLmppYWN1Iil9LG5bMjk1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmdyaWQtaXRlbSIsIi5pbWctYm94IGEiLCIucHJpY2UtbnVtIil9LG5bMjk5XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLkxpc3QgdHIiLCJhLkRpc3BsYXlOYW1lIiwiLnByaWNlPnN0cm9uZyIpfSxuWzMxM109ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wLWxpc3Q+bGkucC1pdGVtIiwiLnAtcGljIGEiLCIucC1wcmljZS1jdXJyZW50Iil9LG5bMzQ3XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByby1jbGFzcz5saSIsIi5wcm8taW1nPmEiLCIubW9uZXktZmwiKX0sblszNDhdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuaXRlbXMtZ2FsbGVyeSIsImEiLCIucHJpY2UxIil9LG5bMzQ5XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI2otc2VhcmNoTGlzdD5saSIsIi5oZD5hIiwiLnByaWNlPnNwYW4iKX0sblszNTFdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuZ21nIiwiYSIsIi5zaG9wX3ByaWNlcyIpfSxuWzM1Ml09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5nLWQtdWw+bGkiLCIucGljIiwnc3BhbltpZF49Ikpnb29kc1ByaWNlIl0nKX0sblsxODFdPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10LnF1ZXJ5U2VsZWN0b3JBbGwoIi5za3UtdWw+bGkiKSxpPVtdLG89MDtvPGUubGVuZ3RoOysrbyl0cnl7dmFyIGE9ZVtvXS5xdWVyeVNlbGVjdG9yKCJhIikuaHJlZixyPWVbb10ucXVlcnlTZWxlY3RvcigiLndzbC1wcmljZS5qLXdzbC1wcmljZSIpLmNoaWxkTm9kZXNbMF0udGV4dENvbnRlbnQ7aS5wdXNoKHt1cmw6YSxwcmljZTpuLnByaWNlRm9ybWF0dGVyKHIpLGNyYzMyOiIifSl9Y2F0Y2gocyl7Y29udGludWV9cmV0dXJuIGl9LG5bMzY0XT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5xdWVyeVNlbGVjdG9yQWxsKCIjcHJvZHVjdFJlc3VsdExpc3Q+bGkiKSxpPVtdLG89Imh0dHA6Ly93d3cucHVyY290dG9uLmNvbSIsYT0wO2E8ZS5sZW5ndGg7KythKXRyeXt2YXIgcj1lW2FdLnF1ZXJ5U2VsZWN0b3IoJ2Fbb25jbGlja149InRvRGV0YWlsIl0nKSxzPXIuZ2V0QXR0cmlidXRlKCJvbmNsaWNrIikubWF0Y2goL1tcZC1dKy8pWzBdLGw9cy5zdWJzdHIocy5sZW5ndGgtMyksYz1vKyIvZGV0YWlsLyIrbCsiLyIrcysiLmh0bWwiLHA9ZVthXS5xdWVyeVNlbGVjdG9yKCIuYXByaWNlIikudGV4dENvbnRlbnQ7aS5wdXNoKHt1cmw6YyxwcmljZTpuLnByaWNlRm9ybWF0dGVyKHApLGNyYzMyOiIifSl9Y2F0Y2goZCl7Y29udGludWV9cmV0dXJuIGl9LG5bMzY1XT1mdW5jdGlvbih0KXtmb3IodmFyIGU9dC5xdWVyeVNlbGVjdG9yQWxsKCIjcy1yZXN1bHRzLWxpc3QtYXRmPmxpIiksaT1bXSxvPTA7bzxlLmxlbmd0aDsrK28pdHJ5e3ZhciBhPWVbb10ucXVlcnlTZWxlY3RvcigiLmEtbGluay1ub3JtYWwiKS5ocmVmLHI9ZVtvXS5xdWVyeVNlbGVjdG9yKCIuYS1jb2xvci1wcmljZSIpLnRleHRDb250ZW50LnRyaW0oKTtpLnB1c2goe3VybDphLHByaWNlOm4ucHJpY2VGb3JtYXR0ZXIociwiLCIsIi4iKSxjcmMzMjoiIn0pfWNhdGNoKHMpe2NvbnRpbnVlfXJldHVybiBpfSxuWzM2Nl09blsxXSxuWzM2N109ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5nb29kcy1pdGVtIiwiLmZpZ3VyZS1pbWc+YSIsIi5wcmljZT5iIil9LG5bMzY4XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2R1Y3QtbGlzdD51bD5saSIsImEiLCIucHJpY2U+LnJlZCIpfSxuWzM2OV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5saXN0LWg+bGkiLCIucC1pbWc+YSIsIi5wLXByaWNlPnN0cm9uZyIpfSxuWzM3MF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wLWwtZ3JpZD51bD5saSIsImEiLCIucHJpY2UgLnJlZCIpfSxuWzM3MV09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIiNnb29kc0xpc3Q6Zmlyc3QtY2hpbGQ+bGkiLCJhIiwiLmN1cl9wcmljIC5wcmlfbXNnIC5mX2FyaWFsIil9LG5bMzcyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmdyaWQtc3BlY2lhbD4uYm94IiwiYSIsIi5ib3gtcHJpY2Ugc3Ryb25nIil9LG5bMzczXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI21haW5fbGlzdCA+IC5wcm9faXRlbSIsIi5wcm9faW5mb3JfaW1nIiwiLnByb19wcmljZSIpfSxuWzM3NF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5wcm9kdWN0LWxpc3Q+dWw+bGkiLCIuaXRlbXM+YTpudGgtY2hpbGQoMSkiLCIub3ByIil9LG5bMzc2XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgidWwjSm1vYmlsZUxpc3Q+bGkiLCJhLnVpX3BpbWciLCIudWlfcHByaWNlIil9LG5bMzc3XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiI2dhbGxlcnlfc2hvdyB1bD5saSIsIi5nb29kcy1waWM+YSIsImlucy5wcmljZSIpfSxuWzM3OF09ZnVuY3Rpb24odCl7cmV0dXJuIG4udGVtcGxhdGUoIi5nb29kcy1saXN0cz5kaXYiLCJhLmdvb2RzLWltZyIsIi5nb29kcy1wcmljZT4ucC1ub3JtYWwiKX0sblszNzldPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuZ2FsbGVyeS1ncmlkPnVsPmxpIiwiLmdvb2RzLXBpYz5hIiwiaW5zLnByaWNlIil9LG5bMzgwXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnByb2QtbGlzdD5saSIsImEiLCJwIil9LG5bMzgxXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLkdvb2RzTGlzdD5saSIsImEiLCIuZ29vZHNwcmljZT5zcGFuIil9LG5bMzgyXT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLmdvb2RzLXVsLWJveCBsaSIsImEiLCIucHJpY2UiKX0sblszODNdPWZ1bmN0aW9uKHQpe3JldHVybiBuLnRlbXBsYXRlKCIuZ29vZHNfbGlzdC5jbGVhcmZpeD5saSIsImEuZ2ltZyIsInAuZ3ByaWNlIil9LG5bMzg1XT1mdW5jdGlvbih0KXtyZXR1cm4gbi50ZW1wbGF0ZSgiLnBybz51bD5saSIsImRsPmRkOm50aC1jaGlsZCgxKT5hIiwiLnZhbGMtbj5zcGFuOm50aC1jaGlsZCgyKSIpfSx0LmV4cG9ydHM9bn0pLmNhbGwoZSxuKDQpKX0sZnVuY3Rpb24odCxlKXsidXNlIHN0cmljdCI7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlLG49MCxpPTA7aWYodD10LnRvU3RyaW5nKCksdC5sZW5ndGg+MTApcmV0dXJuIHQ7dmFyIG89dC5zbGljZSgwLDkpO289Ijk3OCIrbztmb3IodmFyIGE9MDthPG8ubGVuZ3RoO2ErKylhJTI9PT0wP24rPU51bWJlcihvW2FdKTppKz1OdW1iZXIob1thXSksZT0xMC0obiszKmkpJTEwO3JldHVybiBvKz1lLnRvU3RyaW5nKCl9fSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMjQpLGE9bigxMykscj1uKDQ0KSxzPW4oNTEpLGw9big1MiksYz1uKDU0KSxwPW4oMTIpLGQ9bigxMCksaD1uKDgzKSx1PXZvaWQgMCxtPXZvaWQgMCxmPXZvaWQgMCxnPWZ1bmN0aW9uKHQpe2lmKHUpcmV0dXJuIHZvaWQgdCh1KTtpZihmKXJldHVybiB2b2lkKG09dCk7Zj0hMDt2YXIgYT1lLnNlcnZlcisiL2Jyd2V4dC9wZXJtYW5lbnRfaWQ/dmVyc2lvbj0yJmRlZmF1bHRfc3R5bGU9IitlLmRlZmF1bHRfc3R5bGUrIiZyZWZlcnJlcj0iK2VuY29kZVVSSUNvbXBvbmVudChkb2N1bWVudC5yZWZlcnJlcik7by5nZXQoYSkuZG9uZShmdW5jdGlvbihvKXtvJiYodT1vLG8uZW1haWwuaW5kZXhPZigiJSIpPi0xJiYoby5lbWFpbD1kZWNvZGVVUklDb21wb25lbnQoby5lbWFpbCkpLGUuZW1haWw9by5lbWFpbCxlLnNob3dfYXBwPW8uc2hvd19hcHAsZS5mb3JjZT1vLmZvcmNlLGUuZW1haWwmJm4oODQpLnJlbmRlckFnYWluKCksaShkb2N1bWVudCkudHJpZ2dlcigiY2hlY2tmYXZvciIpLHQobyksbSYmbShvKSl9KX0sdz1mdW5jdGlvbih0LG4pe2lmKGUuYWxpU2l0ZSlyZXR1cm4gbjtpZihuLmIyYyYmMCE9PW4uYjJjLmxlbmd0aCl7aWYoInRvcCI9PT10KXtmb3IodmFyIGk9bi5iMmMuc3RvcmUubGVuZ3RoLG89aS0xO28+PTA7by0tKW4uYjJjLnN0b3JlW29dLmlzX3RoaXJkJiZuLmIyYy5zdG9yZVtvXS5zaG9wX25hbWUmJihuLmIyYy5zdG9yZVtvXS5zaXRlX25hbWUyPW4uYjJjLnN0b3JlW29dLnNpdGVfbmFtZSxuLmIyYy5zdG9yZVtvXS5zaXRlX25hbWU9bi5iMmMuc3RvcmVbb10uc2l0ZV9uYW1lLnJlcGxhY2UoIuesrOS4ieaWuSIsIiIpKyItIituLmIyYy5zdG9yZVtvXS5zaG9wX25hbWUpLG4uYjJjLnN0b3JlW29dLnByaWNlPShOdW1iZXIobi5iMmMuc3RvcmVbb10ucHJpY2UpLzEwMCkudG9GaXhlZCgyKSxuLmIyYy5zdG9yZVtvXS5wcmljZTI9bi5iMmMuc3RvcmVbb10ucHJpY2Usbi5iMmMuc3RvcmVbb10udGl0bGUmJm4uYjJjLnN0b3JlW29dLmltZ191cmx8fG4uYjJjLnN0b3JlLnNwbGljZShvLDEpO24uYjJjLnN0b3JlMj1uLmIyYy5zdG9yZS5zbGljZSgwLDYpO2Zvcih2YXIgYT1uLmIyYy5wcm9kdWN0Lmxlbmd0aCxvPWEtMTtvPj0wO28tLSl7bi5iMmMucHJvZHVjdFtvXS5pc190aGlyZCYmbi5iMmMucHJvZHVjdFtvXS5zaG9wX25hbWUmJihuLmIyYy5wcm9kdWN0W29dLnNpdGVfbmFtZTI9bi5iMmMucHJvZHVjdFtvXS5zaXRlX25hbWUsbi5iMmMucHJvZHVjdFtvXS5zaXRlX25hbWU9bi5iMmMucHJvZHVjdFtvXS5zaXRlX25hbWUucmVwbGFjZSgi56ys5LiJ5pa5IiwiIikrIi0iK24uYjJjLnByb2R1Y3Rbb10uc2hvcF9uYW1lKTt2YXIgcj1uLmIyYy5wcm9kdWN0W29dO2lmKHIucHJvbW90aW9ucyYmci5mZWUmJnIuZmVlLmluZGV4T2YoIue8uui0pyIpPT09LTEpe3IucHJvbW8yPVtdLHIuY291cG9uMj1bXSxyLnl1c2hvdTI9W107Zm9yKHZhciBzPTA7czxyLnByb21vdGlvbnMubGVuZ3RoO3MrKykicHJvbW8iPT09ci5wcm9tb3Rpb25zW3NdLnR5cGU/IumihOWUriI9PT1yLnByb21vdGlvbnNbc10udGFnP3IueXVzaG91Mi5wdXNoKHIucHJvbW90aW9uc1tzXS50ZXh0KTpyLnByb21vMi5wdXNoKHIucHJvbW90aW9uc1tzXS50ZXh0KTpyLmNvdXBvbjIucHVzaChyLnByb21vdGlvbnNbc10udGV4dCk7MD09PXIucHJvbW8yLmxlbmd0aCYmKHIucHJvbW8yPW51bGwpLDA9PT1yLmNvdXBvbjIubGVuZ3RoJiYoci5jb3Vwb24yPW51bGwpLDA9PT1yLnl1c2hvdTIubGVuZ3RoJiYoci55dXNob3UyPW51bGwpfW4uYjJjLnByb2R1Y3Rbb10ucHJpY2U9KE51bWJlcihuLmIyYy5wcm9kdWN0W29dLnByaWNlKS8xMDApLnRvRml4ZWQoMiksbi5iMmMucHJvZHVjdFtvXS50aXRsZSYmbi5iMmMucHJvZHVjdFtvXS5pbWdfdXJsfHxuLmIyYy5wcm9kdWN0LnNwbGljZShvLDEpfW4uYjJjLm1pbl9wcmljZT0oTnVtYmVyKG4uYjJjLm1pbl9wcmljZSkvMTAwKS50b0ZpeGVkKDIpfWVsc2UgZm9yKHZhciBpPW4uYjJjLnN0b3JlLmxlbmd0aCxvPWktMTtvPj0wO28tLSlpZihuLmIyYy5zdG9yZVtvXS5wcm9kdWN0KWZvcih2YXIgbD1uLmIyYy5zdG9yZVtvXS5wcm9kdWN0Lmxlbmd0aCxjPWwtMTtjPj0wO2MtLSl7bi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS5pc190aGlyZCYmbi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS5zaG9wX25hbWUmJihuLmIyYy5zdG9yZVtvXS5wcm9kdWN0W2NdLnNpdGVfbmFtZTI9bi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS5zaXRlX25hbWUsbi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS5zaXRlX25hbWU9bi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS5zaXRlX25hbWUucmVwbGFjZSgi56ys5LiJ5pa5IiwiIikrIi0iK24uYjJjLnN0b3JlW29dLnByb2R1Y3RbY10uc2hvcF9uYW1lKSxuLmIyYy5zdG9yZVtvXS5wcm9kdWN0W2NdLnByaWNlPShOdW1iZXIobi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS5wcmljZSkvMTAwKS50b0ZpeGVkKDIpLG4uYjJjLnN0b3JlW29dLnByb2R1Y3RbY10ubF9wcmljZT0oTnVtYmVyKG4uYjJjLnN0b3JlW29dLnByb2R1Y3RbY10ubF9wcmljZSkvMTAwKS50b0ZpeGVkKDIpO3ZhciByPW4uYjJjLnN0b3JlW29dLnByb2R1Y3RbY107aWYoci5wcm9tb3Rpb25zJiZyLmZlZSYmci5mZWUuaW5kZXhPZigi57y66LSnIik9PT0tMSl7ci5wcm9tbzI9W10sci5jb3Vwb24yPVtdLHIueXVzaG91Mj1bXTtmb3IodmFyIHM9MDtzPHIucHJvbW90aW9ucy5sZW5ndGg7cysrKSJwcm9tbyI9PT1yLnByb21vdGlvbnNbc10udHlwZT8i6aKE5ZSuIj09PXIucHJvbW90aW9uc1tzXS50YWc/ci55dXNob3UyLnB1c2goci5wcm9tb3Rpb25zW3NdLnRleHQpOnIucHJvbW8yLnB1c2goci5wcm9tb3Rpb25zW3NdLnRleHQpOnIuY291cG9uMi5wdXNoKHIucHJvbW90aW9uc1tzXS50ZXh0KTswPT09ci5wcm9tbzIubGVuZ3RoJiYoci5wcm9tbzI9bnVsbCksMD09PXIuY291cG9uMi5sZW5ndGgmJihyLmNvdXBvbjI9bnVsbCksMD09PXIueXVzaG91Mi5sZW5ndGgmJihyLnl1c2hvdTI9bnVsbCl9bi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS50aXRsZSYmbi5iMmMuc3RvcmVbb10ucHJvZHVjdFtjXS5pbWdfdXJsfHxuLmIyYy5zdG9yZVtvXS5wcm9kdWN0LnNwbGljZShjLDEpfX1lbHNlIGlmKG4uYjJjX2Z1enp5JiYwIT09bi5iMmNfZnV6enkubGVuZ3RoKXtmb3IodmFyIGE9bi5iMmNfZnV6enkucHJvZHVjdC5sZW5ndGgsbz1hLTE7bz49MDtvLS0pe24uYjJjX2Z1enp5LnByb2R1Y3Rbb10uaXNfdGhpcmQmJm4uYjJjX2Z1enp5LnByb2R1Y3Rbb10uc2hvcF9uYW1lJiYobi5iMmNfZnV6enkucHJvZHVjdFtvXS5zaXRlX25hbWUyPW4uYjJjX2Z1enp5LnByb2R1Y3Rbb10uc2l0ZV9uYW1lLG4uYjJjX2Z1enp5LnByb2R1Y3Rbb10uc2l0ZV9uYW1lPW4uYjJjX2Z1enp5LnByb2R1Y3Rbb10uc2l0ZV9uYW1lLnJlcGxhY2UoIuesrOS4ieaWuSIsIiIpKyItIituLmIyY19mdXp6eS5wcm9kdWN0W29dLnNob3BfbmFtZSk7dmFyIHI9bi5iMmNfZnV6enkucHJvZHVjdFtvXTtpZihyLnByb21vdGlvbnMmJnIuZmVlJiZyLmZlZS5pbmRleE9mKCLnvLrotKciKT09PS0xKXtyLnByb21vMj1bXSxyLmNvdXBvbjI9W10sci55dXNob3UyPVtdO2Zvcih2YXIgcz0wO3M8ci5wcm9tb3Rpb25zLmxlbmd0aDtzKyspInByb21vIj09PXIucHJvbW90aW9uc1tzXS50eXBlPyLpooTllK4iPT09ci5wcm9tb3Rpb25zW3NdLnRhZz9yLnl1c2hvdTIucHVzaChyLnByb21vdGlvbnNbc10udGV4dCk6ci5wcm9tbzIucHVzaChyLnByb21vdGlvbnNbc10udGV4dCk6ci5jb3Vwb24yLnB1c2goci5wcm9tb3Rpb25zW3NdLnRleHQpOzA9PT1yLnByb21vMi5sZW5ndGgmJihyLnByb21vMj1udWxsKSwwPT09ci5jb3Vwb24yLmxlbmd0aCYmKHIuY291cG9uMj1udWxsKSwwPT09ci55dXNob3UyLmxlbmd0aCYmKHIueXVzaG91Mj1udWxsKX1uLmIyY19mdXp6eS5wcm9kdWN0W29dLnByaWNlPShOdW1iZXIobi5iMmNfZnV6enkucHJvZHVjdFtvXS5wcmljZSkvMTAwKS50b0ZpeGVkKDIpLG4uYjJjX2Z1enp5LnByb2R1Y3Rbb10uaW1nX3VybDI9bi5iMmNfZnV6enkucHJvZHVjdFtvXS5pbWdfdXJsJiZuLmIyY19mdXp6eS5wcm9kdWN0W29dLmltZ191cmwucmVwbGFjZSgiczEwMHgxMDAiLCJzMTQweDE0MCIpLG4uYjJjX2Z1enp5LnByb2R1Y3Rbb10udGl0bGUmJm4uYjJjX2Z1enp5LnByb2R1Y3Rbb10uaW1nX3VybHx8bi5iMmNfZnV6enkucHJvZHVjdC5zcGxpY2UobywxKX1uLmIyY19mdXp6eS5taW5fcHJpY2U9KE51bWJlcihuLmIyY19mdXp6eS5taW5fcHJpY2UpLzEwMCkudG9GaXhlZCgyKX1yZXR1cm4gbn0seD0wLGI9ZnVuY3Rpb24oKXt4KysseD4xJiZnKGZ1bmN0aW9uKCl7big4NikuaW5pdCgpLG4oODgpLmluaXQoKX0pfSxfPWZ1bmN0aW9uKHQscyl7ZS5wcm92aW5jZV9pZD1yLmdldFN1YlN0YXRpb25JZChlLmRwLnNpdGUpO3ZhciBkPWUuZGVidWc/IiZkZWJ1Zz0xIjoiIjtlLm5vUmVhbFByaWNlJiYoZS5kcC5wcmljZT0wKSxlLmRwLmludmVudG9yeT1sLmluaXQoZS5zaXRlKTt2YXIgaD1lbmNvZGVVUklDb21wb25lbnQoZS5kcC51cmwpLHU9ZW5jb2RlVVJJQ29tcG9uZW50KGUuZHAubmFtZSksbT1lbmNvZGVVUklDb21wb25lbnQoZS5kcC5rZXl3b3JkKSxmPWVuY29kZVVSSUNvbXBvbmVudChlLmRwLnNrZXl3b3JkKSxnPSJ1bmRlZmluZWQiIT10eXBlb2YgZS5kcC5jYXRfaWQ/ZS5kcC5jYXRfaWQ6IiIseD0idW5kZWZpbmVkIiE9dHlwZW9mIGUuZHAucGljP2VuY29kZVVSSUNvbXBvbmVudChlLmRwLnBpYyk6IiIsXz1lbmNvZGVVUklDb21wb25lbnQoZS5kcC5jYXRfbmFtZSksdj1lbmNvZGVVUklDb21wb25lbnQoZS5kcC5icmFuZF9zdHJpbmcpLHk9ZS5zZXJ2ZXIrIi9icndleHQvZHBfcXVlcnlfbGF0ZXN0P3Blcm1hbmVudF9pZD0iK2UucF9pZCsiJnVuaW9uPSIrZS51bmlvbisiJnVybD0iK2grIiZzaXRlPSIrZS5kcC5zaXRlKyImaXNibj0iK2UuZHAuaXNibisiJm5hbWU9Iit1KyIma2V5d29yZD0iK20rIiZza2V5d29yZD0iK2YrIiZpZD0iK2UuZHAuaWQrIiZwcmljZT0iK2UuZHAucHJpY2UrIiZzdG9jaz0iK2UuZHAuaW52ZW50b3J5KyImcHJvdmluY2VfaWQ9IitlLnByb3ZpbmNlX2lkKyImc3Vic2l0ZV9pZD0iK2Uuc3Vic2l0ZV9pZCsiJmNhdF9pZD0iK2crIiZwaWM9Iit4KyImdXNlcmlkPSIrZS5kcC51c2VyaWQrIiZzaG9wX25hbWU9IitlLmRwLnNob3BfbmFtZSsiJnNob3BfYWRkcmVzPSIrZS5kcC5zaG9wX2FkZHJlcysiJmNhdF9uYW1lPSIrXysiJmJyYW5kX3N0cmluZz0iK3YrZCsiJnN0eWxlPSIrdCxrPWUuc2VydmVyKyIvYnJ3ZXh0L3ByZXBhcmU/cGVybWFuZW50X2lkPSIrZS5wX2lkKyImdW5pb249IitlLnVuaW9uKyImdXJsPSIraCsiJnNpdGU9IitlLmRwLnNpdGUrIiZpc2JuPSIrZS5kcC5pc2JuKyImbmFtZT0iK3UrIiZrZXl3b3JkPSIrbSsiJnNrZXl3b3JkPSIrZisiJmlkPSIrZS5kcC5pZCsiJnByaWNlPSIrZS5kcC5wcmljZSsiJnN0b2NrPSIrZS5kcC5pbnZlbnRvcnkrIiZwcm92aW5jZV9pZD0iK2UucHJvdmluY2VfaWQrIiZzdWJzaXRlX2lkPSIrZS5zdWJzaXRlX2lkKyImY2F0X2lkPSIrZysiJnBpYz0iK3grIiZ1c2VyaWQ9IitlLmRwLnVzZXJpZCsiJnNob3BfbmFtZT0iK2UuZHAuc2hvcF9uYW1lKyImc2hvcF9hZGRyZXM9IitlLmRwLnNob3BfYWRkcmVzKyImY2F0X25hbWU9IitfKyImYnJhbmRfc3RyaW5nPSIrditkO28uZ2V0KHkpLmRvbmUoZnVuY3Rpb24oZSl7ZT13KHQsZSksYS5zZXQoImRwX3F1ZXJ5IixlKSxiKCkscyhlKX0pLmZhaWwoZnVuY3Rpb24oKXtzKG51bGwpfSksby5nZXQoaykuZG9uZShmdW5jdGlvbihvKXthLnNldCgib3RoZXJfaW5mbyIsbyksYy5pbml0KCksbig5MSkuaW5pdChvKSxuKDk2KS5pbml0KG8pLG4oMTIxKS5pbml0KG8pLG4oMTI0KS5pbml0KCksbigxMjYpLmluaXQoKSxiKCksbigxMjgpLmluaXQoKSxuKDEzMCkuaW5pdCgpLG4oNjgpLmluaXQoby5ub3cuZHBfaWQpLG4oMTM0KS5zaG93KG8uZXhhY3RfYXJyLmlzYm4sdCksbigxNDApLmluaXQoby5ub3cuZHBfaWQpLGkoZG9jdW1lbnQpLnRyaWdnZXIoIm1pbmljb20iKSxwKCJjYXRlZ29yeToiK2UubG9nc2l0ZSsiOiIrby5ub3cuZHBfaWQrIi8iK29bImNvZGUtc2VydmVyIl0uY2xhc3NfaWQrIi8iKSxlLmRlYnVnJiZ3aW5kb3cuY29uc29sZSYmY29uc29sZS5sb2cobyl9KS5mYWlsKGZ1bmN0aW9uKCl7bigxMjgpLmluaXQoKSxuKDk2KS5pbml0KCl9KX0sdj1mdW5jdGlvbih0KXtpKCJodG1sIikuYWRkQ2xhc3MoImd3ZF8iK2Uuc2l0ZSksaSgiaHRtbCIpLmFkZENsYXNzKCJnd2RfIit0KSxpKCJodG1sIikuYWRkQ2xhc3MoIiIrZS5mcm9tX2RldmljZSksInRvcCI9PT10P2guaW5pdCgiZ3dkYW5nLW5vdGlmaWVyLW5ldzYuY3NzIik6ImJvdHRvbSI9PT10JiZoLmluaXQoImd3ZGFuZy1ub3RpZmllci1ib3R0b20tbmV3Ni5jc3MiKX0seT1mdW5jdGlvbih0KXsic3RlYW1wb3dlcmVkIiE9PWUuc2l0ZSYmKCJ0b3AiPT09dD9uKDE0MykuaW5pdCgpOiJib3R0b20iPT09dCYmbigxNDUpLmluaXQyKCkpfSxrPWZ1bmN0aW9uKHQpe3ZhciBuPXZvaWQgMDtkLm9uKGZ1bmN0aW9uKGkpeyJzdHJpbmciPT10eXBlb2YgaSYmKGk9SlNPTi5wYXJzZShpKSksImJyb3dzZXJfc2V0aW5mbyI9PT1pLnR5cGU/KGk9aS52YWx1ZSxpLnN0eWxlPWkuc2V0U3R5bGV8fCJ0b3AiLG58fGcoZnVuY3Rpb24oZSl7bnx8KGkudG9wX2ZvbGQ9aS50b3BfZm9sZHx8ZS5wX2ZvbGR8fCIwIixpLnNldFdpc2hsaXN0PWkuc2V0V2lzaGxpc3R8fGUuc2hvd193aXNobGlzdHx8IjAiLGkuc2V0U2hvd1Byb21vPWkuc2V0U2hvd1Byb21vfHxlLnNob3dfcHJvbW98fCIwIixpLmJvdHRvbV9mb2xkPWkuYm90dG9tX2ZvbGR8fGUucF9mb2xkfHwiMCIsYS5zZXQoInBlcm1hbmVudCIsaSksdChpKSxuPSEwKX0pKToidXNlcl9leHRlbnNpb25faWQiPT09aS50eXBlP2UudXNlcmlkPWkudmFsdWU6ImdldF9sb2NhbF9ob3N0Ij09PWkudHlwZT9lLmxvY2FsSG9zdD1pLnZhbHVlOiJnZXRfbG9jYWxfaW1nIj09PWkudHlwZSYmKGUubG9jYWxJbWc9aS52YWx1ZSwiZmlyZWZveCI9PT1lLmZyb21fZGV2aWNlJiYoZS5ub0ltZz1pLnZhbHVlKyJkZWZhdWx0X2xvYWRfaW1hZ2UucG5nIixlLmltZ0xvYWQ9aS52YWx1ZSsiMTIwLmdpZiIpKX0pLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtufHwhZnVuY3Rpb24oKXt2YXIgZT17c3R5bGU6InRvcCJ9O2coZnVuY3Rpb24oaSl7bnx8KGUudG9wX2ZvbGQ9ZS50b3BfZm9sZHx8aS5wX2ZvbGR8fCIwIixlLmJvdHRvbV9mb2xkPWUuYm90dG9tX2ZvbGR8fGkucF9mb2xkfHwiMCIsZS5zZXRXaXNobGlzdD1lLnNldFdpc2hsaXN0fHxpLnNob3dfd2lzaGxpc3R8fCIwIixlLnNldFNob3dQcm9tbz1lLnNldFNob3dQcm9tb3x8aS5zaG93X3Byb21vfHwiMCIsZS5zdHlsZT1pLnN0eWxlfHwidG9wIixhLnNldCgicGVybWFuZW50IixlKSx0KGUpLG49ITApfSl9KCl9LDE4MCksZC50cmlnZ2VyKHt0eXBlOiJ1c2VyX2V4dGVuc2lvbl9pZCJ9KSxkLnRyaWdnZXIoe3R5cGU6ImJyb3dzZXJfc2V0aW5mbyJ9KSxkLnRyaWdnZXIoe3R5cGU6ImdldF9sb2NhbF9ob3N0In0pLGQudHJpZ2dlcih7dHlwZToiZ2V0X2xvY2FsX2ltZyJ9KX0sej1mdW5jdGlvbih0KXtuKDE0OSkuaW5pdCgpLF8odCxmdW5jdGlvbihlKXtuKDU3KS5pbml0KHQsZSksbigxMDgpLmluaXQoImIyYyIsZSksbG9jYXRpb24uaG9zdC5pbmRleE9mKCIuamQuY29tIik+LTF8fGxvY2F0aW9uLmhvc3QuaW5kZXhPZigic3VuaW5nIik+LTE/bigxNzMpLmluaXQyKCk6KGxvY2F0aW9uLmhvc3QuaW5kZXhPZigidGFvYmFvIik+LTF8fGxvY2F0aW9uLmhvc3QuaW5kZXhPZigidG1hbGwiKT4tMSkmJm4oMTczKS5pbml0KCksc2V0VGltZW91dChmdW5jdGlvbigpe24oNTMpLmluaXQoKX0sMjUwMCkscy5pbml0KCl9KX0saj1mdW5jdGlvbigpeyJ0bWFsbCIhPT1lLnNpdGUmJiJ0YW9iYW8tOTUwOTUiIT09ZS5zaXRlJiYiYWktdGFvYmFvIiE9PWUuc2l0ZSYmInRhb2JhbyIhPT1lLnNpdGV8fChuKDMzKS5pbml0MigpLG4oODIpLmluaXQoKSksbG9jYXRpb24uaG9zdC5pbmRleE9mKCJhbWF6b24iKT4tMSYmInd3dy5hbWF6b24uY24iIT09bG9jYXRpb24uaG9zdCYmbigxNzYpLnJlYWR5KCksbig4MSkucmVhZHkoKSwiYWxpZXhwcmVzcyI9PT1lLnNpdGUmJm4oMTU4KS5pbml0KCl9LEM9MCxTPWZ1bmN0aW9uKCl7aWYoIShDPjk5OTk5KSl7QysrO3ZhciB0PWxvY2F0aW9uLmhyZWY7c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXt0IT09bG9jYXRpb24uaHJlZiYmbG9jYXRpb24ucmVsb2FkKCl9LDIwMCl9fTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpe3AoInBhZ2VfdmlldzoiK2UubG9nc2l0ZSksIjZwbSI9PT1lLnNpdGUmJlMoKSxrKGZ1bmN0aW9uKHQpe3YodC5zdHlsZSk7dmFyIGk9ZS5wYWdlSW5mbzsxPT09aS50eXBlPyhuKDE3NykuaW5pdCgpLG4oMTgwKS5pbml0KCksKGxvY2F0aW9uLmhvc3QuaW5kZXhPZigidGFvYmFvIik+LTF8fGxvY2F0aW9uLmhvc3QuaW5kZXhPZigidG1hbGwiKT4tMSkmJm4oMTg1KS5pbml0KCksbig0MSkuaW5pdCgpLG4oMTg2KSgpKToyPT09aS50eXBlJiYoeSh0LnN0eWxlKSx6KHQuc3R5bGUpLG4oMTExKS5pbml0KCksbig1NikubGlzdGVuQmFyKHQuc3R5bGUpLGooKSwid3d3LmFtYXpvbi5jb20iIT09bG9jYXRpb24uaG9zdCYmInd3dy5hbWF6b24uY28uanAiIT09bG9jYXRpb24uaG9zdCYmIjZwbSIhPT1lLnNpdGV8fG4oMTg3KS5pbml0KCkscCgicHJvZHVjdF9wYWdlX3Zpc2l0OiIrZS5sb2dzaXRlKSxuKDE0MSkuaW5pdCgpKSxuKDE4OSkuaW5pdChpLnR5cGUpfSl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyl7InVzZSBzdHJpY3QiO2k9ZnVuY3Rpb24oKXt2YXIgdD1uKDI0KSxlPW4oNDApLGk9big0NyksYT1uKDEzKSxyPW4oNDQpLHM9big1Mik7cmV0dXJue3RpbWVPdXQ6NSx0aW1lcjpudWxsLHNlbmRUaW1lcjpudWxsLGludmVudG9yeTpudWxsLHByaWNlOm51bGwsc3BlY2lhbFNlbmRGbGFnOiExLGhhc1J1bjohMSxpbml0OmZ1bmN0aW9uKCl7aWYoIXRoaXMuaGFzUnVuKXt0aGlzLmhhc1J1bj0hMDt2YXIgdD10aGlzLGU9MDt0LnRpbWVyPXNldEludGVydmFsKGZ1bmN0aW9uKCl7dC5fc2V0UHJpY2UoKSx0Ll9zZXRJbnZlbnRvcnkoKSwrK2UsKHQuc3BlY2lhbFNlbmRGbGFnfHxlPnQudGltZU91dHx8Ii0yIiE9dC5pbnZlbnRvcnkmJiIwIiE9dC5wcmljZSkmJih0Ll90cnlTZW5kTW9uaXRvckRhdGEoKSxjbGVhckludGVydmFsKHQudGltZXIpKX0sMWUzKX19LF90cnlTZW5kTW9uaXRvckRhdGE6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9MDt0LnNlbmRUaW1lcj1zZXRJbnRlcnZhbChmdW5jdGlvbigpe2lmKCsrZSxlPnQudGltZU91dHx8bnVsbCE9by5zYXZlX2RwX3F1ZXJ5KXt2YXIgbj1hLmdldCgib3RoZXJfaW5mbyIpLGk9biYmbi5ub3cmJm4ubm93LmRwX2lkO3QuX3NlbmRNb25pdG9yRGF0YShpKSxjbGVhckludGVydmFsKHQuc2VuZFRpbWVyKX19LDFlMyl9LF9zZW5kTW9uaXRvckRhdGE6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcyxhPW4oNTMpLnNwZWNpYWxGaWx0ZXIoKTthfHwobnVsbD09aS5pbnZlbnRvcnkmJihpLmludmVudG9yeT0iLTIiKSxudWxsPT1pLnByaWNlJiYoaS5wcmljZT0iMCIpLHQuZ2V0KG8uc2VydmVyKyIvYnJ3ZXh0L21vbml0b3I/c2l0ZT0iK28uc2l0ZSsiJnN1YnNpdGVfaWQ9IitvLnN1YnNpdGVfaWQrIiZkcF9pZD0iK2UrIiZwcm92aW5jZV9pZD0iK28ucHJvdmluY2VfaWQrIiZ1cmw9IitlbmNvZGVVUklDb21wb25lbnQoby5kcC51cmwpKyImcHJpY2U9IitpLnByaWNlKyImc3RvY2s9IitpLmludmVudG9yeSsiJnJhd3VybD0iK2VuY29kZVVSSUNvbXBvbmVudCh3aW5kb3cubG9jYXRpb24uaHJlZikpKX0sX3NldFByaWNlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxuPW8uc2l0ZSxhPWkuZ2V0U2l0ZUlkKG4pO2F8fChhPTk5OTkpLGUuaW5pdChhLGZ1bmN0aW9uKGUpe2UmJmU+MD8odC5wcmljZT1lLG8uZHAub2xkUHJpY2U9ZSk6dC5wcmljZT1vLmRwLnByaWNlLHQucHJpY2V8fCh0LnByaWNlPXIuZ2V0T25saW5lUHJpY2UobikpLCJ0YW9iYW8iPT1uJiYiMCIhPXQucHJpY2UmJih0LnNwZWNpYWxTZW5kRmxhZz0hMCl9KX0sX3NldEludmVudG9yeTpmdW5jdGlvbigpe3RoaXMuaW52ZW50b3J5PXMuaW5pdChvLnNpdGUpfX19LmNhbGwoZSxuLGUsdCksISh2b2lkIDAhPT1pJiYodC5leHBvcnRzPWkpKX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpOyhmdW5jdGlvbihvKXsidXNlIHN0cmljdCI7aT1mdW5jdGlvbigpe3ZhciB0PW4oNCk7cmV0dXJue2ludmVudG9yeVBhdHRlcm5zOnsiMzYwYnV5Ijp7IiNzdG9ja3RleHQgc3Ryb25nIjoi5peg6LSnIiwiI3N0b3JlLXByb21wdCBzdHJvbmciOiLml6DotKciLCIjc3RvcmUtcHJvbXB0Ijoi5peg6LSnIiwiI3N0b2NrLXN0YXRlIjoi5peg6LSnIiwiI3Byb2R1Y3QtaW50cm8gLml0ZW1vdmVyLXRpdGxlIGgzIHN0cm9uZyI6IuWVhuWTgeW3suS4i+afnCJ9LCI1MWJ1eSI6eyIjc2VhX2J1eV93cmFwIjoi5Yiw6LSn6YCa55+lIiwiI2J1eVF0eSAuZ29kZHNfaW5mb19kYXRhIHNwYW5bc3R5bGVdIjoi5peg6LSnIn0sYW1hem9uOnsiLmEtY29sb3ItcHJpY2UiOiLnvLrotKfnmbvorrAiLCIuZGRtLXNici1hdmFpbC10aXRsZSI6Iue8uui0p+eZu+iusCIsIiNkeW5hbWljRGVsaXZlcnlNZXNzYWdlLCNkZG1BdmFpbGFiaWxpdHlNZXNzYWdlIjoi55uu5YmN5peg6LSnIiwiI2R5bmFtaWNEZWxpdmVyeU1lc3NhZ2Ugc3BhbiI6Iue8uui0p+eZu+iusCJ9LHlpaGFvZGlhbjp7IiNhcnJpdmFsTm90aWNlIHNwYW4iOiLliLDotKfpgJrnn6UiLCIjbm90U2FsZUJ0biAuY2FydGJveCBhIHNwYW4iOiLlt7LllK7lrowiLCIjZGV0YWlsX2FkZFRvQ2FydCBzcGFuLnN0ZWFsX2J0biI6IuaKouWFieS6hiIsIi5idXlfYnRuMzp2aXNpYmxlIjoi5bey5ZSu5a6MIiwiI2RldGFpbFN0b2NrSW5mbyI6IuaXoOi0pyIsIiNhZGRDYXJ0Ijoi5bey5ZSu5a6MIn0sc3VuaW5nOnsiI2Nfa3VjdW4gc3BhbiI6IuaXoOi0pyIsIiNyZWNvbVRpdGxlIjoi5ZWG5ZOB5bey5LiL5p62IiwiI2Nfa3VjdW4iOiLml6DotKcifSxkYW5nZGFuZzp7IiNzdG9ja193cml0aW5nX3N0YXR1cyI6Iue8uui0pyIsIi5zaG93X2luZm9fcmlnaHQgc3Ryb25nLnFoIjoi5pqC5pe257y66LSnfOe9hCIsIiNnZW8taW5mbyI6IuaXoOi0pyJ9LGdvbWU6eyIjc3RvY2tUeHQiOiLml6DotKd85LiL5p62fOaXoOi0p3zmmoLkuI3lj6/pgIEifSx5b3Vnb3U6eyIuYnV5Ijoi5bey5ZSu572EIiwiLnNvbGRvdXRzdHkgLmZiIjoi5q2k6aKc6Imy5ZWG5ZOB5bey5ZSu572EIn0sdm1hbGw6eyIuYnV0dG9uLW5vdGljZS1hcnJpdmFsIHNwYW4iOiLliLDotKfpgJrnn6UifSx2YW5jbDp7Ii5kYW5waW5fU291cWluZ1RpdGxlIGgzIjoi6K+l5ZWG5ZOB5pqC5LiN6IO96LSt5LmwIiwiLk5vd0hhc0dvb2RzIjoi5peg6LSnIn0sanVtZWk6eyIuc29sZG91dF90ZXh0Ijoi5bey5oqi5YWJIiwiLmFkZF9jYXJ0IGEuc3Vic2NyaWJlIjoi6K6i6ZiF5Yiw6LSn6YCa55+lIn0sbmV3ZWdnOnsiI2ludmVudG9yeSAuaW52ZW50b3J5VGV4dCI6IuaaguaXoHzmjqXlj5fpooTlrpoiLCIjZ2V0UXVldWVOdW1iZXIiOiLnq4vljbPpooTorqIiLCcuZ29kZHNfaW5mb19kYXRhIHNwYW46Y29udGFpbnMoIuW6k+WtmCIpJzoi5o6l5Y+X6aKE5a6aIn0sbW9vbmJhc2E6eyIjc3BhbkNvdW50ayI6IuaXoOi0pyJ9LHdpbnh1YW46eyIuc3RhdHVzIjoi5peg6LSnIn0saGFwcGlnbzp7IiNnb29kc2t1Y3VuIC5mX3JlZCI6IuaXoOi0pyJ9LHhpamllOnsiLmRldGFpbF9wcm9fY19jb24iOiLlvojmirHmrYnvvIzor6XllYblk4Hlt7LllK7nqboifSxsaW5nc2hpOnsiI2N1cnJlbnRMb2NhdGlvbiI6IuaXoOi0pyJ9LHllc215d2luZTp7IiNkZWxpdmVyeS10aXAiOiLml6DotKcifSxib29rdXU6eyIuc3RvY2sgc3BhbiI6IuaXoOi0pyJ9LGhvbWV2djp7IiNzdG9jaysuaG9tIjoi57y66LSnIn0sbGVub3ZvOnsiI2lkc3RvY2tzdGF0dXMiOiLmmoLml6DlupPlrZgifSxzZWNvbzp7IiNsb2NhdGlvbi10K2kiOiLml6DotKcifSx5dW1teTc3OnsiI3N0b2NrZGVzYyI6IuaXoOi0pyJ9LGZydWl0ZGF5OnsiLmhhdmUiOiLml6DotKcifSxrYW9sYTp7IiNqc19kb21ldHh0Ijoi5peg6LSnIn0sa2p0OnsiLmJsYWNrIjoi5peg6LSnIn0saml1bWVpOnsiI2t1Y3VuaW5mbyAuZm9udDE0Ijoi5peg6LSnIn0sd29tYWk6eyIubm9idXlfdG9wX3RpdCI6IuWVhuWTgeW3suWUruWujO+8jOaaguaXtuaXoOi0pyIsIi51bnNlbGxhYmxlX3JlY29tbWVuZF9kZXNjcmlwdGlvbiI6IuWVhuWTgeW3suWUruWujCJ9LHNmYmVzdDp7IiNhcnJpdmFsX25vdGljZSI6IuWIsOi0p+mAmuefpSIsIiNzdG9jayBmb250Ijoi57y66LSnIiwiI2NhcnQtYWRkLWJ0bi1zZiI6IuWIsOi0p3znvLrotKcifSxsZWZlbmc6eyIuZGlzZXhwIHNwYW4uc3RpbWUiOiLml6DotKcifSxsZXlvdTp7IiNzdG9ja1N0YXR1cyI6IuaXoOi0pyJ9LGppdXhpYW46eyIjcmVzcE51YnMiOiLml6DotKcifX0saW5pdDpmdW5jdGlvbih0KXtyZXR1cm4gdD10fHxvLnBhZ2VJbmZvLnNpdGVOYW1lLHRoaXMuZ2V0Q2hlY2tJbnZlbnRvcnkodCl9LGdldE9ubGluZUludmVudG9yeTpmdW5jdGlvbihlKXt2YXIgbj17b25saW5lOm51bGwscGF0dGVybjpudWxsfSxpPWZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL1teXHUwMDAwLVx1MDBGRl0vZyxmdW5jdGlvbih0KXtyZXR1cm4gZXNjYXBlKHQpLnJlcGxhY2UoLygldSkoXHd7NH0pL2dpLCJcXHUkMiIpfSl9O3RyeXtpZigidW5kZWZpbmVkIiE9dHlwZW9mIHRoaXMuaW52ZW50b3J5UGF0dGVybnNbZV0pe3ZhciBhPXRoaXMuaW52ZW50b3J5UGF0dGVybnNbZV07Zm9yKHZhciByIGluIGEpdHJ5e2lmKHQocikuaXMoIjp2aXNpYmxlIikmJihuLm9ubGluZT10KHIpLmh0bWwoKSxudWxsIT09bi5vbmxpbmUpKXJldHVybiBuLm9ubGluZT1pKG4ub25saW5lKSxuLnBhdHRlcm49aShhW3JdKSxufWNhdGNoKHMpe28uZGVidWcmJmNvbnNvbGUubG9nKHMpfX19Y2F0Y2gocyl7by5kZWJ1ZyYmY29uc29sZS5sb2cocyl9cmV0dXJuIG59LGdldENoZWNrSW52ZW50b3J5OmZ1bmN0aW9uKHQpe3ZhciBlPTEsbj10aGlzLmdldE9ubGluZUludmVudG9yeSh0KSxpPW4ub25saW5lLGE9bi5wYXR0ZXJuO3RyeXtpZihudWxsIT09aSYmIiIhPWkmJm51bGwhPT1hKWlmKGEuaW5kZXhPZigifCIpPj0wKXt2YXIgcj1hLnNwbGl0KCJ8Iik7Zm9yKHZhciBzIGluIHIpaS5pbmRleE9mKHJbc10pPj0wJiYoZT0wKX1lbHNlIGkuaW5kZXhPZihhKT49MCYmKGU9MCk7ZWxzZSBlPS0yfWNhdGNoKGwpe28uZGVidWcmJmNvbnNvbGUubG9nKGwpfXJldHVybiBlfX19LmNhbGwoZSxuLGUsdCksISh2b2lkIDAhPT1pJiYodC5leHBvcnRzPWkpKX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1bIjM2MGJ1eSIsInN1bmluZyIsImdvbWUiLCJ5aWhhb2RpYW4iLCJkYW5nZGFuZyIsImthb2xhIl0sYT1uKDUyKSxyPW4oMTIpLHM9bigxMyksbD17IjM2MGJ1eSI6ZnVuY3Rpb24oKXt2YXIgdD1lKCIuSi1tb3JlLXByb20taW5zIikudGV4dCgpLG49ZSgiLkotcHJvbSBlbS5obF9yZWRfYmciKS50ZXh0KCksaT1lKCIuSi1zdW1tYXJ5LXByaWNlIC5wLXByaWNlIikudGV4dCgpLnJlcGxhY2UoL1vvv6XCpVxzXSsvZywiIiksbz1bXTtyZXR1cm4odC5pbmRleE9mKCLmu6Hlh48iKT4tMXx8bi5pbmRleE9mKCLmu6Hlh48iKT4tMSkmJm8ucHVzaCgi5ruh5YePOiIrZSgnLkotcHJvbSBlbS5obF9yZWRfYmc6Y29udGFpbnMoIua7oeWHjyIpICsgZW0uaGxfcmVkJykudGV4dCgpKSwodC5pbmRleE9mKCLlpJrkubDkvJjmg6AiKT4tMXx8bi5pbmRleE9mKCLlpJrkubDkvJjmg6AiKT4tMSkmJm8ucHVzaCgi5aSa5Lmw5LyY5oOgOiIrZSgnLkotcHJvbSBlbS5obF9yZWRfYmc6Y29udGFpbnMoIuWkmuS5sOS8mOaDoCIpICsgZW0uaGxfcmVkJykudGV4dCgpKSwodC5pbmRleE9mKCLmu6HmipgiKT4tMXx8bi5pbmRleE9mKCLmipgiKT4tMSkmJm8ucHVzaCgi5ruh5oqYOiIrZSgnLkotcHJvbSBlbS5obF9yZWRfYmc6Y29udGFpbnMoIua7oeaKmCIpICsgZW0uaGxfcmVkJykudGV4dCgpKSwKe3ByaWNlOmkscHJvbW86by5qb2luKCI7Iil9fSxzdW5pbmc6ZnVuY3Rpb24oKXt2YXIgdD1lKCIjdm91Y2hlclRpdGxlIiksbj10LmZpbmQoImxhYmVsIikudGV4dCgpLnJlcGxhY2UoL1xzL2csIiIpLGk9IiIsbz1bXTtpZihuLmluZGV4T2YoIua7oeWHjyIpPi0xJiZ0LmlzKCI6dmlzaWJsZSIpKXtpPWUoIiN2b3VjaGVyQm94IikudGV4dCgpO3ZhciBhPWUoIiN2b3VjaGVyQm94IGEiKS50ZXh0KCk7aT0i5ruh5YePOiIraS5yZXBsYWNlKGEsIiIpLG8ucHVzaChpKX1pZihlKCIjZ2V0Q291cG9uIikubGVuZ3RoPjAmJmUoIiNnZXRDb3Vwb24iKS5pcygiOnZpc2libGUiKSl7dmFyIHI9QXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIiNmcmVlQ291cG9uQm94IC5wLXF1YW4yIC5wLXF1YW4td2hpdGUiKSxmdW5jdGlvbih0KXtyZXR1cm4gZSh0KS50ZXh0KCl9KS5qb2luKCIsIik7ciYmKHI9IumihuWIuDoiK3Isby5wdXNoKHIpKX1yZXR1cm57cHJvbW86by5qb2luKCI7Iil9fSxnb21lOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiLnByZC1wcm9tb3Rpb25zLXJlZCIpLG49dC5maW5kKCJsYWJlbCIpLnRleHQoKSxpPVtdO2lmKHQuaXMoIjp2aXNpYmxlIikmJm4uaW5kZXhPZigi5ruh5YePIik+LTEmJmkucHVzaCgi5ruh5YePOiIrZSgnLnByZC1wcm9tb3Rpb25zLXJlZCBsYWJlbDpjb250YWlucygi5ruh5YePIikrc3BhbicpLnRleHQoKS5yZXBsYWNlKC9ccy9nLCIiKSksdC5pcygiOnZpc2libGUiKSYmbi5pbmRleE9mKCLpooblirUiKT4tMSYmaS5wdXNoKCLpoobliLg6IitlKCcucHJkLXByb21vdGlvbnMtcmVkIGxhYmVsOmNvbnRhaW5zKCLpooblirUiKStiJykudGV4dCgpLnJlcGxhY2UoLyg/OuW3pui+uXzlj7PovrkpL2csIiIpLnJlcGxhY2UoL+WKtS9nLCLliLgiKSksZSgiLnByZC1wcmljZS1sZWZ0IikuaXMoIjp2aXNpYmxlIikmJmUoIi5wcmQtcHJpY2UtbGVmdCIpLnRleHQoKS5pbmRleE9mKCLlirUiKT4tMSl7dmFyIG89ZSgiI2xhbmp1YW4gYiIpLnRleHQoKS5tYXRjaCgv5ruhXGQr5YePXGQrL2cpO28ubGVuZ3RoPjAmJmkucHVzaCgi6aKG5Yi477yaIitvLmpvaW4oIiwiKSl9cmV0dXJue3Byb21vOmkuam9pbigiOyIpfX0seWloYW9kaWFuOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgiI3Byb21vdGlvbl90aXRsZSIpLG49W10saT10LmZpbmQoIi5saXN0IC5mbCBzcGFuLnN1YiIpLnRleHQoKTtpZihpLmluZGV4T2YoIua7oeWHjyIpPi0xJiZ0LmZpbmQoIi5saXN0IC5mbCBzcGFuLnN1YiIpLmlzKCI6dmlzaWJsZSIpKXt2YXIgbz0i5ruh5YePIitlKCcjcHJvbW90aW9uX3RpdGxlIC5saXN0IC5mbCBzcGFuLnN1Yjpjb250YWlucygi5ruh5YePIikrIHNwYW4udGl0JykudGV4dCgpO24ucHVzaChvKX1pZihpLmluZGV4T2YoIuaKmOaJoyIpPi0xJiZ0LmZpbmQoIi5saXN0IC5mbCBzcGFuLnN1YiIpLmlzKCI6dmlzaWJsZSIpKXt2YXIgbz0i5oqY5omjIitlKCcjcHJvbW90aW9uX3RpdGxlIC5saXN0IC5mbCBzcGFuLnN1Yjpjb250YWlucygi5oqY5omjIikrIHNwYW4udGl0JykudGV4dCgpO24ucHVzaChvKX1yZXR1cm57cHJvbW86bi5qb2luKCI7Iil9fSxkYW5nZGFuZzpmdW5jdGlvbigpe3ZhciB0PWUoIiNwcm9tby1saXN0Iiksbj1bXTtpZih0LmZpbmQoJ2Rpdi5jbGVhcmZpeCBiOmNvbnRhaW5zKCLmu6Hpop3lh48iKScpLmlzKCI6dmlzaWJsZSIpKXt2YXIgaT0i5ruh6aKd5YePOiIrZSgnI3Byb21vLWxpc3QgZGl2LmNsZWFyZml4IGI6Y29udGFpbnMoIua7oemineWHjyIpK2Rpdi5ydWxlIHNwYW4nKS50ZXh0KCk7bi5wdXNoKGkpfWlmKHQuZmluZCgnZGl2LmNsZWFyZml4IGI6Y29udGFpbnMoIuW6l+mTuuS/g+mUgCIpJykuaXMoIjp2aXNpYmxlIikpe3ZhciBpPSLlupfpk7rkv4PplIA6IitlKCcjcHJvbW8tbGlzdCBkaXYuY2xlYXJmaXggYjpjb250YWlucygi5bqX6ZO65L+D6ZSAIikrZGl2LnJ1bGUgc3BhbicpLnRleHQoKTtuLnB1c2goaSl9cmV0dXJue3Byb21vOm4uam9pbigiOyIpfX0sa2FvbGE6ZnVuY3Rpb24oKXt2YXIgdD1bXTtpZihlKCcucHJvbW90aW9ud3JhcCAubS16ZC1wcnQgLm0tZHAtcHJ0LXRpdGxlOmNvbnRhaW5zKCLmu6Hpop3lh48iKScpLmlzKCI6dmlzaWJsZSIpKXt2YXIgbj0i5ruh6aKd5YePOiIrZSgnLnByb21vdGlvbndyYXAgLm0temQtcHJ0IC5tLWRwLXBydC10aXRsZTpjb250YWlucygi5ruh6aKd5YePIikrc3BhbiBhJykudGV4dCgpO3QucHVzaChuKX1pZihlKCIuY291cG9ud3JhcCIpLmlzKCI6dmlzaWJsZSIpKXt2YXIgaT0i6aKG5Yi4OiIrQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5jb3Vwb253cmFwIC5saS5lbGxpcHNpcyIpLGZ1bmN0aW9uKHQpe3JldHVybiBlKHQpLnRleHQoKX0pLmpvaW4oIiwiKTt0LnB1c2goaSl9cmV0dXJue3Byb21vOnQuam9pbigiOyIpfX19LGM9ZnVuY3Rpb24oKXt2YXIgdD1bXSxuPWUoIiNwcm9tLW9uZSAuSi1wcm9tIC5wcm9tLWl0ZW0iKSxpPWUoIiNwcm9tLXF1YW4gLkotcHJvbS1xdWFuIik7aWYobi5sZW5ndGg+MClmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylpZihuLmVxKG8pLmZpbmQoImEiKS50ZXh0KCkuaW5kZXhPZigi6K+m5oOFIik+LTEpe3ZhciBhPW4uZXEobykuZmluZCgiLmhsX3JlZCIpLnRleHQoKSxyPW4uZXEobykuZmluZCgiYSIpLmF0dHIoImhyZWYiKTt0LnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGEpKyIsIitlbmNvZGVVUklDb21wb25lbnQocikpfWlmKGkubGVuZ3RoPjApZm9yKHZhciBvPTA7bzxpLmxlbmd0aDtvKyspaWYoaS5lcShvKS5maW5kKCJhIikudGV4dCgpLmluZGV4T2YoIuivpuaDhSIpPi0xKXt2YXIgYT1pLmVxKG8pLmZpbmQoIi5obF9yZWQiKS50ZXh0KCkscj1pLmVxKG8pLmZpbmQoImEiKS5hdHRyKCJocmVmIik7dC5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChhKSsiLCIrZW5jb2RlVVJJQ29tcG9uZW50KHIpKX1yZXR1cm4gdC5qb2luKCI7Iil9LHA9ZnVuY3Rpb24odCl7dmFyIGU9aS5kcCxuPXMuZ2V0KCJvdGhlcl9pbmZvIiksbz1sW2kuc2l0ZV0oKSxhPW5bImNvZGUtc2VydmVyIl0ucHJpY2V8fGUucHJpY2U7YXx8KGE9by5wcmljZSk7dmFyIHI9e2RwX2lkOm4ubm93LmRwX2lkLG5hbWU6ZS5uYW1lLHByaWNlOmEscHJvbW86by5wcm9tbyxzdG9jazp0fTtyZXR1cm4gcn0sZD1mdW5jdGlvbih0LG4pe3ZhciBvPWkuZHAsYT1zLmdldCgib3RoZXJfaW5mbyIpLHI9YVsiY29kZS1zZXJ2ZXIiXS5wcmljZXx8by5wcmljZSxwPWxbaS5zaXRlXSgpO3J8fChyPWUoIi5KLXN1bW1hcnktcHJpY2UgLnAtcHJpY2UiKS50ZXh0KCkucmVwbGFjZSgvW++/pcKlXHNdKy9nLCIiKSk7dmFyIGQ9YygpLGg9ZSgiLm5hbWUuZ29vZHNob3AuRURyb3Bkb3duIikudGV4dCgpLHU9IjAiO2guaW5kZXhPZigi6Ieq6JClIik+LTEmJih1PSIxIiksby5mYW5zX3ByaWNlfHwoby5mYW5zX3ByaWNlPWUoIi5mYW5zLXByaWNlIC5wLXByaWNlLWZhbnMgc3BhbiIpLnRleHQoKS5yZXBsYWNlKC9b77+lwqVdKy8sIiIpKTt2YXIgbT17ZHBfaWQ6YS5ub3cuZHBfaWQsbmFtZTpvLm5hbWUudHJpbSgpLHByaWNlOnIscHJvbW86cC5wcm9tbyxwcm9tb19pbmZvOmQscGx1c19wcmljZTpvLnBsdXNfcHJpY2UsZmFuc19wcmljZTpvLmZhbnNfcHJpY2UsaXNaeTp1LHN0b2NrOnR9O209SlNPTi5zdHJpbmdpZnkobSksbihtKX0saD1mdW5jdGlvbigpe3JldHVybiJzdW5pbmciPT09aS5zaXRlJiZlKCIjdGltZVBhbmVsIHNwYW4iKS50ZXh0KCkuaW5kZXhPZigi5a6a6YeR5ZuiIik+LTEmJmUoIiNtYWluUHJpY2UgLnByaWNlLXByb21vIHNwYW4iKS50ZXh0KCkuaW5kZXhPZigi5a6a6YeRIik+LTF8fCIzNjBidXkiPT09aS5zaXRlJiZlKCIjcGluZ291IC5zdW1tYXJ5LXByaWNlIikudGV4dCgpLmluZGV4T2YoIuWumumHkSIpPi0xfSx1PWZ1bmN0aW9uKHQpe2lmKHdpbmRvdy5YTUxIdHRwUmVxdWVzdCl0cnl7dmFyIGU9bmV3IFhNTEh0dHBSZXF1ZXN0O2Uub3BlbigiUE9TVCIsaS5zZXJ2ZXIrIi9leHRlbnNpb24/YWM9c2VuZFByb21vcyZzaXRlX2lkPSIraS5zaXRlX2lkKyImamZyb209aW50IiksZS5zZW5kKHQpLHIoInNlbmRQcm9tb19zdWNjZXNzIil9Y2F0Y2gobil7fX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXtpZighaS5uZXdfZXh0ZW5zaW9uJiYibHV5b3UiIT1pLmJ0eXBlJiYhaS5kcC5hY3RpdmVQcmljZSYmIWgoKSl0cnl7dmFyIHQ9YS5pbml0KGkuc2l0ZSk7aWYoby5pbmRleE9mKGkuc2l0ZSk+LTEpaWYoIjM2MGJ1eSI9PWkuc2l0ZSlkKHQsdSk7ZWxzZXt2YXIgZT1wKHQpO2U9SlNPTi5zdHJpbmdpZnkoZSksdShlKX19Y2F0Y2gobil7fX0sdC5leHBvcnRzLnNwZWNpYWxGaWx0ZXI9aH0pLmNhbGwoZSxuKDQpLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMjIpLGE9bigxMykscj1uKDI0KSxzPW4oNTUpLGw9big1NiksYz17dGFvYmFvOm4oNzcpLHRtYWxsOm4oNzgpfSxwPXt9LGQ9ZnVuY3Rpb24odCl7dmFyIGk9big1OCk7dC5zcz0wLDAhPT10LnRtYWxsLmxlbmd0aCYmdC50bWFsbC5wcm9kdWN0JiYoZSgiI3RtX2NvbXBhcmUiKS5hcHBlbmQoby5jb21waWxlKGkpKHtzdG9yZV90bGU6IuWkqeeMqyIsbWluX3ByaWNlOnQudG1hbGwubWluX3ByaWNlfSkpLnNob3coKSxwLnRtYWxsPXQudG1hbGwsdC5zcysrLHQudG1tPSEwLHUoInRtYWxsIikpLDAhPT10LnRhb2Jhby5sZW5ndGgmJnQudGFvYmFvLnByb2R1Y3QmJihlKCIjdGJfY29tcGFyZSIpLmFwcGVuZChvLmNvbXBpbGUoaSkoe3N0b3JlX3RsZToi5reY5a6dIixtaW5fcHJpY2U6dC50YW9iYW8ubWluX3ByaWNlfSkpLnNob3coKSxwLnRhb2Jhbz10LnRhb2Jhbyx0LnNzKyssdC50YmI9ITAsdSgidGFvYmFvIikpLG4oNTYpLmF1dG9GaXhXaWR0aCgpLGEuc2V0KCJ0YkRhdGEiLHQpfSxoPWZ1bmN0aW9uKHQpe3ZhciBlPWEuZ2V0KCJwZXJtYW5lbnQiKTsidG9wIj09PWUuc3R5bGU/bSh0KTpuKDYxKS5yZW5kZXJCdCh0KX0sdT1mdW5jdGlvbih0KXt2YXIgYT1wW3RdLHI9YS5wcm9kdWN0Lmxlbmd0aCxsPSJ0YiI7InRtYWxsIj09PXQmJihsPSJ0bSIpO3ZhciBkPXMuaW5pdCgpLGg9IuacgOi/kemUgOmHjyI7YS5mcm9tX3NlbGY9PT0hMCYmKGg9IuaAu+mUgOmHjyIpO3ZhciB1PWNbdF0sbT1NYXRoLmNlaWwoci9kLnNob3dMaXN0TnVtKTtlKCIjIitsKyJfY29tcGFyZSIpLmFwcGVuZChvLmNvbXBpbGUodSkoe2RhdGE6YS5wcm9kdWN0LHNfc2VydmVyOmkuc19zZXJ2ZXIsd2lkdGg6ZC50dXJucFcsbGluazphLm1vcmVfbGluayxwYWdlczptLGltZ0xvYWQ6aS5pbWdMb2FkLHNhbGVfdGxlOmgsYWxsUHJvZHVjdFc6ZC5hbGxQcm9kdWN0V30pKSwiMzYwIiE9PWkuZnJvbV9kZXZpY2UmJm4oNjQpLmluaXQoYS5wcm9kdWN0LHQsITEsYS5taW5fcHJpY2UpfSxtPWZ1bmN0aW9uKHQpe2QodCl9LGY9ZnVuY3Rpb24odCl7dmFyIGU9IjEiLG49YS5nZXQoIm90aGVyX2luZm8iKSxvPW4uZXhhY3RfYXJyLHM9blsiY29kZS1zZXJ2ZXIiXTtzfHwocz17fSxlPSIwIik7dmFyIGw9MTAwKmkuZHAucHJpY2UsYz1pLnNlcnZlcisiL2Jyd2V4dC90YnJlcz91bmlvbj0iK2kudW5pb24rIiZ1cmw9IitlbmNvZGVVUklDb21wb25lbnQoby51cmwpKyImc2l0ZT0iK28uc2l0ZSsiJmlzYm49IitvLmlzYm4rIiZrZXl3b3Jkcz0iK2VuY29kZVVSSUNvbXBvbmVudChvLmtleXdvcmRzKSsiJmJyYW5kPSIrZW5jb2RlVVJJQ29tcG9uZW50KG8uYnJhbmQpKyImdHlwZT0iK2VuY29kZVVSSUNvbXBvbmVudChvLnR5cGUpKyImcHJpY2U9IitsKyImY2xhc3NfaWQ9IitvLmNsYXNzX2lkKyImbmFtZT0iK2VuY29kZVVSSUNvbXBvbmVudChpLmRwLm5hbWUpKyImY29kZV9icmFuZF9pZD0iK3MuYnJhbmRfaWQrIiZjb2RlX2NsZWFuX3RpdGxlPSIrZW5jb2RlVVJJQ29tcG9uZW50KHMuY2xlYW5fdGl0bGUpKyImY29kZV9jb2RlPSIrcy5jb2RlKyImY29kZV9kaXNwbGF5X2JyYW5kPSIrZW5jb2RlVVJJQ29tcG9uZW50KHMuZGlzcGxheV9icmFuZCkrIiZjb2RlX2JyYW5kPSIrZW5jb2RlVVJJQ29tcG9uZW50KHMuYnJhbmQpKyImY29kZV9jbGFzc19pZD0iK2VuY29kZVVSSUNvbXBvbmVudChzLmNsYXNzX2lkKSsiJmNvZGVfcHJpY2U9IitlbmNvZGVVUklDb21wb25lbnQocy5wcmljZSkrIiZjb2RlX3NwZWM9IitlbmNvZGVVUklDb21wb25lbnQocy5zcGVjKSsiJmNvZGUtc2VydmVyPSIrZTtyLmdldChjKS5kb25lKGZ1bmN0aW9uKGUpe2UmJigidGFvYmFvIj09aS5zaXRlfHwidG1hbGwiPT1pLnNpdGU/dyhlLGZ1bmN0aW9uKGUpe3QoZSl9KTpnKGUsZnVuY3Rpb24oZSl7dChlKX0pKX0pfSxnPWZ1bmN0aW9uKHQsZSl7dmFyIG89big3OSk7aWYodD1vLmJ1aWxkQ29tbW9uKHQpLCJsdXlvdSI9PWkuYnR5cGUpcmV0dXJuIHZvaWQgZSh0KTt2YXIgYT1uKDgwKSxyPWEuZ2V0KCJkcF9kYXRhIikmJmEuZ2V0KCJkcF9kYXRhIikuZXhhY3RfYXJyLmJyYW5kX2lkO3JldHVybiIzNjBidXkiIT1pLnNpdGV8fCFyfHx0LnRhb2Jhby5zb3J0JiZ0LnRtYWxsLnNvcnQ/dm9pZCBuKDgxKS5pbml0KGZ1bmN0aW9uKG4pe24/KHQudG1hbGwuc29ydCYmKHQudG1hbGw9e30pLG4udG1hbGwubGVuZ3RoPjAmJih0LnRtYWxsLm1pbl9wcmljZT1uLnRtYWxsWzBdLnByaWNlLHQudG1hbGwubWF4X3ByaWNlPW4udG1hbGxbbi50bWFsbC5sZW5ndGgtMV0ucHJpY2UsdC50bWFsbC5zdG9yZT1uLnRtYWxsLHQudG1hbGwucHJvZHVjdD1uLnRtYWxsKSx0LnRhb2Jhby5zb3J0JiYodC50YW9iYW89e30pLG4udGFvYmFvLmxlbmd0aD4wJiYodC50YW9iYW8ucHJvZHVjdD1uLnRhb2Jhbyx0LnRhb2Jhby5zdG9yZT1uLnRhb2Jhbyx0LnRhb2Jhby5taW5fcHJpY2U9bi50YW9iYW9bMF0ucHJpY2UsdC50YW9iYW8ubWF4X3ByaWNlPW4udGFvYmFvW24udGFvYmFvLmxlbmd0aC0xXS5wcmljZSksdC50bWFsbC5tb3JlX2xpbmt8fCh0LnRtYWxsLm1vcmVfbGluaz0iaHR0cHM6Ly9zLnRhb2Jhby5jb20vc2VhcmNoP3E9Iit0LnNlYXJjaC5rZXl3b3JkcysiJnBpZD0iK3Quc2VhcmNoLnVuaW9uKSx0LnRhb2Jhby5tb3JlX2xpbmt8fCh0LnRhb2Jhby5tb3JlX2xpbms9Imh0dHBzOi8vcy50YW9iYW8uY29tL3NlYXJjaD9xPSIrdC5zZWFyY2gua2V5d29yZHMrIiZwaWQ9Iit0LnNlYXJjaC51bmlvbiksZSh0KSk6ZSh0KX0pOnZvaWQgZSh0KX0sdz1mdW5jdGlvbih0LGUpe3ZhciBpPW4oNzkpO3Q9aS5idWlsZENvbW1vbih0KSxuKDgyKS5nZXRUYW9iYW91bmlxRGF0YShmdW5jdGlvbihuKXtuPyh0LnRtYWxsLnNvcnQmJih0LnRtYWxsPXt9KSxuLnRtYWxsLmxlbmd0aD4wJiYodC50bWFsbC5taW5fcHJpY2U9bi50bWFsbFswXS5wcmljZSx0LnRtYWxsLm1heF9wcmljZT1uLnRtYWxsW24udG1hbGwubGVuZ3RoLTFdLnByaWNlLHQudG1hbGwuc3RvcmU9bi50bWFsbCx0LnRtYWxsLnByb2R1Y3Q9bi50bWFsbCksdC50YW9iYW8uc29ydCYmKHQudGFvYmFvPXt9KSxuLnRhb2Jhby5sZW5ndGg+MCYmKHQudGFvYmFvLnByb2R1Y3Q9bi50YW9iYW8sdC50YW9iYW8uc3RvcmU9bi50YW9iYW8sdC50YW9iYW8ubWluX3ByaWNlPW4udGFvYmFvWzBdLnByaWNlLHQudGFvYmFvLm1heF9wcmljZT1uLnRhb2Jhb1tuLnRhb2Jhby5sZW5ndGgtMV0ucHJpY2UpLHQudG1hbGwubW9yZV9saW5rfHwodC50bWFsbC5tb3JlX2xpbms9Imh0dHBzOi8vcy50YW9iYW8uY29tL3NlYXJjaD9xPSIrdC5zZWFyY2gua2V5d29yZHMrIiZwaWQ9Iit0LnNlYXJjaC51bmlvbiksdC50YW9iYW8ubW9yZV9saW5rfHwodC50YW9iYW8ubW9yZV9saW5rPSJodHRwczovL3MudGFvYmFvLmNvbS9zZWFyY2g/cT0iK3Quc2VhcmNoLmtleXdvcmRzKyImcGlkPSIrdC5zZWFyY2gudW5pb24pLGUodCkpOmUodCl9KX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXtmKGgpfSx0LmV4cG9ydHMucmVuZGVyVG9wRGV0YWlsMj1mdW5jdGlvbih0KXt2YXIgbj1zLmluaXQoKTtsLmxvYWRJbWcoMCxuLnNob3dMaXN0TnVtLGUoIiMiK3QrIi1pdGVtLWxpc3QgbGkgLnNtYWxsLWltZyBpbWciKSksZSgiI2d3ZGFuZy0iK3QrIi1kcC1kZXRhaWwiKS5zaG93KCl9fSkuY2FsbChlLG4oNCksbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxuKXsidXNlIHN0cmljdCI7dmFyIGk9dm9pZCAwLG89ZnVuY3Rpb24oKXt2YXIgdD1lKHdpbmRvdykud2lkdGgoKSxuPTI2OCxpPTEzMCxvPTMwNCxhPXQtMippLW8scj1wYXJzZUludChhL24pO3JldHVybiBhLXIqbis4MD4yNjgmJihyKyssaT1wYXJzZUludCgodC1yKm4tbykvMiksYT10LTIqaS1vKSx7cHJvZHVjdFc6YSx0dXJucFc6aSxzaG93TGlzdE51bTpyfX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXtpZihpKXJldHVybiBpO3ZhciB0PWUod2luZG93KS53aWR0aCgpLGE9MjY4LHI9MTQ3LHM9dC0yKnIsbD1wYXJzZUludChzL2EpO3MtbCphKzkyPjI2OCYmKGwrKyxyPXBhcnNlSW50KCh0LWwqYSkvMikscz10LTIqciksImFtYXpvbiI9PT1uLnNpdGUmJnItLTt2YXIgYz1vKCk7cmV0dXJuIGk9e2FsbFByb2R1Y3RXOnMsdHVybnBXOnIsc2hvd0xpc3ROdW06bCxiMmNQcm9kdWN0VzpjLnByb2R1Y3RXLGIyY1R1cm5wVzpjLnR1cm5wVyxiMmNTaG93TGlzdE51bTpjLnNob3dMaXN0TnVtfX0sdC5leHBvcnRzLmNhbEJvdHRvbUJhcj1mdW5jdGlvbigpe3ZhciB0PWUoIiNiamRfbG9nbyIpLm91dGVyV2lkdGgoKSxuPWUoIi5sZWZ0LWNvbXBhcmUiKS5vdXRlcldpZHRoKCksaT1lKCIubmJ0LWFkaW5mbyIpLm91dGVyV2lkdGgoKSxvPWUoIi5uYnQtY2xvc2UtYnRuIikub3V0ZXJXaWR0aCgpLGE9ZSgiLnJpZ2h0LWluZm8iKS5vdXRlcldpZHRoKCkscj1lKHdpbmRvdykud2lkdGgoKTthPDUwMCYmKGE9NTAyKTt2YXIgcz1yLSh0K24raStvK2EpO3JldHVybiBzfX0pLmNhbGwoZSxuKDQpLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oNTcpLGE9big1NCkscj1uKDY4KSxzPW4oNTUpLGw9big3MyksYz1uKDEyKSxwPXt9LGQ9ZnVuY3Rpb24odCl7c3dpdGNoKGMoInRyYWNrOiIrdCksdCl7Y2FzZSJiMmNfY29tcGFyZSI6by5yZW5kZXJUb3BEZXRhaWwoKTticmVhaztjYXNlInRiX2NvbXBhcmUiOmEucmVuZGVyVG9wRGV0YWlsMigidGFvYmFvIik7YnJlYWs7Y2FzZSJ0bV9jb21wYXJlIjphLnJlbmRlclRvcERldGFpbDIoInRtYWxsIik7YnJlYWs7Y2FzZSJhbWF6b25fY29tcGFyZSI6ci5yZW5kZXJUb3BEZXRhaWwoInRtYWxsIil9fSxoPWZ1bmN0aW9uKHQsbil7dmFyIG89bmV3IEltYWdlO28ub25sb2FkPWZ1bmN0aW9uKCl7ZSh0KS5hdHRyKCJzcmMiLG4pfSxvLm9uZXJyb3I9ZnVuY3Rpb24oKXtlKHQpLmF0dHIoInNyYyIsaS5ub0ltZyl9LG8uc3JjPW59LHU9ZnVuY3Rpb24oZSxuLGkpe3ZhciBvPXMuaW5pdCgpLGE9bi5maW5kKCIuYWxsLXByb2R1Y3RzIGxpIikscj1OdW1iZXIobi5maW5kKCIucGFnZS1udW0iKS50ZXh0KCkpLGw9TnVtYmVyKG4uZmluZCgiLmN1cnJlbnQtcGFnZSIpLnRleHQoKSksYz1vLmIyY1Nob3dMaXN0TnVtO2lmKGkuaW5kZXhPZigiYjJjIik9PT0tMSYmKGM9by5zaG93TGlzdE51bSksYS5oaWRlKCksMT09PWUpe2w9PT1yJiYobD0wKSx0LmV4cG9ydHMubG9hZEltZyhjKmwsYyoobCsxKSxuLmZpbmQoIi5hbGwtcHJvZHVjdHMgbGkgaW1nIikpO2Zvcih2YXIgcD1jKmw7cDxjKihsKzEpO3ArKylhLmVxKHApLnNob3coKTtsKyt9ZWxzZXsxPT09bCYmKGw9cisxKSx0LmV4cG9ydHMubG9hZEltZyhjKihsLTIpLGMqKGwtMSksbi5maW5kKCIuYWxsLXByb2R1Y3RzIGxpIGltZyIpKTtmb3IodmFyIHA9YyoobC0yKTtwPGMqKGwtMSk7cCsrKWEuZXEocCkuc2hvdygpO2wtLX1uLmZpbmQoIi5jdXJyZW50LXBhZ2UiKS50ZXh0KGwpfTt0LmV4cG9ydHMubG9hZEltZz1mdW5jdGlvbih0LG4saSl7Zm9yKHZhciBvPXQ7bzxuO28rKyl7dmFyIGE9ZShpKS5lcShvKVswXTtpZighYSlyZXR1cm47dmFyIHI9YS5nZXRBdHRyaWJ1dGUoImRhdGEtb3JpZ2luYWwiKSxzPWEuc3JjO3IhPT1zJiZoKGEscil9fTt2YXIgbT1mdW5jdGlvbigpe3ZhciB0PWUod2luZG93KS53aWR0aCgpLG49ZSgiI2d3ZGFuZy1mZWVkLWNsb3NlIikub3V0ZXJXaWR0aCgpLGk9ZSgiI2d3ZF9oaXN0b3J5Iikub3V0ZXJXaWR0aCgpLG89ZSgiLnNlYXJjaC1tb2QiKS5vdXRlcldpZHRoKCksYT1lKCIjZ3dkX2xvd3ByaSIpLm91dGVyV2lkdGgoKSxyPWUoIi5nd2QtdG9wYmFyLWxlZnQiKS5vdXRlcldpZHRoKCkscz1lKCIuZ3dkLXRvcGJhci1sb2dvIikub3V0ZXJXaWR0aCgpLGw9ZSgiI3Byb21vX3F1YW5fYnRuIikub3V0ZXJXaWR0aCgpLGM9ZSgiI2d3ZGFuZy1iYW5uZXItYWQiKS5vdXRlcldpZHRoKCkscD10LShuK2krbythK3IrcytjKTtwPDUwJiYoZSgiLnNlYXJjaC1tb2QiKS5yZW1vdmUoKSxwKz1vKSxwPDUwJiYoZSgiI2d3ZF9oaXN0b3J5IikucmVtb3ZlKCkscCs9aSkscDw1MCYmKGUoIiNnd2RfbG93cHJpIikucmVtb3ZlKCksZSgiLmd3ZC10b3BiYXItcmlnaHQiKS5jc3MoIm1pbi13aWR0aCIsImF1dG8iKSxwKz1hKSxwPDUwJiYoZSgiI3Byb21vX3F1YW5fYnRuIikucmVtb3ZlKCkscCs9bCksNDAwPT09ZSgiLmd3ZC10b3BiYXItcmlnaHQiKS5vdXRlcldpZHRoKCkmJmUoIi5nd2QtdG9wYmFyLXJpZ2h0IikuY3NzKCJtaW4td2lkdGgiLCJhdXRvIil9O3QuZXhwb3J0cy5hdXRvRml4V2lkdGg9bSx0LmV4cG9ydHMubGlzdGVuQmFyPWZ1bmN0aW9uKHQpe3ZhciBvPXZvaWQgMDsidG9wIj09PXQ/KGUoaS5kdmFsKS5vbigibW91c2VlbnRlciIsIi5nd2RhbmctdGFiIixmdW5jdGlvbigpe3ZhciB0PWUodGhpcykuYXR0cigiaWQiKTtwW3RdfHwiZ3dkYW5nLXRyZW5kIj09PXQ/KGUodGhpcykuZmluZCgiLnRvcC1iYXItZGV0YWlsIikuc2hvdygpLGUoZG9jdW1lbnQpLnRyaWdnZXIoInJlbmRlckFnYWluIikpOihwW3RdPSEwLGQodCkpLGUodGhpcykuYWRkQ2xhc3MoInRhYi1ob3ZlciIpfSksZShpLmR2YWwpLm9uKCJtb3VzZWxlYXZlIiwiLmd3ZGFuZy10YWIiLGZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5hdHRyKCJpZCIpO3JldHVybiJnd2RhbmctdHJlbmQiIT09dCYmKGUoIi50b3AtYmFyLWRldGFpbCIpLmhpZGUoKSx2b2lkIGUodGhpcykucmVtb3ZlQ2xhc3MoInRhYi1ob3ZlciIpKX0pLGUoaS5kdmFsKS5vbigiY2xpY2siLCIudHVybi1wYWdlIGEiLGZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5hdHRyKCJpZCIpLG49ZSh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKTt0Lm1hdGNoKC8oPzpiMmN8dGFvYmFvfHRtYWxsfGZ1enp5KS1wcmV2LXBhZ2UvKT91KC0xLG4sdCk6dC5tYXRjaCgvKD86YjJjfHRhb2Jhb3x0bWFsbHxmdXp6eSktbmV4dC1wYWdlLykmJnUoMSxuLHQpfSksZSgiLmd3ZF9jbG9zZSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtlKCIjZ3dkYW5nX21haW4iKS5oaWRlKCksZSgiI2d3ZGFuZy1taW5pIikuc2hvdygpLGwuc2V0TG9jYWwoInRvcF9mb2xkIiwiMSIpLGwuc2V0dGluZ3MoInNldF9wX2ZvbGQiLCJwX2ZvbGQiLCIxIiksZSgiYm9keSIpLmNzcygicGFkZGluZy10b3AiLCIwcHgiKS5yZW1vdmVDbGFzcygiZ3dkX3VuZm9sZCIpfSksZSgiLmd3ZC10b3BiYXItbG9nbyIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe298fChuKDc0KS5pbnNlcnRTZXR0aW5nVmlldygpLG89ITApLGUoIiNnd2Rfc2V0dGluZ19kaXYiKS5zaG93KCl9KSxlKCIuZ3dkLXRvcGJhci1sb2dvIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7ZSgiI2d3ZF9zZXR0aW5nX2RpdiIpLmhpZGUoKX0pLGUoIiNnd2RfZm9sZF9wb2ludGVyIikub24oImNsaWNrIixmdW5jdGlvbigpe2UoIiNnd2RhbmdfbWFpbiIpLnNob3coKSxlKCIjZ3dkYW5nLW1pbmkiKS5oaWRlKCksbC5zZXRMb2NhbCgidG9wX2ZvbGQiLCIwIiksbC5zZXR0aW5ncygic2V0X3BfZm9sZCIsInBfZm9sZCIsIjAiKSxlKCJib2R5IikuY3NzKCJwYWRkaW5nLXRvcCIsIjM2cHgiKS5hZGRDbGFzcygiZ3dkX3VuZm9sZCIpLG0oKX0pKTooZSgiI2JqZF9ib3R0b21fZGV0YWlsIikub24oIm1vdXNlZW50ZXIiLCIuYnRtLXRhYiIsZnVuY3Rpb24oKXtlKHRoaXMpLmZpbmQoIi5nd2QtYnRuLWRldGFpbCIpLnNob3coKX0pLGUoIiNiamRfYm90dG9tX2RldGFpbCIpLm9uKCJtb3VzZWxlYXZlIiwiLmJ0bS10YWIiLGZ1bmN0aW9uKCl7ZSh0aGlzKS5maW5kKCIuZ3dkLWJ0bi1kZXRhaWwiKS5oaWRlKCl9KSk7dmFyIGE9dm9pZCAwO2Uod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoYSksYT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bSgpfSw1MDApfSl9fSkuY2FsbChlLG4oNCksbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG8sYT1uKDIyKSxyPW4oMTMpLHM9big1NiksbD1uKDU1KSxjPXt9LHA9ZnVuY3Rpb24odCxpKXt2YXIgbz0i5ZWG5Z+OIjtpJiYobz0i5ZWG5Z+O55u45Ly85qy+Iik7dmFyIHI9big1OCk7ZSgiI2IyY19jb21wYXJlIikuYXBwZW5kKGEuY29tcGlsZShyKSh7c3RvcmVfdGxlOm8sbWluX3ByaWNlOnR9KSkuc2hvdygpfSxkPWZ1bmN0aW9uKCl7dmFyIHQ9bC5pbml0KCkscD10LmIyY1Nob3dMaXN0TnVtLGQ9dC5iMmNUdXJucFcsaD10LmIyY1Byb2R1Y3RXLHU9ci5nZXQoImRwX3F1ZXJ5IiksbT1uKDU5KTtvJiYobT1uKDYwKSxwPXQuc2hvd0xpc3ROdW0sZD10LnR1cm5wVyxoPXQuYWxsUHJvZHVjdFcpLGkuc2l0ZSYmaS5zaXRlLmluZGV4T2YoImFtYXpvbiIpPi0xJiYoZC09MSk7dmFyIGY9Yy5iMmNfY29tcGFyZS5wcm9kdWN0Lmxlbmd0aCxnPU1hdGguY2VpbChmL3ApO2UoIiNiMmNfY29tcGFyZSIpLmFwcGVuZChhLmNvbXBpbGUobSkoe2RhdGE6Yy5iMmNfY29tcGFyZSxsZW46ZixwYWdlczpnLG5vd19kcF9pZDp1LmRwLmRwX2lkLHdpZHRoOmQsaW1nTG9hZDppLmltZ0xvYWQscHJvZHVjdFc6aH0pKSxzLmxvYWRJbWcoMCxwLGUoIiNiMmMtaXRlbS1saXN0IGxpIC5zbWFsbC1pbWcgaW1nIikpLGUoIiNiMmNfY29tcGFyZSIpLmZpbmQoIi50b3AtYmFyLWRldGFpbCIpLnNob3coKX0saD1mdW5jdGlvbih0KXshdHx8IXQuYjJjfHx0LmIyYyBpbnN0YW5jZW9mIEFycmF5P3QmJnQuYjJjX2Z1enp5JiYhKHQuYjJjX2Z1enp5IGluc3RhbmNlb2YgQXJyYXkpJiZ0LmIyY19mdXp6eS5wcm9kdWN0Lmxlbmd0aD4wJiYoYy5iMmNfY29tcGFyZT10LmIyY19mdXp6eSxvPSEwLE51bWJlcih0LmIyY19mdXp6eS5taW5fcHJpY2UpJiZwKHQuYjJjX2Z1enp5Lm1pbl9wcmljZSwhMCkpOihjLmIyY19jb21wYXJlPXQuYjJjLE51bWJlcih0LmIyYy5taW5fcHJpY2UpJiZ0LmIyYy5zdG9yZS5sZW5ndGg+MCYmdC5iMmMucHJvZHVjdC5sZW5ndGg+MCYmcCh0LmIyYy5taW5fcHJpY2UpKX0sdT1mdW5jdGlvbih0KXtuKDYxKS5pbml0KHQpfTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0LGUpe2kuYWxpU2l0ZXx8KCJ0b3AiPT09dD9oKGUpOnUoZSkpfSx0LmV4cG9ydHMucmVuZGVyVG9wRGV0YWlsPWR9KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxzcGFuIGNsYXNzPSJidG4tdGFiLXNwIj5cbiAgPGVtIGNsYXNzPSJnd2QtYmciPjwvZW0+XG4gIDxzcGFuIGNsYXNzPSJ0YWItc3AxIGJsa2NvbG9yMSBmdzEiPnt7c3RvcmVfdGxlfX08L3NwYW4+XG4gIDxzcGFuIGNsYXNzPSJ0YWItc3AyIHByaWZvbnRmIj7CpXt7bWluX3ByaWNlfX08L3NwYW4+XG48L3NwYW4+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9Imd3ZGFuZy1iMmMtZHAtZGV0YWlsIiBjbGFzcz0icGFuZWwgZ3dkX2NvbXBhcmUgdG9wLWNvbXBhcmUtZGV0YWlsIHRvcC1iYXItZGV0YWlsIj5cbiAgPGRpdiBjbGFzcz0icGFuZWwtd3JhcCI+XG4gICAgPGRpdiBjbGFzcz0iYjJjLXBhZ2VzIGJsa2NvbG9yNCI+XG4gICAgICDnrKwmbmJzcDtcbiAgICAgIDxzcGFuIGNsYXNzPSJjdXJyZW50LXBhZ2UiIGlkPSJiMmMtY3VycmVudC1wYWdlIj4xPC9zcGFuPlxuICAgICAgJm5ic3A76aG177yM5YWxXG4gICAgICA8c3BhbiBjbGFzcz0icGFnZS1udW0gYmxrY29sb3I0IiBpZD0iYjJjLXBhZ2UtbnVtIj57e3BhZ2VzfX08L3NwYW4+XG4gICAgICAmbmJzcDvpobVcbiAgICA8L2Rpdj5cbiAgICA8dWwgY2xhc3M9ImJ1eS1saXN0Ij5cbiAgICAgIDxsaT48YiBjbGFzcz0iYmxrY29sb3IxIj7mraPlk4HllYbln47lnKjljZbvvJo8L2I+PC9saT5cbiAgICAgIHt7ZWFjaCBkYXRhLnN0b3JlMn19XG4gICAgICA8bGk+XG4gICAgICAgIDxpbWcgY2xhc3M9InN0b3JlIiBzcmM9Int7JHZhbHVlLmljb25fdXJsfX0iPlxuICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgdGl0bGU9Int7JHZhbHVlLnNpdGVfbmFtZX19IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9Imd3ZF90aXRsZSBibGtjb2xvcjIiPnt7JHZhbHVlLnNpdGVfbmFtZX19PC9zcGFuPlxuICAgICAgICAgIHt7aWYgJHZhbHVlLm1vcmU+MX19XG4gICAgICAgICAgPHNwYW4gY2xhc3M9Im1vcmUiPih7eyR2YWx1ZS5tb3JlfX0p5qy+PC9zcGFuPlxuICAgICAgICAgIHt7L2lmfX1cbiAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2UgcHJpZm9udGYiPsKle3skdmFsdWUucHJpY2UyfX08L3NwYW4+XG4gICAgICAgIDwvYT5cbiAgICAgIDwvbGk+XG4gICAgICB7ey9lYWNofX1cbiAgICAgIDxsaSBjbGFzcz0ic2VlLWFsbC1saXN0Ij5cbiAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuZ3dkYW5nLmNvbS9kcHt7bm93X2RwX2lkfX0vd2hlcmVfYnV5Lz9mcm9tPWJyb3dzZXImY3JjNjQ9MSZtPWIyYyN0YWJzInRhcmdldD0iX2JsYW5rIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InNob3ctYWxsIGJsa2NvbG9yNCI+5p+l55yL5YWo6YOo5ZWG5a62KHt7bGVufX0pPC9zcGFuPlxuICAgICAgPC9hPlxuICAgICAgPC9saT5cbiAgICA8L3VsPlxuICAgIDxkaXYgY2xhc3M9ImxlZnQtcGFnZSB0dXJuLXBhZ2UiPlxuICAgICAgPGEgaWQ9ImIyYy1wcmV2LXBhZ2UiIHRhcmdldD0iX3NlbGYiIHRpdGxlPSLkuIrkuIDpobUiIGhyZWY9ImphdmFzY3JpcHQ6IiBjbGFzcz0iZ3dkX2JnIj48L2E+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0iYWxsLXByb2R1Y3RzIiBzdHlsZT0id2lkdGg6e3twcm9kdWN0V319cHgiPlxuICAgICAgPHVsIGlkPSJiMmMtaXRlbS1saXN0Ij5cbiAgICAgICAge3tlYWNoIGRhdGEucHJvZHVjdH19XG4gICAgICAgICAgPGxpIGlkPSJiMmMtcHJvZC1pdGVtLXt7JGluZGV4fX0iID5cbiAgICAgICAgICAgIDxhIGlkPSJpbWcte3skdmFsdWUuZHBfaWR9fSIgdGl0bGU9Int7JHZhbHVlLnRpdGxlfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic21hbGwtaW1nIiBocmVmPSJ7eyR2YWx1ZS51cmx9fSI+XG4gICAgICAgICAgICAgIDxpbWcgc3JjPSJ7e2ltZ0xvYWR9fSIgZGF0YS1vcmlnaW5hbD0ie3skdmFsdWUuaW1nX3VybH19IiBpZD0iZHAtaW1hZ2Utc21hbGwte3skdmFsdWUuZHBfaWR9fSIgY2xhc3M9Imd3ZGFuZy1sYXp5Ij5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYjJjLW90aGVyLWluZm8iICBocmVmPSJ7eyR2YWx1ZS51cmx9fSI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByaWNlaW5mby1ib3giPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnRlci1ib3giPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imd3ZC1wcmljZSBwcmlmb250ZiI+wqV7eyR2YWx1ZS5wcmljZV9ybWIgPyAkdmFsdWUucHJpY2Vfcm1iIDogJHZhbHVlLnByaWNlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICB7e2lmICR2YWx1ZS5wcm9tbzJ9fVxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRwLXByb21vdGlvbiBnd2RfYmciPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcC1wcm9tb3Rpb24tZGV0YWlsIj5cbiAgICAgICAgICAgICAgICAgICAgICB7e2VhY2ggJHZhbHVlLnByb21vMn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtcHJvLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgICAge3tpZiAkdmFsdWUuY291cG9uMn19XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtY291cG9uIGd3ZF9iZyI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRwLWNvdXBvbi1kZXRhaWwiPlxuICAgICAgICAgICAgICAgICAgICAgIHt7ZWFjaCAkdmFsdWUuY291cG9uMn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtY291cG9uLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgICAge3tpZiAkdmFsdWUueXVzaG91Mn19XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAteXVzaG91IGd3ZF9iZyI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRwLXl1c2hvdS1kZXRhaWwiPlxuICAgICAgICAgICAgICAgICAgICAgIHt7ZWFjaCAkdmFsdWUueXVzaG91Mn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtcHJvLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtc3RvcmUgYmxrY29sb3IxIj57eyR2YWx1ZS5zaXRlX25hbWV9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gaWQ9Int7JHZhbHVlLmRwX2lkfX1fcHJvbW90aW9uIj57eyMkdmFsdWUucHJvbW9kb219fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy1mZWVzIGJsa2NvbG9yNCI+e3skdmFsdWUuY29tbWVudF9udW0gPyAoIuivhOiuuuaVsDoiICsgJHZhbHVlLmNvbW1lbnRfbnVtKSA6ICR2YWx1ZS5mZWUgfX08L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtdGxlIGJsa2NvbG9yMSI+e3skdmFsdWUudGl0bGV9fTwvc3Bhbj5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICB7ey9lYWNofX1cbiAgICAgIDwvdWw+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0icmlnaHQtcGFnZSB0dXJuLXBhZ2UiPlxuICAgICAgPGEgaWQ9ImIyYy1uZXh0LXBhZ2UiIHRpdGxlPSLkuIvkuIDpobUiIHRhcmdldD0iX3NlbGYiIGhyZWY9ImphdmFzY3JpcHQ6IiBjbGFzcz0iZ3dkX2JnIj48L2E+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgICNnd2RhbmctYjJjLWRwLWRldGFpbCAudHVybi1wYWdlIHtcbiAgICAgIHdpZHRoOiB7e3dpZHRofX1weDtcbiAgICB9XG4gIDwvc3R5bGU+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0iZ3dkYW5nLWIyY19mdXp6eS1kcC1kZXRhaWwiIGNsYXNzPSJwYW5lbCBnd2RfY29tcGFyZSB0b3AtY29tcGFyZS1kZXRhaWwgdG9wLWJhci1kZXRhaWwiPlxuICA8ZGl2IGNsYXNzPSJwYW5lbC13cmFwIj5cbiAgICA8ZGl2IGNsYXNzPSJiMmMtcGFnZXMgYmxrY29sb3I0Ij5cbiAgICAgIOesrCBcbiAgICAgIDxzcGFuIGNsYXNzPSJjdXJyZW50LXBhZ2UiIGlkPSJiMmMtY3VycmVudC1wYWdlIj4xPC9zcGFuPlxuICAgICAgIOmhte+8jOWFsSBcbiAgICAgICA8c3BhbiBjbGFzcz0icGFnZS1udW0gYmxrY29sb3I0IiBpZD0iYjJjLXBhZ2UtbnVtIj57e3BhZ2VzfX08L3NwYW4+XG4gICAgICAgIOmhtVxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9ImxlZnQtcGFnZSB0dXJuLXBhZ2UiIHN0eWxlPSJsZWZ0OjEwcHg7Ij5cbiAgICAgIDxhIGlkPSJmdXp6eS1wcmV2LXBhZ2UiIHRhcmdldD0iX3NlbGYiIHRpdGxlPSLkuIrkuIDpobUiIGNsYXNzPSJnd2RfYmciIGhyZWY9ImphdmFzY3JpcHQ6Ij48L2E+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0iYWxsLXByb2R1Y3RzIiBzdHlsZT0id2lkdGg6e3twcm9kdWN0V319cHgiPlxuICAgICAgPHVsIGlkPSJiMmMtaXRlbS1saXN0Ij5cbiAgICAgICAge3tlYWNoIGRhdGEucHJvZHVjdH19XG4gICAgICAgICAgPGxpIGlkPSJiMmNfZnV6enktcHJvZC1pdGVtLXt7JGluZGV4fX0iID5cbiAgICAgICAgICAgIDxhIGlkPSJpbWcte3skdmFsdWUuZHBfaWR9fSIgdGl0bGU9Int7JHZhbHVlLnRpdGxlfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ic21hbGwtaW1nIiBocmVmPSJ7eyR2YWx1ZS51cmx9fSI+XG4gICAgICAgICAgICAgIDxpbWcgc3JjPSJ7e2ltZ0xvYWR9fSIgZGF0YS1vcmlnaW5hbD0ie3skdmFsdWUuaW1nX3VybH19IiBpZD0iZHAtaW1hZ2Utc21hbGwte3skdmFsdWUuZHBfaWR9fSIgY2xhc3M9Imd3ZGFuZy1sYXp5Ij5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYjJjLW90aGVyLWluZm8iICBocmVmPSJ7eyR2YWx1ZS51cmx9fSI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByaWNlaW5mby1ib3giPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnRlci1ib3giPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imd3ZC1wcmljZSBwcmlmb250ZiI+wqV7eyR2YWx1ZS5wcmljZV9ybWIgPyAkdmFsdWUucHJpY2Vfcm1iIDogJHZhbHVlLnByaWNlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICB7e2lmICR2YWx1ZS5wcm9tbzJ9fVxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRwLXByb21vdGlvbiBnd2RfYmciPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcC1wcm9tb3Rpb24tZGV0YWlsIj5cbiAgICAgICAgICAgICAgICAgICAgICB7e2VhY2ggJHZhbHVlLnByb21vMn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtcHJvLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgICAge3tpZiAkdmFsdWUuY291cG9uMn19XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtY291cG9uIGd3ZF9iZyI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRwLWNvdXBvbi1kZXRhaWwiPlxuICAgICAgICAgICAgICAgICAgICAgIHt7ZWFjaCAkdmFsdWUuY291cG9uMn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtY291cG9uLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgICAge3tpZiAkdmFsdWUueXVzaG91Mn19XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAteXVzaG91IGd3ZF9iZyI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRwLXl1c2hvdS1kZXRhaWwiPlxuICAgICAgICAgICAgICAgICAgICAgIHt7ZWFjaCAkdmFsdWUueXVzaG91Mn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtcHJvLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtc3RvcmUgYmxrY29sb3IxIj57eyR2YWx1ZS5zaXRlX25hbWV9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gaWQ9Int7JHZhbHVlLmRwX2lkfX1fcHJvbW90aW9uIj57eyMkdmFsdWUucHJvbW9kb219fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy1mZWVzIGJsa2NvbG9yNCI+e3skdmFsdWUuY29tbWVudF9udW0gPyAoIuivhOiuuuaVsDoiICskdmFsdWUuY29tbWVudF9udW0pIDogJHZhbHVlLmZlZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy10bGUgYmxrY29sb3IxIj57eyR2YWx1ZS50aXRsZX19PC9zcGFuPlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgIDwvbGk+XG4gICAgICAgIHt7L2VhY2h9fVxuICAgICAgPC91bD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJyaWdodC1wYWdlIHR1cm4tcGFnZSI+XG4gICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OiIgaWQ9ImZ1enp5LW5leHQtcGFnZSIgY2xhc3M9Imd3ZF9iZyIgdGl0bGU9IuS4i+S4gOmhtSI+PC9hPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAjZ3dkYW5nLWIyY19mdXp6eS1kcC1kZXRhaWwge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICNnd2RhbmctYjJjX2Z1enp5LWRwLWRldGFpbCAudHVybi1wYWdlIHtcbiAgICB3aWR0aDoge3t3aWR0aH19cHg7XG4gIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDU1KSxyPW4oMTQpLHM9bigxMiksbD17fSxjPXt9LHA9dm9pZCAwLGQ9dm9pZCAwLGg9dm9pZCAwLHU9ZnVuY3Rpb24oKXtlKCIuY29tcGFyZS1saXN0Iikub2ZmKCksZSgiLm1haW4tY29tcGFyZSAudHJpZ2h0LCAubWFpbi1jb21wYXJlIC50bGVmdCIpLm9mZigpLGUoIi5jb21wYXJlLWJveCIpLm9mZigpLGUoIi5tYWluLWNvbXBhcmUgLnRyaWdodCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpZihsLm5vd3BhZ2UrMSE9PWwucGFnZXMpe2wubm93cGFnZSsrLGUoIi5jb21wYXJlLWxpc3Q+bGkiKS5oaWRlKCk7Zm9yKHZhciB0PWwucGFnZU51bSpsLm5vd3BhZ2U7dDxsLnBhZ2VOdW0qKGwubm93cGFnZSsxKTt0KyspZSgiLmNvbXBhcmUtbGlzdD5saSIpLmVxKHQpLnNob3coKX19KSxlKCIubWFpbi1jb21wYXJlIC50bGVmdCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpZigwIT09bC5ub3dwYWdlKXtsLm5vd3BhZ2UtLSxlKCIuY29tcGFyZS1saXN0PmxpIikuaGlkZSgpO2Zvcih2YXIgdD1sLnBhZ2VOdW0qbC5ub3dwYWdlO3Q8bC5wYWdlTnVtKihsLm5vd3BhZ2UrMSk7dCsrKWUoIi5jb21wYXJlLWxpc3Q+bGkiKS5lcSh0KS5zaG93KCl9fSksZSgiLmNvbXBhcmUtbGlzdCIpLm9uKCJtb3VzZWVudGVyIiwibGkiLGZ1bmN0aW9uKHQpe2UoIi5jb21wYXJlLWxpc3Q+bGkiKS5yZW1vdmVDbGFzcygiYmFyLWl0ZW0taG92ZXIiKTt2YXIgbj1lKHRoaXMpLmF0dHIoImRhdGEtaWQiKTtlKHRoaXMpLmZpbmQoIi5idGNvbS1kZXRhaWwiKS5sZW5ndGg+MD9lKHRoaXMpLmZpbmQoIi5idGNvbS1kZXRhaWwiKS5zaG93KCk6biYmdyhuLGUodGhpcykpLGUodGhpcykuYWRkQ2xhc3MoImJhci1pdGVtLWhvdmVyIil9KSxlKCIuY29tcGFyZS1saXN0Iikub24oIm1vdXNlbGVhdmUiLCJsaSIsZnVuY3Rpb24odCl7dmFyIG49dGhpcztlKG4pLnJlbW92ZUNsYXNzKCJiYXItaXRlbS1ob3ZlciIpLGUobikuZmluZCgiLmJ0Y29tLWRldGFpbCIpLmhpZGUoKX0pLGUoIi5jb21wYXJlLWJveCIpLm9uKCJjbGljayIsZnVuY3Rpb24odCl7aWYoZSh0LnRhcmdldCkuaGFzQ2xhc3MoInR1cm5sZWZ0IikpbShlKHQudGFyZ2V0KSwtMSk7ZWxzZSBpZihlKHQudGFyZ2V0KS5oYXNDbGFzcygidHVybnJpZ2h0IikpbShlKHQudGFyZ2V0KSwxKTtlbHNle3ZhciBuPSIiOyJBIj09PXQudGFyZ2V0Lm5vZGVOYW1lP249dC50YXJnZXQuaHJlZjoiQSI9PT10LnRhcmdldC5wYXJlbnROb2RlLm5vZGVOYW1lP249dC50YXJnZXQucGFyZW50Tm9kZS5ocmVmOiJBIj09PXQudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZS5ub2RlTmFtZSYmKG49dC50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlLmhyZWYpLG4uaW5kZXhPZigidWxhbmQudGFvYmFvLmNvbS9jb3Vwb24iKT4tMSYmKHIubG9nKCJjbGljazpkcGNvdXBvbiIpLHMoImNsaWNrOmRwY291cG9uIikpfX0pfSxtPWZ1bmN0aW9uKHQsbil7dmFyIGk9ZSh0KS5wYXJlbnQoKS5wYXJlbnQoKSxvPWkuZmluZCgiLmFsbC1wcm9kdWN0cyAuYnRjb20tbGlzdCBsaSIpLGE9by5sZW5ndGgscj1OdW1iZXIoaS5maW5kKCIuYmpkLXBhZ2VzIC5jdXJyZW50LXBhZ2UiKS50ZXh0KCkpLHM9TnVtYmVyKGkuZmluZCgiLmJqZC1wYWdlcyAucGFnZS1udW0iKS50ZXh0KCkpO2kuZmluZCgiLmFsbC1wcm9kdWN0cyAuYnRjb20tbGlzdCBsaSIpLmhpZGUoKSwxPT09bj9yKys6bj09PS0xJiZyLS0sMD09PXImJihyPXMpLHI9PT1zKzEmJihyPTEpO2Zvcih2YXIgbD1yKnAuc2hvd0xpc3ROdW0+YT9hOnIqcC5zaG93TGlzdE51bSxjPShyLTEpKnAuc2hvd0xpc3ROdW07YzxsO2MrKyl7by5lcShjKS5zaG93KCk7dmFyIGQ9by5lcShjKS5maW5kKCIuY29tLWl0ZW0taW1nIGltZyIpO2YoZCl9aS5maW5kKCIuYmpkLXBhZ2VzIC5jdXJyZW50LXBhZ2UiKS50ZXh0KHIpfSxmPWZ1bmN0aW9uKHQpe3ZhciBuPXQuYXR0cigiZGF0YS1zcmMiKTtpZihuKXt2YXIgbz1uZXcgSW1hZ2U7by5vbmxvYWQ9ZnVuY3Rpb24oKXsxPT1vLmNvbXBsZXRlJiZlKHQpLmF0dHIoInNyYyIsbikuYXR0cigiZGF0YS1zcmMiLG51bGwpfSxvLm9uZXJyb3I9ZnVuY3Rpb24obil7dmFyIG89ZSh0KVswXTtlKHQpWzBdJiYoby5zcmM9aS5zX3NlcnZlcisiL2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci9ub19pbWcucG5nIixvLnNldEF0dHJpYnV0ZSgiZGF0YS1zcmMiLGkuc19zZXJ2ZXIrIi9pbWFnZXMvZXh0ZW5zaW9ucy9uZXdiYXIvbm9faW1nLnBuZyIpKX0sby5zcmM9bn19LGc9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV0ucHJpY2U9TnVtYmVyKHRbaV0ucHJpY2UucmVwbGFjZSgiLCIsIiIpKS50b0ZpeGVkKDIpLHRbaV0uaW1nX3VybHx8KHRbaV0uaW1nX3VybD10W2ldLnBpY191cmwpLG4mJih0W2ldLm5pY2syPXRbaV0uaXRlbV9sb2NhdGlvbiksdFtpXS5zaXRlX25hbWV8fCh0W2ldLnNpdGVfbmFtZT10W2ldLm5pY2syfHx0W2ldLm5pY2spLGUmJnRbaV0uaW1nX3VybC5tYXRjaCgvX1xkK3hcZCsvKSl7dmFyIG89dFtpXS5pbWdfdXJsLm1hdGNoKC9fKFxkKyl4XGQrLyk7byYmKG89TnVtYmVyKG9bMV0pLG8+MjAwJiYodFtpXS5pbWdfdXJsPXRbaV0uaW1nX3VybCsiXzEwMHgxMDAiKSl9ZWxzZSBlJiYodFtpXS5pbWdfdXJsPXRbaV0uaW1nX3VybCsiXzEwMHgxMDAiKTtyZXR1cm4gdH0sdz1mdW5jdGlvbih0LGkpe3ZhciBhPWNbdF0ubGVuZ3RoLHI9dm9pZCAwLHM9dm9pZCAwO2E+cC5zaG93TGlzdE51bT8ocj0hMCxzPWUod2luZG93KS53aWR0aCgpKTpzPTI2OCphO3ZhciBsPXZvaWQgMCx1PXZvaWQgMDsidG1jb21wYXJlIiE9PXQmJiJ0YmNvbXBhcmUiIT09dHx8KGw9IuacgOi/kemUgOmHjyIsY1t0XS5mcm9tX3NlbGY9PT0hMCYmKGw9IuaAu+mUgOmHjyIpKSwidG1jb21wYXJlIj09PXQ/dT1oOiJ0YmNvbXBhcmUiPT09dCYmKHU9ZCk7dmFyIG09TWF0aC5jZWlsKGEvcC5zaG93TGlzdE51bSksZz1uKDYyKSx3PW8uY29tcGlsZShnKSh7ZGF0YTpjW3RdLHNhbGVfdGxlOmwsc2hvd3BhZ2VzOnIscHJvd2lkdGg6cC5hbGxQcm9kdWN0Vyx0dXJucFc6cC50dXJucFcsZGV0YWlsVzpzLGxpbms6dSxpZDp0LHBhZ2VzOm19KTtlKGkpLmFwcGVuZCh3KTtmb3IodmFyIHg9MDt4PE1hdGgubWluKHAuc2hvd0xpc3ROdW0sYSk7eCsrKXt2YXIgXz1lKGkpLmZpbmQoIi5idGNvbS1kZXRhaWwgbGkgLmNvbS1pdGVtLWltZyBpbWciKS5lcSh4KTtmKF8pfXJ8fGIoYSxpKX0seD1mdW5jdGlvbih0KXtpZighKGkuc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8aS5zaXRlLmluZGV4T2YoInRtYWxsIik+LTEpJiZ0LnN0b3JlJiZ0LnN0b3JlWzBdJiYwIT09dC5zdG9yZVswXS5wcm9kdWN0Lmxlbmd0aCl7dmFyIHI9OTgscz1bXSxwPXQuc3RvcmUubGVuZ3RoLGQ9YS5jYWxCb3R0b21CYXIoKTtsLnBhZ2VOdW09cGFyc2VJbnQoKGQtcikvMTA0KSxsLm1iYXJJdGVtU2hvd051bT1wPmwucGFnZU51bT9sLnBhZ2VOdW06cCxsLnBhZ2VOdW08PTAmJihsLnBhZ2VOdW09MSk7Zm9yKHZhciBoPTA7aDx0LnN0b3JlLmxlbmd0aDtoKyspcy5wdXNoKHQuc3RvcmVbaF0ucHJvZHVjdFswXSksY1t0LnN0b3JlW2hdLnByb2R1Y3RbMF0uZHBfaWRdPWcodC5zdG9yZVtoXS5wcm9kdWN0KTt2YXIgbT1lKCIuY29tcGFyZS1saXN0IGxpIikubGVuZ3RoO2wucGFnZXM9TWF0aC5jZWlsKChwK20pL2wucGFnZU51bSk7dmFyIGY9big2Myksdz1vLmNvbXBpbGUoZikoe2RhdGE6cyxwYWdlTnVtOmwucGFnZU51bX0pO2UoIi5jb21wYXJlLWxpc3QiKS5wcmVwZW5kKHcpLGwubm93cGFnZT0wLGwudG90YWxTaXplPXAsZSgiLmNvbXBhcmUtYm94IikuY3NzKCJ3aWR0aCIsMTAyKmwubWJhckl0ZW1TaG93TnVtKyJweCIpLDE9PT1sLnBhZ2VzP2UoIi5tYmFyLXR1cm5wYWdlIikuaGlkZSgpOmUoIi5tYmFyLXR1cm5wYWdlIikuc2hvdygpLHUoKX19LGI9ZnVuY3Rpb24odCxuKXt2YXIgaT1lKHdpbmRvdykud2lkdGgoKSxvPW4ub2Zmc2V0KCkubGVmdCxhPW4ub3V0ZXJXaWR0aCgpLHI9bi5maW5kKCIuYnRjb20tZGV0YWlsIikscz0yNjgqdCsyLGw9bythLzItcy8yO2w8MCYmKGw9MCksbCtzPmkmJihsPWktcy0yKSxyLmNzcygibGVmdCIsbCsicHgiKX0sXz1mdW5jdGlvbih0KXtpZighdC5wcm9kdWN0fHx0LnByb2R1Y3QmJjA9PT10LnByb2R1Y3QubGVuZ3RoKXJldHVybiB0O2Zvcih2YXIgZT1bXSxuPXt9LGk9MDtpPHQucHJvZHVjdC5sZW5ndGg7aSsrKW5bdC5wcm9kdWN0W2ldLnNpdGVfbmFtZTJdP25bdC5wcm9kdWN0W2ldLnNpdGVfbmFtZTJdLnByb2R1Y3QucHVzaCh0LnByb2R1Y3RbaV0pOm5bdC5wcm9kdWN0W2ldLnNpdGVfbmFtZTJdPXtwcm9kdWN0Olt0LnByb2R1Y3RbaV1dfTtmb3IodmFyIG8gaW4gbilvJiZlLnB1c2gobltvXSk7cmV0dXJue3N0b3JlOmV9fSx2PWZ1bmN0aW9uKHQpe3ZhciBpPW4oNjMpLGE9MDtpZih0LnRtYWxsJiZ0LnRtYWxsLnByb2R1Y3Qpe3ZhciByPXtkcF9pZDoidG1jb21wYXJlIixzaXRlX25hbWU6IuWkqeeMq+WVhuWfjiIscHJpY2U6dC50bWFsbC5taW5fcHJpY2V9O2MudG1jb21wYXJlPWcodC50bWFsbC5wcm9kdWN0LCEwKTt2YXIgcz1lKCIuY29tcGFyZS1saXN0PmxpIikuZXEoNSk7MD09PXMubGVuZ3RoJiYocz1lKCIuY29tcGFyZS1saXN0PmxpOmxhc3QtY2hpbGQiKSksMD09PXMubGVuZ3RoP2UoIi5jb21wYXJlLWxpc3QiKS5hcHBlbmQoby5jb21waWxlKGkpKHtkYXRhOltyXX0pKTpzLmFmdGVyKG8uY29tcGlsZShpKSh7ZGF0YTpbcl19KSksYSsrfWlmKHQudGFvYmFvJiZ0LnRhb2Jhby5wcm9kdWN0KXt2YXIgcj17ZHBfaWQ6InRiY29tcGFyZSIsc2l0ZV9uYW1lOiLmt5jlrp0iLHByaWNlOnQudGFvYmFvLm1pbl9wcmljZX07Yy50YmNvbXBhcmU9Zyh0LnRhb2Jhby5wcm9kdWN0LCEwLCEwKSxlKCIuY29tcGFyZS1saXN0IikuYXBwZW5kKG8uY29tcGlsZShpKSh7ZGF0YTpbcl19KSksYSsrfWwudG90YWxTaXplPWwudG90YWxTaXplK2E7dmFyIHA9TWF0aC5jZWlsKGwudG90YWxTaXplL2wucGFnZU51bSk7MSE9PWwucGFnZXMmJmwucGFnZXM/bC5wYWdlcz1wOihwPjEmJihlKCIubWJhci10dXJucGFnZS50cmlnaHQiKS5zaG93KCksbC5wYWdlcz1wKSxsLm1iYXJJdGVtU2hvd051bT1sLnRvdGFsU2l6ZT5sLnBhZ2VOdW0/bC5wYWdlTnVtOmwudG90YWxTaXplLGUoIi5jb21wYXJlLWJveCIpLmNzcygid2lkdGgiLDEwMipsLm1iYXJJdGVtU2hvd051bSsicHgiKSxlKCIubWJhci10dXJucGFnZSIpLmhpZGUoKSksdSgpfTt0LmV4cG9ydHMucmVuZGVyQnQ9ZnVuY3Rpb24odCl7dC50YW9iYW8gaW5zdGFuY2VvZiBBcnJheXx8IXQudGFvYmFvLm1vcmVfbGlua3x8KGQ9dC50YW9iYW8ubW9yZV9saW5rKSx0LnRtYWxsIGluc3RhbmNlb2YgQXJyYXl8fCF0LnRtYWxsLm1vcmVfbGlua3x8KGg9dC50bWFsbC5tb3JlX2xpbmspLHB8fChwPWEuaW5pdCgpKSx2KHQpLCIzNjAiIT09aS5mcm9tX2RldmljZSYmKG4oNjQpLmluaXQodC50bWFsbC5wcm9kdWN0LCJ0bWFsbCIsITAsdC50bWFsbC5taW5fcHJpY2UpLG4oNjQpLmluaXQodC50YW9iYW8ucHJvZHVjdCwidGFvYmFvIiwhMCx0LnRhb2Jhby5taW5fcHJpY2UpKX0sdC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7dC5iMmMmJnQuYjJjLnN0b3JlP3godC5iMmMpOnQuYjJjX2Z1enp5JiYodC5iMmMyPV8odC5iMmNfZnV6enkpLHgodC5iMmMyKSkscD1hLmluaXQoKX19KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9ImJ0Y29tLWRldGFpbCB7e2lmIHBhZ2VzID4gMX19IGhhc21vcmVwYWdlIHt7L2lmfX0iIHN0eWxlPSJ3aWR0aDp7e2RldGFpbFd9fXB4O3t7aWYgc2hvd3BhZ2VzfX1sZWZ0OjBweDt7ey9pZn19Ij5cbiAge3tpZiBzaG93cGFnZXN9fVxuICA8ZGl2IGNsYXNzPSJ0dXJucGFnZS1kaXYgdHVybnBhZ2UtbGVmdCIgc3R5bGU9IndpZHRoOnt7dHVybnBXfX1weDtoZWlnaHQ6IDEwMCU7Ij5cbiAgICA8c3BhbiBjbGFzcz0iZ3dkX2JnIHR1cm5sZWZ0Ij48L3NwYW4+XG4gIDwvZGl2PlxuICB7ey9pZn19XG4gIDxkaXYgY2xhc3M9ImFsbC1wcm9kdWN0cyIgc3R5bGU9Int7aWYgc2hvd3BhZ2VzfX0gd2lkdGg6e3twcm93aWR0aH19cHg7IHt7L2lmfX0iPlxuICAgIDx1bCBjbGFzcz0iYnRjb20tbGlzdCI+XG4gICAgICB7e2VhY2ggZGF0YX19XG4gICAgICAgIDxsaSBjbGFzcz0iZHAtaW5kZXgte3skaW5kZXh9fSI+XG4gICAgICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iY29tLWl0ZW0taW1nIj5cbiAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci8xMjAuZ2lmIiBkYXRhLXNyYz0ie3skdmFsdWUuaW1nX3VybH19Ij5cbiAgICAgICAgICAgIHt7aWYgJHZhbHVlLnRzcGFufX1cbiAgICAgICAgICAgICAgICB7eyMkdmFsdWUudHNwYW59fVxuICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJjb20taXRlbS1vdGluZm8iPlxuICAgICAgICAgICAge3tpZiAkdmFsdWUudGF9fVxuICAgICAgICAgICAgICB7eyMkdmFsdWUudGF9fVxuICAgICAgICAgICAge3tlbHNlfX1cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpY2VpbmZvLWJveCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2VudGVyLWJveCI+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tLXByaWNlIHByaWZvbnRmIj7CpXt7JHZhbHVlLnByaWNlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICB7e2lmICR2YWx1ZS5wcm9tbzJ9fVxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRwLXByb21vdGlvbiBnd2RfYmciPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcC1wcm9tb3Rpb24tZGV0YWlsIj5cbiAgICAgICAgICAgICAgICAgICAgICB7e2VhY2ggJHZhbHVlLnByb21vMn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtcHJvLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgICAge3tpZiAkdmFsdWUuY291cG9uMn19XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtY291cG9uIGd3ZF9iZyI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRwLWNvdXBvbi1kZXRhaWwiPlxuICAgICAgICAgICAgICAgICAgICAgIHt7ZWFjaCAkdmFsdWUuY291cG9uMn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtY291cG9uLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgICAge3tpZiAkdmFsdWUueXVzaG91Mn19XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAteXVzaG91IGd3ZF9iZyI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRwLXl1c2hvdS1kZXRhaWwiPlxuICAgICAgICAgICAgICAgICAgICAgIHt7ZWFjaCAkdmFsdWUueXVzaG91Mn19XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZHAtcHJvLWl0ZW0iPnt7JHZhbHVlfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAge3svZWFjaH19XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAge3svaWZ9fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICB7ey9pZn19XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tLXN0b3JlIGJsa2NvbG9yMSI+e3skdmFsdWUuc2l0ZV9uYW1lfX08L3NwYW4+XG4gICAgICAgICAgICB7e2lmICR2YWx1ZS5jb21tZW50X251bX19XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tLWZlZSBibGtjb2xvcjQiPnt7JHZhbHVlLmNvbW1lbnRfbnVtID8gKCLor4TorrrmlbA6IiArJHZhbHVlLmNvbW1lbnRfbnVtKSA6ICR2YWx1ZS5mZWUgfX08L3NwYW4+XG4gICAgICAgICAgICB7e2Vsc2UgaWYgc2FsZV90bGV9fVxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY29tLWZlZSBibGtjb2xvcjQiPnt7c2FsZV90bGV9fXt7JHZhbHVlLnZvbHVtZX195Lu2PC9zcGFuPlxuICAgICAgICAgICAge3tlbHNlfX1cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbS1mZWUgYmxrY29sb3I0Ij57eyR2YWx1ZS5mZWV9fTwvc3Bhbj5cbiAgICAgICAgICAgIHt7L2lmfX1cbiAgICAgICAgICAgIDxwIGNsYXNzPSJjb20tdGxlIiB0aXRsZT0ie3skdmFsdWUudGl0bGV9fSI+XG4gICAgICAgICAgICAgIHt7JHZhbHVlLnRpdGxlfX1cbiAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvbGk+XG4gICAgICB7ey9lYWNofX1cbiAgICA8L3VsPlxuICA8L2Rpdj5cbiAge3tpZiBzaG93cGFnZXN9fVxuICAgIHt7aWYgbGluayAmJiBzYWxlX3RsZX19XG4gICAgPGEgaHJlZj0ie3tsaW5rfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0idGItbW9yZWxpbmsgYmxrY29sb3I0Ij7mn6XnnIvlhajpg6jnu5Pmnpw8ZW0gY2xhc3M9InNlZV9hbGxfaWNvbiI+PjwvZW0+PC9hPlxuICAgIHt7L2lmfX1cbiAgPGRpdiBjbGFzcz0idHVybnBhZ2UtZGl2IHR1cm5wYWdlLXJpZ2h0IiBzdHlsZT0id2lkdGg6e3t0dXJucFd9fXB4O2hlaWdodDogMTAwJTsiPlxuICAgIDxzcGFuIGNsYXNzPSJnd2RfYmcgdHVybnJpZ2h0Ij48L3NwYW4+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJiamQtcGFnZXMgYmxrY29sb3I0Ij5cbiAgICAgIOesrCZuYnNwO1xuICAgICAgPHNwYW4gY2xhc3M9ImN1cnJlbnQtcGFnZSI+MTwvc3Bhbj5cbiAgICAgICZuYnNwO+mhte+8jOWFsVxuICAgICAgPHNwYW4gY2xhc3M9InBhZ2UtbnVtIGJsa2NvbG9yNCI+e3twYWdlc319PC9zcGFuPlxuICAgICAgJm5ic3A76aG1XG4gIDwvZGl2PlxuICB7ey9pZn19XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0ne3tlYWNoIGRhdGF9fVxyXG4gIDxsaSBjbGFzcz0iaW5kZXhfe3skaW5kZXh9fSIgZGF0YS1pZD0ie3skdmFsdWUuZHBfaWR9fSI+XHJcbiAgICA8ZGl2IGNsYXNzPSJpdGVtLWJveC1kZXYiPlxyXG4gICAgICA8c3BhbiBjbGFzcz0iY29tLWl0ZW0tcHJpIHByaWZvbnRmIj7CpXt7JHZhbHVlLnByaWNlfX08L3NwYW4+XHJcbiAgICAgIDxzcGFuIGNsYXNzPSJjb20taXRlbS1zdG9yZSBibGtjb2xvcjEiPnt7JHZhbHVlLnNpdGVfbmFtZTIgfHwgJHZhbHVlLnNpdGVfbmFtZX19PC9zcGFuPlxyXG4gICAgPC9kaXY+XHJcbiAgPC9saT5cclxue3svZWFjaH19J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDY1KSxhPXt0bWFsbDpbXSx0YW9iYW86W119LHI9e30scz17fSxsPXt9LGM9e30scD1mdW5jdGlvbih0LG8scil7bFtvXSsrLHQuZGF0YSYmYVtvXS5wdXNoKHQuZGF0YSksbFtvXT09PWNbb10mJihyP2QobyxyKTpoKG8pLGUuYWxpU2l0ZSYmKCIxIj09PWUucnVubWluaUNvdXA/big2NikuaW5pdChhLCIuZ3dkLW1pbmliYXItYmciKTplLnJ1bm1pbmlDb3VwfHwoZS5ydW5taW5pQ291cG9uMj0hMCxpKGRvY3VtZW50KS5vbigicnVubWluaUNvdXBvbjIiLGZ1bmN0aW9uKCl7big2NikuaW5pdChhLCIuZ3dkLW1pbmliYXItYmciKX0pKSkpfSxkPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPWFbdF0sbz0wO288ZS5sZW5ndGg7bysrKWZvcih2YXIgbD0wO2w8bi5sZW5ndGg7bCsrKWlmKGVbb10mJm5bbF0mJmVbb10ubnVtX2lpZD09bltsXS5yZXFpZCl7dmFyIGM9KE51bWJlcihlW29dLnByaWNlKS1uW2xdLmNvdXBvbi5jb3Vwb25fbW9uZXkpLnRvRml4ZWQoMik7TnVtYmVyKGMpPHJbdF0mJihyW3RdPWMsc1t0XT0hMCk7dmFyIHA9bltsXS5jb3Vwb24uY291cG9uX21vbmV5O2Vbb10udXJsPW5bbF0uY2xpY2tfdXJsMixlW29dLnRzcGFuPSc8c3BhbiBjbGFzcz0iY291cG9uX3NwYW4iPumihicrcCsi5YWD5Yi4PC9zcGFuPiIsZVtvXS50YT0nPGRpdiBjbGFzcz0iY291cG9uX3ByaWNlIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvdXBvbl9wcmljZV9zcGFuIj5cbiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY291LXByaS1zcDEiPuWIuOWQjuS7tzo8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvdS1wcmktc3AyIHByaWZvbnRmIj7CpScrYysnPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3UtcHJpLXNwMyBwcmlmb250ZiI+wqUnK2Vbb10ucHJpY2UrIjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+IjticmVha31zW3RdJiYoInRhb2JhbyI9PXQ/aSgnLmNvbXBhcmUtbGlzdCBsaVtkYXRhLWlkPSJ0YmNvbXBhcmUiXSAuY29tLWl0ZW0tcHJpJykudGV4dCgiwqUiK3JbdF0pOmkoJy5jb21wYXJlLWxpc3QgbGlbZGF0YS1pZD0idG1jb21wYXJlIl0gLmNvbS1pdGVtLXByaScpLnRleHQoIsKlIityW3RdKSl9LGg9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPWkoIiMiK3QrIi1pdGVtLWxpc3QgbGkiKSxuPWUubGVuZ3RoLG89YVt0XSxsPTA7bDxuO2wrKylmb3IodmFyIGM9ZS5lcShsKS5hdHRyKCJkYXRhLWlkIikscD0wO3A8by5sZW5ndGg7cCsrKWlmKG9bcF0mJm9bcF0ucmVxaWQ9PWMpe2UuZXEobCkuZmluZCgiLnNtYWxsLWltZyIpLmFwcGVuZChpKCc8c3BhbiBjbGFzcz0iY291cG9uX3NwYW4iPumihicrb1twXS5jb3Vwb24uY291cG9uX21vbmV5KyLlhYPliLg8L3NwYW4+IikpO3ZhciBkPWUuZXEobCkuZmluZCgic3Bhbi5nd2QtcHJpY2UiKS50ZXh0KCksaD0oTnVtYmVyKGQucmVwbGFjZSgvW8Kl77+lXS9nLCIiKSktb1twXS5jb3Vwb24uY291cG9uX21vbmV5KS50b0ZpeGVkKDIpO051bWJlcihoKTxyW3RdJiYoclt0XT1oLHNbdF09ITApLGUuZXEobCkuZmluZCgiLmd3ZC1wcmljZSIpLmFmdGVyKGkoJzxkaXYgY2xhc3M9ImNvdXBvbl9wcmljZSI+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb3UtcHJpLXNwMSI+5Yi45ZCO5Lu3Ojwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvdS1wcmktc3AyIHByaWZvbnRmIj7CpScraCsnPC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iY291LXByaS1zcDMgcHJpZm9udGYiPicrZCsiPC9zcGFuPlxuICAgICAgICAgICAgPC9kaXY+IikpLnJlbW92ZSgpLAplLmVxKGwpLmZpbmQoImEiKS5hdHRyKCJocmVmIixvW3BdLmNsaWNrX3VybDIpfXNbdF0mJigidGFvYmFvIj09dD9pKCIjdGJfY29tcGFyZSAudGFiLXNwMiIpLnRleHQoIsKlIityW3RdKTppKCIjdG1fY29tcGFyZSAudGFiLXNwMiIpLnRleHQoIsKlIityW3RdKSl9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKHQsbixpLGEpe2lmKCFlLmZvcmJpZENvdXBvbiYmdCYmdC5sZW5ndGgpe3Jbbl09YSxjW25dPXQubGVuZ3RoLGxbbl09MCxpJiYoaT10KTt2YXIgcz1mdW5jdGlvbih0KXtwKHQsbixpKX0sZD0iMTAwMDMiO2UuYWxpU2l0ZSYmKGQ9IjEwMDA0Iik7Zm9yKHZhciBoPTA7aDx0Lmxlbmd0aDtoKyspby5pbml0KHRbaF0ubnVtX2lpZCxkLHMpfX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIG49ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgWE1MSHR0cFJlcXVlc3Q7bi5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixmdW5jdGlvbigpe3RyeXtlKEpTT04ucGFyc2Uobi5yZXNwb25zZVRleHQpKX1jYXRjaCh0KXtlKHt9KX19KSxuLm9wZW4oIkdFVCIsdCwhMCksbi5zZW5kKCl9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKHQsaSxvKXtpZighdClyZXR1cm4gdm9pZChvJiZvKCkpO3ZhciBhPSJvcGVuLmxlc2ljbHViLmNuIjsoImZpcmVmb3giPT09ZS5mcm9tX2RldmljZXx8ImJpamlhZ28iPT09ZS5mcm9tX2RldmljZSYmbmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvY2FsZUxvd2VyQ2FzZSgpLmluZGV4T2YoImZpcmVmb3giKT4tMSkmJihhPSJicm93c2VyLmd3ZGFuZy5jb20vYWRiYXRzIik7dmFyIHI9bG9jYXRpb24ucHJvdG9jb2wrIi8vIithKyIvY291cG9uL2dldF9leHQvMTAwMDUvIitpKyIvIit0O24ocixmdW5jdGlvbihuKXtuLmRhdGEmJihuLmRhdGEucmVxaWQ9dCxuLmRhdGEuY2xpY2tfdXJsMj1lLnVfc2VydmVyKyIvP3VybD0iK2VuY29kZVVSSUNvbXBvbmVudChuLmRhdGEuY2xpY2tfdXJsKSksbyYmbyhuKX0pfX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDIyKSxhPW4oMTMpLHI9KG4oMjQpLG4oNDcpKSxzPW4oNDApLGw9MCxjPXZvaWQgMCxwPTAsZD12b2lkIDA7dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCxuKXtkPW47dmFyIGk9YS5nZXQoInRiRGF0YSIpO2lmKHArKyxpLnNzPT09cClpZigwPT09dC50bWFsbC5sZW5ndGgmJjA9PT10LnRhb2Jhby5sZW5ndGgpaCh1KTtlbHNle3ZhciBvPWUuc2l0ZSxsPXIuZ2V0U2l0ZUlkKG8pO3MuaW5pdChsLGZ1bmN0aW9uKG4pe24mJm4+MCYmKGUuZHAub2xkUHJpY2U9bixlLmRwLnByaWNlPW4pLG0odCxpKX0pfX07dmFyIGg9ZnVuY3Rpb24odCl7cmV0dXJufSx1PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7ZSsrKXRbZV0uY2xpY2tfdXJsPXRbZV0udXJsLHRbZV0ucHJvbW9Qcmk9dFtlXS5jdXJyZW50UHJpY2UsdFtlXS5wcmljZT10W2VdLm9yaWdpblByaWNlLHRbZV0uY291cG9uX21vbmV5PXRbZV0uY291cG9uSW5mbztnKHQpfSxtPWZ1bmN0aW9uKHQsbil7dmFyIGk9W107aWYobi50bW0mJnQudG1hbGwubGVuZ3RoPjApZm9yKHZhciBvPTA7bzxuLnRtYWxsLnByb2R1Y3QubGVuZ3RoO28rKylmb3IodmFyIGE9bi50bWFsbC5wcm9kdWN0W29dLHI9MDtyPHQudG1hbGwubGVuZ3RoO3IrKyl7dmFyIHM9dC50bWFsbFtyXTtpZihhLm51bV9paWQ9PT1zLnJlcWlkKXtpZihhLmNsaWNrX3VybD1zLmNsaWNrX3VybCxhLmNsaWNrX3VybDI9cy5jbGlja191cmwyLGEuY291cG9uX21vbmV5PXMuY291cG9uLmNvdXBvbl9tb25leSxhLnNpY29uPSJodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9mYXZpY29uLzgzLmljbyIsYS5wcm9tb1ByaT0oTnVtYmVyKGEucHJpY2UpLXMuY291cG9uLmNvdXBvbl9tb25leSkudG9GaXhlZCgyKSxOdW1iZXIoYS5wcm9tb1ByaSk+ZS5kcC5wcmljZSljb250aW51ZTtpLnB1c2goYSl9fWlmKG4udGJiJiZ0LnRhb2Jhby5sZW5ndGg+MClmb3IodmFyIG89MDtvPG4udGFvYmFvLnByb2R1Y3QubGVuZ3RoO28rKylmb3IodmFyIGE9bi50YW9iYW8ucHJvZHVjdFtvXSxyPTA7cjx0LnRhb2Jhby5sZW5ndGg7cisrKXt2YXIgcz10LnRhb2Jhb1tyXTtpZihhLm51bV9paWQ9PT1zLnJlcWlkKXtpZihhLmNsaWNrX3VybD1zLmNsaWNrX3VybCxhLmNsaWNrX3VybDI9cy5jbGlja191cmwyLGEuY291cG9uX21vbmV5PXMuY291cG9uLmNvdXBvbl9tb25leSxhLnNpY29uPSJodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9mYXZpY29uLzEyMy5pY28iLGEucHJvbW9Qcmk9KE51bWJlcihhLnByaWNlKS1zLmNvdXBvbi5jb3Vwb25fbW9uZXkpLnRvRml4ZWQoMiksTnVtYmVyKGEucHJvbW9QcmkpPmUuZHAucHJpY2UpY29udGludWU7aS5wdXNoKGEpfX1nKGkpfSxmPWZ1bmN0aW9uKCl7dmFyIHQ9aSgiI21pbmlDb3Vwb25Db20gdWwiKSxlPU51bWJlcih0LmNzcygidG9wIikucmVwbGFjZSgicHgiLCIiKSk7cmV0dXJuIGUtPTYyLGwrKyxsPT09Yz8odC5jc3MoInRvcCIsIjBweCIpLHZvaWQobD0wKSk6dm9pZCB0LmFuaW1hdGUoe3RvcDplKyJweCJ9LDYwMCl9LGc9ZnVuY3Rpb24odCl7aWYodD10LnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gTnVtYmVyKHQucHJvbW9QcmkpPk51bWJlcihlLnByb21vUHJpKT8xOk51bWJlcih0LnByb21vUHJpKT09PU51bWJlcihlLnByb21vUHJpKT8wOi0xfSksYz10Lmxlbmd0aCwwIT09Yyl7dmFyIGE9big2Nyk7aShkKS5hcHBlbmQoby5jb21waWxlKGEpKHtkYXRhOnQsZm1kdjplLmZyb21fZGV2aWNlfSkpLHNldEludGVydmFsKGYsNWUzKX19fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGlkPSJtaW5pQ291cG9uQ29tIiBjbGFzcz0ie3tmbWR2fX0iPlxuICA8dWw+XG4gICAge3tlYWNoIGRhdGF9fVxuICAgICAgPGxpIHt7aWYgJHZhbHVlLnNhbWVfc3R5bGV9fSBjbGFzcz0iaXNTYW1lc3R5bGUiIHt7L2lmfX0+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJzYW1lc3R5bGUiPuWQjOasvjwvc3Bhbj5cbiAgICAgICAgPGltZyBzcmM9Int7JHZhbHVlLnNpY29ufX0iIGNsYXNzPSJtaW5pLXNpdGUtaWNvbiBtaW5pLXNpdGUtaWNvbjEiPlxuICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS5jbGlja191cmwyfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ibWluaS1jYy10bGUiPnt7JHZhbHVlLnRpdGxlfX08L2E+XG4gICAgICAgIDxkaXYgY2xhc3M9ImNjLW90aGVyLWluZm8iPlxuICAgICAgICAgIDxpbWcgc3JjPSJ7eyR2YWx1ZS5zaWNvbn19IiBjbGFzcz0ibWluaS1zaXRlLWljb24iPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJjYy1ub3ctcHJpY2UiPuWIuOWQjuS7t++8mu+/pXt7JHZhbHVlLnByb21vUHJpfX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImNjLW9sZC1wcmljZSI+77+le3skdmFsdWUucHJpY2V9fTwvc3Bhbj5cbiAgICAgICAgICA8YSBjbGFzcz0iY2xpY2syZ2V0MiIgaHJlZj0ie3skdmFsdWUuY2xpY2tfdXJsMn19IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0iYzJnMi1zcDEiPu+/pXt7JHZhbHVlLmNvdXBvbl9tb25leX19PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImMyZzItc3AyIj7pooblj5Y8L3NwYW4+XG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxlbSBjbGFzcz0iY291cG9uX2dpZiI+PC9lbT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2xpPlxuICAgIHt7L2VhY2h9fVxuICA8L3VsPlxuICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgICNtaW5pQ291cG9uQ29tIHtcbiAgICAgIHdpZHRoOiA0NjBweDtcbiAgICAgIGhlaWdodDogNjJweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjRTZFOUVCO1xuICAgICAgdG9wOiAtMXB4O1xuICAgIH1cbiAgICAjbWluaUNvdXBvbkNvbS5lYXN0ICNtaW5pQ291cG9uQ29tLnVuaXZlcnNhbCB7XG4gICAgICB0b3A6IDBweDtcbiAgICB9XG4gICAgLmd3ZF9rYW9sYSAjbWluaUNvdXBvbkNvbSB7XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gKiB7XG4gICAgICBmb250LWZhbWlseTogIk1pY3Jvc29mdCBZYUhlaSI7XG4gICAgfVxuICAgICNtaW5pQ291cG9uQ29tIHVsIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMHB4O1xuICAgIH1cbiAgICAjbWluaUNvdXBvbkNvbSB1bCBsaSB7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgaGVpZ2h0OiA2MnB4O1xuICAgICAgd2lkdGg6ICA0NjBweDtcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gdWwgbGk+KiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gLnNhbWVzdHlsZSsubWluaS1zaXRlLWljb24ge1xuICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIH1cbiAgICAjbWluaUNvdXBvbkNvbSAubWluaS1zaXRlLWljb24ge1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDExcHg7XG4gICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgfVxuICAgIC5jYy1vdGhlci1pbmZvIC5taW5pLXNpdGUtaWNvbiB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAuaXNTYW1lc3R5bGUgLmNjLW90aGVyLWluZm8gLm1pbmktc2l0ZS1pY29uIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gLm1pbmktY2MtdGxlIHtcbiAgICAgIHdpZHRoOiAzOThweDtcbiAgICAgIGhlaWdodDogMzJweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBsaW5lLWhlaWdodDogMzJweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjNDA0NTQ3O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgICNtaW5pQ291cG9uQ29tIC5jYy1ub3ctcHJpY2Uge1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICNGRjNCNUM7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTJweDtcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gLmlzU2FtZXN0eWxlIC5jYy1ub3ctcHJpY2Uge1xuICAgICAgbWFyZ2luLWxlZnQ6IDBweDtcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gLmNvdXBvbl9naWYge1xuICAgICAgYmFja2dyb3VuZDogdXJsKFwnaHR0cHM6Ly9jZG4uZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9uZXdiYXIvdHVybi5naWZcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBmbG9hdDogcmlnaHQhaW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDU2cHg7XG4gICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDExcHg7XG4gICAgfVxuICAgICNtaW5pQ291cG9uQ29tIC5jbGljazJnZXQyIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybChcJ2h0dHBzOi8vY2RuLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvbmV3YmFyL2NvdXBvbl8wMS5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBmbG9hdDogcmlnaHQhaW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgd2lkdGg6IDk2cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEycHg7XG4gICAgfVxuICAgICNtaW5pQ291cG9uQ29tIC5jbGljazJnZXQyIHNwYW4ge1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMXB4O1xuICAgIH1cbiAgICAjbWluaUNvdXBvbkNvbSAuYzJnMi1zcDEge1xuICAgICAgd2lkdGg6IDUwcHg7XG4gICAgICBjb2xvcjogI0ZGM0I1QztcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4IWltcG9ydGFudDtcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gLmMyZzItc3AyIHtcbiAgICAgIHdpZHRoOiA0NHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI0cHghaW1wb3J0YW50O1xuICAgICAgY29sb3I6ICNmZmYhaW1wb3J0YW50O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICAjbWluaUNvdXBvbkNvbSAuY2Mtb3RoZXItaW5mbyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgIH1cbiAgICAjbWluaUNvdXBvbkNvbSAuY2Mtb3RoZXItaW5mbyAqIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAjbWluaUNvdXBvbkNvbSAuY2Mtb2xkLXByaWNlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjN0Q3RTgwO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gICAgfVxuICAgICNtaW5pQ291cG9uQ29tIC5zYW1lc3R5bGUge1xuICAgICAgYmFja2dyb3VuZDogI0ZGRjFGNDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNGRjNCNUM7XG4gICAgICB3aWR0aDogMzBweDtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDExcHg7XG4gICAgICBtYXJnaW4tdG9wOiA3cHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogI0ZGM0I1QztcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICNtaW5pQ291cG9uQ29tIC5pc1NhbWVzdHlsZSAuc2FtZXN0eWxlIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgI21pbmlDb3Vwb25Db20gLmlzU2FtZXN0eWxlIC5taW5pLXNpdGUtaWNvbjEge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gIDwvc3R5bGU+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMjQpLGE9bigyMykscj1uKDIyKSxzPW4oMTMpLGw9bigxMiksYz1uKDU2KSxwPW4oNjkpLGQ9dm9pZCAwLGg9ezE6IuS4reWbvSIsMjI4OiLnvo7lm70iLDIyOToi5pel5pysIiwyNDY6IuW+t+WbvSIsMjY2OiLoi7Hlm70iLDM2NToi5rOV5Zu9IiwzNjY6IuWKoOaLv+WkpyJ9LHU9ezIyODoiVVNEIiwyMjk6IkpQWSIsMjQ2OiJFVVIiLDI2NjoiR0JQIiwzNjU6IkVVUiIsMzY2OiJDQUQifSxtPXsxOiLCpSIsMjI4OiIkIiwyMjk6IuWGhiIsMjQ2OiJFVVIiLDI2NjoiwqMiLDM2NToiRVVSIiwzNjY6IkNETiQifSxmPSIjIitlLmV4dE5hbWUrIi1hbWF6b24tZHAiLGc9IiMiK2UuZXh0TmFtZSsiLWFtYXpvbi1kcC1kZXRhaWwiLHc9ZnVuY3Rpb24odCxuKXt2YXIgaT1lLnNlcnZlcisiL2V4dGVuc2lvbj9hYz1hbWF6b25HbG9iYWwmZHBfaWQ9Iit0O28uZ2V0KGkpLmRvbmUoZnVuY3Rpb24odCl7dCYmdC5sZW5ndGg+MCYmbih0KX0pfSx4PWZ1bmN0aW9uKHQpe2Zvcih2YXIgbj0wLGk9dC5sZW5ndGg7bjxpO24rKyl7dmFyIG89dFtuXS5kcF9pZC5zcGxpdCgiLSIpWzFdOyIxIj09PXRbbl0ubm93cGFnZT90W25dLnNpdGVOYW1lPWhbb10rIuS6mumprOmAiijlvZPliY3llYbln44pIjp0W25dLnNpdGVOYW1lPWhbb10rIuS6mumprOmAiiI7dmFyIHI9KE51bWJlcih0W25dLnByaSkvMTAwKS50b0ZpeGVkKDIpLHM9IiI7aWYoIjEiIT09byl7dmFyIGw9IiI7bD0iMjI5Ij09PW8/cittW29dOm1bb10rcixzPWEocix1W29dKSxyPSLCpSIrcysoIigiK2wrIikiKX1lbHNlIHM9cixyPSLCpSIrcjt0W25dLnRpdGxlPXRbbl0udGxlLHRbbl0uaW1nX3VybD10W25dLmltZyx0W25dLnNpdGVfbmFtZT0i5Lit5Zu95Lqa6ams6YCKIix0W25dLmZlZT0i5LiN5ZCM5Y2W5a626L+Q6LS55LiN5ZCMIjt2YXIgYz17c2l0ZV9pZDpvLHVybDp0W25dLnVybCxtb2Q6ImFtYXpvbl9nbG9iYWwiLHVuaW9uOmUudW5pb24uc3BsaXQoIl8iKVsxXSxkcF9pZDp0W25dLmRwX2lkfTt0W25dLnVybD1wLmluaXQoYyksdFtuXS5wcmljZT1yLHRbbl0ucHVyZVByaWNlPXN9cmV0dXJuIHQuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiBOdW1iZXIodC5wdXJlUHJpY2UpLU51bWJlcihlLnB1cmVQcmljZSl9KSx0fSxiPWZ1bmN0aW9uKHQpe3Q9eCh0KTt2YXIgZT1zLmdldCgicGVybWFuZW50Iik7InRvcCI9PT1lLnN0eWxlJiYoXyh0WzBdLnByaSkseSh0KSkseih0KSx2KCl9LF89ZnVuY3Rpb24odCl7dmFyIGU9TnVtYmVyKHQpLzEwMCxvPW4oNTgpO2koIiNhbWF6b25fY29tcGFyZSIpLmFwcGVuZChyLmNvbXBpbGUobykoe3N0b3JlX3RsZToi5Lqa6ams6YCK5rW35aSW6LSt77yaIixtaW5fcHJpY2U6ZX0pKS5zaG93KCl9LHY9ZnVuY3Rpb24oKXt2YXIgdD12b2lkIDA7aShmKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtpKGcpLmFkZENsYXNzKCJfbXNob3ZlciIpLGkoZikuYWRkQ2xhc3MoIl9tc2hvdmVyIiksbCgidHJhY2s6YW1hem9uX2dsb2JhbDptc2hvdmVyIil9KSxpKGYpLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe3Q9c2V0VGltZW91dChmdW5jdGlvbigpe2koZykucmVtb3ZlQ2xhc3MoIl9tc2hvdmVyIiksaShmKS5yZW1vdmVDbGFzcygiX21zaG92ZXIiKX0sMjAwKX0pLGkoZykub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHQpLGkoZykuYWRkQ2xhc3MoIl9tc2hvdmVyIiksaShmKS5hZGRDbGFzcygiX21zaG92ZXIiKX0pLGkoZykub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7aShnKS5yZW1vdmVDbGFzcygiX21zaG92ZXIiKSxpKGYpLnJlbW92ZUNsYXNzKCJfbXNob3ZlciIpfSksaSgiI2FtYXpvbl9kcC1pdGVtLWxpc3QgbGkiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7bCgidHJhY2s6YW1hem9uX2dsb2JhbDpjbGljayIpfSl9LHk9ZnVuY3Rpb24odCl7aWYoZClyZXR1cm4gdm9pZCBpKCIjYW1hem9uX2NvbXBhcmUiKS5maW5kKCIudG9wLWNvbXBhcmUtZGV0YWlsIikuc2hvdygpO2Q9ITA7dmFyIG89big3MCksYT1yLmNvbXBpbGUobykoe2RhdGE6e3Byb2R1Y3Q6dCxpbWdMb2FkOmUuaW1nTG9hZH0scGFnZXM6MX0pO2koIiNhbWF6b25fY29tcGFyZSIpLmFwcGVuZChhKSxjLmxvYWRJbWcoMCx0Lmxlbmd0aCxpKCIjYW1hem9uLWl0ZW0tbGlzdCBsaSAuc21hbGwtaW1nIGltZyIpKSxsKCJ0cmFjazphbWF6b25fZ2xvYmFsOnRyYWNrIil9LGs9MCx6PWZ1bmN0aW9uIEModCl7dmFyIGU9dFswXTtpZihlKXt2YXIgbz1uKDcxKSxhPWkoIiNnd2RfaHRfbWFpbiAuaHRfaGVhZCIpO2lmKDA9PT1hLmxlbmd0aCYmazwxNSlyZXR1cm4gaysrLHZvaWQgc2V0VGltZW91dChmdW5jdGlvbigpe0ModCl9LDgwMCk7dmFyIHM9ci5jb21waWxlKG8pKHtkYXRhOmV9KTthLmFwcGVuZChzKSxpKCIjYW1hem9uX2dsb2JhbF9ib3giKS5hcHBlbmQocykuc2hvdygpLGwoInRyYWNrOmFtYXpvbl9nbG9iYWxfaW5uZXI6dHJhY2siKSxpKCIjYW1hem9uX2dsb2JhbCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtsKCJ0cmFjazphbWF6b25fZ2xvYmFsX2lubmVyOmNsaWNrIil9KSxqKHQpfX0saj1mdW5jdGlvbih0KXt2YXIgZT1uKDcyKSxvPXIuY29tcGlsZShlKSh7ZGF0YTp0WzBdfSk7aSgiI2FtYXpvbl9nbG9iYWxfYm94IikuYXBwZW5kKG8pLGkoIiNhbWF6b25fZ2xvYmFsIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7dmFyIHQ9aSgiI2dsb2JhbElubmVyRGV0YWlsIik7dC5pcygiOnZpc2libGUiKXx8KGkoIi5jb250ZW50X2RlZmF1bHQiKS5oaWRlKCksdC5zaG93KCkpfSksaSgiI2d3ZF9taW5pYmFyIikuYWRkQ2xhc3MoImhhc2dsb2JhbCIpLGkoIiNnbG9iYWxJbm5lckRldGFpbCAuY29udGVudF9kZWZhdWx0X2xlZnQgYSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtsKCJ0cmFjazphbWF6b25fZ2xvYmFsX2lubmVyX2RldGFpbDpjbGljayIpfSl9O3QuZXhwb3J0cy5yZW5kZXJUb3BEZXRhaWw9eSx0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0KXtsb2NhdGlvbi5ob3N0LmluZGV4T2YoImFtYXpvbiIpIT09LTEmJihsb2NhdGlvbi5ob3N0LmluZGV4T2YoIi5jbiIpPi0xfHx3KHQsYikpfX0pLmNhbGwoZSxuKDEpLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0KXt2YXIgbj1lLnVfc2VydmVyLGk9InUuIitlLnVfa2V5KyIuY29tIjtpZigib2JqZWN0Ij09dHlwZW9mIHQpe2lmKHQudXJsLmluZGV4T2YoaSk+LTEpcmV0dXJuIHQudXJsO3ZhciBvPSIiO3JldHVybiB0LmV4dCYmKG89Ii0iK3QuZXh0KSx0LmlzX21vYmlsZSYmdC5pc2Jyb3dzZXI/dC51cmw6bisiL3VuaW9uL2dvLz9zaXRlX2lkPSIrdC5zaXRlX2lkKyImdGFyZ2V0X3VybD0iK2VuY29kZVVSSUNvbXBvbmVudCh0LnVybCkrIiZ1bmlvbj0iK3QudW5pb24rIiZjb2x1bW49Iit0Lm1vZCsiLSIrdC5kcF9pZCtvfX19KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGlkPSJnd2RhbmctYW1hem9uLWRwLWRldGFpbCIgY2xhc3M9InBhbmVsIGd3ZF9jb21wYXJlIHRvcC1jb21wYXJlLWRldGFpbCB0b3AtYmFyLWRldGFpbCI+XG4gIDxkaXYgY2xhc3M9InBhbmVsLXdyYXAiPlxuICAgIDxkaXYgY2xhc3M9ImIyYy1wYWdlcyBibGtjb2xvcjQiPlxuICAgICAg56ysIFxuICAgICAgPHNwYW4gY2xhc3M9ImN1cnJlbnQtcGFnZSIgaWQ9ImIyYy1jdXJyZW50LXBhZ2UiPjE8L3NwYW4+XG4gICAgICAg6aG177yM5YWxIFxuICAgICAgIDxzcGFuIGNsYXNzPSJwYWdlLW51bSBibGtjb2xvcjQiIGlkPSJiMmMtcGFnZS1udW0iPnt7cGFnZXN9fTwvc3Bhbj5cbiAgICAgICAg6aG1XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0ibGVmdC1wYWdlIHR1cm4tcGFnZSIgc3R5bGU9ImxlZnQ6MTBweDsiPlxuICAgICAgPGEgaWQ9ImZ1enp5LXByZXYtcGFnZSIgdGFyZ2V0PSJfc2VsZiIgdGl0bGU9IuS4iuS4gOmhtSIgY2xhc3M9Imd3ZF9iZyIgaHJlZj0iamF2YXNjcmlwdDoiPjwvYT5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJhbGwtcHJvZHVjdHMiIHN0eWxlPSJ3aWR0aDp7e3Byb2R1Y3RXfX1weCI+XG4gICAgICA8dWwgaWQ9ImFtYXpvbi1pdGVtLWxpc3QiPlxuICAgICAgICB7e2VhY2ggZGF0YS5wcm9kdWN0fX1cbiAgICAgICAgICA8bGkgaWQ9ImFtYXpvbi1wcm9kLWl0ZW0te3skaW5kZXh9fSIgPlxuICAgICAgICAgICAgPGEgaWQ9ImltZy17eyR2YWx1ZS5kcF9pZH19IiB0aXRsZT0ie3skdmFsdWUudGl0bGV9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJzbWFsbC1pbWciIGhyZWY9Int7JHZhbHVlLnVybH19Ij5cbiAgICAgICAgICAgICAgPGltZyBzcmM9Int7aW1nTG9hZH19IiBkYXRhLW9yaWdpbmFsPSJ7eyR2YWx1ZS5pbWdfdXJsfX0iIGlkPSJkcC1pbWFnZS1zbWFsbC17eyR2YWx1ZS5kcF9pZH19IiBjbGFzcz0iZ3dkYW5nLWxhenkiPlxuICAgICAgICAgICAgPC9hPlxuICAgICAgICAgICAgPGEgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJiMmMtb3RoZXItaW5mbyIgIGhyZWY9Int7JHZhbHVlLnVybH19Ij5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imd3ZC1wcmljZSBwcmlmb250ZiI+e3skdmFsdWUucHJpY2Vfcm1iID8gJHZhbHVlLnByaWNlX3JtYiA6ICR2YWx1ZS5wcmljZX19PC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYjJjLXN0b3JlIGJsa2NvbG9yMSI+e3skdmFsdWUuc2l0ZV9uYW1lfX08L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGlkPSJ7eyR2YWx1ZS5kcF9pZH19X3Byb21vdGlvbiI+e3sjJHZhbHVlLnByb21vZG9tfX08L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtZmVlcyBibGtjb2xvcjQiPnt7JHZhbHVlLnJldl9jbnQgPyAoIuivhOiuuuaVsDoiICsgdmFsdWUucmV2X2NudCkgOiAkdmFsdWUuZmVlIH19PC9zcGFuPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYjJjLXRsZSBibGtjb2xvcjEiPnt7JHZhbHVlLnRpdGxlfX08L3NwYW4+XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAge3svZWFjaH19XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InJpZ2h0LXBhZ2UgdHVybi1wYWdlIj5cbiAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6IiBpZD0iZnV6enktbmV4dC1wYWdlIiBjbGFzcz0iZ3dkX2JnIiB0aXRsZT0i5LiL5LiA6aG1Ij48L2E+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgICNnd2RhbmctYW1hem9uLWRwLWRldGFpbCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgLmFtYXpvbiAudHVybi1wYWdlIHtcbiAgICB3aWR0aDoge3t3aWR0aH19cHg7XG4gIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8YSBocmVmPSJ7e2RhdGEudXJsfX0iIHRhcmdldD0iX2JsYW5rIiBpZD0iYW1hem9uX2dsb2JhbCIgPlxuICA8c3Bhbj7kuK3kuprmtbflpJbotK06PC9zcGFuPlxuICA8c3BhbiBjbGFzcz0iaHRfZ2V0cHJpY2VfbnVtIHByaWZvbnRmIj5cbiAgICB7e2RhdGEucHJpY2V9fVxuICA8L3NwYW4+XG48L2E+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9Imh0LWNvbS1kZXRhaWwiIGlkPSJnbG9iYWxfZGV0YWlsIj5cbiAgPGRpdiBjbGFzcz0iZ2xvYmFsLWNvbnRlbnQgZ2xvYmFsLW1vZGVsIj5cbiAgICA8ZGl2IGNsYXNzPSJnbC1sZWZ0Ij5cbiAgICAgIDxkaXYgY2xhc3M9ImdsLWwtaXRlbSB6aXlpbmciPlxuICAgICAgICA8ZW0gY2xhc3M9Imh0LWJnIj48L2VtPlxuICAgICAgICA8c3Bhbj7oh6rokKU8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImdsLWwtaXRlbSB6aGl5b3UiPlxuICAgICAgICA8ZW0gY2xhc3M9Imh0LWJnIj48L2VtPlxuICAgICAgICA8c3Bhbj7nm7Tpgq48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImdsLWwtaXRlbSBzYW1lc3R5bGUiPlxuICAgICAgICA8ZW0gY2xhc3M9Imh0LWJnIj48L2VtPlxuICAgICAgICA8c3Bhbj7lkIzmrL48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImdsLWwtaXRlbSB2aXBmZWUiPlxuICAgICAgICA8ZW0gY2xhc3M9Imh0LWJnIj48L2VtPlxuICAgICAgICA8c3Bhbj7kvJrlkZjlhY3ov5DotLk8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJnbC1yaWdodCI+XG4gICAgICA8YSBocmVmPSJ7e2RhdGEudXJsfX0iIHRhcmdldD0iX2JsYW5rIj5cbiAgICAgICAgPGRpdiBjbGFzcz0iZ2wtaW1nLWJveCI+XG4gICAgICAgICAgPGltZyBzcmM9Int7ZGF0YS5pbWd9fSI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8cD57e2RhdGEudGxlfX08L3A+XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJnbG9iYWwtZm9vdCI+XG4gICAgPHNwYW4+5Zyo5Lqa6ams6YCK5Lit5Zu96LSt5Lmw77yM55Sx5Lqa6ams6YCK576O5Zu95LuO5aKD5aSW5Y+R6LSnPC9zcGFuPlxuICAgIDxhIGhyZWY9Int7ZGF0YS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiPumTvuaOpeebtOi+vjwvYT5cbiAgPC9kaXY+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgXG4gIDwvc3R5bGU+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMTApO3QuZXhwb3J0cy5yZXRyeT1mdW5jdGlvbih0LGUsbixpKXtmdW5jdGlvbiBvKCl7YT49bnx8KHQoKT9lKCk6KGErKyxzZXRUaW1lb3V0KG8saSkpKX12YXIgYT0wO28oKX0sdC5leHBvcnRzLnNldHRpbmdzPWZ1bmN0aW9uKHQsaSxvKXt2YXIgYT1uKDI0KTthLmdldChlLnNlcnZlcisiL2Jyd2V4dC9wZXJtYW5lbnRfaWQ/IisoInZlcnNpb249MiZvcD0iK3QrIiYiK2krIj0iK28pKS5kb25lKGZ1bmN0aW9uKHQpe2VbaV09b30pfSx0LmV4cG9ydHMuc2V0TG9jYWw9ZnVuY3Rpb24odCxlKXtvLnRyaWdnZXIoe3R5cGU6InNldFN0b3JhZ2UiLGtleTp0LHZhbHVlOmV9KX0sdC5leHBvcnRzLmdldFRpbWVOdW1iZXI9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgRGF0ZSh0KSxpPW4uZ2V0RnVsbFllYXIoKSxvPW4uZ2V0TW9udGgoKSsxLGE9bi5nZXREYXRlKCk7bzwxMCYmKG89IjAiK28pLGE8MTAmJihhPSIwIithKTt2YXIgcj0iIjtzd2l0Y2goZSl7Y2FzZSIxIjpyPWkrIi0iK28rIi0iK2E7YnJlYWs7Y2FzZSIyIjpyPW8rIi0iK2E7YnJlYWs7Y2FzZSIzIjpyPW8rIi4iK2E7YnJlYWs7Y2FzZSI0IjpyPWkrIi4iK28rIi4iK2E7YnJlYWs7Y2FzZSI1IjpyPWkrIi8iK28rIi8iK2E7YnJlYWs7ZGVmYXVsdDpyPSIoIitpKyIuIitvKyIuIithKyIpIn1yZXR1cm4gcn0sdC5leHBvcnRzLnNldFNpbXBsZVBhZ2VQb3M9ZnVuY3Rpb24odCxlLG4pe3ZhciBvPWkod2luZG93KS53aWR0aCgpLGE9dC5vZmZzZXQoKS5sZWZ0LHI9dC5vdXRlcldpZHRoKCkscz1hK3Itbi0yO3M8MCYmKHM9MCkscytuPm8mJihzPW8tbi0yKSxlLmNzcygibGVmdCIscysicHgiKX0sdC5leHBvcnRzLmRlZXBDb3B5PWZ1bmN0aW9uKHQpe3JldHVybiBpLmV4dGVuZCghMCx7fSx0KX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpOyhmdW5jdGlvbihvKXsidXNlIHN0cmljdCI7aT1mdW5jdGlvbigpe3ZhciB0PW4oNCksZT1uKDc1KSxpPW4oMjIpO3JldHVybiB0KCJib2R5IikuYXBwZW5kKCdcbjxzdHlsZT5cbiAgICAjZ3dkX3NldHRpbmdfY29udGVudCAuZ3dkX3NldHRpbmdfaXRlbSBhIHtcbiAgICAgIGZvbnQtZmFtaWx5OiAiTWljcm9zb2Z0IFlhaGVpIiFpbXBvcnRhbnQ7XG4gICAgfVxuPC9zdHlsZT5cbiAgICAnKSx7aGlkZGVuVGltZXI6bnVsbCxpbnNlcnRub3JtYWxWaWV3OmZ1bmN0aW9uKCl7aWYoIW8uYWxpU2l0ZSl7dmFyIGE9big3Nikscj1lbmNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQubG9jYXRpb24uaHJlZik7dCgiLmd3ZC10b3BiYXItbG9nbyIpLmFwcGVuZChpLmNvbXBpbGUoYSkoe3NldHRpbmdVcmw6by5zZXJ2ZXIrIi9icndleHQvc2V0dGluZz9mcm9tPSIrZShvLmZyb21fZGV2aWNlKSsiJmJ0eXBlPSIrKG8uYnR5cGU/by5idHlwZToiIiksZmRia1VybDpvLmNfc2VydmVyKyIvYnJ3ZXh0L3N1Z2dlc3Q/cmVmZXI9IityKyImZnJvbV9kZXZpY2U9IitvLmZyb21fZGV2aWNlKyImYnR5cGU9Iisoby5idHlwZT9vLmJ0eXBlOiIiKSxoZWxwVXJsOm8uY19zZXJ2ZXIrIi9hcHAvZXh0ZW5zaW9uP3BhZ2U9cXVlc3Rpb24iLGhvbWVVcmw6by5jX3NlcnZlcisiLyJ9KSl9fSxpbnNlcnRTZXR0aW5nVmlldzpmdW5jdGlvbih0KXt0aGlzLmluc2VydG5vcm1hbFZpZXcoKSx0aGlzLmJpbmRFdmVudCgpfSxiaW5kRXZlbnQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3QoIiNnd2Rfc2V0dGluZ19kaXYiKS5kZWxlZ2F0ZSgiLmd3ZF9zZXR0aW5nX2l0ZW0iLCJtb3VzZWVudGVyIixmdW5jdGlvbigpe3QodGhpcykuYWRkQ2xhc3MoImd3ZF9zZXR0aW5nX2l0ZW1faG92ZXIiKX0pLHQoIiNnd2Rfc2V0dGluZ19kaXYiKS5kZWxlZ2F0ZSgiLmd3ZF9zZXR0aW5nX2l0ZW0iLCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe3QodGhpcykucmVtb3ZlQ2xhc3MoImd3ZF9zZXR0aW5nX2l0ZW1faG92ZXIiKX0pLHQoIiNnd2Rfc2V0dGluZ19kaXYiKS5kZWxlZ2F0ZSgiYSIsImNsaWNrIixmdW5jdGlvbigpe2UuaGlkZGVuU2V0dGluZ0RpdigpfSksdCgiIyIrby5sb2dvTmFtZSsiLC5nd2RfbG9nbywuZ3dkLWxvZ28sLmd3ZC1yZS1jaGFuZ2UtbG9nbyIpLmJpbmQoIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7by5zaG93X2Nsb3NlTWFpbkJhcnx8KHQoIiNnd2RfY2xvc2VNYWluYmFyIikuaGlkZSgpLHQoIiNnd2Rfc2V0dGluZ19kaXYiKS5hZGRDbGFzcygiY2xvc2VfbWFpbmJhciIpKSx0KCIjZ3dkX3NldHRpbmdfZGl2Iikuc2hvdygpfSkuYmluZCgibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtlLmhpZGRlblNldHRpbmdEaXYoKX0pLHQoIiNnd2Rfc2V0dGluZ19kaXYiKS5iaW5kKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2NsZWFyVGltZW91dChlLmhpZGRlblRpbWVyKX0pLmJpbmQoIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7ZS5oaWRkZW5TZXR0aW5nRGl2KCl9KX0saGlkZGVuU2V0dGluZ0RpdjpmdW5jdGlvbigpe3RoaXMuaGlkZGVuVGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe3QoIiNnd2Rfc2V0dGluZ19kaXYiKS5oaWRlKCl9LDMwMCl9fX0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpfSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUpeyJ1c2Ugc3RyaWN0Ijt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPSIiLG49MDtuPHQubGVuZ3RoO24rKyllPWUrIl8iK3QuY2hhckNvZGVBdChuKS50b1N0cmluZyg4KTtyZXR1cm4gZX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGlkPSJnd2Rfc2V0dGluZ19kaXYiIHN0eWxlPSJkaXNwbGF5Om5vbmU7Ij5cbiAgPGRpdiBjbGFzcz0iZ3dkX3NldHRpbmdfaXRlbSBnd2Rfc2V0dGluZ19pdGVtX2ZzdCI+XG4gICAgPGRpdiBjbGFzcz0iZ3dkX2JnIGd3ZF9mdW5jdGlvbl9zZXR0aW5nIj48L2Rpdj5cbiAgICA8YSBocmVmPSJ7e3NldHRpbmdVcmx9fSIgdGFyZ2V0PSJfYmxhbmsiPuWKn+iDveiuvue9rjwvYT5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9Imd3ZF9zZXR0aW5nX2l0ZW0iPlxuICAgIDxkaXYgY2xhc3M9Imd3ZF9iZyBnd2Rfb3Bpbmlvbl9mZWVkYmFjayI+PC9kaXY+XG4gICAgPGEgaHJlZj0ie3tmZGJrVXJsfX0iIHRhcmdldD0iX2JsYW5rIj7mhI/op4Hlj43ppog8L2E+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJnd2Rfc2V0dGluZ19pdGVtIj5cbiAgICA8ZGl2IGNsYXNzPSJnd2RfYmcgZ3dkX3VzZV9oZWxwIj48L2Rpdj5cbiAgICA8YSBocmVmPSJ7e2hlbHBVcmx9fSIgdGFyZ2V0PSJfYmxhbmsiPuS9v+eUqOW4ruWKqTwvYT5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9Imd3ZF9zZXR0aW5nX2l0ZW0iPlxuICAgIDxkaXYgY2xhc3M9Imd3ZF9iZyBnd2RfaG9tZXBhZ2UiPjwvZGl2PlxuICAgIDxhIGhyZWY9Int7aG9tZVVybH19IiB0YXJnZXQ9Il9ibGFuayI+6LSt54mp5YWa6aaW6aG1PC9hPlxuICA8L2Rpdj5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJwYW5lbCBnd2RfY29tcGFyZSB0b3AtY29tcGFyZS1kZXRhaWwgdG9wLWJhci1kZXRhaWwiIGlkPSJnd2RhbmctdGFvYmFvLWRwLWRldGFpbCI+XG4gIDxkaXYgY2xhc3M9InBhbmVsLXdyYXAiPlxuICAgIDxkaXYgY2xhc3M9ImIyYy1wYWdlcyBibGtjb2xvcjQiPlxuICAgICAg56ysIFxuICAgICAgPHNwYW4gY2xhc3M9ImN1cnJlbnQtcGFnZSIgaWQ9InRhb2Jhby1jdXJyZW50LXBhZ2UiPjE8L3NwYW4+XG4gICAgICAg6aG177yM5YWxIFxuICAgICAgIDxzcGFuIGNsYXNzPSJwYWdlLW51bSBibGtjb2xvcjQiIGlkPSJ0YW9iYW8tcGFnZS1udW0iPnt7cGFnZXN9fTwvc3Bhbj5cbiAgICAgICAg6aG1XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0ibGVmdC1wYWdlIHR1cm4tcGFnZSIgc3R5bGU9ImxlZnQ6MTBweDsiPlxuICAgICAgPGEgaWQ9InRhb2Jhby1wcmV2LXBhZ2UiIHRhcmdldD0iX3NlbGYiIHRpdGxlPSLkuIrkuIDpobUiIGNsYXNzPSJnd2RfYmciIGhyZWY9ImphdmFzY3JpcHQ6Ij48L2E+XG4gICAgPC9kaXY+XG4gICAgPGEgaHJlZj0ie3tsaW5rfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0idGItbW9yZWxpbmsgYmxrY29sb3I0Ij7mn6XnnIvlhajpg6jnu5Pmnpw8ZW0gY2xhc3M9InNlZV9hbGxfaWNvbiI+PjwvZW0+PC9hPlxuICAgIDxkaXYgY2xhc3M9ImFsbC1wcm9kdWN0cyIgc3R5bGU9IndpZHRoOnt7YWxsUHJvZHVjdFd9fXB4Ij5cbiAgICAgIDx1bCBpZD0idGFvYmFvLWl0ZW0tbGlzdCI+XG4gICAgICAgIHt7ZWFjaCBkYXRhfX1cbiAgICAgICAgICA8bGkgaWQ9InRhb2Jhby1wcm9kLWl0ZW0te3skaW5kZXh9fSIgZGF0YS1pZD0ie3skdmFsdWUubnVtX2lpZH19Ij5cbiAgICAgICAgICAgICAgPGEgaWQ9ImltZy17eyR2YWx1ZS5udW1faWlkfX0iIHRpdGxlPSJ7eyR2YWx1ZS50aXRsZX19IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNtYWxsLWltZyIgaHJlZj0ie3skdmFsdWUudXJsfX0iPlxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJ7e2ltZ0xvYWR9fSIgZGF0YS1vcmlnaW5hbD0ie3skdmFsdWUucGljX3VybH19IiBpZD0iZHAtaW1hZ2Utc21hbGwte3skdmFsdWUubnVtX2lpZH19IiBjbGFzcz0iZ3dkYW5nLWxhenkiPlxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYjJjLW90aGVyLWluZm8iICBocmVmPSJ7eyR2YWx1ZS51cmx9fSI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imd3ZC1wcmljZSBwcmlmb250ZiI+wqV7eyR2YWx1ZS5wcmljZX19PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtc3RvcmUgYmxrY29sb3IxIj57eyR2YWx1ZS5pdGVtX2xvY2F0aW9ufX08L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy1mZWVzIGJsa2NvbG9yNCI+5pyA6L+R6ZSA6YePe3skdmFsdWUudm9sdW1lfX3ku7Y8L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy10bGUgYmxrY29sb3IxIj57eyR2YWx1ZS50aXRsZX19PC9zcGFuPlxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAge3svZWFjaH19XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InJpZ2h0LXBhZ2UgdHVybi1wYWdlIj5cbiAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6IiBpZD0idGFvYmFvLW5leHQtcGFnZSIgY2xhc3M9Imd3ZF9iZyIgdGl0bGU9IuS4i+S4gOmhtSI+PC9hPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2PlxuICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgICNnd2RhbmctdGFvYmFvLWRwLWRldGFpbCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgI2d3ZGFuZy10YW9iYW8tZHAtZGV0YWlsIC50dXJuLXBhZ2Uge1xuICAgIHdpZHRoOiB7e3dpZHRofX1weDtcbiAgfVxuICA8L3N0eWxlPid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJwYW5lbCBnd2RfY29tcGFyZSB0b3AtY29tcGFyZS1kZXRhaWwgdG9wLWJhci1kZXRhaWwiIGlkPSJnd2RhbmctdG1hbGwtZHAtZGV0YWlsIj5cbiAgPGRpdiBjbGFzcz0icGFuZWwtd3JhcCI+XG4gICAgPGRpdiBjbGFzcz0iYjJjLXBhZ2VzIGJsa2NvbG9yNCI+XG4gICAgICDnrKwgXG4gICAgICA8c3BhbiBjbGFzcz0iY3VycmVudC1wYWdlIiBpZD0idG1hbGwtY3VycmVudC1wYWdlIj4xPC9zcGFuPlxuICAgICAgIOmhte+8jOWFsSBcbiAgICAgICA8c3BhbiBjbGFzcz0icGFnZS1udW0gYmxrY29sb3I0IiBpZD0idG1hbGwtcGFnZS1udW0iPnt7cGFnZXN9fTwvc3Bhbj5cbiAgICAgICAg6aG1XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0ibGVmdC1wYWdlIHR1cm4tcGFnZSIgc3R5bGU9ImxlZnQ6MTBweDsiPlxuICAgICAgPGEgaWQ9InRtYWxsLXByZXYtcGFnZSIgdGFyZ2V0PSJfc2VsZiIgdGl0bGU9IuS4iuS4gOmhtSIgY2xhc3M9Imd3ZF9iZyIgaHJlZj0iamF2YXNjcmlwdDoiPjwvYT5cbiAgICA8L2Rpdj5cbiAgICA8YSBocmVmPSJ7e2xpbmt9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJ0Yi1tb3JlbGluayBibGtjb2xvcjQiPuafpeeci+WFqOmDqOe7k+aenDxlbSBjbGFzcz0ic2VlX2FsbF9pY29uIj4+PC9lbT48L2E+XG4gICAgPGRpdiBjbGFzcz0iYWxsLXByb2R1Y3RzIiBzdHlsZT0id2lkdGg6e3thbGxQcm9kdWN0V319cHgiPlxuICAgICAgPHVsIGlkPSJ0bWFsbC1pdGVtLWxpc3QiPlxuICAgICAgICB7e2VhY2ggZGF0YX19XG4gICAgICAgICAgPGxpIGlkPSJ0bWFsbC1wcm9kLWl0ZW0te3skaW5kZXh9fSIgZGF0YS1pZD0ie3skdmFsdWUubnVtX2lpZH19Ij5cbiAgICAgICAgICAgICAgPGEgaWQ9ImltZy17eyR2YWx1ZS5udW1faWlkfX0iIHRpdGxlPSJ7eyR2YWx1ZS50aXRsZX19IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9InNtYWxsLWltZyIgaHJlZj0ie3skdmFsdWUudXJsfX0iPlxuICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJ7e2ltZ0xvYWR9fSIgZGF0YS1vcmlnaW5hbD0ie3skdmFsdWUucGljX3VybH19IiBpZD0iZHAtaW1hZ2Utc21hbGwte3skdmFsdWUubnVtX2lpZH19IiBjbGFzcz0iZ3dkYW5nLWxhenkiPlxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgIDxhIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYjJjLW90aGVyLWluZm8iICBocmVmPSJ7eyR2YWx1ZS51cmx9fSI+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imd3ZC1wcmljZSBwcmlmb250ZiI+wqV7eyR2YWx1ZS5wcmljZX19PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtc3RvcmUgYmxrY29sb3IxIj57eyR2YWx1ZS5uaWNrfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy1mZWVzIGJsa2NvbG9yNCI+5pyA6L+R6ZSA6YePe3skdmFsdWUudm9sdW1lfX3ku7Y8L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy10bGUgYmxrY29sb3IxIj57eyR2YWx1ZS50aXRsZX19PC9zcGFuPlxuICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgPC9saT5cbiAgICAgICAge3svZWFjaH19XG4gICAgICA8L3VsPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InJpZ2h0LXBhZ2UgdHVybi1wYWdlIj5cbiAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6IiBpZD0idG1hbGwtbmV4dC1wYWdlIiBjbGFzcz0iZ3dkX2JnIiB0aXRsZT0i5LiL5LiA6aG1Ij48L2E+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9kaXY+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgI2d3ZGFuZy10bWFsbC1kcC1kZXRhaWwge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICNnd2RhbmctdG1hbGwtZHAtZGV0YWlsIC50dXJuLXBhZ2Uge1xuICAgIHdpZHRoOiB7e3dpZHRofX1weDtcbiAgfVxuICA8L3N0eWxlPid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgbj0iYjJjIjtlLnNhdmVfZHBfcXVlcnkmJmUuc2F2ZV9kcF9xdWVyeS5ub3cmJmUuc2F2ZV9kcF9xdWVyeS5ub3cuY29yZXdvcmQ7aWYoKCIzNjAiPT09ZS5mcm9tX2RldmljZXx8ZS5zaXRlLmluZGV4T2YoInRhb2JhbyIpPi0xfHxlLnNpdGUuaW5kZXhPZigidG1hbGwiKT4tMSkmJnQuc291cmNlKXt2YXIgaT10LnB1cmVVcmx8fHQudXJsO3JldHVybiBpPWkrKGkuaW5kZXhPZigiPyIpPi0xPyImIjoiPyIpKyJzb3VyY2U9Iit0LnNvdXJjZX12YXIgbz0iaHR0cHM6Ly8iK24rIi4iK2UuZXh0TmFtZSsiLmNvbS9wcm9tb3Rpb24vbWlkZGxlcGFnZSI7aWYoImJpamlhZ28iPT09ZS5mcm9tX2RldmljZSYmKG89Imh0dHBzOi8vIituKyIuIitlLnNzX25hbWUrIi5jb20vaW5kZXguaHRtbCIpLGUubmV3X2V4dGVuc2lvbilyZXR1cm4gdC5wdXJlVXJsfHx0LnVybDt2YXIgYT0iIjtyZXR1cm4gdC5zb3VyY2UmJihhPXQuc291cmNlKSxlLnNlcnZlcisiL2V4dGVuc2lvbi9SZWRpcmVjdEluVGltZT9pZD0iK3QuaWQrIiZzb3VyY2U9IithKyImZnJvbV9kZXZpY2U9IitlLmZyb21fZGV2aWNlfSx0LmV4cG9ydHMuYnVpbGRDb21tb249ZnVuY3Rpb24obil7aWYoIShuLnRtYWxsIGluc3RhbmNlb2YgQXJyYXkpKWZvcih2YXIgaT0wO2k8bi50bWFsbC5wcm9kdWN0Lmxlbmd0aDtpKyspe3ZhciBvPW4udG1hbGwucHJvZHVjdFtpXSxhPXtzb3VyY2U6ImNvbW1vbiIsaW1nX3VybDpvLnBpY191cmwsdGl0bGU6by50aXRsZSxwcmljZTpvLnByaWNlLHNob3BfbmFtZTpvLm5pY2ssc2FsZXM6by52b2x1bWV8fCIwIixpZDpvLm51bV9paWQsdXJsOm8udXJsLGRpc2N1c3M6by5jb21tZW50X2NvdW50fHwiMCIsaXN0YW9iYW86IjAiLHB1cmVVcmw6Imh0dHBzOi8vZGV0YWlsLnRtYWxsLmNvbS9pdGVtLmh0bT9pZD0iK28ubnVtX2lpZCxkcF9pZDplLm5vd19kcF9pZCxzaXRlX2lkOmUuc2l0ZV9pZH07ZS5zaXRlLmluZGV4T2YoInRhb2JhbyIpPi0xfHxlLnNpdGUuaW5kZXhPZigidG1hbGwiKT4tMT9vLnVybD1hLnB1cmVVcmwrIiZzb3VyY2U9Y29tbW9uIjpvLnVybD10LmV4cG9ydHMoYSl9aWYoIShuLnRhb2JhbyBpbnN0YW5jZW9mIEFycmF5KSlmb3IodmFyIGk9MDtpPG4udGFvYmFvLnByb2R1Y3QubGVuZ3RoO2krKyl7dmFyIG89bi50YW9iYW8ucHJvZHVjdFtpXSxhPXtzb3VyY2U6ImNvbW1vbiIsaW1nX3VybDpvLnBpY191cmwsdGl0bGU6by50aXRsZSxwcmljZTpvLnByaWNlLHNob3BfbmFtZToiIixzYWxlczpvLnZvbHVtZXx8IjAiLGlkOm8ubnVtX2lpZCx1cmw6by51cmwsZGlzY3VzczpvLmNvbW1lbnRfY291bnR8fCIwIixpc3Rhb2JhbzoiMSIscHVyZVVybDoiaHR0cHM6Ly9pdGVtLnRhb2Jhby5jb20vaXRlbS5odG0/aWQ9IitvLm51bV9paWQsZHBfaWQ6ZS5ub3dfZHBfaWQsc2l0ZV9pZDplLnNpdGVfaWR9O2Uuc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8ZS5zaXRlLmluZGV4T2YoInRtYWxsIik+LTE/by51cmw9YS5wdXJlVXJsKyImc291cmNlPWNvbW1vbiI6by51cmw9dC5leHBvcnRzKGEpfXJldHVybiBufX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlKXsidXNlIHN0cmljdCI7dmFyIG49e307dC5leHBvcnRzLmdldD1mdW5jdGlvbih0KXtyZXR1cm4gblt0XX0sdC5leHBvcnRzLnNldD1mdW5jdGlvbih0LGUpe25bdF09ZX19LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigxMCksYT1uKDc5KSxyPW4oODApLHM9dm9pZCAwLGw9dm9pZCAwLGM9ITEscD00ZTMsZD0hMSxoPVsidmlwc2hvcCIsIm1vZ3VqaWUiLCJtZWlsaXNodW8iLCJhbWF6b24iLCJ5b3Vnb3UiLCJ5b2hvYnV5IiwiNnBtIiwieWludGFpIiwiYmFuZ2dvIiwieGl1IiwidmFuY2wiLCJzaG9wYm9wIiwic2hvcGluIiwicyIsIm1hc2FtYXNvIiwic2Vjb28iLCJtZWkiLCJnYXAiLCJwYWl4aWUiLCJtb29uYmFzYSIsIm1laWNpIiwibWFjeXMiLCJteWhhYml0IiwiemhlbiIsImdpbHQiLCJtYmFvYmFvIiwid2FuZ2Z1amluZyIsImxldGFvIiwiY2FtZWwiLCJoYW5kdSIsIm1mOTEwIiwiNWx1eCIsImQxIiwidGFveGllIiwibTE4IiwidGhld2F0Y2hlcnkiLCJlc2NlbnR1YWwiLCJiaWNjYW1lcmEiLCJ6aGU4MDAiXTtsb2NhdGlvbi5ob3N0LmluZGV4T2YoImFtYXpvbiIpPi0xJiZsb2NhdGlvbi5ob3N0LmluZGV4T2YoImNuIik9PS0xJiYocD0xZTQpO3ZhciB1PWZ1bmN0aW9uKHQpe3ZhciBuPVtdLGk9W10sbz1bXTt0cnl7dmFyIHI9SlNPTi5wYXJzZSh0KSxwPXIubW9kcy5pdGVtbGlzdC5kYXRhLmNvbGxlY3Rpb25zO2lmKDA9PXAubGVuZ3RoKXJldHVybjtpZigyPT1wLmxlbmd0aCYmIuWkluinguebuOS8vOWunei0nSI9PXBbMF0udGl0bGUpZm9yKHZhciBkPXBbMF0uYXVjdGlvbnMsaD1kLmxlbmd0aD4yMD8yMDpkLmxlbmd0aCx1PTA7dTxoO3UrKyl7dmFyIGY9e30sZz0iMC4wMCI9PWRbdV0udmlld19mZWU/IuWMhemCriI6IiI7aWYoZi5uaWNrPWRbdV0ubmljayxmLm51bV9paWQ9ZFt1XS5uaWQsZi50aXRsZT1kW3VdLnRpdGxlLGYucHJpY2U9ZFt1XS52aWV3X3ByaWNlLGYuaXRlbV9sb2NhdGlvbj1kW3VdLml0ZW1fbG9jLGYuc3RvcmVfbmFtZT1kW3VdLm5pY2srZyxmLnBpY191cmw9Imh0dHA6IitkW3VdLnBpY191cmwsZi52b2x1bWU9ZFt1XS52aWV3X3NhbGVzLnJlcGxhY2UoIuS6uuS7mOasviIsIiIpLGYudHlwZT0iaW1nX3NlYXJjaCIsZi5wcmljZTI9TnVtYmVyKGYucHJpY2UpLCEoZS5kcC5wcmljZSYmMipmLnByaWNlMjxlLmRwLnByaWNlKSl7Zi5waWNfdXJsLm1hdGNoKC9qcGdfWzAtOV0reFswLTldLyl8fChmLnBpY191cmw9Zi5waWNfdXJsLnJlcGxhY2UoLyhcLnBuZ3xcLmpwZykvLCIkMV8xMDB4MTAwLmpwZyIpKTt2YXIgdz17c291cmNlOiJpbWdfc2VhcmNoIixpbWdfdXJsOiJodHRwOiIrZFt1XS5waWNfdXJsLHRpdGxlOmRbdV0udGl0bGUscHJpY2U6ZFt1XS52aWV3X3ByaWNlLHNob3BfbmFtZTpkW3VdLm5pY2srZyxzYWxlczpkW3VdLnZpZXdfc2FsZXMucmVwbGFjZSgi5Lq65LuY5qy+IiwiIiksaWQ6ZFt1XS5uaWQsdXJsOiJodHRwczoiK2RbdV0uZGV0YWlsX3VybCxkaXNjdXNzOmRbdV0uY29tbWVudF9jb3VudCxpc3Rhb2JhbzpkW3VdLmRldGFpbF91cmwuaW5kZXhPZigiZGV0YWlsLnRtYWxsLmNvbSIpPi0xPyIwIjoiMSIsZHBfaWQ6ZFt1XS5uaWQrIi0iKyhkW3VdLmRldGFpbF91cmwuaW5kZXhPZigiZGV0YWlsLnRtYWxsLmNvbSIpPi0xKT8iODMiOiIxMjMiLHNpdGVfaWQ6ZFt1XS5kZXRhaWxfdXJsLmluZGV4T2YoImRldGFpbC50bWFsbC5jb20iKT4tMT8iODMiOiIxMjMifTtmLnVybD1hKHcpLGRbdV0uZGV0YWlsX3VybC5pbmRleE9mKCJkZXRhaWwudG1hbGwuY29tIik+LTE/aS5wdXNoKGYpOm4ucHVzaChmKX19ZWxzZSBpZigxPT1wLmxlbmd0aCYmIuaCqOWPr+iDveS8muWWnOasoiI9PXBbMF0udGl0bGV8fDI9PXAubGVuZ3RoJiYi5oKo5Y+v6IO95Lya5Zac5qyiIj09cFsxXS50aXRsZSlmb3IodmFyIHg9cFtwLmxlbmd0aC0xXS5hdWN0aW9ucyx1PTA7dTx4Lmxlbmd0aDt1Kyspe3ZhciBmPXt9O2YudXJsPSJodHRwczoiK3hbdV0uZGV0YWlsX3VybCxmLnBpY191cmw9eFt1XS5waWNfdXJsLGYudGl0bGU9eFt1XS50aXRsZSxmLm51bV9paWQ9eFt1XS5uaWQsZi5wcmljZT14W3VdLnZpZXdfcHJpY2UsZi52b2x1bWU9eFt1XS52aWV3X3NhbGVzLGYubmljaz14W3VdLm5pY2ssZi5wcmljZTI9TnVtYmVyKGYucHJpY2UpLGUuZHAucHJpY2UmJjIqZi5wcmljZTI8ZS5kcC5wcmljZXx8by5wdXNoKGYpfW49bShuKSxpPW0oaSkscz17dGFvYmFvOm4sdG1hbGw6aSxndWVzc2Zhdm9yOm99LGwmJiFjJiYobChzKSxjPSEwKX1jYXRjaChiKXt9fSxtPWZ1bmN0aW9uKHQpe2lmKHQuc29ydClyZXR1cm4gdD10LnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gTnVtYmVyKHQucHJpY2UpPk51bWJlcihlLnByaWNlKT8xOk51bWJlcih0LnByaWNlKT09TnVtYmVyKGUucHJpY2UpPzA6LTF9KX0sZj1mdW5jdGlvbigpe3ZhciB0PXsiMzYwYnV5IjoiI3ByZXZpZXcgLmpxem9vbSBpbWciLGdvbWU6Ii5qcXpvb20gaW1nIixzdW5pbmc6IiNpbWdab29tICNiaWdJbWFnZSIseWloYW9kaWFuOiIjSl9wcm9kSW1nIix2YW5jbDoiI21pZGltZyIsc2hvcGluOiIjem9vbTEgaW1nIixzZWNvbzoiLmpxem9vbSIsbWVpOiIjYmlnaW1nIixtZWljaToiLnpvb21QYWQgaW1nIixtYWN5czoiI21haW5WaWV3XzEiLHRhb3hpZToiI3RfUHJldmlld0ltYWdlIGltZyIsZDE6Ii5nc19yaWdodF9zcGltZyBpbWciLCI1bHV4IjoiLmNsb3Vkem9vbSIsbWY5MTA6IiNvcF9wcm9kdWN0X3pvb20gaW1nIixoYW5kdToiI21hc3RlckltYWdlIixjYW1lbDoiI2ltZ19qcXpvb20iLGxldGFvOiIjc2ltZ291dGVyIGltZyIsd2FuZ2Z1amluZzoiLnpvb21QYWQgLmxhenktcGljIix6aGVuOiIjem9vbTEgLmFfbWF4X3BpYyIsc2hvcGJvcDoiI3Byb2R1Y3RJbWFnZSIseW9ob2J1eToiI2ltZy1zaG93Iix0YW9iYW86IiNKX0ltZ0Jvb3RoIix0aGV3YXRjaGVyeToiI2RldGFpbGltYWdlIixhbWF6b246IiNhbHRJbWFnZXMgdWwgbGkgaW1nIixtb2d1amllOiIjSl9CaWdJbWciLGVzY2VudHVhbDoiI3pvb20xIGltZyIsYmljY2FtZXJhOiIjUFJPRC1DVVJSRU5ULUlNRyIsemhlODAwOiIjZGV0YWlsIC5kZXRlaWxwaWMgdWwgbGkgaW1nIix2aXBzaG9wOiIjSi1tZXItSW1nUmV2aWV3IC56b29tUGFkPmltZyIsdG1hbGw6IiNKX0ltZ0Jvb3RoIn07aWYodFtlLnNpdGVdKXt2YXIgbj1pKHRbZS5zaXRlXSkuZXEoMCkuYXR0cigic3JjIik7aWYoInd3dy5hbWF6b24uY28uanAiPT1sb2NhdGlvbi5ob3N0JiZuJiZuLm1hdGNoKC9TUlswLTldKyxbMC05XSsvKSluPW4ucmVwbGFjZSgvU1IoWzAtOV0rKVwsKFswLTldKykvLCJTUiQxMCwkMjAiKTtlbHNlIGlmKGxvY2F0aW9uLmhvc3QuaW5kZXhPZigiYW1hem9uIik+LTEpcmV0dXJuITE7cmV0dXJuIG4mJiFuLm1hdGNoKC8oPzpodHRwOnxodHRwczopLykmJm4uaW5kZXhPZigiLy8iKT4tMSYmKG49Imh0dHA6IituKSwiemhlODAwIj09PWUuc2l0ZSYmKG49bi5yZXBsYWNlKCI1OHg1OC5qcGciLCIyMjB4MjIwLmpwZyIpKSxufXJldHVybiExfSxnPWZ1bmN0aW9uKHQpe3ZhciBuPWYoKTsoaC5pbmRleE9mKGUuc2l0ZSk+LTEmJiJ3d3cuYW1hem9uLmNuIiE9bG9jYXRpb24uaG9zdHx8bG9jYXRpb24uaG9zdC5pbmRleE9mKCIxNjg4Iik+LTF8fHQpJiYodD0hMCxvLnRyaWdnZXIoe3R5cGU6ImdldFRhb2Jhb0ltZ0luZm8iLHNyYzpufSksby5vbihmdW5jdGlvbih0KXtpZigic3RyaW5nIj09dHlwZW9mIHQmJih0PUpTT04ucGFyc2UodCkpLCJnZXRUYW9iYW9JbWdJbmZvIj09dC50eXBlKXt2YXIgZT1pKCIjZ3dkX2ltZ19pbmZvIikudGV4dCgpOyIiIT1lJiZ1KGUpfX0pKX07dC5leHBvcnRzLnJlYWR5PWZ1bmN0aW9uKCl7aWYoISgidGFvYmFvIj09ZS5zaXRlfHwidG1hbGwiPT1lLnNpdGV8fGUuc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMSkpe3ZhciB0PXIuZ2V0KCJkcF9kYXRhIiksbj10JiZ0Lm5vdy5jbGFzc19pZCxpPXQmJnRbImNvZGUtc2VydmVyIl0uY29kZTtpZigiYW1hem9uIiE9PWUuc2l0ZXx8IWkpe2lmKG4mJihuPW4uc2xpY2UoMCwyKSksIjM2MGJ1eSI9PT1lLnNpdGUpe3ZhciBvPWUuZHAuY2F0X2lkO28mJihvPW8uc3BsaXQoIi0iKVswXSk7dmFyIGE9WyIxNjIwIiwiMTMxNSIsIjEzMTgiLCIxNjcyIiwiMTMxOSIsIjUwMjUiLCI2MTQ0IiwiMTUyNDgiLCIxMTcyOSJdO2EuaW5kZXhPZiYmYS5pbmRleE9mKG8pPi0xJiYoZD0hMCl9ZWxzZSIxMyIhPW4mJiIyNCIhPW4mJiIxQSIhPW4mJiIyMSIhPW58fChkPSEwKTtnKGQpfX19LHQuZXhwb3J0cy51bmlxUGlkR2V0SW1nPWZ1bmN0aW9uKHQpe2coITApLGw9dH0sdC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7cmV0dXJuIGR8fGguaW5kZXhPZihlLnNpdGUpIT0tMT8ocz8odChzKSxjPSEwKTpsPXQsdm9pZCBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bCYmYz09PSExJiYobChudWxsKSxjPSEwKX0scCkpOnZvaWQgdChudWxsKX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDI0KSxhPW4oMTApLHI9big3OSkscz12b2lkIDAsbD12b2lkIDAsYz0hMSxwPTI1MDAsZD1mdW5jdGlvbih0KXtpZigiIiE9dCl7dmFyIG49ZS5zZXJ2ZXIrIi9leHRlbnNpb24/YWM9Z2V0dW5pcXBpZCZuaWQ9Iit0O28uZ2V0KG4pLmRvbmUoZnVuY3Rpb24oZSl7ZSYmZS51bmlxaWQ/aCh0LGUudW5pcWlkKTpmKCl9KX19LGg9ZnVuY3Rpb24odCxlKXt2YXIgbj17bmlkOnQsdW5pcWlkOmV9O2EudHJpZ2dlcih7dHlwZToiZ2V0VGFvYmFvdW5pcSIsaW5mbzpKU09OLnN0cmluZ2lmeShuKX0pLGEub24oZnVuY3Rpb24odCl7aWYoInN0cmluZyI9PXR5cGVvZiB0JiYodD1KU09OLnBhcnNlKHQpKSwiZ2V0VGFvYmFvdW5pcSI9PXQudHlwZSl7dmFyIGU9aSgiI2d3ZF91bmlxX2luZm8iKS50ZXh0KCk7IiIhPWUmJm0oZSl9fSl9LHU9ZnVuY3Rpb24odCl7aWYodC5zb3J0KXJldHVybiB0PXQuc29ydChmdW5jdGlvbih0LGUpe3JldHVybiBOdW1iZXIodC5wcmljZSk+TnVtYmVyKGUucHJpY2UpPzE6TnVtYmVyKHQucHJpY2UpPT1OdW1iZXIoZS5wcmljZSk/MDotMX0pfSxtPWZ1bmN0aW9uKHQpe3RyeXt2YXIgZT1KU09OLnBhcnNlKHQpO2U9ZS5tb2RzLnJlY2l0ZW0uZGF0YS5pdGVtczt2YXIgbj1bXSxpPVtdO2lmKCFlKXJldHVybjtmb3IodmFyIG89MCxhPWUubGVuZ3RoO288YTtvKyspe3ZhciBwPXt9LGQ9IjAuMDAiPT1lW29dLnZpZXdfZmVlPyLljIXpgq4iOiIiO3Aubmljaz1lW29dLm5pY2sscC5udW1faWlkPWVbb10ubmlkLHAudGl0bGU9ZVtvXS50aXRsZSxwLnByaWNlPWVbb10udmlld19wcmljZSxwLml0ZW1fbG9jYXRpb249ZVtvXS5pdGVtX2xvYyxwLnN0b3JlX25hbWU9ZVtvXS5uaWNrK2QscC5waWNfdXJsPSJodHRwOiIrZVtvXS5waWNfdXJsLHAudm9sdW1lPWVbb10udmlld19zYWxlcy5yZXBsYWNlKCLkurrku5jmrL4iLCIiKSxwLnNhbWVfc3R5bGU9ITA7dmFyIGg9e3NvdXJjZToic2FtZV9zdHlsZSIsaW1nX3VybDoiaHR0cDoiK2Vbb10ucGljX3VybCx0aXRsZTplW29dLnRpdGxlLHByaWNlOmVbb10udmlld19wcmljZSxzaG9wX25hbWU6ZVtvXS5uaWNrK2Qsc2FsZXM6ZVtvXS52aWV3X3NhbGVzLnJlcGxhY2UoIuS6uuS7mOasviIsIiIpLGlkOmVbb10ubmlkLHVybDoiaHR0cHM6IitlW29dLmRldGFpbF91cmwsZGlzY3VzczplW29dLmNvbW1lbnRfY291bnQsaXN0YW9iYW86ZVtvXS5kZXRhaWxfdXJsLmluZGV4T2YoImRldGFpbC50bWFsbC5jb20iKT4tMT8iMCI6IjEiLGRwX2lkOmVbb10ubmlkKyItIisoZVtvXS5kZXRhaWxfdXJsLmluZGV4T2YoImRldGFpbC50bWFsbC5jb20iKT4tMT8iODMiOiIxMjMiKSxzaXRlX2lkOmVbb10uZGV0YWlsX3VybC5pbmRleE9mKCJkZXRhaWwudG1hbGwuY29tIik+LTE/IjgzIjoiMTIzIn07cC51cmw9cihoKSxlW29dLmRldGFpbF91cmwuaW5kZXhPZigiZGV0YWlsLnRtYWxsLmNvbSIpPi0xP2kucHVzaChwKTpuLnB1c2gocCl9bj11KG4pLGk9dShpKSxzPXt0YW9iYW86bix0bWFsbDppfSxsJiYhYyYmKGwocyksYz0hMCl9Y2F0Y2gobSl7fX0sZj1mdW5jdGlvbigpe3ZhciB0PVsiNTA1MTAwMDIiLCI1MDAxMjAyOSIsIjUwMDEzODY0IiwiNTAwMTEzOTciLCI1MDAxMDQwNCIsIjE2MjUiLCI1MDAwNjg0MiIsIjUwMDA2ODQzIiwiMTYiLCI1MDAxMTc0MCIsIjUwMDExNjk5IiwiNTAwMDgxNjUiLCI1MDAwODE2MyIsIjMwIiwiNTAwMjA4NTciLCI1MDAyMDgwOCIsIjUwMDEzODg2IiwiNTAwMjI1MTciLCIxMjI4NTIwMDEiLCIyMSIsIjUwNDY4MDAxIiwiMTIyOTUwMDAxIiwiNTAwMDcyMTYiXSxpPWUuZHAucm9vdF9pZDtpJiZ0LmluZGV4T2YoaSk+LTE/KG4oODEpLnVuaXFQaWRHZXRJbWcoZnVuY3Rpb24odCl7bD8obCh0KSxjPSEwKTpzPXR9KSxwPTZlMyk6cD0xfSxnPWZ1bmN0aW9uKCl7aWYobG9jYXRpb24uaG9zdC5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8bG9jYXRpb24uaG9zdC5pbmRleE9mKCJ0bWFsbCIpPi0xKXt2YXIgdD1sb2NhdGlvbi5ocmVmLm1hdGNoKC9bPyZdaWQ9KFswLTldKykvKTt0JiZ0Lmxlbmd0aCYmKHQ9dFsxXSxkKHQpKX19O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7KGUuc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8ZS5zaXRlLmluZGV4T2YoInRtYWxsIik+LTEpJiZhLnRyaWdnZXIoe3R5cGU6ImdldF9ldGFvX2luZm8ifSksInRhb2JhbyIhPWUuc2l0ZSYmInRtYWxsIiE9ZS5zaXRlfHxnKCl9LHQuZXhwb3J0cy5nZXRUYW9iYW91bmlxRGF0YT1mdW5jdGlvbih0KXtzPyh0KHMpLGM9ITApOmw9dCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bCYmYz09PSExJiYobChudWxsKSxjPSEwKX0scCl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxuKXsidXNlIHN0cmljdCI7dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7dmFyIGk9dm9pZCAwO3RyeXsiZmlyZWZveCI9PT1lLmZyb21fZGV2aWNlPyh0PWUubG9jYWxIb3N0KyJjc3MvIit0LGk9ZS5sb2NhbEhvc3QrImNzcy9pbWFnZXMuY3NzIik6Y2hyb21lJiZjaHJvbWUuZXh0ZW5zaW9uJiYoImNocm9tZSI9PT1lLmZyb21fZGV2aWNlfHwiMjM0NSI9PT1lLmZyb21fZGV2aWNlKT8odD0iY3NzLyIrdCx0PWNocm9tZS5leHRlbnNpb24uZ2V0VVJMKHQpLGk9Y2hyb21lLmV4dGVuc2lvbi5nZXRVUkwoImNzcy9pbWFnZXMuY3NzIikpOih0PWUuc19zZXJ2ZXIrIi9jc3MvYnJ3ZXh0LyIrdCxpPWUuc19zZXJ2ZXIrIi9jc3MvYnJ3ZXh0L2ltYWdlcy5jc3MiKX1jYXRjaChvKXt0PWUuc19zZXJ2ZXIrIi9jc3MvYnJ3ZXh0LyIrdCxpPWUuc19zZXJ2ZXIrIi9jc3MvYnJ3ZXh0L2ltYWdlcy5jc3MifW4oImhlYWQiKS5hcHBlbmQoJzxsaW5rIHR5cGU9InRleHQvY3NzIiBocmVmPSInK3QrJyIgcmVsPSJzdHlsZXNoZWV0IiAvPicpLG4oImhlYWQiKS5hcHBlbmQoJzxsaW5rIHR5cGU9InRleHQvY3NzIiBocmVmPSInK2krIj92PSIrZS52ZXJzaW9uKyciIHJlbD0ic3R5bGVzaGVldCIgLz4nKX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDg1KSxhPW4oMjIpLHI9big4Nikscz1uKDI0KSxsPW4oMTMpLGM9e30scD12b2lkIDAsZD12b2lkIDAsaD12b2lkIDAsdT1mdW5jdGlvbigpe2UoIiNsb2dpbi1yZW1pbmQgcCIpLmNzcygiY29sb3IiLCIjRTQzOTNDIil9LG09ZnVuY3Rpb24odCxlKXt2YXIgbj10LG89ZXx8IiIsYT1pLmNfc2VydmVyKyIvYXBpL3JlbWluZF9zZXR0aW5nP2FjdGlvbj1zZXQmZW1haWw9IitpLmVtYWlsKyImc2V0dGluZ190eXBlPSIrbisiJnJlbWluZF9lbWFpbD0iK287cy5nZXQoYSl9LGY9ZnVuY3Rpb24oKXt2YXIgdD12b2lkIDA7ZSgiI2Zhdm9yX2JveCAuYmFyLWppYW5namlhLXJlIC5zZWxlY3QtaXRlbSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtlKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoIi5zZWxlY3QtaXRlbSIpLnJlbW92ZUNsYXNzKCJzZWxlY3RlZCIpLGUodGhpcykuYWRkQ2xhc3MoInNlbGVjdGVkIiksZSh0aGlzKS5oYXNDbGFzcygicXJjb2RlLWl0ZW0iKT9lKCIjcmVtaW5kX3FyY29kZV9pbWciKS5zaG93KCk6ZSh0aGlzKS5oYXNDbGFzcygiZW1haWwtaXRlbSIpJiZlKCIjcmVtaW5kX3FyY29kZV9pbWciKS5oaWRlKCl9KSxlKCIjYmFyX3N1YmJ0biIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgbj1lKCIjZmF2b3JfYm94IikuaGFzQ2xhc3MoImZhdm9yX2Nob29zZWQiKSxvPWUoIiNmYXZvcl9ib3ggLmpqLXJlbWluZCAuc2VsZWN0LWl0ZW0uc2VsZWN0ZWQiKSxhPW8uYXR0cigiZGF0YS10eXBlIikscz1vLnBhcmVudCgpLmZpbmQoImlucHV0IikudmFsKCk7aWYoIXN8fCIwIj09PXN8fHMubWF0Y2goL1thLXpBLVpdLykpcmV0dXJuIHZvaWQgZSgiLmVycm9yX3JlbWluZCIpLnNob3coKS5mYWRlT3V0KDJlMyk7aWYoIW4pe3ZhciBsPXZvaWQgMCxjPWUoIiNmYXZvcl9ib3ggLmpqLXN0eWxlIC5zZWxlY3QtaXRlbS5zZWxlY3RlZCIpLmF0dHIoImRhdGEtdHlwZSIpOyIxIj09PWMmJihsPWUoIiNmYXZvcl9ib3ggLmpqLXN0eWxlIC5yZS1tYWlsIikudmFsKCkpLG0oYyxsKSxlKCIjZmF2b3JfYm94IikuYWRkQ2xhc3MoImZhdm9yX2Nob29zZWQiKSxlKCIjZWRpdF9yZW1pbmRfc3R5bGUsICNyZW1pbmRfcXJjb2RlIikuc2hvdygpfWUoIiMiK2kuZXh0TmFtZSsiLXRyZW5kLWRldGFpbCIpLmhpZGUoKSxlKCIjcmVtaW5kX3FyY29kZV9pbWciKS5oaWRlKCksdD0hMSxyLmFkZF9mYXZvcihhLHMpfSksZSgiI3JlbWluZF9xcmNvZGUiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dD8oZSgiI3JlbWluZF9xcmNvZGVfaW1nIikuaGlkZSgpLHQ9ITEpOihlKCIjcmVtaW5kX3FyY29kZV9pbWciKS5zaG93KCksdD0hMCl9KSxlKCIjZWRpdF9yZW1pbmRfc3R5bGUiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7ZSgiI2Zhdm9yX2JveCIpLnJlbW92ZUNsYXNzKCJmYXZvcl9jaG9vc2VkIiksZSgiI2VkaXRfcmVtaW5kX3N0eWxlIikuaGlkZSgpfSl9O3QuZXhwb3J0cy5sb2dpblJlbmRlclRvcD1mdW5jdGlvbigpe2UoIiNsb2dpbi1yZW1pbmQiKS5oaWRlKCksZigpfTt2YXIgZz1mdW5jdGlvbigpe2UoIiNsb2dpbi1yZW1pbmQgLmdvX2xvZ2luX2J0biIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtlKCIjbG9naW4tcmVtaW5kIHAiKS5jc3MoImNvbG9yIiwiIzliOWI5YiIpLGUoIiNsb2dpbi1yZW1pbmQiKS5oaWRlKCksZSgiLmxvZ2luLWNvbnRlbnQiKS5zaG93KCkuYW5pbWF0ZSh7cmlnaHQ6IjBweCJ9LDUwMCl9KSxlKCIjbG9naW5DbGlja0J0bkJhciIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1lKCIjYmFydXNlcm5hbWUiKS52YWwoKSxuPWUoIiNiYXJwYXNzd29yZCIpLnZhbCgpO3JldHVybiB0JiZuP3ZvaWQgci51c2VyTG9naW4odCxuLGZ1bmN0aW9uKCl7ZigpfSk6dm9pZCBlKCIjbG9naW5fcmVtaW5kX3RsZSwgI2xvZ2luX3JlbWluZF90bGVfYmFyIikuY3NzKCJkaXNwbGF5IiwiYmxvY2siKS5mYWRlT3V0KDVlMyk7Cn0pLGUoIiNmYXZvcl9ib3giKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXt3KCl9KSxlKCIjbG9nX2JhY2tfYnRuIikub24oImNsaWNrIixmdW5jdGlvbigpe2UoIiNsb2dpbi1yZW1pbmQiKS5zaG93KCksZSgiLmxvZ2luLWNvbnRlbnQiKS5hbmltYXRlKHtyaWdodDoiLTI5MnB4In0sNTAwLGZ1bmN0aW9uKCl7ZSgiLmxvZ2luLWNvbnRlbnQiKS5oaWRlKCl9KX0pfSx3PWZ1bmN0aW9uKCl7aWYoIWgmJmkuZW1haWwpe3ZhciB0PSJodHRwczovL3d3dy5nd2RhbmcuY29tL2NvbGxlY3QvZ2V0X3FyY29kZS8/ZW1haWw9IitpLmVtYWlsO3MuZ2V0KHQpLmRvbmUoZnVuY3Rpb24odCl7aD0hMCxlKCIjcmVtaW5kX3FyY29kZV9pbWcgaW1nIikuYXR0cigic3JjIix0LmltZ191cmwpLGUoIi5xcmNvZGUtamogaW1nIikuYXR0cigic3JjIix0LmltZ191cmwpLGUoIiNyZW1pbmRfcXJjb2RlIikuc2hvdygpfSl9fTt0LmV4cG9ydHMuZ2V0UVJjb2RlPXc7dmFyIHg9ZnVuY3Rpb24odCl7dmFyIG49bC5nZXQoIm90aGVyX2luZm8iKTtpZihuKXt2YXIgcj1sLmdldCgiZHBfcXVlcnkiKSxzPXZvaWQgMCxwPXZvaWQgMCxkPXZvaWQgMCxoPWkuZW1haWwsdT1uLm5vdztpZighdS5kcF9pZCYmdS51cmxfY3JjJiZ1LnNpdGVfaWQmJih1LmRwX2lkPXUudXJsX2NyYysiLSIrdS5zaXRlX2lkKSx1LmRwX2lkKXt2YXIgbT1lbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24uaHJlZiksZz1pLmRwLm9sZFByaWNlfHxuWyJjb2RlLXNlcnZlciJdLnByaWNlfHxpLmRwLnByaWNlO2kuYWxpU2l0ZSYmKGc9aS5kcC5wcmljZSk7dmFyIHc9ciYmci5iMmMubWluX3ByaWNlfHxnO2c9TnVtYmVyKGcudG9TdHJpbmcoKS5yZXBsYWNlKCIsIiwiIikpLHc9TnVtYmVyKHcudG9TdHJpbmcoKS5yZXBsYWNlKCIsIiwiIikpLHImJnIuYjJjLnByb2R1Y3QmJjAhPT1yLmIyYy5wcm9kdWN0Lmxlbmd0aCYmKGQ9ci5iMmMucHJvZHVjdFswXS51cmwpLGkuYWxpU2l0ZSYmKGQ9ImphdmFzY3JpcHQ6IiksdC5oYXNfcmVtaW5kX3R5cGUmJihzPSEwKSx0LmlzX2NvbGxlY3RlZCYmKGMuaXNfY29sbGVjdGVkPXQuaXNfY29sbGVjdGVkLCIxIj09PXQubm90aWZ5X3NpdGU/Zz10LnJlbWluZF9wcmljZTp3PXQucmVtaW5kX3ByaWNlKSxnPWd8fGMubm93cHJpY2Usdz13fHxnLGMubm90aWZ5X3NpdGU9dC5ub3RpZnlfc2l0ZXx8IjEiLHA9dC5yZW1pbmRfdHlwZXx8IjAiO3ZhciB4PWkuaW1nSG9zdDsiZmlyZWZveCI9PT1pLmZyb21fZGV2aWNlJiYoeD1pLmxvY2FsSW1nKTt2YXIgYj0iIjsid3d3LmFtYXpvbi5jby5qcCI9PT1sb2NhdGlvbi5ob3N0JiYoYj0i5pel5YWDIiksaS5lbWFpbC5pbmRleE9mKGkuZXh0TmFtZSsiLmNvbSIpPi0xJiYoaD0iIik7dmFyIF89YS5jb21waWxlKG8pKHtjaG9vc2VkOnMsaXNsb2dpbjohMCxlbWFpbDppLmVtYWlsLGVtYWlsdmFsdWU6aCx1cmw6bSxhbGlTaXRlOmkuYWxpU2l0ZSxpbWdIb3N0OngsbG93ZXN0VXJsOmQsbm90aWZ5X3NpdGU6Yy5ub3RpZnlfc2l0ZSxub3dwcmljZTpnLGFsbHByaWNlOncscmVtaW5kX3R5cGU6cCxleHROYW1lOmkuZXh0TmFtZSxtb25leTpjLm1vbmV5LHJpeXVhbjpiLGxhc3RwcmljZTpOdW1iZXIoYy5ub3dwcmljZSkudG9GaXhlZCgyKSxwcmljZV9yYW5nZTpjLnByaWNlX3JhbmdlfSk7ZSgiI2Zhdm9yX2JveCIpLnJlbW92ZSgpLGUoYy5kb20pLmFwcGVuZChfKSxmKCl9fX0sYj1mdW5jdGlvbih0LG4pe3ZhciByPXZvaWQgMCxzPWkuZHAub2xkUHJpY2V8fGkuZHAucHJpY2UsbD1pLnNhdmVfZHBfcXVlcnk7bCYmbC5iMmMucHJvZHVjdCYmKHI9bC5iMmMucHJvZHVjdFswXS51cmwpO3ZhciBwPWkuaW1nSG9zdDsiZmlyZWZveCI9PT1pLmZyb21fZGV2aWNlJiYocD1pLmxvY2FsSW1nKTt2YXIgZD0iIjsid3d3LmFtYXpvbi5jby5qcCI9PT1sb2NhdGlvbi5ob3N0JiYoZD0i5pel5YWDIik7dmFyIGg9ZW5jb2RlVVJJQ29tcG9uZW50KGxvY2F0aW9uLmhyZWYpLG09YS5jb21waWxlKG8pKHtlbWFpbDppLmVtYWlsLGVtYWlsdmFsdWU6IiIsbG93ZXN0VXJsOnIsbm90aWZ5X3NpdGU6IjAiLG5vd3ByaWNlOmMubm93cHJpY2UsYWxscHJpY2U6cyxyZW1pbmRfdHlwZToiMCIsdXJsOmgsaW1nSG9zdDpwLGV4dE5hbWU6aS5leHROYW1lLG1vbmV5Om4scml5dWFuOmQsYWxpU2l0ZTppLmFsaVNpdGUsbGFzdHByaWNlOk51bWJlcihjLm5vd3ByaWNlKS50b0ZpeGVkKDIpLHByaWNlX3JhbmdlOmMucHJpY2VfcmFuZ2V9KTtlKHQpLmFwcGVuZChtKSxlKCIjZmF2b3JfYm94IC5iYXItamlhbmdqaWEtcmUgLnNlbGVjdC1pdGVtIikub24oImNsaWNrIix1KX0sXz1mdW5jdGlvbigpe2QmJihwfHwocD0hMCxlKCIjZmF2b3JfYm94IikucmVtb3ZlKCksbig4NikuZ2V0UmVtaW5kU3R5bGUoeCkpKX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCxuLG8pe2lmKGQ9ITAsby5zdG9yZSl7Yy5ub3dwcmljZT1OdW1iZXIoby5zdG9yZVswXS5jdXJyZW50X3ByaWNlKTt2YXIgYT1vLnN0b3JlWzBdLnByaWNlX3JhbmdlLnNwbGl0KCItIik7Yy5wcmljZV9yYW5nZT1OdW1iZXIoYVswXSkudG9GaXhlZCgyKSsiIH4gIitOdW1iZXIoYVsxXSkudG9GaXhlZCgyKSxjLmRvbT10LGMubW9uZXk9bixpLmVtYWlsP2UoZG9jdW1lbnQpLm9uKCJyZW5kZXJBZ2FpbiIsZnVuY3Rpb24oKXtfKCl9KTpiKHQsbiksZygpfX0sdC5leHBvcnRzLnJlbmRlckFnYWluPV99KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9ImZhdm9yX2JveCIge3tpZiBjaG9vc2VkIH19Y2xhc3M9ImZhdm9yX2Nob29zZWQiIHt7L2lmfX0+XG4gIDxkaXYgY2xhc3M9ImxvZ2luLWNvbnRlbnQgIj5cbiAgICA8ZGl2IGNsYXNzPSJiamQtbG9naW4tYm94Ij5cbiAgICA8ZGl2IGNsYXNzPSJsb2dpbi1sZWZ0Ij5cbiAgICAgIDxkaXYgY2xhc3M9ImxvZ2luLWlucHV0Ij5cbiAgICAgICAgPGlucHV0IHR5cGU9InRleHQiICBpZD0iYmFydXNlcm5hbWUiIHBsYWNlaG9sZGVyPSLpgq7nrrEiPlxuICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGlkPSJiYXJwYXNzd29yZCIgcGxhY2Vob2xkZXI9IuWvhueggSI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cue3tleHROYW1lfX0uY29tL3VzZXIvZm9yZ290X3B3ZC8iIGNsYXNzPSJibGtjb2xvcjQgZm9yZ2V0cHNkIiB0YXJnZXQ9Il9ibGFuayI+5b+Y6K6w5a+G56CBPC9hPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgXG4gICAgICA8L2Rpdj5cbiAgICAgIDxzcGFuIGlkPSJsb2dpbkNsaWNrQnRuQmFyIj7nmbvlvZU8L3NwYW4+XG4gICAgICA8YSBocmVmPSJodHRwczovL3d3dy57e2V4dE5hbWV9fS5jb20vdXNlci9yZWdpc3RlciIgY2xhc3M9InF1aWNrLXJlZyIgdGFyZ2V0PSJfYmxhbmsiPuW/q+mAn+azqOWGjDwvYT5cbiAgICAgIDxzcGFuIGlkPSJsb2dpbl9yZW1pbmRfdGxlX2JhciI+6LSm5Y+35oiW5a+G56CB6ZSZ6K+v77yM6K+36YeN5paw6L6T5YWl77yBPC9zcGFuPlxuICAgICAgPHNwYW4gaWQ9ImxvZ19iYWNrX2J0biI+PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9ImxvZ2luLXJpZ2h0Ij5cbiAgICAgIDxkaXYgY2xhc3M9InNwLWJvcmRlciBnd2RfYmciPjwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz0ib3RoZXItbG9naW4tc3R5bGUiPlxuICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy57e2V4dE5hbWV9fS5jb20vdXNlci9vYXV0aC8/cGw9NyZvcD1sb2dpbiZmcm9tX3VybD17e3VybH19IiBjbGFzcz0icXFsb2dpbiBnd2RfYmciID48L2E+XG4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lnt7ZXh0TmFtZX19LmNvbS91c2VyL29hdXRoaC8/cGw9MiZvcD1sb2dpbiZmcm9tX3VybD17e3VybH19IiBjbGFzcz0ic2luYWxvZ2luICBnd2RfYmciID48L2E+XG4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lmd3ZGFuZy5jb20vdXNlci93ZWNoYXRfb2F1dGgvP3BsPTkmb3A9d2VjaGF0TG9naW4mZnJvbV91cmw9e3t1cmx9fSIgY2xhc3M9IndlaXhpbmxvZ2luICBnd2RfYmciID48L2E+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJiYXItamlhbmdqaWEtcmUiPlxuICAgIDxkaXYgY2xhc3M9InByaWNlLWhlYWQiPlxuICAgICAgPGRpdiBjbGFzcz0iaGVhZC1pdGVtIG5vdy1wcmktZGl2Ij5cbiAgICAgICAgPHNwYW4gY2xhc3M9InJlLXN0cm9uZyBibGtjb2xvcjEiPuW9k+WJjeS7t+agvO+8mjwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InJlLXByaWNlIHByaWZvbnRmIj57e21vbmV5fX17e2xhc3RwcmljZX19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPSJoZWFkLWl0ZW0gaGlzLXByaS1kaXYiPlxuICAgICAgICA8c3BhbiBjbGFzcz0icmUtc3Ryb25nIGJsa2NvbG9yMSI+5Y6G5Y+y5Lu35qC877yaPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0icmUtcHJpY2UtbnVtIGJsa2NvbG9yMSBwcmlmb250ZiI+e3ttb25leX19e3twcmljZV9yYW5nZX19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0iamotcmVtaW5kIj5cbiAgICAgICAgPHAgY2xhc3M9ImJsa2NvbG9yMSI+6ZmN5Lu35o+Q6YaSPC9wPlxuICAgICAgICA8ZGl2IGNsYXNzPSJyZW1pbmQtaXRlbSByZW1pbmQtaXRlbS1mc3QiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWxlY3QtaXRlbSBnd2RfYmcge3tpZiBub3RpZnlfc2l0ZSA9PSBcJzBcJ319c2VsZWN0ZWQge3svaWZ9fSIgIGRhdGEtdHlwZT0iMCI+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGtjb2xvcjMiPuWFqOe9keWVhuWutuS9juS6jnt7bW9uZXl9fTwvc3Bhbj5cbiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgdmFsdWU9Int7YWxscHJpY2V9fSIgY2xhc3M9InByaWZvbnRmIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IzIj57e3JpeXVhbn195pe25o+Q6YaSPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzcz0icmVtaW5kLWl0ZW0gcmVtaW5kLWl0ZW0tc25kIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0ic2VsZWN0LWl0ZW0gZ3dkX2JnIHt7aWYgbm90aWZ5X3NpdGUgPT0gXCcxXCd9fXNlbGVjdGVkIHt7L2lmfX0iIGRhdGEtdHlwZT0iMSI+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGtjb2xvcjMiPuW9k+WJjeWVhuWutuS9juS6jnt7bW9uZXl9fTwvc3Bhbj5cbiAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgdmFsdWU9Int7bm93cHJpY2V9fSIgY2xhc3M9InByaWZvbnRmIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IzIj57e3JpeXVhbn195pe25o+Q6YaSPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3tpZiBhbGxwcmljZSAmJiAhYWxpU2l0ZSAmJiBsb3dlc3RVcmx9fVxuICAgICAgICA8YSBjbGFzcz0iamotcmVtaW5kLWxvZ28yIGhhc3VybCBnd2RfYmciIHRhcmdldD0iX2JsYW5rIiBocmVmPSJ7e2xvd2VzdFVybH19Ij7ku4rml6XlhajnvZHmnIDkvY7ku7c8L2E+XG4gICAgICAgIHt7ZWxzZSBpZiAhYWxpU2l0ZSAmJiAhYWxscHJpY2V9fVxuICAgICAgICAgIDxhIGNsYXNzPSJqai1yZW1pbmQtbG9nbyIgPjwvYT5cbiAgICAgICAge3svaWZ9fVxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPSJqai1zdHlsZSI+XG4gICAgICAgIDxwIGNsYXNzPSJibGtjb2xvcjEge3tpZiBpc2xvZ2lufX0gbG9naW5lZCB7ey9pZn19Ij7mj5DphpLmlrnlvI88L3A+XG4gICAgICAgICA8ZGl2IGNsYXNzPSJyZW1pbmQtaXRlbSI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InFyY29kZS1pdGVtIHNlbGVjdC1pdGVtIGd3ZF9iZyB7e2lmIHJlbWluZF90eXBlID09IFwnMFwnfX1zZWxlY3RlZCB7ey9pZn19IiBkYXRhLXR5cGU9IjAiPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IzIj7lhbPms6jlvq7kv6HorqLpmIXlj7fvvIzlvq7kv6Hmj5DphpI8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPSJyZW1pbmQtaXRlbSByZW1pbmQtaXRlbS1zbmQiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJlbWFpbC1pdGVtIHNlbGVjdC1pdGVtIGd3ZF9iZyB7e2lmIHJlbWluZF90eXBlID09IFwnMVwnfX1zZWxlY3RlZCB7ey9pZn19IiBkYXRhLXR5cGU9IjEiPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IzIj7pgq7nrrHmj5DphpI8L3NwYW4+XG4gICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIHZhbHVlPSJ7e2VtYWlsdmFsdWV9fSIgY2xhc3M9InJlLW1haWwgYmxrY29sb3IzIj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgXG4gICAgICA8L2Rpdj5cbiAgICAgICA8c3BhbiBpZD0iYmFyX3N1YmJ0biIgY2xhc3M9InN1YmJ0biI+5o+Q5LqkPC9zcGFuPlxuICAgICAgPGRpdiBpZD0ibG9naW4tcmVtaW5kIiBjbGFzcz0ie3tpZiBpc2xvZ2lufX0gbG9naW5lZCB7ey9pZn19Ij5cbiAgICAgICAgPHNwYW4gY2xhc3M9ImdvX2xvZ2luX2J0biI+5Y6755m75b2VPC9zcGFuPlxuICAgICAgICA8cCBjbGFzcz0iYmxrY29sb3I0Ij7nmbvlvZXotKbmiLfvvIzlj4rml7bojrflj5bllYblk4HpmY3ku7fkv6Hmga/mj5DphpI8L3A+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzcGFuIGNsYXNzPSJlcnJvcl9yZW1pbmQiPuivt+i+k+WFpeato+ehruagvOW8j+WVhuWTgeS7t+agvDwvc3Bhbj5cbiAgICAgIDxzcGFuIGlkPSJlZGl0X3JlbWluZF9zdHlsZSIgY2xhc3M9ImJsa2NvbG9yNCI+5pu05pS55Lu35qC85o+Q6YaS5pa55byPPC9zcGFuPlxuICAgICAgPHNwYW4gaWQ9InJlbWluZF9xcmNvZGUiIGNsYXNzPSJ7e2lmIGlzbG9naW59fSBsb2dpbmVkIHt7L2lmfX0gYmxrY29sb3I0IiA+5b6u5L+h5LqM57u056CBPC9zcGFuPlxuICAgICAgPGRpdiBpZD0icmVtaW5kX3FyY29kZV9pbWciPlxuICAgICAgICA8aW1nIHNyYz0iIiBhbHQ9IuS6jOe7tOeggSI+XG4gICAgICAgIDxwPui0reeJqeWFmuavlOS7tzwvcD5cbiAgICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAjZmF2b3JfYm94IC5lcnJvcl9yZW1pbmQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAxMDhweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweCFpbXBvcnRhbnQ7XG4gICAgICBjb2xvcjogI2U0MzkzYyFpbXBvcnRhbnQ7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGxlZnQ6IDBweDtcbiAgICAgIGhlaWdodDogMTJweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICAgIH1cbiAgICAjZmF2b3JfYm94LmZhdm9yX2Nob29zZWQgLmVycm9yX3JlbWluZCB7XG4gICAgICBib3R0b206IDc3cHg7XG4gICAgfVxuICAgICNmYXZvcl9ib3ggLmZvcmdldHBzZDpob3ZlciB7XG4gICAgICBjb2xvcjogIzQ4YmVmZTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgICNmYXZvcl9ib3gge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgd2lkdGg6IDMyMHB4O1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZWRmMWYyO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAubG9naW4tY29udGVudCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgaGVpZ2h0OiAyNjhweDtcbiAgICAgIHdpZHRoOiAzMjBweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZGYxZjI7XG4gICAgICBib3JkZXItdG9wOiBub25lO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwcHg7XG4gICAgICByaWdodDogLTI5MnB4O1xuICAgICAgei1pbmRleDogOTk5O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICB9XG4gICAgLmxvZ2luLWNvbnRlbnQgLmxvZ2luLXJpZ2h0IHtcbiAgICAgIHdpZHRoOiA4NnB4O1xuICAgICAgaGVpZ2h0OiAyNTBweDtcbiAgICB9XG4gICAgLmxvZ2luLWNvbnRlbnQgLm90aGVyLWxvZ2luLXN0eWxlIHtcbiAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgcGFkZGluZzogMzRweCAwO1xuICAgICAgbWFyZ2luLWxlZnQ6IDE4cHg7XG4gICAgfVxuICAgIC5sb2dpbi1jb250ZW50IC5sb2dpbi1sZWZ0IHtcbiAgICAgIHdpZHRoOiAyMjZweDtcbiAgICAgIGhlaWdodDogMjUwcHg7XG4gICAgfVxuICAgIC5sb2dpbi1jb250ZW50IC5vdGhlci1sb2dpbi1zdHlsZSBhIHtcbiAgICAgIG1hcmdpbjogMTBweCAwcHg7XG4gICAgfVxuICAgIC5sb2dpbi1jb250ZW50IC5sb2dpbi1pbnB1dCBpbnB1dCB7XG4gICAgICB3aWR0aDogMTQ4cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMjNweDtcbiAgICAgIG1hcmdpbi10b3A6IDIycHg7XG4gICAgfVxuICAgICNiamQtbm90aWZpZXIgLnByaWNlLXRyZW5kIGRpdi5jaGFydCB7XG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmUhaW1wb3J0YW50O1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5wcmljZS1oZWFkIHtcbiAgICAgIG1hcmdpbi10b3A6IDE0cHg7XG4gICAgfVxuICAgICNmYXZvcl9ib3ggLmhlYWQtaXRlbSB7XG4gICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgIGhlaWdodDogMTRweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5oZWFkLWl0ZW0gc3BhbiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgI2Zhdm9yX2JveCAuaGVhZC1pdGVtOmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogIiI7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gICAgI2Zhdm9yX2JveCAuaGlzLXByaS1kaXYge1xuICAgICAgbWFyZ2luLXRvcDogOXB4O1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5sb2dpbi1pbnB1dCBkaXYgYSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICAgICNmYXZvcl9ib3ggLmxvZ2luLWlucHV0IGRpdiB7XG4gICAgICBwYWRkaW5nLXRvcDogM3B4O1xuICAgICAgcGFkZGluZy1yaWdodDogMjdweDtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgIH1cbiAgICAjZmF2b3JfYm94IGEucXVpY2stcmVnIHtcbiAgICAgIGNvbG9yOiAjNDhiZWZlO1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgICBtYXJnaW4tbGVmdDogOTBweCFpbXBvcnRhbnQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUhaW1wb3J0YW50O1xuICAgIH1cbiAgICAjbG9nX2JhY2tfYnRuIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMTBweDtcbiAgICAgIGxlZnQ6IDEwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBoZWlnaHQ6IDE4cHg7XG4gICAgICB3aWR0aDogMThweDtcbiAgICAgIGJhY2tncm91bmQ6IHVybChcJ3t7aW1nSG9zdH19ZXh0ZW5zaW9ucy9uZXdiYXIvbG9naW4tZGVsZXRlLnBuZ1wnKSBuby1yZXBlYXQgMHB4IDBweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgI2xvZ2luQ2xpY2tCdG5CYXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBoZWlnaHQ6IDI4cHg7XG4gICAgICB3aWR0aDogODZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQ4QkVGRTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3MnB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgbWFyZ2luLXRvcDogMjNweDtcbiAgICB9XG4gICAgI2xvZ2luQ2xpY2tCdG5CYXI6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE4QUNGQztcbiAgICB9XG4gICAgI2Zhdm9yX2JveCAubG9naW4taW5wdXQge1xuICAgICAgbWFyZ2luLXRvcDogMTdweDtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgIH1cblxuICAgICNmYXZvcl9ib3ggc3Bhbi5yZS1zdHJvbmcge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTNweDtcbiAgICB9XG4gICAgI2Zhdm9yX2JveCAucmUtcHJpY2UtbnVtIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICAjZmF2b3JfYm94IHNwYW4ucmUtcHJpY2Uge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNFNDM5M0M7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgI2Zhdm9yX2JveCAuc2VsZWN0LWl0ZW0ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICB3aWR0aDogMTZweDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xMHB4IC02NHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEycHg7XG4gICAgfVxuICAgICNmYXZvcl9ib3ggLnNlbGVjdC1pdGVtLnNlbGVjdGVkIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0zMHB4IC02NHB4O1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5qai1yZW1pbmQ+cCwgI2Zhdm9yX2JveCAuamotc3R5bGU+cCB7XG4gICAgICBtYXJnaW4tbGVmdDogMTNweDtcbiAgICB9XG4gICAgI2Zhdm9yX2JveCAuamotc3R5bGU+cCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxM3B4O1xuICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5qai1zdHlsZT5wLmxvZ2luZWQge1xuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgICB9XG4gICAgLmpqLXN0eWxlIC5yZW1pbmQtaXRlbS1zbmQge1xuICAgICAgbWFyZ2luLXRvcDogMTFweDtcbiAgICB9XG4gICAgLmZhdm9yX2Nob29zZWQgIC5qai1yZW1pbmQge1xuICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICAgIGhlaWdodDogMTAycHg7XG4gICAgfVxuICAgIC5mYXZvcl9jaG9vc2VkIC5yZW1pbmQtaXRlbS1mc3Qge1xuICAgICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDIycHg7XG4gICAgfVxuICAgICNmYXZvcl9ib3ggLnJlbWluZC1pdGVtIHtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5yZW1pbmQtaXRlbSAqe1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC5yZW1pbmQtaXRlbS1zbmQge1xuICAgICAgbWFyZ2luLXRvcDogMTFweDtcbiAgICB9XG4gICAgI2Zhdm9yX2JveC5mYXZvcl9jaG9vc2VkIC5qai1yZW1pbmQgLmpqLXJlbWluZC1sb2dvIHtcbiAgICAgIHRvcDogMTZweDtcbiAgICB9XG4gICAgI2Zhdm9yX2JveC5mYXZvcl9jaG9vc2VkIC5qai1yZW1pbmQgLmpqLXJlbWluZC1sb2dvMiB7XG4gICAgICB0b3A6IDEycHg7XG4gICAgfVxuICAgIC5mYXZvcl9jaG9vc2VkIHNwYW4uc3ViYnRuIHtcbiAgICAgIG1hcmdpbi10b3A6IDI2cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTI1cHg7XG4gICAgfVxuICAgIC5qai1zdHlsZSB7XG4gICAgICBoZWlnaHQ6IDczcHg7XG4gICAgfVxuICAgIC5mYXZvcl9jaG9vc2VkIC5qai1zdHlsZSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5qai1yZW1pbmQgLmpqLXJlbWluZC1sb2dvIHtcbiAgICAgIHRvcDogLTRweDtcbiAgICAgIHdpZHRoOiAxMjVweDtcbiAgICAgIGxlZnQ6IDExM3B4O1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5qai1yZW1pbmQgLmpqLXJlbWluZC1sb2dvMiB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBoZWlnaHQ6IDI1cHg7XG4gICAgICB3aWR0aDogMTEwcHg7XG4gICAgICBjb2xvcjogIzVGQzY3NjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTlweCAtODJweDtcbiAgICAgIGxlZnQ6IDExNnB4O1xuICAgICAgdG9wOiAtNHB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5qai1yZW1pbmQgLmpqLXJlbWluZC1sb2dvMjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtOXB4IC0xODlweDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAucmVtaW5kLWl0ZW0tZnN0IHtcbiAgICAgIG1hcmdpbi10b3A6IDE0cHg7XG4gICAgfVxuICAgICNsb2dpbi1yZW1pbmQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZGYxZjI7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgaGVpZ2h0OiAxMDRweDtcbiAgICAgIHdpZHRoOiAzMTlweDtcbiAgICAgIGJvdHRvbTogMHB4O1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICB9XG4gICAgI2xvZ2luLXJlbWluZC5sb2dpbmVkIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICNsb2dpbi1yZW1pbmQgLmdvX2xvZ2luX2J0biB7XG4gICAgICB3aWR0aDogNzRweDtcbiAgICAgIGhlaWdodDogMjZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQ4YmVmZjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBtYXJnaW46IDE4cHggMHB4IDBweCAxMjRweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAjbG9naW4tcmVtaW5kIC5nb19sb2dpbl9idG46aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE4QUNGQztcbiAgICB9XG4gICAgI2xvZ2luLXJlbWluZCBwIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgd2lkdGg6IDMyMHB4O1xuICAgICAgbWFyZ2luLXRvcDogMTNweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgfVxuICAgIC5sb2dpbi1jb250ZW50IC5zcC1ib3JkZXIge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIzMHB4IDdweDtcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgIH1cbiAgICAjZWRpdF9yZW1pbmRfc3R5bGUsICNyZW1pbmRfcXJjb2Rle1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLmZhdm9yX2Nob29zZWQgI2VkaXRfcmVtaW5kX3N0eWxlIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgI3JlbWluZF9xcmNvZGUubG9naW5lZHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgI2VkaXRfcmVtaW5kX3N0eWxlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMTRweDtcbiAgICAgIGxlZnQ6IDE0cHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgICNmYXZvcl9ib3ggI2VkaXRfcmVtaW5kX3N0eWxlOmhvdmVyLCAjZmF2b3JfYm94ICNyZW1pbmRfcXJjb2RlOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNDhiZWZmO1xuICAgIH1cbiAgICAjcmVtaW5kX3FyY29kZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDE0cHg7XG4gICAgICByaWdodDogMTRweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIC1tb3otdXNlci1zZWxlY3Q6IC1tb3otbm9uZTtcbiAgICAgIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICB9XG4gICAgLmZhdm9yX2Nob29zZWQgI3JlbWluZF9xcmNvZGUge1xuICAgICAgYm90dG9tOiAxNHB4O1xuICAgICAgcmlnaHQ6IDE0cHg7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTtcbiAgICB9XG4gICAgI3JlbWluZF9xcmNvZGVfaW1nIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAzcHg7XG4gICAgICBoZWlnaHQ6IDEzNHB4O1xuICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgYm90dG9tOiAzOXB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTE7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgYm94LXNoYWRvdzogMHB4IDVweCAxNXB4IDAgcmdiYSgyMywyNSwyNywwLjE1KTtcbiAgICB9XG4gICAgI3JlbWluZF9xcmNvZGVfaW1nIGltZyB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gICAgI3JlbWluZF9xcmNvZGVfaW1nOmJlZm9yZSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbnRlbnQ6ICIiO1xuICAgICAgaGVpZ2h0OiAwcHg7XG4gICAgICB3aWR0aDogMHB4O1xuICAgICAgYm9yZGVyOiA4cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBib3JkZXItdG9wLWNvbG9yOiAjOTk5O1xuICAgICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiA3cHg7XG4gICAgICBib3JkZXItbGVmdC13aWR0aDogN3B4O1xuICAgICAgdG9wOiAxMzVweDtcbiAgICAgIHJpZ2h0OiA1MnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIH1cbiAgICAjcmVtaW5kX3FyY29kZV9pbWc6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiAiIjtcbiAgICAgIGhlaWdodDogMHB4O1xuICAgICAgd2lkdGg6IDBweDtcbiAgICAgIGJvcmRlcjogOHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXRvcC1jb2xvcjogI2ZmZjtcbiAgICAgIGJvcmRlci1yaWdodC13aWR0aDogOHB4O1xuICAgICAgYm9yZGVyLWxlZnQtd2lkdGg6IDhweDtcbiAgICAgIHRvcDogMTM0cHg7XG4gICAgICByaWdodDogNTFweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB9XG4gICAgI3JlbWluZF9xcmNvZGVfaW1nIHAge1xuICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgcGFkZGluZzogMHB4IDZweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjOGQ4ZDhkO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdG9wOiAtOHB4O1xuICAgIH1cbiAgICAjcmVtaW5kX3FyY29kZV9pbWcgcDphZnRlcntcbiAgICAgIGNvbnRlbnQ6Ii4iO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6MTAwJTtcbiAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgIGhlaWdodDowO1xuICAgIH1cbiAgICAjZmF2b3JfYm94IC5xcWxvZ2luIHtcbiAgICAgIG1hcmdpbi10b3A6IDIwcHghaW1wb3J0YW50O1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigxMyksYT1uKDIyKSxyPW4oMjQpLHM9bigxMiksbD1uKDE0KSxjPW4oODQpLHA9e30sZD1bXSxoPXZvaWQgMCx1PWZ1bmN0aW9uKHQpe2lmKGUucmVtaW5kSW5mbylyZXR1cm4gdm9pZCB0KGUucmVtaW5kSW5mbyk7aWYoaClyZXR1cm4gdm9pZCBkLnB1c2godCk7aD0hMDt2YXIgbj1lLm5vd19kcF9pZDtuLmluZGV4T2YoIi0iKT09PS0xJiYobj1uKyItIitlLnNpdGVfaWQpO3ZhciBpPWUuY19zZXJ2ZXIrIi9hcGkvcmVtaW5kX3NldHRpbmc/YWN0aW9uPWdldCZlbWFpbD0iK2UuZW1haWwrIiZkcF9pZD0iK247ci5nZXQoaSkuZG9uZShmdW5jdGlvbihuKXtpZihlLnJlbWluZEluZm89bix0KG4pLGQubGVuZ3RoPjApZm9yKHZhciBpPTA7aTxkLmxlbmd0aDtpKyspZFtpXShuKX0pfSxtPWZ1bmN0aW9uKHQpe2lmKGUuZW1haWwmJnQpe3ZhciBuPWUuY19zZXJ2ZXIrIi9icndleHQvY2hlY2tfY29sbGVjdGVkP2VtYWlsPSIrZS5lbWFpbCsiJmRwX2lkPSIrdDtyLmdldChuKS5kb25lKGZ1bmN0aW9uKHQpe3QmJnQubXNnPT09ITAmJihpKCIjZ3dkX21pbmlfcmVtaW5kIC5taW5pYmFyLWJ0bi1ib3ggc3BhbiIpLnRleHQoIuW3sua3u+WKoOaPkOmGkiIpLGkoIiN0b3BmYXZvcl9kZXRhaWwgLnRvcGYtaGVhZCAuc3AtY29sIikudGV4dCgi5pS26JeP5oiQ5YqfIikuYWRkQ2xhc3MoImNvbGxlY3RlZCIpLGkoIiNodF9mYXZvciIpLnRleHQoIuaUtuiXj+aIkOWKnyIpLmFkZENsYXNzKCJjb2xsZWN0ZWQiKSl9KX19LGY9ZnVuY3Rpb24oKXtpKCIuYmpkLWxvZ2luLWJveCwgLmxvZ2luLWNvbnRlbnQiKS5oaWRlKCksaSgiLmJqZC1qaWFuZ2ppYS1yZSIpLnNob3coKSxtKGUubm93X2RwX2lkKSxuKDg0KS5yZW5kZXJBZ2FpbigpLHUoZnVuY3Rpb24odCl7dCYmKHAuaXNfY29sbGVjdGVkPXQuaXNfY29sbGVjdGVkLHQuaGFzX3JlbWluZF90eXBlPyhpKCIuc2VsZWN0LWl0ZW0iKS5yZW1vdmVDbGFzcygic2VsZWN0ZWQiKSxpKCIjYmpkX21pbmlmYXZvcl9jb250ZW50IikuYWRkQ2xhc3MoImJqZF9jaG9vc2VkIiksaSgiI2Zhdm9yX2JveCIpLmFkZENsYXNzKCJmYXZvcl9jaG9vc2VkIiksaSgnLmpqLXN0eWxlIC5zZWxlY3QtaXRlbVtkYXRhLXR5cGU9IicrdC5yZW1pbmRfdHlwZSsnIl0nKS5hZGRDbGFzcygic2VsZWN0ZWQiKSk6aSgnLmpqLXN0eWxlIC5zZWxlY3QtaXRlbVtkYXRhLXR5cGU9IjEiXScpLmFkZENsYXNzKCJzZWxlY3RlZCIpLHQubm90aWZ5X3NpdGU9dC5ub3RpZnlfc2l0ZXx8IjEiLGkoJy5qai1yZW1pbmQgLnNlbGVjdC1pdGVtW2RhdGEtdHlwZT0iJyt0Lm5vdGlmeV9zaXRlKyciXScpLmFkZENsYXNzKCJzZWxlY3RlZCIpLHQucmVtaW5kX3ByaWNlJiZpKCcuamotcmVtaW5kIC5zZWxlY3QtaXRlbVtkYXRhLXR5cGU9IicrdC5ub3RpZnlfc2l0ZSsnIl0nKS5wYXJlbnQoKS5maW5kKCJpbnB1dCIpLnZhbCh0LnJlbWluZF9wcmljZSksaSgiLmpqLXN0eWxlIC5yZS1tYWlsIikudmFsKGUuZW1haWwpKX0pfSxnPWZ1bmN0aW9uKHQsbixvKXtpLmFqYXgoe3R5cGU6InBvc3QiLHVybDoiaHR0cHM6Ly93d3cuIitlLmV4dE5hbWUrIi5jb20vdXNlci9hal9sb2dpbiIseGhyRmllbGRzOnt3aXRoQ3JlZGVudGlhbHM6ITB9LGNyb3NzRG9tYWluOiEwLGRhdGE6e2VtYWlsOnQscGFzc3dvcmQ6bix0OiJjaGVjayIsaG9zdDpsb2NhdGlvbi5wcm90b2NvbCsiLy8iK2xvY2F0aW9uLmhvc3R9LHN1Y2Nlc3M6ZnVuY3Rpb24obil7cmV0dXJuIjEiIT09bj92b2lkIGkoIiNsb2dpbl9yZW1pbmRfdGxlLCAjbG9naW5fcmVtaW5kX3RsZV9iYXIiKS5jc3MoImRpc3BsYXkiLCJibG9jayIpLmZhZGVPdXQoNWUzKTooZS5lbWFpbD10LG8mJm8oKSxmKCksdm9pZCAwKX19KX0sdz1mdW5jdGlvbigpe3ZhciB0PXZvaWQgMCxuPXZvaWQgMCxvPSJjbGljayI7ZS5lbWFpbCYmKG89Im1vdXNlZW50ZXIiKSxpKCIjZ3dkX21pbmlfcmVtaW5kIikub24obyxmdW5jdGlvbigpe2MuZ2V0UVJjb2RlKCksZS5lbWFpbCYmIW4mJihmKCksbj0hMCksaSgiI2d3ZF9taW5pX3JlbWluZCIpLmFkZENsYXNzKCJtc2hvdmVyIiksaSgiI2d3ZF9taW5pX3JlbWluZCBlbSIpLmFkZENsYXNzKCJjb2xsZWN0X2hvdmVyIiksaSgiaHRtbCIpLmFkZENsYXNzKCJiamQtZmF2b3Itc2hvdyIpLGkoIiNiamRfbWluaWZhdm9yX2NvbnRlbnQiKS5zaG93KCl9KS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oZSl7dHx8c2V0VGltZW91dChmdW5jdGlvbigpe2koIiNnd2RfbWluaV9yZW1pbmQiKS5yZW1vdmVDbGFzcygibXNob3ZlciIpLGkoIiNnd2RfbWluaV9yZW1pbmQgZW0iKS5yZW1vdmVDbGFzcygiY29sbGVjdF9ob3ZlciIpLGkoImh0bWwiKS5yZW1vdmVDbGFzcygiYmpkLWZhdm9yLXNob3ciKSxpKCIjYmpkX21pbmlmYXZvcl9jb250ZW50IikuaGlkZSgpfSwyMDApfSk7dmFyIGE9ZnVuY3Rpb24odCxuKXt2YXIgaT10LG89bnx8IiIsYT1lLmNfc2VydmVyKyIvYXBpL3JlbWluZF9zZXR0aW5nP2FjdGlvbj1zZXQmZW1haWw9IitlLmVtYWlsKyImc2V0dGluZ190eXBlPSIraSsiJnJlbWluZF9lbWFpbD0iK287ci5nZXQoYSl9O2koIiNiamRfbWluaWZhdm9yX2NvbnRlbnQgaW5wdXQiKS5vbigiZm9jdXMiLGZ1bmN0aW9uKCl7dD0hMCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dD0hMX0sMzAwKX0pLGkoIi5qaWFuZ2ppYS1sZWZ0IC5zZWxlY3QtaXRlbSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKHRoaXMpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoIi5zZWxlY3QtaXRlbSIpLnJlbW92ZUNsYXNzKCJzZWxlY3RlZCIpLGkodGhpcykuYWRkQ2xhc3MoInNlbGVjdGVkIil9KSxpKCIjZWRpdF9yZV9zdHlsZSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKCIjYmpkX21pbmlmYXZvcl9jb250ZW50IikucmVtb3ZlQ2xhc3MoImJqZF9jaG9vc2VkIil9KSxpKCIjbG9naW5DbGlja0J0biIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1pKCIjYmpkX21pbmlmYXZvcl9jb250ZW50IC51c2VybmFtZSIpLnZhbCgpLGU9aSgiI2JqZF9taW5pZmF2b3JfY29udGVudCAucGFzc3dvcmQiKS52YWwoKTtyZXR1cm4gdCYmZT8oYy5sb2dpblJlbmRlclRvcCgpLHZvaWQgZyh0LGUpKTp2b2lkIGkoIiNsb2dpbl9yZW1pbmRfdGxlIikuY3NzKCJkaXNwbGF5IiwiYmxvY2siKS5mYWRlT3V0KDVlMyl9KSxpKCIjc3ViYnRuIikub24oImNsaWNrIixmdW5jdGlvbigpe3ZhciB0PWkoIiNiamRfbWluaWZhdm9yX2NvbnRlbnQiKS5oYXNDbGFzcygiYmpkX2Nob29zZWQiKTtpZighdCl7dmFyIGU9dm9pZCAwLG49aSgiLmpqLXN0eWxlIC5zZWxlY3QtaXRlbS5zZWxlY3RlZCIpLmF0dHIoImRhdGEtdHlwZSIpO2lmKCIxIj09PW4mJihlPWkoIi5qai1zdHlsZSAucmUtbWFpbCIpLnZhbCgpLCFlKSlyZXR1cm4gdm9pZCBpKCIjZXJyb3JfcmVtaW5kX3RsZSIpLnRleHQoIuivt+i+k+WFpeato+ehrueahOmCrueuseWcsOWdgCIpLmNzcygiZGlzcGxheSIsImJsb2NrIikuZmFkZU91dCg1ZTMpO2EobixlKX12YXIgbz1pKCIuamotcmVtaW5kIC5zZWxlY3QtaXRlbS5zZWxlY3RlZCIpLHI9by5hdHRyKCJkYXRhLXR5cGUiKSxjPW8ucGFyZW50KCkuZmluZCgiaW5wdXQiKS52YWwoKTtyZXR1cm4iIj09PWM/dm9pZCBpKCIjZXJyb3JfcmVtaW5kX3RsZSIpLnRleHQoIuivt+i+k+WFpeWVhuWTgeacn+acm+S7t+agvCIpLmNzcygiZGlzcGxheSIsImJsb2NrIikuZmFkZU91dCg1ZTMpOk51bWJlcihjKTw9MHx8IWMubWF0Y2goLyg/Ol5cZCskfF5cZCtcLlxkezEsMn0kKS8pP3ZvaWQgaSgiI2Vycm9yX3JlbWluZF90bGUiKS50ZXh0KCLor7fovpPlhaXmraPnoa7moLzlvI/nmoTku7fmoLwiKS5jc3MoImRpc3BsYXkiLCJibG9jayIpLmZhZGVPdXQoNWUzKTpwLm5vd3ByaWNlJiZOdW1iZXIoYyk+cC5ub3dwcmljZSYmIjEiPT09cj92b2lkIGkoIiNlcnJvcl9yZW1pbmRfdGxlIikudGV4dCgi5Lu35qC85LiN6IO96auY5LqO5b2T5YmN5ZWG5ZOB5Lu35qC8IikuY3NzKCJkaXNwbGF5IiwiYmxvY2siKS5mYWRlT3V0KDVlMyk6KHMoIm1pbmktZmF2b3ItZGV0YWlsLWJ0bi1jbGljayIpLGwubG9nKCJtaW5pLWZhdm9yLWRldGFpbC1idG4tY2xpY2siKSx4KHIsYyksdm9pZCBpKCIjYmpkX21pbmlmYXZvcl9jb250ZW50IikuaGlkZSgpLmFkZENsYXNzKCJiamRfY2hvb3NlZCIpKX0pLGkoIi5qai1yZW1pbmQtbG9nbyIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtzKCJhbGxzaXRlLWxvd3ByaS1jbGljayIpLGwubG9nKCJhbGxzaXRlLWxvd3ByaS1jbGljayIpfSl9LHg9ZnVuY3Rpb24odCxuKXt0PXR8fCIiLG49bnx8IiI7dmFyIG89cC5kcF9xdWVyeS5kcC5kcF9pZCxhPXAuZHBfcXVlcnkuZHAuc2l0ZV9pZCxzPXAuZHBfcXVlcnkuZHAsbD1lLmRwLm9sZFByaWNlLGM9ZS5kcC5uYW1lfHxpKCJ0aXRsZSIpLmh0bWwoKTtpZihpKCIjIitlLmV4dEJyYW5kKyJfYWRkX2Zhdm9yIikudGV4dCgi5q2j5Zyo5pS26JePIiksIiI9PWx8fGw8PTApe3ZhciBkPWUucHJpY2U7bD1kfXZhciBoPSIwIjtwLmlzX2NvbGxlY3RlZCYmKGg9IjEiKSwiODMiIT1lLnNpdGVfaWQmJiIxMjMiIT09ZS5zaXRlX2lkfHwocy5kcF9pZD1zLmRwX2lkKyItIitlLnNpdGVfaWQpO3ZhciB1PWUuY19zZXJ2ZXIrIi9jb2xsZWN0L2FqX2FkZD9kcF9pZD0iK28rIiZ1cmw9IitlbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24uaHJlZikrIiZpbWc9IitlbmNvZGVVUklDb21wb25lbnQoZS5kcC5pbWcpKyImdGl0bGU9IitlbmNvZGVVUklDb21wb25lbnQoYykrIiZwcmljZT0iK2wrIiZzaXRlX2lkPSIrYSsiJmNhdF9pZD0iK2UuZHAuY2F0X2lkKyImbm90aWZ5X3NpdGU9Iit0KyImbm90aWZ5X3ByaWNlPSIrbisiJmlzX2NvbGxlY3RlZD0iK2g7ci5nZXQodSkuZG9uZShmdW5jdGlvbih0KXtpKCIjIitlLmV4dEJyYW5kKyJfYWRkX2Zhdm9yIikudGV4dCgi5pS26JeP6K+l5ZWG5ZOBIiksMTAwPT10LmNvZGV8fHQuY29kZTw9MD8oaSgiIyIrZS5leHRCcmFuZCsiX2FkZF9mYXZvciIpLmhpZGUoKSxpKCIjIitlLmV4dEJyYW5kKyJfZmF2b3JfaXRlbV9saXN0IikuZW1wdHkoKS5oaWRlKCksaSgiIyIrZS5leHRCcmFuZCsiLWZhdm9yLWRldGFpbCAuIitlLmV4dEJyYW5kKyItbG9naW4taW5mbyIpLnNob3coKSk6MT09dC5jb2RlPyhlLmNvbGxlY3Rpb25DaGFuZ2VkPSEwLGkoIiMiK2UuZXh0QnJhbmQrIl9hZGRfZmF2b3IiKS50ZXh0KCLmlLbol4/miJDlip8iKSxpKCIjIitlLmV4dE5hbWUrIi10cmVuZC1kZXRhaWwiKS5oaWRlKCksaSgiI2d3ZF9taW5pX3JlbWluZCAubWluaWJhci1idG4tYm94IHNwYW4iKS50ZXh0KCLlt7Lmt7vliqDmj5DphpIiKSk6Mj09dC5jb2RlJiZpKCIjZ3dkX21pbmlfcmVtaW5kIC5taW5pYmFyLWJ0bi1ib3ggc3BhbiIpLnRleHQoIuW3sua3u+WKoOaPkOmGkiIpfSkuZmFpbChmdW5jdGlvbigpe2koIiMiK2UuZXh0QnJhbmQrIl9hZGRfZmF2b3IiKS50ZXh0KCLmlLbol4/llYblk4EiKX0pfSxiPTAsXz1mdW5jdGlvbiB2KCl7cC5ub3dwcmljZXx8Yj41fHwoYisrLGUuZHAucHJpY2UmJmUuZHAucHJpY2U+MCYmTnVtYmVyKGkoIi5qai1yZW1pbmQgLnJlbWluZC1pdGVtLXNuZCBpbnB1dCIpLnZhbCgpKT8ocC5ub3dwcmljZT1lLmRwLnByaWNlLHAuYWxscHJpY2V8fChwLmFsbHByaWNlPWUuZHAucHJpY2UsaSgiLmpqLXJlbWluZCAucmVtaW5kLWl0ZW0gaW5wdXQiKS52YWwoZS5kcC5wcmljZSkpLGkoIi5qai1yZW1pbmQgLnJlbWluZC1pdGVtLXNuZCBpbnB1dCIpLnZhbChlLmRwLnByaWNlKSk6c2V0VGltZW91dCh2LDFlMykpfTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpe3ZhciB0PW8uZ2V0KCJkcF9xdWVyeSIpLHI9by5nZXQoIm90aGVyX2luZm8iKTtwLm90aGVyX2luZm89cixwLmRwX3F1ZXJ5PXQ7dmFyIGM9IiNnd2RfbWluaV9yZW1pbmQiLGQ9dm9pZCAwLGg9dm9pZCAwLHU9dm9pZCAwLGY9ZS5lbWFpbDtpZihyLm5vdy5kcF9pZCl7dmFyIGc9ZW5jb2RlVVJJQ29tcG9uZW50KGxvY2F0aW9uLmhyZWYpLHg9clsiY29kZS1zZXJ2ZXIiXS5wcmljZXx8ZS5kcC5wcmljZTtlLmFsaVNpdGUmJih4PWUuZHAucHJpY2UpO3ZhciBiPXQuYjJjLm1pbl9wcmljZXx8eDt4PU51bWJlcih4LnRvU3RyaW5nKCkucmVwbGFjZSgiLCIsIiIpKSxiPU51bWJlcihiLnRvU3RyaW5nKCkucmVwbGFjZSgiLCIsIiIpKSx0LmIyYy5wcm9kdWN0JiYwIT09dC5iMmMucHJvZHVjdC5sZW5ndGgmJih1PXQuYjJjLnByb2R1Y3RbMF0udXJsLHMoImFsbHNpdGUtbG93cHJpLXNob3ciKSxsLmxvZygiYWxsc2l0ZS1sb3dwcmktc2hvdyIpKSxwLm5vd3ByaWNlPXg7dmFyIHY9big4Nyk7ZS5lbWFpbCYmbShyLm5vdy5kcF9pZCk7dmFyIHk9YS5jb21waWxlKHYpKHtjaG9vc2VkOmQsZW1haWw6ZS5lbWFpbCxlbWFpbHZhbHVlOmYsdXJsOmcsbG93ZXN0VXJsOnUsbm90aWZ5X3NpdGU6cC5ub3RpZnlfc2l0ZSxub3dwcmljZTp4LGFsbHByaWNlOmIscmVtaW5kX3R5cGU6aCxleHROYW1lOmUuZXh0TmFtZX0pO2koYykuYXBwZW5kKHkpLHcoKSxfKCl9fSx0LmV4cG9ydHMudXNlckxvZ2luPWcsdC5leHBvcnRzLmdldFJlbWluZFN0eWxlPXUsdC5leHBvcnRzLmFkZF9mYXZvcj14fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGlkPSJiamRfbWluaWZhdm9yX2NvbnRlbnQiICB7e2lmIGNob29zZWQgfX1jbGFzcz0iYmpkX2Nob29zZWQiIHt7L2lmfX0+XG4gIDxkaXYgY2xhc3M9ImJqZC1sb2dpbi1ib3giPlxuICAgIDxkaXYgY2xhc3M9ImxvZ2luLWxlZnQiPlxuICAgICAgPGRpdiBjbGFzcz0ibG9naW4taW5wdXQiPlxuICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgIGNsYXNzPSJ1c2VybmFtZSIgYXV0b2NvbXBsZXRlPSJvZmYiIHBsYWNlaG9sZGVyPSLpgq7nrrEiPlxuICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIGNsYXNzPSJwYXNzd29yZCIgcGxhY2Vob2xkZXI9IuWvhueggSI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cue3tleHROYW1lfX0uY29tL3VzZXIvZm9yZ290X3B3ZC8iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYmxrY29sb3I0Ij7lv5jorrDlr4bnoIE8L2E+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgIDwvZGl2PlxuICAgICAgPHNwYW4gaWQ9ImxvZ2luQ2xpY2tCdG4iID7nmbvlvZU8L3NwYW4+XG4gICAgICA8YSBocmVmPSJodHRwczovL3d3dy57e2V4dE5hbWV9fS5jb20vdXNlci9yZWdpc3RlciIgY2xhc3M9InF1aWNrLXJlZyIgdGFyZ2V0PSJfYmxhbmsiPuW/q+mAn+azqOWGjDwvYT5cbiAgICAgIDxzcGFuIGlkPSJsb2dpbl9yZW1pbmRfdGxlIj7otKblj7fmiJblr4bnoIHplJnor6/vvIzor7fph43mlrDovpPlhaXvvIE8L3NwYW4+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0ibG9naW4tcmlnaHQiPlxuICAgICAgPGRpdiBjbGFzcz0ic3AtYm9yZGVyIGd3ZF9iZyI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPSJvdGhlci1sb2dpbi1zdHlsZSI+XG4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lnt7ZXh0TmFtZX19LmNvbS91c2VyL29hdXRoLz9wbD03Jm9wPWxvZ2luJmZyb21fdXJsPXt7dXJsfX0iIGNsYXNzPSJxcWxvZ2luIGd3ZF9iZyIgPjwvYT5cbiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cue3tleHROYW1lfX0uY29tL3VzZXIvb2F1dGhoLz9wbD0yJm9wPWxvZ2luJmZyb21fdXJsPXt7dXJsfX0iIGNsYXNzPSJzaW5hbG9naW4gIGd3ZF9iZyIgPjwvYT5cbiAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZ3dkYW5nLmNvbS91c2VyL3dlY2hhdF9vYXV0aC8/cGw9OSZvcD13ZWNoYXRMb2dpbiZmcm9tX3VybD17e3VybH19IiBjbGFzcz0id2VpeGlubG9naW4gIGd3ZF9iZyIgPjwvYT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz0iYmpkLWppYW5namlhLXJlIj5cbiAgICA8ZGl2IGNsYXNzPSJqaWFuZ2ppYS1sZWZ0Ij5cbiAgICAgIDxkaXYgY2xhc3M9ImpqLXJlbWluZCI+XG4gICAgICAgIDxwIGNsYXNzPSJibGtjb2xvcjEiPumZjeS7t+aPkOmGkjwvcD5cbiAgICAgICAgPGRpdiBjbGFzcz0icmVtaW5kLWl0ZW0iPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWxlY3QtaXRlbSBtaW5pLWJnIHt7aWYgbm90aWZ5X3NpdGUgPT0gXCcwXCd9fXNlbGVjdGVkIHt7L2lmfX0iICBkYXRhLXR5cGU9IjAiPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IzIj7lhajnvZHllYblrrbkvY7kuo48L3NwYW4+XG4gICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIHZhbHVlPSJ7e2FsbHByaWNlfX0iPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGtjb2xvcjMiPuWFg+aXtuaPkOmGkjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InJlbWluZC1pdGVtIHJlbWluZC1pdGVtLXNuZCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InNlbGVjdC1pdGVtIG1pbmktYmcge3tpZiBub3RpZnlfc2l0ZSA9PSBcJzFcJ319c2VsZWN0ZWQge3svaWZ9fSIgZGF0YS10eXBlPSIxIj48L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImJsa2NvbG9yMyI+5b2T5YmN5ZWG5a625L2O5LqOPC9zcGFuPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiB2YWx1ZT0ie3tub3dwcmljZX19Ij5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IzIj7lhYPml7bmj5DphpI8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICB7e2lmIGxvd2VzdFVybH19XG4gICAgICAgIDxhIGNsYXNzPSJqai1yZW1pbmQtbG9nbyBtaW5pLWJnIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0ie3tsb3dlc3RVcmx9fSI+PC9hPlxuICAgICAgICB7ey9pZn19XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImpqLXN0eWxlIj5cbiAgICAgICAgPHAgY2xhc3M9ImJsa2NvbG9yMSI+5o+Q6YaS5pa55byPPC9wPlxuICAgICAgICAgPGRpdiBjbGFzcz0icmVtaW5kLWl0ZW0iPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWxlY3QtaXRlbSBtaW5pLWJnIHt7aWYgcmVtaW5kX3R5cGUgPT0gXCcwXCd9fXNlbGVjdGVkIHt7L2lmfX0iIGRhdGEtdHlwZT0iMCI+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJibGtjb2xvcjMiPuWFs+azqOW+ruS/oeiuoumYheWPt++8jOW+ruS/oeaPkOmGkjwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InJlbWluZC1pdGVtIGpqLXJlbWluZC1pdGVtLXNuZCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InNlbGVjdC1pdGVtIG1pbmktYmcge3tpZiByZW1pbmRfdHlwZSA9PSBcJzFcJ319c2VsZWN0ZWQge3svaWZ9fSIgZGF0YS10eXBlPSIxIj48L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImJsa2NvbG9yMyI+6YKu566x5o+Q6YaSPC9zcGFuPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiB2YWx1ZT0ie3tlbWFpbHZhbHVlfX0iIGNsYXNzPSJyZS1tYWlsIGJsa2NvbG9yMyI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8c3BhbiBpZD0iZXJyb3JfcmVtaW5kX3RsZSI+6K+36L6T5YWl5q2j56Gu55qE6YKu566x5Zyw5Z2APC9zcGFuPlxuICAgICAgPHNwYW4gaWQ9InN1YmJ0biIgY2xhc3M9InN1YmJ0biI+5o+Q5LqkPC9zcGFuPlxuICAgICAgPHNwYW4gaWQ9ImVkaXRfcmVfc3R5bGUiIGNsYXNzPSJibGtjb2xvcjQiPuabtOaUueS7t+agvOaPkOmGkuaWueW8jzwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJqaWFuZ2ppYS1yaWdodCI+XG4gICAgICA8c3BhbiBjbGFzcz0ibWd0b3AgYmxrY29sb3IxIj7lvq7kv6Hmn6Xor6I8L3NwYW4+XG4gICAgICA8ZGl2IGNsYXNzPSJxcmNvZGUtamoiPlxuICAgICAgICA8aW1nIHNyYz0iaHR0cDovL2Nkbi57e2V4dE5hbWV9fS5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvbmV3YmFyL3d4LXFyY29kZTMucG5nIj5cbiAgICAgIDwvZGl2PlxuICAgICAgPHAgY2xhc3M9ImZpcnN0LXAiPuaJq+eggeWFs+azqOW+ruS/oeWPtzwvcD5cbiAgICAgIDxwPuWVhuWTgemZjeS7t+WunuaXtuaPkOmGkjwvcD5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgLmJqZC1qaWFuZ2ppYS1yZSB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB7e2lmICFlbWFpbH19XG4gICAgICBkaXNwbGF5Om5vbmU7IFxuICAgICAge3svaWZ9fVxuICAgIH1cbiAgICAuYmpkLWxvZ2luLWJveCB7XG4gICAgICB7e2lmIGVtYWlsfX1cbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB7ey9pZn19XG4gICAgfVxuICAgIC5qaWFuZ2ppYS1yaWdodCAubWd0b3Age1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgY29sb3I6ICMzMzM7XG4gICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgIG1hcmdpbi10b3A6IDE4cHg7XG4gICAgfVxuICAgICNiamRfbWluaWZhdm9yX2NvbnRlbnQgLnVzZXJuYW1lIHtcbiAgICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogMzRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAjYmpkX21pbmlmYXZvcl9jb250ZW50IC5wYXNzd29yZCB7XG4gICAgICBtYXJnaW4tbGVmdDogMzRweDtcbiAgICAgIG1hcmdpbi10b3A6IDIycHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgI2JqZF9taW5pZmF2b3JfY29udGVudCAubG9naW4taW5wdXQge1xuICAgICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICB9XG4gICAgI2JqZF9taW5pZmF2b3JfY29udGVudCAubG9naW4taW5wdXQsICNiamRfbWluaWZhdm9yX2NvbnRlbnQgI2xvZ2luQ2xpY2tCdG4ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgICNiamRfbWluaWZhdm9yX2NvbnRlbnQgLmxvZ2luLWlucHV0IGRpdiB7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICAgICNiamRfbWluaWZhdm9yX2NvbnRlbnQgLmxvZ2luLWlucHV0IGRpdj5hIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbi1yaWdodDogMjRweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgICNiamRfbWluaWZhdm9yX2NvbnRlbnQgLnF1aWNrLXJlZyB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICAgICAgbWFyZ2luLXRvcDogMTRweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgICNiamRfbWluaWZhdm9yX2NvbnRlbnQgLm90aGVyLWxvZ2luLXN0eWxlIHtcbiAgICAgIHBhZGRpbmc6IDU5cHggMDtcbiAgICB9XG4gICAgI2xvZ2luQ2xpY2tCdG4ge1xuICAgICAgbW96LXVzZXItc2VsZWN0OiAtbW96LW5vbmU7XG4gICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAgICAgLW8tdXNlci1zZWxlY3Q6bm9uZTtcbiAgICAgIC1raHRtbC11c2VyLXNlbGVjdDpub25lO1xuICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDpub25lO1xuICAgICAgLW1zLXVzZXItc2VsZWN0Om5vbmU7XG4gICAgICB1c2VyLXNlbGVjdDpub25lO1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDI0KSxyPW4oMTMpLHM9big1NiksbD1uKDczKSxjPXZvaWQgMCxwPXZvaWQgMCxkPVsiMjI4IiwiMjY2IiwiMjQ2IiwiMjI5IiwiMzY1IiwiMzY2IiwiMSIsIjIzOCIsIjIzMCJdLGg9ezIyODoiJCIsMjMwOiIkIiwyMzg6IiQiLDI2NjoiwqMiLDI0NjoiRVVSIiwyMjk6IsKlIiwzNjU6IkVVUiIsMzY2OiJDRE4kIiwxOiLCpSJ9LHU9ZnVuY3Rpb24odCxlKXt2YXIgbj1lLnNwbGl0KCItIiksaT1uW24ubGVuZ3RoLTFdO2lmKHQ8MClyZXR1cm4i5pqC5pe257y66LSnIjtpZihkLmluZGV4T2YoaSk+LTEpe3ZhciBvPSIyMjkiPT1pPyIo5pel5YWDKSI6IiI7cmV0dXJuIGhbaV0rdC50b1N0cmluZygpLnJlcGxhY2UoIiwiLCIiKStvfXJldHVybiLCpSIrdC50b1N0cmluZygpLnJlcGxhY2UoIiwiLCIiKX0sbT1mdW5jdGlvbigpe2UoIiN0b3BmYXZvcl9kZXRhaWwiKS5vbigiY2xpY2siLCIuaXRlbV9jbG9zZV9idG4iLGZ1bmN0aW9uKCl7dmFyIHQ9ZSh0aGlzKS5hdHRyKCJkYXRhLWlkIik7Zih0KX0pfSxmPWZ1bmN0aW9uKHQpe3Q9dC50cmltKCkscD1yLmdldCgib3RoZXJfaW5mbyIpO3ZhciBuPWkuY19zZXJ2ZXIrIi9jb2xsZWN0L2FqX2RlbD9kcF9pZD0iK3Q7YS5nZXQobikuZG9uZShmdW5jdGlvbihuKXsxPT1uLmNvZGUmJih0PT1wLm5vdy5kcF9pZCYmZSgiI3RvcGZhdm9yX2RldGFpbCAudG9wZi1oZWFkIC5zcC1jb2wiKS50ZXh0KCLmlLbol4/llYblk4EiKS5yZW1vdmVDbGFzcygiY29sbGVjdGVkIiksZSgiI3RvcGZhdm9yX2RldGFpbCAuc3AtZGVsIikuc2hvdygpLmZhZGVPdXQoM2UzKSx4KHcpKX0pfSxnPWZ1bmN0aW9uKHQpe3ZhciBuPWkuZHAsbz1wLm5vdztvLnByaWNlPW4ub2xkUHJpY2V8fHBbImNvZGUtc2VydmVyIl0mJnBbImNvZGUtc2VydmVyIl0ucHJpY2Usby50aXRsZT1uLm5hbWV8fGUoInRpdGxlIikuaHRtbCgpfHwiIixvLnRpdGxlPW8udGl0bGUudHJpbSgpLG8udXJsPW8udXJsfHxsb2NhdGlvbi5ocmVmLG8uaW1nPW8uaW1nfHxuLmltZzt2YXIgcj1pLmNfc2VydmVyKyIvY29sbGVjdC9hal9hZGQ/ZHBfaWQ9IitvLmRwX2lkKyImdXJsPSIrZW5jb2RlVVJJQ29tcG9uZW50KG8udXJsKSsiJmltZz0iK28uaW1nKyImdGl0bGU9IitlbmNvZGVVUklDb21wb25lbnQoby50aXRsZSkrIiZwcmljZT0iK28ucHJpY2UrIiZzaXRlX2lkPSIrby5zaXRlX2lkKyImY2F0X2lkPSIrbi5jYXRfaWQ7YS5nZXQocikuZG9uZShmdW5jdGlvbihuKXsxPT09TnVtYmVyKG4uY29kZSl8fCIxIj09PW4uZXJyb3JfY29kZT8oeCh3KSxlKCIjdG9wZmF2b3JfZGV0YWlsIC50b3BmLWhlYWQgLnNwLWNvbCIpLnRleHQoIuaUtuiXj+aIkOWKnyIpLmFkZENsYXNzKCJjb2xsZWN0ZWQiKSxlKCIjaHRfZmF2b3IiKS50ZXh0KCLmlLbol4/miJDlip8iKS5hZGRDbGFzcygiY29sbGVjdGVkIiksZSgiI2d3ZF9taW5pX3JlbWluZCAubWluaWJhci1idG4tYm94IHNwYW4iKS50ZXh0KCLlt7Lmt7vliqDmj5DphpIiKSk6IjIiPT09bi5jb2RlPyhlKCIjdG9wZmF2b3JfZGV0YWlsIC50b3BmLWhlYWQgLnNwLWNvbCIpLnRleHQoIuaUtuiXj+i/h+S6hiIpLmFkZENsYXNzKCJjb2xsZWN0ZWQiKSxlKCIjaHRfZmF2b3IiKS50ZXh0KCLmlLbol4/ov4fkuoYiKS5hZGRDbGFzcygiY29sbGVjdGVkIiksZSgiI2d3ZF9taW5pX3JlbWluZCAubWluaWJhci1idG4tYm94IHNwYW4iKS50ZXh0KCLlt7Lmt7vliqDmj5DphpIiKSk6MTAwPT09bi5jb2RlJiZ0JiZ0KCl9KX0sdz1mdW5jdGlvbih0KXtmb3IodmFyIGE9dC5wcm9kdWN0cy5sZW5ndGgscj0wO3I8YTtyKyspe3ZhciBsPXQucHJvZHVjdHNbcl0uZHBfaWQuc3BsaXQoIi0iKVsxXTt0LnByb2R1Y3RzW3JdLnNpdGVfaWQ9bCx0LnByb2R1Y3RzW3JdLm5ld1ByaWNlPXUodC5wcm9kdWN0c1tyXS5ub3dfcHJpY2UsdC5wcm9kdWN0c1tyXS5kcF9pZCl9dmFyIGM9big4OSk7ZSgiI3RvcGZhdm9yX2RldGFpbCAuZmF2b3ItbGlzdCIpLmVtcHR5KCkuYXBwZW5kKG8uY29tcGlsZShjKSh7ZGF0YTp0LnByb2R1Y3RzLGltZ0xvYWQ6aS5pbWdMb2FkLHNfc2VydmVyOmkuc19zZXJ2ZXJ9KSksZSgiLnNlZS1hbGwtZmF2b3IgZW0iKS50ZXh0KHQudG90YWxfY250KSxlKCIuc2VlLWFsbC1mYXZvciIpLmF0dHIoImhyZWYiLCIiK2kuY19zZXJ2ZXIrdC5qdW1wX3VybCksbSgpLHMubG9hZEltZygwLGEsZSgiI3RvcGZhdm9yX2RldGFpbCBsaSAuaXRlbV9pbWcgaW1nIikpLGUoIiN0b3BmYXZvcl9kZXRhaWwiKS5oYXNDbGFzcygiaXNsb2dpbiIpfHxlKCIjdG9wZmF2b3JfZGV0YWlsIikuYWRkQ2xhc3MoImlzbG9naW4iKX0seD1mdW5jdGlvbih0KXt2YXIgZT1pLmNfc2VydmVyKyIvYXBwL2NvbGxlY3Rpb24iO2EuZ2V0KGUpLmRvbmUoZnVuY3Rpb24oZSl7dChlKX0pfSxiPWZ1bmN0aW9uKHQsbyxhKXtlLmFqYXgoe3R5cGU6InBvc3QiLHVybDoiaHR0cHM6Ly93d3cuIitpLmV4dE5hbWUrIi5jb20vdXNlci9hal9sb2dpbiIseGhyRmllbGRzOnt3aXRoQ3JlZGVudGlhbHM6ITB9LGNyb3NzRG9tYWluOiEwLGRhdGE6e2VtYWlsOnQscGFzc3dvcmQ6byx0OiJjaGVjayIsaG9zdDpsb2NhdGlvbi5wcm90b2NvbCsiLy8iK2xvY2F0aW9uLmhvc3R9LHN1Y2Nlc3M6ZnVuY3Rpb24odCl7YSh0KSxuKDg0KS5yZW5kZXJBZ2FpbigpfX0pfSxfPWZ1bmN0aW9uKCl7dmFyIHQ9dm9pZCAwLG49dm9pZCAwLG89dm9pZCAwO2UoIiN0b3BmYXZvcl9kZXRhaWwgLnRvcGYtaGVhZCBzcGFuIikub24oImNsaWNrIixmdW5jdGlvbigpe2coKX0pLGUoIiN0b3BmYXZvcl9kZXRhaWwgLmxvZ2luX2NsaWNrIikub24oImNsaWNrIixmdW5jdGlvbigpe3ZhciB0PWUoIiN0b3BmYXZvcl9kZXRhaWwgLnVzZXJuYW1lIikudmFsKCksbj1lKCIjdG9wZmF2b3JfZGV0YWlsIC5wYXNzd29yZCIpLnZhbCgpO3JldHVybiB0JiZuP3ZvaWQgYih0LG4sZnVuY3Rpb24obil7IjEiPT09bj8oaS5lbWFpbD10LHgodykpOmUoIiN0b3BmYXZvcl9kZXRhaWwgLmxvZ2luX3JlbWluZCIpLnNob3coKS5mYWRlT3V0KDVlMyl9KTp2b2lkIGUoIiN0b3BmYXZvcl9kZXRhaWwgLmxvZ2luX3JlbWluZCIpLnNob3coKS5mYWRlT3V0KDVlMyl9KSxlKCIjZ3dkYW5nLWZhdm9yIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7aS5lbWFpbCYmIW4mJihuPSEwLGUoIiN0b3BmYXZvcl9kZXRhaWwiKS5hZGRDbGFzcygiaXNsb2dpbiIpLHgodykpLCJib3R0b20iIT09Yy5zdHlsZXx8b3x8KG89ITAsbC5zZXRTaW1wbGVQYWdlUG9zKGUoIiNnd2RhbmctZmF2b3IiKSxlKCIjdG9wZmF2b3JfZGV0YWlsIiksMjc5KSksZSgiI3RvcGZhdm9yX2RldGFpbCIpLnNob3coKSxlKHRoaXMpLmFkZENsYXNzKCJtc0hvdmVyIil9KSxlKCIjZ3dkYW5nLWZhdm9yIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7dmFyIG49dGhpczt0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKCIjdG9wZmF2b3JfZGV0YWlsIikuaGlkZSgpLGUobikucmVtb3ZlQ2xhc3MoIm1zSG92ZXIiKX0sMTAwKX0pLGUoIiN0b3BmYXZvcl9kZXRhaWwiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodCl9KSxlKCIjdG9wZmF2b3JfZGV0YWlsIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7ZSgiI3RvcGZhdm9yX2RldGFpbCIpLmhpZGUoKSxlKCIjZ3dkYW5nLWZhdm9yIikucmVtb3ZlQ2xhc3MoIm1zSG92ZXIiKX0pfSx2PWZ1bmN0aW9uKHQpe3ZhciBhPXZvaWQgMCxyPSIjZ3dkYW5nX21haW4iLHM9InRvcDozN3B4OyI7ImJvdHRvbSI9PT1jLnN0eWxlJiYocj0iI2JqZF9ib3R0b21fZGV0YWlsIixzPSJib3R0b206IDYwcHg7cmlnaHQ6IDQwcHg7IiksdCYmIXQubWF0Y2goL14wLVxkKyQvKXx8KGE9ITApO3ZhciBsPWkuaW1nSG9zdDsiZmlyZWZveCI9PT1pLmZyb21fZGV2aWNlJiYobD1pLmxvY2FsSW1nKTt2YXIgcD0iaHR0cHM6Ly93d3cuZ3dkYW5nLmNvbS91c2VyL3dlY2hhdF9vYXV0aC8/cGw9OSZvcD1sb2dpbiZmcm9tX3VybD0iK2VuY29kZVVSSUNvbXBvbmVudChsb2NhdGlvbi5ocmVmKTtwPWVuY29kZVVSSUNvbXBvbmVudChwKTt2YXIgZD0iaHR0cHM6Ly9vcGVuLndlaXhpbi5xcS5jb20vY29ubmVjdC9xcmNvbm5lY3Q/YXBwaWQ9d3gzNDAwNmMxNDFmOWRhYTNhJnJlc3BvbnNlX3R5cGU9Y29kZSZzY29wZT1zbnNhcGlfbG9naW4mc3RhdGU9MmNlZDk3MGQ1Yjk3NjgwZTk1NjcwYTQ4ZDExMDI2MTEmcmVkaXJlY3RfdXJpPSIrcCxoPW4oOTApO2UocikuYXBwZW5kKG8uY29tcGlsZShoKSh7ZW1haWw6aS5lbWFpbCxoaWRlYnRuOmEsaW1nSG9zdDpsLHd4VXJsOmQscGFnZXVybDplbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24uaHJlZiksc3R5bGU6c30pKSxfKGMpfTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpe2M9ci5nZXQoInBlcm1hbmVudCIpLHA9ci5nZXQoIm90aGVyX2luZm8iKSx2KHAubm93LmRwX2lkKX0sdC5leHBvcnRzLmFkZEZhdm9yPWd9KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9J3t7ZWFjaCBkYXRhfX1cbiAgPGxpID5cbiAgICA8YSBjbGFzcz0iaXRlbV9pbWciIGhyZWY9Int7JHZhbHVlLnVybH19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Int7JHZhbHVlLnRpdGxlfX0iPlxuICAgICAgPGltZyBpZD0iZHBfe3skdmFsdWUuZHBfaWR9fSIgc3JjPSJ7e2ltZ0xvYWR9fSIgZGF0YS1vcmlnaW5hbD0ie3skdmFsdWUucGljX3VybH19Ij5cbiAgICA8L2E+XG4gICAgPGRpdiBjbGFzcz0iaXRlbV9kZXNjIj5cbiAgICAgIDxhIGNsYXNzPSJpdGVtX3RpdGxlIGJsa2NvbG9yMyIgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0ie3skdmFsdWUudGl0bGV9fSI+e3skdmFsdWUudGl0bGV9fTwvYT5cbiAgICAgIDxhIGNsYXNzPSJvdGhlcl9kZXNjIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InNpdGVfaWNvbiIgPjxpbWcgc3JjPSJ7e3Nfc2VydmVyfX0vaW1hZ2VzL2Zhdmljb24ve3skdmFsdWUuc2l0ZV9pZH19LmljbyI+PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0iaXRlbV9wcmljZSBwcmlmb250ZiI+e3skdmFsdWUubmV3UHJpY2V9fTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9Iml0ZW1fY2xvc2VfYnRuIGJsa2NvbG9yNCIgZGF0YS1pZD0ie3skdmFsdWUuZHBfaWR9fSI+5Yig6ZmkPC9zcGFuPlxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICA8L2xpPlxue3svZWFjaH19JzsKfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0idG9wZmF2b3JfZGV0YWlsIiBjbGFzcz0ie3tpZiBlbWFpbH19aXNsb2dpbnt7L2lmfX0iIHN0eWxlPSJ7e3N0eWxlfX0iPiBcbiAgICA8ZGl2IGNsYXNzPSJ0b3BmLWhlYWQiPlxuICAgICAgPGRpdiBjbGFzcz0iYmxrY29sb3IxIj7mlLbol4/lubbpmY3ku7fmj5DphpI8L2Rpdj5cbiAgICAgIDxzcGFuIGNsYXNzPSJzcC1kZWwiPuWIoOmZpOaIkOWKnzwvc3Bhbj5cbiAgICAgIHt7aWYgIWhpZGVidG59fVxuICAgICAgPHNwYW4gY2xhc3M9InNwLWNvbCI+5pS26JeP5ZWG5ZOBPC9zcGFuPlxuICAgICAge3svaWZ9fVxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InRvcGYtYm9keSI+XG4gICAgICA8ZGl2IGNsYXNzPSJsb2dpbl9kZXRhaWwiPlxuICAgICAgICA8cCBjbGFzcz0ibG9naW4tcmVtaW5kIGJsa2NvbG9yMyI+6K+35YWIIOeZu+W9lSDotK3nianlhZrvvIzmiJbkvb/nlKjnrKzkuInmlrnotKblj7fnmbvlvZU8L3A+XG4gICAgICAgIDxkaXYgY2xhc3M9ImxvZ2luaW5mbyI+XG4gICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgIGNsYXNzPSJ1c2VybmFtZSIgcGxhY2Vob2xkZXI9Iui0puWPtyIgYXV0b2NvbXBsZXRlPSJvZmYiPlxuICAgICAgICAgICAgPGlucHV0IHR5cGU9InBhc3N3b3JkIiBjbGFzcz0icGFzc3dvcmQiIHBsYWNlaG9sZGVyPSLlr4bnoIEiPiBcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuZ3dkYW5nLmNvbS91c2VyL2ZvcmdvdF9wd2QvIiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9ImZvcmdldF9wYXNzIGJsa2NvbG9yNCI+5b+Y6K6w5a+G56CBPC9hPlxuICAgICAgICA8c3BhbiBjbGFzcz0ibG9naW5fY2xpY2siPueZu+W9lTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9ImxvZ2luX3JlbWluZCI+55So5oi35ZCN5oiW5a+G56CB6ZSZ6K+vPC9zcGFuPlxuICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmd3ZGFuZy5jb20vdXNlci9yZWdpc3RlciIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJyZWdpc3RlciI+5b+r6YCf5rOo5YaMPC9hPlxuICAgICAgICA8ZGl2IGNsYXNzPSJzbGljZV9kaXYgZ3dkX2JnIj4gPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9Im90aGVyX2xvZ2luIj5cbiAgICAgICAgICA8YSBocmVmPSJodHRwOi8vd3d3Lmd3ZGFuZy5jb20vdXNlci9vYXV0aC8/cGw9NyZvcD1sb2dpbiZmcm9tX3VybD17e3BhZ2V1cmx9fSIgY2xhc3M9InFxbG9naW4gZ3dkX2JnIiB0YXJnZXQ9Il9ibGFuayI+PC9hPlxuICAgICAgICAgIDxhIGhyZWY9Imh0dHA6Ly93d3cuZ3dkYW5nLmNvbS91c2VyL29hdXRoaC8/cGw9MiZvcD1sb2dpbiZmcm9tX3VybD17e3BhZ2V1cmx9fSIgY2xhc3M9InNpbmFsb2dpbiBnd2RfYmciIHRhcmdldD0iX2JsYW5rIj48L2E+XG4gICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly93d3cuZ3dkYW5nLmNvbS91c2VyL3dlY2hhdF9vYXV0aC8/cGw9OSZvcD13ZWNoYXRMb2dpbiZmcm9tX3VybD17e3BhZ2V1cmx9fSIgY2xhc3M9IndlaXhpbmxvZ2luIGd3ZF9iZyIgdGFyZ2V0PSJfYmxhbmsiPjwvYT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImZhdm9yLWRwLWRldGFpbCI+XG4gICAgICAgIDx1bCBjbGFzcz0iZmF2b3ItbGlzdCI+XG4gICAgICAgICAgXG4gICAgICAgIDwvdWw+XG4gICAgICAgIDxhIGNsYXNzPSJzZWUtYWxsLWZhdm9yIGJsa2NvbG9yNCIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9IiI+5p+l55yL5YWo6YOoKDxlbT48L2VtPik8L2E+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cblxuICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgICAjdG9wZmF2b3JfZGV0YWlsIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogNjdweDtcbiAgICAgICAgd2lkdGg6IDI4MHB4O1xuICAgICAgICBoZWlnaHQ6IDM3NHB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiAjRkZGRkZGO1xuICAgICAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IDAgcmdiYSgyMiwyNCwyNiwwLjE1KTtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgLnRvcGYtaGVhZCB7XG4gICAgICAgIGhlaWdodDogNDBweDtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAudG9wZi1ib2R5IHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB9XG4gICAgICAudG9wZi1oZWFkICoge1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgLnRvcGYtaGVhZCBkaXYge1xuICAgICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgICAgICBtYXJnaW4tbGVmdDogMTRweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG4gICAgICAjdG9wZmF2b3JfZGV0YWlsIC50b3BmLWhlYWQgc3Bhbi5zcC1jb2wge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjRjA3ODYwO1xuICAgICAgICBjb2xvcjogI0YwNzg2MDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICB3aWR0aDogNjhweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDEwcHg7XG4gICAgICAgIHJpZ2h0OiAxNHB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgLnRvcGYtaGVhZCAuc3AtZGVsIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBjb2xvcjogI0YwNzg2MDtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICB0b3A6IDEycHg7XG4gICAgICAgIGxlZnQ6IDEzMHB4O1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfSBcbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgLnRvcGYtaGVhZCAuc3AtY29sLmNvbGxlY3RlZCB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjA3ODYwO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbC5pc2xvZ2luIC50b3BmLWhlYWQgc3Bhbi5zcC1jb2wge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB9XG4gICAgICAudG9wZi1ib2R5IHtcbiAgICAgICAgaGVpZ2h0OiAzMzZweDtcbiAgICAgIH1cbiAgICAgIC5pc2xvZ2luIC5sb2dpbl9kZXRhaWwge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgfVxuICAgICAgLnRvcGYtYm9keSBwLmxvZ2luLXJlbWluZCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDE0cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICAgICAgfVxuICAgICAgLmxvZ2luX2RldGFpbCAubG9naW5pbmZvIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB9XG4gICAgICAubG9naW5fZGV0YWlsIC5wYXNzd29yZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDE4cHg7XG4gICAgICB9XG4gICAgICAubG9naW5fZGV0YWlsIC5mb3JnZXRfcGFzcyB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAyMDFweDtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIG1hcmdpbi10b3A6IDIxcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEycHg7XG4gICAgICB9XG4gICAgICAubG9naW5fZGV0YWlsIC5mb3JnZXRfcGFzczpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjNDhiZWZlIWltcG9ydGFudDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAubG9naW5fZGV0YWlsIC5sb2dpbmluZm8gaW5wdXQge1xuICAgICAgICB3aWR0aDogMTk2cHg7XG4gICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBwYWRkaW5nOiAwcHggNnB4IDBweCAxNnB4O1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICB9XG4gICAgICAubG9naW5fZGV0YWlsIC5sb2dpbl9jbGljayB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBtYXJnaW4tbGVmdDogOTdweDtcbiAgICAgICAgaGVpZ2h0OiAyOHB4O1xuICAgICAgICB3aWR0aDogODZweDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBtYXJnaW4tdG9wOiAxNXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDhiZWZlO1xuICAgICAgICBjb2xvcjogI2ZmZiFpbXBvcnRhbnQ7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgIH1cbiAgICAgIC5sb2dpbl9kZXRhaWwgLmxvZ2luX2NsaWNrOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzE4QUNGQztcbiAgICAgIH1cbiAgICAgIC5sb2dpbl9kZXRhaWwgLmxvZ2luX3JlbWluZCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAxNzJweDtcbiAgICAgICAgbGVmdDogMzdweDtcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIHdpZHRoOiAxMTZweDtcbiAgICAgICAgY29sb3I6ICNFQzQ5NjY7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICAubG9naW5fZGV0YWlsIC5yZWdpc3RlciB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTJweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW4tdG9wOiA5cHg7XG4gICAgICAgIGNvbG9yOiAjNDhCRUZFIWltcG9ydGFudDtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICB9XG4gICAgICAucmVnaXN0ZXI6aG92ZXIge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjNDhCRUZFO1xuICAgICAgfVxuICAgICAgLnNsaWNlX2RpdiB7XG4gICAgICAgIGhlaWdodDogMTJweDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZsb2F0OiBsZWZ0IWltcG9ydGFudDtcbiAgICAgICAgbWFyZ2luLXRvcDogMjNweDtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTRweCAtMjM5cHg7XG4gICAgICB9XG4gICAgICAubG9naW5fZGV0YWlsIC5xcWxvZ2luLCAubG9naW5fZGV0YWlsIC5zaW5hbG9naW4sIC5sb2dpbl9kZXRhaWwgLndlaXhpbmxvZ2luIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB3aWR0aDogMzJweDtcbiAgICAgICAgaGVpZ2h0OiAzMnB4O1xuICAgICAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgICAgICBcbiAgICAgIH1cbiAgICAgIC5sb2dpbl9kZXRhaWwgLnFxbG9naW4ge1xuICAgICAgICBtYXJnaW4tbGVmdDogNTFweDtcbiAgICAgIH1cbiAgICAgIC5sb2dpbl9kZXRhaWwgLnNpbmFsb2dpbiB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0MXB4O1xuICAgICAgfVxuICAgICAgLmxvZ2luX2RldGFpbCAud2VpeGlubG9naW4ge1xuICAgICAgICBtYXJnaW4tbGVmdDogNDFweDtcbiAgICAgIH1cbiAgICAgIC5sb2dpbl9kZXRhaWwgLm90aGVyX2xvZ2luIHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIGhlaWdodDogNTdweDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9IFxuICAgICAgLmxvZ2luX2RldGFpbCAub3RoZXJfbG9naW4gYSB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgfVxuICAgICAgLmZhdm9yLWRwLWRldGFpbCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG4gICAgICAuaXNsb2dpbiAuZmF2b3ItZHAtZGV0YWlsIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgICAjdG9wZmF2b3JfZGV0YWlsIC5mYXZvci1saXN0IHtcbiAgICAgICAgaGVpZ2h0OiAyNTZweDtcbiAgICAgICAgd2lkdGg6IDI4MHB4O1xuICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgLmZhdm9yLWxpc3QgbGkge1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICBoZWlnaHQ6IDc2cHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNHB4O1xuICAgICAgICBmbG9hdDogbm9uZTtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgLmZhdm9yLWxpc3QgbGk6Zmlyc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAuZmF2b3ItbGlzdCBsaSAuaXRlbV9pbWcge1xuICAgICAgICBoZWlnaHQ6IDc0cHg7XG4gICAgICAgIHdpZHRoOiA3NHB4O1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWRmMWYyO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAuZmF2b3ItbGlzdCBsaSAuaXRlbV9pbWc6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OlwnXCc7XG4gICAgICAgIHdpZHRoOjA7XG4gICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAuaXRlbV9pbWcgaW1nIHtcbiAgICAgICAgbWF4LWhlaWdodDogNzRweDtcbiAgICAgICAgbWF4LXdpZHRoOiA3NHB4O1xuICAgICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAuaXRlbV9kZXNjIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICBtYXJnaW4tbGVmdDogMTRweDtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIC1tYXJnaW4tbGVmdDogMTBweDtcbiAgICAgICAgd2lkdGg6IDE2NHB4O1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCBhLml0ZW1fdGl0bGUge1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICAgIHdpZHRoOiAxNTlweDtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCBhLml0ZW1fdGl0bGU6aG92ZXIge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGNvbG9yOiAjNDhiZWZlO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAub3RoZXJfZGVzYywgI3RvcGZhdm9yX2RldGFpbCAuaXRlbV90aXRsZSB7XG4gICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgLm90aGVyX2Rlc2Mge1xuICAgICAgICBtYXJnaW4tdG9wOiAyNnB4O1xuICAgICAgICB3aWR0aDogMTY0cHg7XG4gICAgICB9XG4gICAgICAjdG9wZmF2b3JfZGV0YWlsIHNwYW4uc2l0ZV9pY29uIHtcbiAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAuc2l0ZV9pY29uIGltZyB7XG4gICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgc3Bhbi5pdGVtX3ByaWNlIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDZweDtcbiAgICAgICAgbWFyZ2luLXRvcDogMnB4O1xuICAgICAgICBjdXJzb3I6IHRleHQ7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgaGVpZ2h0OiAxNHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgICAgY29sb3I6ICNlNDM5M2M7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICB9XG4gICAgICAjdG9wZmF2b3JfZGV0YWlsIHNwYW4uaXRlbV9jbG9zZV9idG4ge1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGhlaWdodDogMTJweDtcbiAgICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICAgICN0b3BmYXZvcl9kZXRhaWwgc3Bhbi5pdGVtX2Nsb3NlX2J0bjpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjNDhiZWZlO1xuICAgICAgfVxuICAgICAgI3RvcGZhdm9yX2RldGFpbCAuc2VlLWFsbC1mYXZvciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAxN3B4O1xuICAgICAgICByaWdodDogMTRweDtcbiAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICB9XG4gICAgICAjdG9wZmF2b3JfZGV0YWlsIC5zZWUtYWxsLWZhdm9yOmhvdmVye1xuICAgICAgICBjb2xvcjogIzQ4YmVmZTtcbiAgICAgIH1cbiAgICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDIyKSxhPW4oOTIpLHI9big5Mykscz1uKDI0KSxsPW4oNDcpLGM9bigxMykscD12b2lkIDAsZD1mdW5jdGlvbih0KXtmb3IodmFyIGU9MDtlPHQubGVuZ3RoO2UrKyl0W2VdLnB1cmV0bGU9dFtlXS50aXRsZSx0W2VdLnRpdGxlPXRbZV0udGl0bGUucmVwbGFjZSgvXGIoWzAtOS5dKylcYi9nLCI8ZW0+JDE8L2VtPiIpO3JldHVybiB0fSxoPWZ1bmN0aW9uKCl7dmFyIHQ9dm9pZCAwLG49ZSgiI3Byb21vX3F1YW5fYnRuIiksbz0iIixhPWUoIiNwcm9tb19xdWFuX2RldGFpbCIpOyJib3R0b20iPT1wJiYobj1lKCIjIitpLmV4dEJyYW5kKyItaHVpIiksbz1pLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWhvdmVyIiksbi5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXthLnNob3coKSxuLmFkZENsYXNzKCJtc0hvdmVyIiksbi5maW5kKCJhIikuYWRkQ2xhc3Mobyk7dmFyIHQ9bi5vZmZzZXQoKS5sZWZ0LTE7YS53aWR0aCgpK3Q+ZSh3aW5kb3cpLndpZHRoKCk/YS5jc3MoInJpZ2h0IiwiMHB4Iik6YS5jc3MoImxlZnQiLHBhcnNlSW50KHQpKyJweCIpfSksbi5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXt0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXthLmhpZGUoKSxuLnJlbW92ZUNsYXNzKCJtc0hvdmVyIiksbi5maW5kKCJhIikucmVtb3ZlQ2xhc3Mobyl9LDEwMCl9KSxhLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2NsZWFyVGltZW91dCh0KX0pLGEub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7YS5oaWRlKCksbi5yZW1vdmVDbGFzcygibXNIb3ZlciIpLG4uZmluZCgiYSIpLnJlbW92ZUNsYXNzKG8pfSl9LHU9ZnVuY3Rpb24odCxuLHIpe3J8fChyPXtzaXRlX25hbWU6bi5zaXRlX25hbWV9KTt2YXIgcz1yLnNpdGVfbmFtZXx8bi5zaXRlX25hbWUsbD1yLnNpdGVfbmFtZXx8bi5zaXRlX25hbWUsYz1uLnByb21vdGlvbi51cmwsdT1uLnF1YW4mJm4ucXVhbi51cmw7bi5wcm9tb3Rpb24uc2l0ZV9oYXNfcHJvbW98fChzPSLlhajnvZHmnIDmlrAiKSwxPT1uLnByb21vdGlvbi5wcm9tb3MubGVuZ3RoJiYoYz1uLnByb21vdGlvbi5wcm9tb3NbMF0udXJsKSxuLnF1YW4mJiFuLnF1YW4uc2l0ZV9oYXNfcXVhbiYmKGw9IuWFqOe9keacgOWPl+WFs+azqCIpLGUodCkuYXBwZW5kKG8uY29tcGlsZShhKSh7cHJvbW9fc2l0ZTpzLHF1YW5fc2l0ZTpsLHByb21vczpkKG4ucHJvbW90aW9uLnByb21vcy5zbGljZSgwLDQpKSxwcm9tb191cmw6YyxxdWFuczpkKG4ucXVhbiYmbi5xdWFuLnF1YW5zLnNsaWNlKDAsNCl8fFtdKSxxdWFuX3VybDp1LHNfc2VydmVyOmkuc19zZXJ2ZXIsbmV3X2V4dGVuc2lvbjppLm5ld19leHRlbnNpb24sc3R5bGU6cH0pKSxoKCl9LG09ZnVuY3Rpb24odCxlKXsidG9wIj09cD91KCIuZ3dkLXRvcGJhci1sZWZ0IixlLHQpOiJib3R0b20iPT1wJiZ1KGkuZHZhbCxlLHQpfSxmPWZ1bmN0aW9uKHQpe2lmKHQmJjAhPT10LnByb21vLmxlbmd0aCl7dmFyIGk9MTsxPT09dC5wcm9tby5sZW5ndGgmJihpPTApO3ZhciBhPXQucHJvbW9baV0scj1uKDk0KTtlKCIuZGV0YWlsX3JpZ2h0IikuYXBwZW5kKG8uY29tcGlsZShyKSh7aXRlbTphfSkpLGUoIi5kZXRhaWxfcmlnaHQiKS5zaG93KCl9fSxnPWZ1bmN0aW9uKCl7dmFyIHQ9JzxkaXYgaWQ9InByb21vX3F1YW5fYnRuIiBjbGFzcz0iZ3dkYW5nLXRhYiI+XG4gICAgPHNwYW4gY2xhc3M9ImJ0bi10YWItc3AiPlxuICAgICAgPGVtIGNsYXNzPSJnd2QtYmciPjwvZW0+XG4gICAgICA8c3BhbiBjbGFzcz0idGFiLXNwMSBibGtjb2xvcjEiPuS/g+mUgOS8mOaDoOWIuDwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gIDwvZGl2Pic7ZSgiIyIraS5leHROYW1lKyItdHJlbmQiKS5sZW5ndGg+MD9lKCIjIitpLmV4dE5hbWUrIi10cmVuZCIpLmFmdGVyKGUodCkpOmUoIiMiK2kuZXh0TmFtZSsiLW1haW4tY29udGVudHMiKS5hcHBlbmQoZSh0KSksZSgiI3Byb21vX3F1YW5fYnRuIikuc2hvdygpLG4oNTYpLmF1dG9GaXhXaWR0aCgpfSx3PWZ1bmN0aW9uKCl7fSx4PWZ1bmN0aW9uKCl7InRvcCI9PXA/ZygpOiJib3R0b20iPT1wJiZ3KCl9LGI9ZnVuY3Rpb24odCxlKXt2YXIgbj1pLnNlcnZlcisiL2V4dGVuc2lvbj9hYz1wcm9tb3Rpb24mc2l0ZV9pZD0iK3Quc2l0ZV9pZCsiJmNsYXNzX2lkPSIrdC5jbGFzc19pZCsiJnN0eWxlPSIrcDtzLmdldChuKS5kb25lKGZ1bmN0aW9uKHQpe3QmJmUodCl9KX0sXz1mdW5jdGlvbih0LGkpe3IuaW5pdCh7Y2xhc3NfaWQ6dC5jbGFzc19pZCxrZXl3b3JkOnQua2V5d29yZH0sZnVuY3Rpb24odCl7dC5wcm9tby5sZW5ndGg+MCYmKHQucHJvbW9bMF0ucHVyZXRsZT10LnByb21vWzBdLnRpdGxlLGkucHJvbW90aW9uLnByb21vcz10LnByb21vLmNvbmNhdChpLnByb21vdGlvbi5wcm9tb3MpKTt2YXIgYT1uKDk1KTtlKCIud3JhcHBlciAuYnJlYWRjcnVtYiIpLmVxKDApLmFmdGVyKG8uY29tcGlsZShhKSh7ZGF0YTppLnByb21vdGlvbi5wcm9tb3Muc2xpY2UoMCwzKX0pKX0pfTt0LmV4cG9ydHMucmVuZGVyU2VhcmNoPWZ1bmN0aW9uKCl7aWYoaS5zaXRlLmluZGV4T2YoInRhb2JhbyIpPi0xfHxpLnNpdGUuaW5kZXhPZigidG1hbGwiKT4tMXx8IjE2ODgiPT1pLnNpdGUpcmV0dXJuIHZvaWQgZSgiIyIraS5leHRCcmFuZCsiLWh1aSIpLmhpZGUoKTt2YXIgdD1sLmdldFNpdGVJZChpLnNpdGUpO2lmKHQpe3ZhciBuPXt9O24uc2l0ZV9pZD10LGIobixmdW5jdGlvbih0KXttKG51bGwsdCl9KX19LHQuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKHQpe2lmKGkuc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8aS5zaXRlLmluZGV4T2YoInRtYWxsIik+LTF8fCIxNjg4Ij09aS5zaXRlKXJldHVybiB2b2lkIGUoIiMiK2kuZXh0QnJhbmQrIi1odWkiKS5oaWRlKCk7cD1jLmdldCgicGVybWFuZW50Iikuc3R5bGUseCgpO3ZhciBuPXRbImNvZGUtc2VydmVyIl0sbz1uJiZuLmNsYXNzX2lkLGE9dC5ub3cuY29yZXdvcmQscz10Lm5vdy5zaXRlX2lkOyIwIj09PXMmJihzPWwuZ2V0U2l0ZUlkKGkuc2l0ZSkpO3ZhciBkPXt9O2Qua2V5d29yZD1hLGQuc2l0ZV9pZD1zLGQuY2xhc3NfaWQ9dC5ub3cuY2xhc3NfaWQsZC5icmFuZF9pZD10LmV4YWN0X2Fyci5icmFuZF9pZCxiKGQsZnVuY3Rpb24oZSl7bSh0Lm5vdyxlKSwiem9sIj09PWkuc2l0ZSYmXyhkLGUpLHIuaW5pdCh7Y2xhc3NfaWQ6byxrZXl3b3JkOmF9LGYpfSl9fSkuY2FsbChlLG4oNCksbigxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGlkPSJwcm9tb19xdWFuX2RldGFpbCIgY2xhc3M9InByb21vX3F1YW5fYm94Ij5cbiAgPGRpdiBjbGFzcz0iZGV0YWlsX2xlZnQiPlxuICAgIDxkaXYgY2xhc3M9InByb21vX2RpdiI+XG4gICAgICA8ZGl2IGNsYXNzPSJkX2hlYWQiPlxuICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IxIj57e3Byb21vX3NpdGV9feS/g+mUgOa0u+WKqDwvc3Bhbj5cbiAgICAgICAge3tpZiAhbmV3X2V4dGVuc2lvbn19XG4gICAgICAgIDxhIGhyZWY9Int7cHJvbW9fdXJsfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYmxrY29sb3I0Ij7mn6XnnIvlhajpg6g8ZW0gY2xhc3M9InNlZV9hbGxfaWNvbiI+PjwvZW0+PC9hPlxuICAgICAgICB7ey9pZn19XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9InByb21vX2JvZHkiPlxuICAgICAgICAgIHt7ZWFjaCBwcm9tb3N9fVxuICAgICAgICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIGNsYXNzPSJwcm9tb19pdGVtIHByb21vLWl0ZW0te3skaW5kZXh9fSIgdGFyZ2V0PSJfYmxhbmsiPlxuICAgICAgICAgICAgICA8ZW0gY2xhc3M9ImNpcmNsZSI+PC9lbT5cbiAgICAgICAgICAgICAge3sjJHZhbHVlLnRpdGxlfX1cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICB7ey9lYWNofX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIHt7aWYgIW5ld19leHRlbnNpb259fVxuICAgIDxkaXYgY2xhc3M9InF1YW5fZGl2Ij5cbiAgICAgIDxkaXYgY2xhc3M9ImRfaGVhZCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJibGtjb2xvcjEiPnt7cXVhbl9zaXRlfX3kvJjmg6DliLg8L3NwYW4+XG4gICAgICAgIHt7aWYgIW5ld19leHRlbnNpb259fVxuICAgICAgICA8YSBocmVmPSJ7e3F1YW5fdXJsfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0iYmxrY29sb3I0Ij7mn6XnnIvlhajpg6g8ZW0gY2xhc3M9InNlZV9hbGxfaWNvbiI+PjwvZW0+PC9hPlxuICAgICAgICB7ey9pZn19XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9InF1YW5fYm9keSI+XG4gICAgICAgIHt7ZWFjaCBxdWFuc319XG4gICAgICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIGNsYXNzPSJxdWFuX2l0ZW0gcXVhbi1pdGVtLXt7JGluZGV4fX0iIHRhcmdldD0iX2JsYW5rIj5cbiAgICAgICAgICAgICAgPGVtIGNsYXNzPSJjaXJjbGUiPjwvZW0+XG4gICAgICAgICAgICAgIHt7IyR2YWx1ZS50aXRsZX19XG4gICAgICAgICAgICA8L2E+XG4gICAgICAgIHt7L2VhY2h9fVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAge3svaWYgfX1cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9ImRldGFpbF9yaWdodCI+PC9kaXY+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgI3Byb21vX3F1YW5fZGV0YWlsIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMzZweDtcbiAgICAgIGxlZnQ6IDBweDtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgaGVpZ2h0OiAyNjhweDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNFQUVBRUE7XG4gICAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4IDAgcmdiYSgyMiwyNCwyNiwwLjE1KTtcbiAgICB9XG4gICAge3tpZiBzdHlsZSA9PSAiYm90dG9tIn19XG4gICAgI3Byb21vX3F1YW5fZGV0YWlsIHtcbiAgICAgIHRvcDogaW5oZXJpdDtcbiAgICAgIGJvdHRvbTogNjBweDtcbiAgICB9XG4gICAge3svaWZ9fVxuICAgICNwcm9tb19xdWFuX2RldGFpbCAuZGV0YWlsX2xlZnQge1xuICAgICAgd2lkdGg6IDYyMXB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZTZlOWViO1xuICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgIH1cbiAgICAucHJvbW9fcXVhbl9ib3ggLnByb21vX2RpdiwgLnByb21vX3F1YW5fYm94IC5xdWFuX2RpdiB7XG4gICAgICBoZWlnaHQ6IDEzNXB4O1xuICAgIH1cbiAgICAucHJvbW9fcXVhbl9ib3ggLmRfaGVhZCB7XG4gICAgICBoZWlnaHQ6IDM0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjZweDtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgIH1cbiAgICAjcHJvbW9fcXVhbl9kZXRhaWwgLmRldGFpbF9sZWZ0IC5kX2hlYWQgYSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgICAgaGVpZ2h0OiAxMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDEycHg7XG4gICAgfVxuICAgICNwcm9tb19xdWFuX2RldGFpbCAuZGV0YWlsX2xlZnQgLmRfaGVhZCBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjNUVCRUZGO1xuICAgIH1cbiAgICAucHJvbW9fcXVhbl9ib3ggLnNlZV9hbGxfaWNvbiB7XG4gICAgICBoZWlnaHQ6IDEzcHg7XG4gICAgICB3aWR0aDogMTJweDtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICAgIH1cbiAgICAucHJvbW9fcXVhbl9ib3ggLmRfaGVhZCBzcGFue1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgIH1cbiAgICAucHJvbW9fcXVhbl9ib3ggLmRfaGVhZCBhIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIHdpZHRoOiA2NHB4O1xuICAgICAgaGVpZ2h0OiAyNnB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxNHB4O1xuICAgIH1cbiAgICAucHJvbW9fcXVhbl9ib3ggLnByb21vX2JvZHkge1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogOTZweDtcbiAgICB9XG4gICAgI3Byb21vX3F1YW5fZGV0YWlsIC5wcm9tb19ib2R5IC5wcm9tb19pdGVtLCAjcHJvbW9fcXVhbl9kZXRhaWwgLnF1YW5faXRlbSB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIHdpZHRoOiAyNzRweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBGNUY3O1xuICAgICAgbWFyZ2luLWxlZnQ6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMzZweDtcbiAgICAgIG1hcmdpbi10b3A6IDdweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgY29sb3I6ICM2NjY7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIH1cbiAgICAjcHJvbW9fcXVhbl9kZXRhaWwgLnByb21vX2JvZHkgLnByb21vX2l0ZW0ucHJvbW8taXRlbS0xLCAjcHJvbW9fcXVhbl9kZXRhaWwgLnF1YW5faXRlbS5xdWFuLWl0ZW0tMSwjcHJvbW9fcXVhbl9kZXRhaWwgLnByb21vX2JvZHkgLnByb21vX2l0ZW0ucHJvbW8taXRlbS0zLCAjcHJvbW9fcXVhbl9kZXRhaWwgLnF1YW5faXRlbS5xdWFuLWl0ZW0tMyAge1xuICAgICAgbWFyZ2luLWxlZnQ6IDI0cHg7XG4gICAgfVxuICAgICNwcm9tb19xdWFuX2RldGFpbCAucHJvbW9fYm9keSAucHJvbW9faXRlbTpob3ZlciwgI3Byb21vX3F1YW5fZGV0YWlsIC5xdWFuX2l0ZW06aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YwNzg2MDtcbiAgICAgIGNvbG9yOiAjZmZmIWltcG9ydGFudDtcbiAgICB9XG4gICAgI3Byb21vX3F1YW5fZGV0YWlsLnByb21vX3F1YW5fYm94IC5wcm9tb19pdGVtIGVtICwgI3Byb21vX3F1YW5fZGV0YWlsLnByb21vX3F1YW5fYm94IC5xdWFuX2l0ZW0gZW17XG4gICAgICBjb2xvcjogI2YwNzg2MDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgbWFyZ2luOiAwIDJweDtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgIGZvbnQtZmFtaWx5OiBIZWx2ZXRpY2E7XG4gICAgfVxuICAgICNwcm9tb19xdWFuX2RldGFpbCAucHJvbW9fYm9keSAucHJvbW9faXRlbTpob3ZlciBlbSAsICNwcm9tb19xdWFuX2RldGFpbCAucXVhbl9pdGVtOmhvdmVyIGVte1xuICAgICAgY29sb3I6ICNmZmYhaW1wb3J0YW50O1xuICAgIH1cbiAgICAjcHJvbW9fcXVhbl9kZXRhaWwgLnByb21vX2JvZHkgLnByb21vX2l0ZW06aG92ZXIgLmNpcmNsZSAsICNwcm9tb19xdWFuX2RldGFpbCAucXVhbl9pdGVtOmhvdmVyIC5jaXJjbGV7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmIWltcG9ydGFudDtcbiAgICB9XG4gICAgI3Byb21vX3F1YW5fZGV0YWlsLnByb21vX3F1YW5fYm94IC5wcm9tb19ib2R5IC5jaXJjbGUsICNwcm9tb19xdWFuX2RldGFpbC5wcm9tb19xdWFuX2JveCAucXVhbl9pdGVtIC5jaXJjbGV7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogOHB4O1xuICAgICAgd2lkdGg6IDhweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMDc4NjA7XG4gICAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgICB9XG4gICAgLnByb21vX3F1YW5fYm94IC5kZXRhaWxfcmlnaHQge1xuICAgICAgd2lkdGg6IDIwNnB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAucXVhbl9ib2R5IHtcbiAgICAgIGhlaWdodDogODBweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICAucXVhbl9ib2R5OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICIiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gICAge3tpZiBuZXdfZXh0ZW5zaW9ufX1cbiAgICAgICNwcm9tb19xdWFuX2RldGFpbCBkaXYuZGV0YWlsX2xlZnQge1xuICAgICAgICB3aWR0aDogMzIycHg7XG4gICAgICB9XG4gICAgICAucHJvbW9fcXVhbl9ib3ggLnByb21vX2RpdiwgLnByb21vX3F1YW5fYm94IC5xdWFuX2RpdiB7XG4gICAgICAgIGhlaWdodDogMjUwcHg7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIH1cbiAgICAgIC5wcm9tb19xdWFuX2JveCAucHJvbW9fYm9keSB7XG4gICAgICAgIGhlaWdodDogMjIwcHg7XG4gICAgICB9XG4gICAge3svaWZ9fVxuICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7bigyNCk7dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCxlKXtlJiZlKCl9fSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0icHJvbW9faXRlbV9hZCI+XG4gIDxhIGNsYXNzPSJpdGVtX2lkX2ltZyIgaHJlZj0ie3tpdGVtLnVybH19IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgPGltZyBzcmM9Int7aXRlbS5pbWd9fSI+XG4gIDwvYT5cbiAgPGEgaHJlZj0ie3tpdGVtLnVybH19IiBjbGFzcz0iaXRlbV90bGUiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0ie3tpdGVtLnRpdGxlfX0iPnt7aXRlbS50aXRsZX19PC9hPlxuICA8c3BhbiBjbGFzcz0iaXRlbV9icmFuZCI+e3tpdGVtLmJyYW5kfX08L3NwYW4+XG4gIDxhIGhyZWY9Int7aXRlbS5zdG9yZV91cmx9fSIgY2xhc3M9Iml0ZW1fc2hvcG5hbWUiIHRhcmdldD0iX2JsYW5rIj57e2lmIGl0ZW0ucGxhdGZvcm19fSB7e2l0ZW0ucGxhdGZvcm0gKyAiICJ9fSB7ey9pZn19e3tpdGVtLnN0b3JlX25hbWV9fTwvYT5cbiAgPHNwYW4gIGNsYXNzPSJ0dWlndWFuZ19saW5rIiA+54Ot5Y2WPC9zcGFuPlxuICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgICNwcm9tb19pdGVtX2FkIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiAyMDZweDtcbiAgICAgIGhlaWdodDogMjQ4cHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgICNwcm9tb19pdGVtX2FkPmEsICNwcm9tb19pdGVtX2FkPnNwYW4ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbiAgICAjcHJvbW9faXRlbV9hZCAuaXRlbV9pZF9pbWcge1xuICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgbWFyZ2luLXRvcDogMzVweDtcbiAgICB9XG4gICAgI3Byb21vX2l0ZW1fYWQgLml0ZW1faWRfaW1nIGltZyB7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIH1cbiAgICBkaXYjcHJvbW9faXRlbV9hZCBhLml0ZW1fdGxlIHtcbiAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogIzExMTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgIGhlaWdodDogMzNweDtcbiAgICB9XG4gICAgI3Byb21vX2l0ZW1fYWQgLml0ZW1fYnJhbmQge1xuICAgICAgY29sb3I6ICM2NjY7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMjRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICAgIH1cbiAgICAjcHJvbW9faXRlbV9hZCAuaXRlbV9zaG9wbmFtZSB7XG4gICAgICBjb2xvcjogIzMzMztcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cbiAgICBkaXYjcHJvbW9faXRlbV9hZCBzcGFuLnR1aWd1YW5nX2xpbmsge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgY29sb3I6ICNiYmI7XG4gICAgICByaWdodDogMTBweDtcbiAgICAgIHRvcDogMTVweDtcbiAgICB9XG4gIDwvc3R5bGU+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0iYmpkX3pvbF9wcm9tbyI+XG4gIDxzcGFuIGNsYXNzPSJiamQtcHJvbW8taGVhZCI+XG4gICAgPGVtPjwvZW0+XG4gICAgPHNwYW4+54Ot5Y2WPC9zcGFuPlxuICA8L3NwYW4+XG4gIDxkaXYgY2xhc3M9ImJqZC1wcm9tby1ib3giPlxuICAgIHt7ZWFjaCBkYXRhfX1cbiAgICAgIDxhIGhyZWY9Int7JHZhbHVlLnVybH19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Int7JHZhbHVlLnB1cmV0bGV9fSI+e3sjJHZhbHVlLnRpdGxlfX08L2E+XG4gICAge3svZWFjaH19XG4gIDwvZGl2PlxuICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgIC5mZWVkYmFjayB7XG4gICAgICBtYXJnaW4tdG9wOiAtNTBweCFpbXBvcnRhbnQ7XG4gICAgfVxuICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBvKHQpe3ZhciBvPSJodHRwczovL3d3dy5nd2RhbmcuY29tL3Byb21vdGlvbi9wcmljZT9rZXl3b3JkPSIray5rZXl3b3JkKyImZXh0PTEmY2xhc3NfaWQ9IitrLmNsYXNzX2lkLGE9bigxMDUpO2UoIiNnd2RfbG93cHJpIikuYXBwZW5kKHguY29tcGlsZShhKSh7cmVtbzoi5pu05aSa5aSE5LqO5Y6G5Y+y5pyA5L2O5Lu355qE5ZCM57G75ZWG5ZOBIixkYXRhOnQuc2xpY2UoMCwzKSxleHROYW1lOmkuZXh0TmFtZSxpc1RvcDohMCxleHRCcmFuZDppLmV4dEJyYW5kLHNfc2VydmVyOmkuc19zZXJ2ZXIsbG93VXJsOm99KSksbigxMDYpLnJlbmRlckxvd2VzdEFkKGYuY2xhc3NfaWQsZi5jb3Jld29yZCksZSgiI2d3ZF9sb3dwcmkiKS5zaG93KCksbig1NikuYXV0b0ZpeFdpZHRoKCl9ZnVuY3Rpb24gYSh0KXt2YXIgbz0iaHR0cHM6Ly93d3cuZ3dkYW5nLmNvbS9wcm9tb3Rpb24vcHJpY2U/a2V5d29yZD0iK2sua2V5d29yZCsiJmV4dD0xJmNsYXNzX2lkPSIray5jbGFzc19pZCxhPW4oMTA1KSxyPXQubGVuZ3RoPjM/Mzp0Lmxlbmd0aCxzPTIzOCsyMzAqKHItMSk7ZSgiI2JqZF9ib3R0b21fZGV0YWlsIikuYXBwZW5kKHguY29tcGlsZShhKSh7cmVtbzoi5pu05aSa5aSE5LqO5Y6G5Y+y5pyA5L2O5Lu355qE5ZCM57G75ZWG5ZOBIixkYXRhOnQuc2xpY2UoMCwzKSx3aWR0aDpzLGV4dE5hbWU6aS5leHROYW1lLGV4dEJyYW5kOmkuZXh0QnJhbmQsc19zZXJ2ZXI6aS5zX3NlcnZlcixsb3dVcmw6b30pKSxlKCIuY29tLWxvd3ByaSIpLnNob3coKX1mdW5jdGlvbiByKHQpe3QuaGlnaGVzdF9wcmljZT10Lmxhc3RfcHJpY2UsdC5sYXN0X3ByaWNlPU51bWJlcih0Lmxhc3RfcHJpY2UpLnRvRml4ZWQoMil9ZnVuY3Rpb24gcyh0KXt2YXIgZT1uKDY5KTt0Lmxlbmd0aD4zMCYmKHQ9dC5zbGljZSgwLDMwKSk7Zm9yKHZhciBvPTA7bzx0Lmxlbmd0aDtvKyspe3IodFtvXSk7dmFyIGE9e3NpdGVfaWQ6dFtvXS5zaXRlX2lkLHVybDp0W29dLnVybCxtb2Q6Inp1aWRpamlhIix1bmlvbjppLnVuaW9uLnNwbGl0KCJfIilbMV0sZHBfaWQ6dFtvXS51cmxfY3JjKyItIit0W29dLnNpdGVfaWR9O3Rbb10udXJsPWUuaW5pdChhKX1yZXR1cm4gdH1mdW5jdGlvbiBsKCl7ZSgiI2d3ZF9sb3dwcmkiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtlKHRoaXMpLmFkZENsYXNzKCJnd2RfbG93cHJpX2hvdmVyIiksXygicHJvZHVjdF9wYWdlX2xvd2VzdF9zaG93IiksZSgiI2d3ZF9sb3dwcmlfZGV0YWlsIikuY3NzKCJsZWZ0IixlKCIjZ3dkX2xvd3ByaSIpLm9mZnNldCgpLmxlZnQtMSsicHgiKS5jc3MoInJpZ2h0IiwiYXV0byIpLGUoIiNnd2RfbG93cHJpX2RldGFpbCAuYWxsLXByb2R1Y3RzIikuY3NzKCJ3aWR0aCIsei04MCksZSgiI2d3ZF9sb3dwcmlfZGV0YWlsIikuc2hvdygpLGUod2luZG93KS53aWR0aCgpLShlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5vZmZzZXQoKS5sZWZ0K2UoIiNnd2RfbG93cHJpX2RldGFpbCIpLm91dGVyV2lkdGgoKSsyKTwwJiZlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5jc3MoInJpZ2h0IiwiMHB4IikuY3NzKCJsZWZ0IiwiYXV0byIpLChpLklFN3x8aS5JRTgpJiZlKHdpbmRvdykud2lkdGgoKTwxNTAwJiZlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5jc3MoInJpZ2h0IiwiMHB4IikuY3NzKCJsZWZ0IiwiYXV0byIpfSksZSgiI2d3ZF9sb3dwcmkiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXt2YXIgdD10aGlzO3c9c2V0VGltZW91dChmdW5jdGlvbigpe2UodCkucmVtb3ZlQ2xhc3MoImd3ZF9sb3dwcmlfaG92ZXIiKSxlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5oaWRlKCl9LDIwMCl9KSxlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodyl9KSxlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtlKCIjZ3dkX2xvd3ByaSIpLnJlbW92ZUNsYXNzKCJnd2RfbG93cHJpX2hvdmVyIiksZSh0aGlzKS5oaWRlKCl9KSxlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7XygicHJvZHVjdF9wYWdlX2xvd2VzdF9jbGljayIpfSksZSgiI2d3ZF9sb3dwcmlfZGV0YWlsIC5sZWZ0LXBhZ2UiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aS5jaGFuZ2VfcGFnZSgibG93cHJpIiwtMSl9KSxlKCIjZ3dkX2xvd3ByaV9kZXRhaWwgLnJpZ2h0LXBhZ2UiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aS5jaGFuZ2VfcGFnZSgibG93cHJpIiwxKX0pfWZ1bmN0aW9uIGMoKXtlKCIuY29tLWxvd3ByaSIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2NsZWFyVGltZW91dCh3KSxfKCJwcm9kdWN0X3BhZ2VfbG93ZXN0X3Nob3ciKSxlKHRoaXMpLmFkZENsYXNzKCJtc2hvdmVyIiksZSgiI2d3ZF9sb3dwcmlfZGV0YWlsIikuc2hvdygpfSksZSgiLmNvbS1sb3dwcmkiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodyk7dmFyIHQ9dGhpczt3PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKCIjZ3dkX2xvd3ByaV9kZXRhaWwiKS5oaWRlKCksZSh0KS5yZW1vdmVDbGFzcygibXNob3ZlciIpfSwyMDApfSksZSgiI2d3ZF9sb3dwcmlfZGV0YWlsIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHcpLGUodGhpcykuc2hvdygpfSksZSgiI2d3ZF9sb3dwcmlfZGV0YWlsIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7ZSh0aGlzKS5oaWRlKCksZSgiLmNvbS1sb3dwcmkiKS5yZW1vdmVDbGFzcygibXNob3ZlciIpfSksZSgiI2d3ZF9sb3dwcmlfZGV0YWlsIikub24oImNsaWNrIixmdW5jdGlvbigpe18oInByb2R1Y3RfcGFnZV9sb3dlc3RfY2xpY2siKX0pfWZ1bmN0aW9uIHAodCl7dmFyIGU9cyh0LmRhdGEpO2U9ZS5zbGljZSgwLDMpLGU9aihlKTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyllW2ldLmRpc2NvdW50PSgxMCplW2ldLmRpc2NvdW50KS50b0ZpeGVkKDEpOyJ0b3AiPT1nJiYobyhlKSxsKCkpLCJib3R0b20iPT1nJiYoYShlKSxjKCkpLGUubGVuZ3RoPjI/bigxMDgpLmluaXQoImxvd2VzdCIsZSk6bigxMDgpLmluaXQoImxvd2VzdCIsbnVsbCl9ZnVuY3Rpb24gZCgpe3ZhciB0PSc8ZGl2IGlkPSJnd2RfbG93cHJpIiBjbGFzcz0iZ3dkYW5nLXRhYiI+XG4gICAgPHNwYW4gY2xhc3M9ImJ0bi10YWItc3AiPlxuICAgICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgICA8c3BhbiBjbGFzcz0idGFiLXNwMSBibGtjb2xvcjEiPuabtOWkmuWQjOexu+S9juS7tzwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gIDwvZGl2Pic7ZSgiLmd3ZC10b3BiYXItcmlnaHQiKS5wcmVwZW5kKHguY29tcGlsZSh0KSh7fSkpLGUodCkuc2hvdygpfWZ1bmN0aW9uIGgoKXsidG9wIj09ZyYmZCgpfWZ1bmN0aW9uIHUodCxvLGEpe3ZhciByPWkuZHAucHJpY2V8fDA7cnx8KHI9dCYmdC5wYXJhbXMmJnQucGFyYW1zLnByaWNlKSxyfHwocj0wKSwic3VuaW5nIj09aS5zaXRlJiZlKCIubWFpbnByaWNlIikuZXEoMCkudGV4dCgpLmluZGV4T2YoIj8iKT4tMSYmKHI9MCksay5rZXl3b3JkPWVuY29kZVVSSUNvbXBvbmVudCh0Lm5vdy5jb3Jld29yZHx8IiIpLGsuY2xhc3NfaWQ9dFsiY29kZS1zZXJ2ZXIiXSYmdFsiY29kZS1zZXJ2ZXIiXS5jbGFzc19pZHx8IjAwMDAwMDAwIixrLmNsYXNzX2lkPWsuY2xhc3NfaWQudHJpbSgpO3ZhciBzPWkuc2VydmVyKyIvZXh0ZW5zaW9uP2FjPXByaWNlX2IyY19sb3dlc3QmY2xhc3NfaWQ9IitrLmNsYXNzX2lkKyImc2l0ZV9pZD0iK28rIiZwcmljZT0iK3IrIiZrZXl3b3JkPSIray5rZXl3b3JkO2IuZ2V0KHMpLmRvbmUoZnVuY3Rpb24odCl7dCYmMCE9dC5kYXRhLmxlbmd0aD9hKHQpOihlKCIjZ3dkX2xvd3ByaSIpLnJlbW92ZSgpLCJsdXlvdSI9PT1pLmJ0eXBlJiYiaG5keCIhPT1pLmZyb21fZGV2aWNlJiZ2LmluaXQoZix0KSxuKDEwOCkuaW5pdCgibG93ZXN0IixudWxsKSl9KS5mYWlsKGZ1bmN0aW9uKHQpe2UoIiNnd2RfbG93cHJpIikucmVtb3ZlKCksImx1eW91Ij09PWkuYnR5cGUmJiJobmR4IiE9PWkuZnJvbV9kZXZpY2UmJnYuaW5pdChmLG51bGwpfSl9ZnVuY3Rpb24gbSh0KXt2YXIgZT0wO3JldHVybiIwIiE9dC5zaXRlX2lkP2U9dC5zaXRlX2lkOiIwIiE9dC5kcF9pZCYmdC5kcF9pZCYmKGU9dC5kcF9pZC5zcGxpdCgiLSIpWzFdKSxlfXZhciBmLGcsdyx4PW4oMjIpLGI9bigyNCksXz1uKDEyKSx2PW4oOTcpLHk9bigxMyksaz17fSx6PWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aD4wP2RvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDpkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoO3QuZXhwb3J0cy5nZXRQYWdlSW5mbz1mdW5jdGlvbih0KXt2YXIgZT17fSxuPWkuZ2V0Rml4ZWRTaG93UHJvZHVjdE51bSgpLG89dC5sZW5ndGg7cmV0dXJuIG8+PW4/KGUucGFnZXM9ITAsZS5wYWdld2lkdGg9ei0yKTooZS5wYWdlcz0hMSxlLnBhZ2V3aWR0aD0yMDAqbysyKSxlLmRwbnVtPW8sZS5wYWdlbnVtPW8lbj09MD9wYXJzZUludChvL24pOnBhcnNlSW50KG8vbisxKSxlLnBlclBhZ2VTaXplPW4sZX07dmFyIGo9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0Lmxlbmd0aDtlKyspdFtlXS5wdXJlcHJvbW89dFtlXS5wcm9tbyx0W2VdLnByb21vP3RbZV0ucHJvbW8yPXRbZV0ucHJvbW8ucmVwbGFjZSgvXGIoWzAtOS5dKylcYi9nLCI8ZW0+JDE8L2VtPiIpOnRbZV0ucHJvbW8yPSIiO3JldHVybiB0fTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0KXtpZihnPXkuZ2V0KCJwZXJtYW5lbnQiKS5zdHlsZSxmPXQmJnQubm93LCFmKXJldHVybiB2b2lkIG4oMTA4KS5pbml0KCJsb3dlc3QiLG51bGwpO2lmKGkuYWxpU2l0ZXx8InZpcHNob3AiPT1pLnNpdGUpcmV0dXJuIHZvaWQgbigxMDgpLmluaXQoImxvd2VzdCIsbnVsbCk7dmFyIGU9bSh0Lm5vdyk7cmV0dXJuIGkuSUU2fHwwPT1lP3ZvaWQgbigxMDgpLmluaXQoImxvd2VzdCIsbnVsbCk6KGgoKSx2b2lkIHUodCxlLHApKX19KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDk4KSxhPW4oOTkpLHI9bigxMDApLHM9bigxNCksbD1uKDEwMiksYz1uKDIyKSxwPW4oMTMpLGQ9bigyNCksaD17fSx1PXt9LG09eyIzNjBidXkiOnsiI2ZpdHRpbmctc3VpdCI6WyIjZml0dGluZy1zdWl0IiwiYmVmb3JlIl0sIiNmaXR0aW5ncyI6WyIjZml0dGluZ3MiLCJiZWZvcmUiXSwiI3Nob3BSZWNTdWl0IjpbIiNzaG9wUmVjU3VpdCIsImJlZm9yZSJdfSwiMzYwYnV5LXJlIjp7IiNzaW1pbGFyX2dvb2RzIjpbIiNzaW1pbGFyX2dvb2RzIiwicHJlcGVuZCJdfSxhbWF6b246eyIjYnV5eGdldHlfZmVhdHVyZV9kaXYiOlsiI2J1eXhnZXR5X2ZlYXR1cmVfZGl2IiwiYmVmb3JlIl0sIiNyaGYtY29udGFpbmVyIC5yaGYtYm9yZGVyIjpbIiNyaGYtY29udGFpbmVyIC5yaGYtYm9yZGVyIiwiYmVmb3JlIl0sIiNmYWxsYmFja3Nlc3Npb24tc2ltcy1mZWF0dXJlIjpbIiNmYWxsYmFja3Nlc3Npb24tc2ltcy1mZWF0dXJlIiwiYmVmb3JlIl19LCI1MWJ1eSI6eyIuZ3JpZF9jMSAueHRpZWluIjpbIi5ncmlkX2MxIC54dGllaW4iLCJiZWZvcmUiXX0sc3VuaW5nOnsiI2FjY2Vzc29yeUluZm8iOlsiI2FjY2Vzc29yeUluZm8iLCJwcmVwZW5kIl0sIiNsaXN0UHJvQ29udGVudCI6WyIjbGlzdFByb0NvbnRlbnQiLCJwcmVwZW5kIl0sIi53cmFwcGVyIC5wcm9jb24tc2lkZSI6WyIud3JhcHBlciAucHJvY29uLXNpZGUiLCJiZWZvcmUiXX0sZGFuZ2Rhbmc6eyIjbWFpbl9iZCAuc2hvdyI6WyIjbWFpbl9iZCAuc2hvdyIsImFmdGVyIl0sIiNtYWluX2JkIC5wcm9kdWN0X21haW4iOlsiI21haW5fYmQgLnByb2R1Y3RfbWFpbiIsImFmdGVyIl19LGdvbWU6eyIjZ20tb3RoZXItaW5mbyI6WyIjZ20tb3RoZXItaW5mbyIsInByZXBlbmQiXX0seWloYW9kaWFuOnsiLmZtX2RldGFpbF9vbmUiOlsiLmZtX2RldGFpbF9vbmUiLCJhZnRlciJdfSxqdW1laTp7Ii5sYXlvdXRfMTA5MCAuZGVhbF9jb250ZW50IjpbIi5sYXlvdXRfMTA5MCAuZGVhbF9jb250ZW50IiwiYWZ0ZXIiXSwiLm1hbGxfZGV0YWlsX3dyYXAiOlsiLm1hbGxfZGV0YWlsX3dyYXAiLCJhcHBlbmQiXX0sdm1hbGw6eyIjZ3JvdXAtYXJlYSsuaHItMjArLmxheW91dCI6WyIjZ3JvdXAtYXJlYSsuaHItMjArLmxheW91dCIsInByZXBlbmQiXX0sZmVpbml1OnsiI3RyYWNrZXJfaXRlbSAucHJvZHVjdC1hYm91dCI6WyIjdHJhY2tlcl9pdGVtIC5wcm9kdWN0LWFib3V0IiwiYmVmb3JlIl19LHlvdWdvdTp7IiNnb29kc0NvbnRhaW5lcitwIjpbIiNnb29kc0NvbnRhaW5lcitwIiwiYWZ0ZXIiXX0sa2FvbGE6eyIuUEluZm9XcmFwIjpbIi5QSW5mb1dyYXAiLCJhZnRlciJdfSx2aXBzaG9wOnsiI0otRlctZGV0YWlsIC5NLWRldGFpbCI6WyIjSi1GVy1kZXRhaWwgLk0tZGV0YWlsIiwiYmVmb3JlIl19LHdvbWFpOnsiLmRldGFpbF9tYWluIjpbIi5kZXRhaWxfbWFpbiIsInByZXBlbmQiXSwiLmRldGFpbGVkIjpbIi5kZXRhaWxlZCIsImJlZm9yZSJdfSxqaXV4aWFuOnsiLmRldGFpbC1ib3gyIjpbIi5kZXRhaWwtYm94MiIsImJlZm9yZSJdfSxzZWNvbzp7IiNzaG93QWRkcyI6WyIjc2hvd0FkZHMiLCJiZWZvcmUiXX0sd2JpYW86eyIjaGlzdG9yeV9idXkiOlsiI2hpc3RvcnlfYnV5IiwiYmVmb3JlIl19LHNmYmVzdDp7Ii5tYWluLWJveCI6WyIubWFpbi1ib3giLCJiZWZvcmUiXX0sbWl5YWJhb2JlaTp7Ii5wb3Bwcm8gLmJmZF9kaXYiOlsiLnBvcHBybyAuYmZkX2RpdiIsImJlZm9yZSJdfSxmZW5ncXU6eyIjcmVjb21tZW5kIjpbIiNyZWNvbW1lbmQiLCJiZWZvcmUiXX0sZWhhaWVyOnsiLnByb2R1Y3QtZGV0YWlscy1ib3giOlsiLnByb2R1Y3QtZGV0YWlscy1ib3giLCJiZWZvcmUiXX0sem9sOnsiI0pfUmVjb21tZW5kZWREaXN0cmlidXRvciI6WyIjSl9SZWNvbW1lbmRlZERpc3RyaWJ1dG9yIiwiYmVmb3JlIl0sIi5wcm9kdWN0LWRldGFpbC1ib3giOlsiLnByb2R1Y3QtZGV0YWlsLWJveCIsImFmdGVyIl19fSxmPWZ1bmN0aW9uKCl7dmFyIHQ9bVtlLnNpdGVdO2Zvcih2YXIgbiBpbiB0KWlmKGkobikubGVuZ3RoPjApe2lmKCJwcmVwZW5kIj09dFtuXVsxXSYmIm5vbmUiPT1pKG4pLmNzcygiZGlzcGxheSIpKWNvbnRpbnVlO3JldHVybiB0W25dfXJldHVybiExfSxnPWZ1bmN0aW9uKHQsZSxuKXtzd2l0Y2gobil7Y2FzZSJiZWZvcmUiOmkoZSkuYmVmb3JlKHQpO2JyZWFrO2Nhc2UiYXBwZW5kIjppKGUpLmFwcGVuZCh0KTticmVhaztjYXNlImFmdGVyIjppKGUpLmFmdGVyKHQpO2JyZWFrO2Nhc2UicHJlcGVuZCI6aShlKS5wcmVwZW5kKHQpfX0sdz1mdW5jdGlvbih0KXt2YXIgbj1pKCIjIitlLmV4dEJyYW5kKyJfaW5uZXJfIit0LnR5cGUrIiAuIitlLmV4dEJyYW5kKyJfaW5uZXJfY29udGVudCIpLndpZHRoKCksbz1pKCIuaW5uZXJfcGFnZV9sZWZ0Iikud2lkdGgoKSxhPW4tMipvLTQ7aSgiIyIrZS5leHRCcmFuZCsiX2lubmVyXyIrdC50eXBlKyIgLmlubmVyX3Byb19saXN0Iikud2lkdGgoYSkseChhLHQpfSx4PWZ1bmN0aW9uKHQsbil7dD10fHwwO3ZhciBvPW4uZGF0YS5sZW5ndGh8fDAsYT1wYXJzZUludCh0LzE5Mikscj1vJWE9PTA/by9hOnBhcnNlSW50KG8vYSkrMTtuLnRvdGFsPXIsbi5wZXI9YSxuLmNvbnc9dCxpKCIjIitlLmV4dEJyYW5kKyJfaW5uZXJfIituLnR5cGUrIiAudG90YWxfcGFnZSIpLnRleHQociksMT09ciYmaSgiIyIrZS5leHRCcmFuZCsiX2lubmVyXyIrbi50eXBlKyIgLiIrZS5leHRCcmFuZCsiX2lubmVyX2NvbnRlbnQgLnR1cm5wYWdlIikuY3NzKCJ2aXNpYmlsaXR5IiwiaGlkZGVuIil9LGI9ZnVuY3Rpb24odCxuKXt2YXIgaT1mKCk7aWYoaSE9PSExJiYwIT1uLmxlbmd0aCl7dS5kYXRhPW4sdS50eXBlPXQ7dmFyIGE9Yy5jb21waWxlKG8pKHtkYXRhOm4sdHlwZTp0LG51bTpuLmxlbmd0aCxzX3NlcnZlcjplLnNfc2VydmVyLG5ld19leHRlbnNpb246ZS5uZXdfZXh0ZW5zaW9uLGV4dE5hbWU6ZS5leHROYW1lLHNldHRpbmc6ZS5zZXJ2ZXIrIi9icndleHQvc2V0dGluZ19mZWVkYmFjaz9zZXQ9MSIsZXh0QnJhbmQ6ZS5leHRCcmFuZH0pO2coYSxpWzBdLGlbMV0pLHMubG9nKCLltYzlhaXpobXpnaLlkIznsbvljoblj7LmnIDkvY7ku7flsZXnjrAiKSx3KHUpLEMoMSx1KSx2KHUpfX0sXz1mdW5jdGlvbih0LG4pe3ZhciBhPWYoKTtpZihhIT09ITEmJjAhPW4ubGVuZ3RoKXtoLmRhdGE9bixoLnR5cGU9dDt2YXIgcj1jLmNvbXBpbGUobykoe2RhdGE6bix0eXBlOnQsbnVtOm4ubGVuZ3RoLHNfc2VydmVyOmUuc19zZXJ2ZXIsbmV3X2V4dGVuc2lvbjplLm5ld19leHRlbnNpb24sZXh0TmFtZTplLmV4dE5hbWUsZXh0QnJhbmQ6ZS5leHRCcmFuZH0pO2koIi4iK2UuZXh0QnJhbmQrIl9pbm5lcl9sb3dwcmljZSIpLmxlbmd0aD4wP2koIi4iK2UuZXh0QnJhbmQrIl9pbm5lcl9sb3dwcmljZSIpLmJlZm9yZShyKTpnKHIsYVswXSxhWzFdKSx3KGgpLEMoMSxoKSxzLmxvZygi5bWM5YWl6aG16Z2i54yc5L2g5Zac5qyi5bGV546wIiksdihoKX19LHY9ZnVuY3Rpb24odCl7aSgiIyIrZS5leHRCcmFuZCsiX2lubmVyXyIrdC50eXBlKyIgLmlubmVyX3BhZ2VfbGVmdCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtQKC0xLHQpfSksaSgiIyIrZS5leHRCcmFuZCsiX2lubmVyXyIrdC50eXBlKyIgLmlubmVyX3BhZ2VfcmlnaHQiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7UCgxLHQpfSksaSgiIyIrZS5leHRCcmFuZCsiX2lubmVyX2xvdyBsaSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtzLmxvZygi5bWM5YWl6aG16Z2i5ZCM57G75Y6G5Y+y5pyA5L2O5Lu354K55Ye7Iil9KSxpKCIjIitlLmV4dEJyYW5kKyJfaW5uZXJfZmF2b3IgbGkiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7cy5sb2coIuW1jOWFpemhtemdoueMnOS9oOWWnOasoueCueWHuyIpfSl9LHk9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0Lmxlbmd0aDtlKyspdFtlXS5uZXdkaXNjb3VudD10W2VdLmRpc2NvdW50LHRbZV0uaGlnaGVzdD10W2VdLmhpZ2hlc3RfcHJpY2U7cmV0dXJuIHR9LGs9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RofHwwLG49MDtuPGU7bisrKXt2YXIgaT0oTnVtYmVyKHRbbl0ucHJpY2UpLzEwMCkudG9TdHJpbmcoKTtpLmluZGV4T2YoIi4iKT09LTE/dFtuXS5wcmljZT1pKyIuMDAiOmkubWF0Y2goL1wuWzAtOV17Mn0vKT90W25dLnByaWNlPWk6dFtuXS5wcmljZT1pKyIwIn1yZXR1cm4gdH0sej1mdW5jdGlvbih0KXtpZih0LnBlciYmMCE9dC5wZXIpe3ZhciBuPXQuY29udy0xOTIqdC5wZXIsbz1wYXJzZUludChuLzQpO2koIiMiK2UuZXh0QnJhbmQrIl9pbm5lcl8iK3QudHlwZSsnIC5pbm5lcl9wcm9fbGlzdCBsaTpub3QoIi5saV9maXJzdCIpJykuY3NzKCJtYXJnaW4tbGVmdCIsbysxMisicHgiKX19LGo9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTA7ZTx0O2UrKyl7dmFyIG49aSgiI2d3ZF9pbm5lcl9mYXZvciAuaXRlbV9pbWcgaW1nIikuZXEoZSk7bC5jaGVja2ltZyhuLmF0dHIoInNyYyIpLG4sMTcwKX19LEM9ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmRhdGEuc2xpY2UoKHQtMSkqZS5wZXIsdCplLnBlcik7UyhuLGUpfSxTPWZ1bmN0aW9uKHQsbil7dmFyIG89Yy5jb21waWxlKGEpKHtkYXRhOnQsc19zZXJ2ZXI6ZS5zX3NlcnZlcn0pO2koIiMiK2UuZXh0QnJhbmQrIl9pbm5lcl8iK24udHlwZSsiIC5pbm5lcl9wcm9fbGlzdCAuIitlLmV4dEJyYW5kKyJfIituLnR5cGUrIl9saXN0IikuZW1wdHkoKS5hcHBlbmQobyksaih0Lmxlbmd0aCkseihuKX0sUD1mdW5jdGlvbih0LG4pe3ZhciBvPU51bWJlcihpKCIjIitlLmV4dEJyYW5kKyJfaW5uZXJfIituLnR5cGUrIiAuIitlLmV4dEJyYW5kKyJfaW5uZXJfcGFnZSAuY3VyX3BhZ2UiKS50ZXh0KCkpOzE9PT10PyhvPT1uLnRvdGFsJiYobz0wKSxpKCIjIitlLmV4dEJyYW5kKyJfaW5uZXJfIituLnR5cGUrIiAuIitlLmV4dEJyYW5kKyJfaW5uZXJfcGFnZSAuY3VyX3BhZ2UiKS50ZXh0KCsrbyksQyhvLG4pKTooMT09byYmKG89bi50b3RhbCsxKSxpKCIjIitlLmV4dEJyYW5kKyJfaW5uZXJfIituLnR5cGUrIiAuIitlLmV4dEJyYW5kKyJfaW5uZXJfcGFnZSAuY3VyX3BhZ2UiKS50ZXh0KC0tbyksQyhvLG4pKX0sVD1mdW5jdGlvbih0LG4saSl7dmFyIG89dC5zaXRlX2lkLGE9dC5ub3dfZHBfaWQscj1lLnNlcnZlcisiL2Jyd2V4dC9ndWVzc19mYXZvcj9kcF9pZD0iK2ErIiZkcF9pZHM9JnNpdGVfaWQ9IitvKyImY29sdW1uPWFsc292aWV3IjtkLmdldChyKS5kb25lKGZ1bmN0aW9uKHQpe2koImZhdm9yIixuLmNvbmNhdChrKHQpKSl9KX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCxuKXsic3hkeCIhPT1lLmZyb21fZGV2aWNlJiYoMCE9cC5nZXQoInNob3dfZ3Vlc3NmYXZvciIpJiZyLmdldERwTG93ZXN0KGZ1bmN0aW9uKGUpe1QodCxlLF8pfSksMCE9cC5nZXQoInNob3dfbG93cHJpIikmJm4mJmIoImxvdyIseShuLmRhdGEpKSl9O3ZhciBBPWZ1bmN0aW9uKHQsaSl7MCE9ZS5zaG93X2lubmVyX2xvdyYmKG89bigxMDMpLGE9bigxMDQpLGIoImxvdyIseShpKSkpfTt0LmV4cG9ydHMuYmRleHQ9QSx0LmV4cG9ydHMuYmpnZXh0PUF9KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9Int7ZXh0QnJhbmR9fV9pbm5lcl97e3R5cGV9fSIgY2xhc3M9Int7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZSI+XG4gIDxkaXYgY2xhc3M9Int7ZXh0QnJhbmR9fV9pbm5lcl9oZWFkIj5cbiAgICA8YSBjbGFzcz0ic2l0ZV9pY29uIiB7e2lmICFuZXdfZXh0ZW5zaW9ufX0gaHJlZj0iaHR0cDovL3d3dy57e2V4dE5hbWV9fS5jb20iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0i6LSt54mp5YWaIiB7ey9pZn19PjwvYT5cbiAgICA8c3BhbiBjbGFzcz0iYmlnX3RpdGxlIj5cbiAgICAgIHt7aWYgdHlwZSA9PSBcJ2xvd1wnfX1cbiAgICAgICAg5Y6G5Y+y5pyA5L2O5Lu3XG4gICAgICB7e2Vsc2V9fVxuICAgICAgICDnjJzkvaDllpzmrKJcbiAgICAgIHt7L2lmfX1cbiAgICA8L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9InNtYWxsX3RpdGxlIj5cbiAgICAgIHt7aWYgdHlwZSA9PSBcJ2xvd1wnfX1cbiAgICAgICAg6L+Z5Lqb5ZCM57G75ZWG5ZOB5aSE5LqO5Y6G5Y+y5pyA5L2O5Lu3XG4gICAgICB7e2Vsc2V9fVxuICAgICAgICDnnIvov4fmnKzllYblk4HnmoTov5jnnIvkuoZcbiAgICAgIHt7L2lmfX1cbiAgICA8L3NwYW4+XG5cbiAgICA8YSBjbGFzcz0ie3tleHRCcmFuZH19X2lubmVyX3BhZ2UiPlxuICAgICAgPHNwYW4gY2xhc3M9ImN1cl9wYWdlIj4xPC9zcGFuPlxuICAgICAgPHNwYW4+Lzwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0b3RhbF9wYWdlIj4xPC9zcGFuPlxuICAgIDwvYT5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9Int7ZXh0QnJhbmR9fV9pbm5lcl9jb250ZW50Ij5cbiAgICA8YSBjbGFzcz0iaW5uZXJfcGFnZV9sZWZ0IHR1cm5wYWdlIj48ZW0+PC9lbT48L2E+XG4gICAgPGRpdiBjbGFzcz0iaW5uZXJfcHJvX2xpc3QiID5cbiAgICAgIDx1bCBjbGFzcz0ie3tleHRCcmFuZH19X3t7dHlwZX19X2xpc3QiPlxuICAgICAgPC91bD5cbiAgICA8L2Rpdj5cbiAgICA8YSBjbGFzcz0iaW5uZXJfcGFnZV9yaWdodCB0dXJucGFnZSI+PGVtPjwvZW0+PC9hPlxuICA8L2Rpdj5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAzMThweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgLnt7ZXh0QnJhbmR9fV9qaXV4aWFuIC57e2V4dEJyYW5kfX1faW5uZXJfbG93cHJpY2UsIC57e2V4dEJyYW5kfX1fa2FvbGEgLnt7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZXtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1fd2JpYW8gLnt7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZSB7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2NvbnRlbnQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfaGVhZCB7XG4gICAgICBoZWlnaHQ6IDUycHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuICAgIC5iaWdfdGl0bGUge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLXRvcDogMjFweDtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDUxcHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgLnNtYWxsX3RpdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICAgIH1cbiAgICBhLnt7ZXh0QnJhbmR9fV9pbm5lcl9wYWdlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgdG9wOiAyMHB4O1xuICAgIH1cbiAgICAgYS57e2V4dEJyYW5kfX1faW5uZXJfcGFnZTpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfaGVhZCAuc2l0ZV9pY29uIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMThweDtcbiAgICAgIGxlZnQ6IDE4cHg7XG4gICAgICBoZWlnaHQ6IDIxcHg7XG4gICAgICB3aWR0aDogMjRweDtcbiAgICAgIHt7aWYgbmV3X2V4dGVuc2lvbn19XG4gICAgICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy97e2V4dEJyYW5kfX1fc2l0ZV9pY29uMl8xLnBuZ1wnKSBuby1yZXBlYXQ7XG4gICAgICB7e2Vsc2V9fVxuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvMTIxMWxvZ28ucG5nXCcpIG5vLXJlcGVhdDtcbiAgICAgIHt7L2lmfX1cbiAgICAgIFxuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlICp7XG4gICAgICBmb250LWZhbWlseTogXCdNaWNyb3NvZnQgWWFoZWlcJztcbiAgICB9XG4gICAgYS5pbm5lcl9wYWdlX2xlZnQsLmlubmVyX3BhZ2VfcmlnaHQge1xuICAgICAgd2lkdGg6IDYycHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBoZWlnaHQ6IDE3MHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICBhLmlubmVyX3BhZ2VfbGVmdCBlbSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDgwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogMjhweDtcbiAgICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy8xMjE1YmFja19ub3JtYWwuanBnXCcpIG5vLXJlcGVhdDtcbiAgICB9XG4gICAgYS5pbm5lcl9wYWdlX2xlZnQgZW06aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zLzEyMTViYWNrX2hvdmVyLmpwZ1wnKSBuby1yZXBlYXQ7XG4gICAgfVxuICAgIC5pbm5lcl9wYWdlX3JpZ2h0IGVtIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgbWFyZ2luLXRvcDogODBweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zLzEyMTVmb3J3YXJkX25vcm1hbC5qcGdcJykgbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuaW5uZXJfcGFnZV9yaWdodCBlbTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvMTIxNWZvcndhcmRfaG92ZXIuanBnXCcpIG5vLXJlcGVhdDtcbiAgICB9XG4gICAgLmlubmVyX3Byb19saXN0IHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBoZWlnaHQ6IDI2NHB4O1xuICAgICAgd2lkdGg6IDEwMDBweDtcbiAgICB9XG4gICAgLmlubmVyX3BhZ2VfbGVmdCwgLmlubmVyX3Byb19saXN0IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlIHVsIGxpIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgICBoZWlnaHQ6IDI2NHB4O1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gICAgLnt7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZSB1bCBsaS5saV9maXJzdCB7XG4gICAgICBtYXJnaW4tbGVmdDogMHB4O1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlIHVsIGxpIC5pdGVtX2ltZyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBoZWlnaHQ6IDE3MnB4O1xuICAgICAgd2lkdGg6IDE3MnB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2YxZjFmMTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfbG93cHJpY2UgbGkgaW1nIHtcbiAgICAgIGhlaWdodDogMTcwcHg7XG4gICAgICB3aWR0aDogMTcwcHg7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfbG93cHJpY2UgbGkgLnNtYWxsX2Rlc2MgaW1nIHtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgdmVydGljYWwtYWxpZ246IGluaGVyaXQ7XG4gICAgfVxuICAgIC5zbWFsbF9kZXNjIC5zaXRlX2ljb24ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IDIxcHg7XG4gICAgICBoZWlnaHQ6IDE4cHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgLnt7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZSBsaSBhIGVte1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiAwcHg7XG4gICAgICBsZWZ0OiAwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWE1NDEyO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICB3aWR0aDogNDJweDtcbiAgICAgIGhlaWdodDogMTVweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIH1cbiAgICAuaW5uZXJfZHBfZGVzYyB7XG4gICAgICB3aWR0aDogMTcwcHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIH1cbiAgICAuaW5uZXJfZHBfZGVzYyAuZHBfdGl0bGV7XG4gICAgICBjb2xvcjogIzU5NTc1NztcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAxNzBweDtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgLnNtYWxsX2Rlc2Mge1xuICAgICAgbWFyZ2luLXRvcDogNnB4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiAzNnB4O1xuICAgICAgd2lkdGg6IDE3MHB4O1xuICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgIH1cbiAgICAuc21hbGxfZGVzYzpob3ZlciB7XG4gICAgICBjdXJzb3I6IHRleHQ7XG4gICAgfVxuICAgIC5zbWFsbF9kZXNjIC5uZXdfcHJpY2Uge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNkODAwMDA7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgLnNtYWxsX2Rlc2MgLm9sZF9wcmljZSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogIzlGQTBBMDtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pic7Cn0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9J3t7ZWFjaCBkYXRhfX1cbiAgPGxpIGNsYXNzPSJ7eyRpbmRleD09MD9cJ2xpX2ZpcnN0XCc6XCdcJ319Ij5cbiAgICA8YSBjbGFzcz0iaXRlbV9pbWciIGhyZWY9Int7JHZhbHVlLnVybH19IiB0aXRsZT0ie3skdmFsdWUudGl0bGV9fSIgdGFyZ2V0PSJfYmxhbmsiPlxuICAgICAgPGltZyBzcmM9Int7JHZhbHVlLmltZ191cmx9fSI+XG4gICAgICB7e2lmICR2YWx1ZS5uZXdkaXNjb3VudH19XG4gICAgICAgIDxlbT57eyR2YWx1ZS5uZXdkaXNjb3VudH195oqYPC9lbT5cbiAgICAgIHt7L2lmfX1cbiAgICA8L2E+XG4gICAgPGRpdiBjbGFzcz0iaW5uZXJfZHBfZGVzYyI+XG4gICAgICA8YSBjbGFzcz0iZHBfdGl0bGUiIGhyZWY9Int7JHZhbHVlLnVybH19IiB0aXRsZT0ie3skdmFsdWUudGl0bGV9fSIgdGFyZ2V0PSJfYmxhbmsiPlxuICAgICAgICB7eyR2YWx1ZS50aXRsZX19XG4gICAgICA8L2E+XG4gICAgICA8YSBjbGFzcz0ic21hbGxfZGVzYyI+XG4gICAgICAgIHt7aWYgJHZhbHVlLnNpdGVfbmFtZX19XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InNpdGVfaWNvbiIgdGl0bGU9Int7JHZhbHVlLnNpdGVfbmFtZX19Ij48aW1nIHNyYz0ie3tzX3NlcnZlcn19L2ltYWdlcy9mYXZpY29uL3t7JHZhbHVlLnNpdGVfaWR9fS5pY28iPjwvc3Bhbj5cbiAgICAgICAge3svaWZ9fVxuICAgICAgICA8c3BhbiBjbGFzcz0ibmV3X3ByaWNlIj5cbiAgICAgICAgICB7e2lmICR2YWx1ZS50eXBlcyA9PSBcJ2Zhc2hpb25cJ319XG4gICAgICAgICAgICDCpVxuICAgICAgICAgIHt7L2lmfX1cbiAgICAgICAgICB7eyR2YWx1ZS5wcmljZX19XG5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0ib2xkX3ByaWNlIiBzdHlsZT0iZGlzcGxheToge3soJHZhbHVlLmhpZ2hlc3QpP1wnaW5saW5lLWJsb2NrXCc6XCdub25lXCd9fSI+e3skdmFsdWUuaGlnaGVzdH19PC9zcGFuPlxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICA8L2xpPlxue3svZWFjaH19J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz12b2lkIDAsYT1bImpzZHgiLCJjaHV5dW4iLCJ0bHhzIiwianN4eSIsInpqZHgiLCJ4aW5neXVlIiwic2hjayIsIm1pX25ldyIsImdkam0iLCJobnR0IiwieGRqZiIsImhhZ3ciLCI5MjMyNTMiLCIxMDk4MTY0IiwiNzY0MDUwIiwiNTM4NjI1IiwiMTMyOTE4NSIsIjkyOTczMyIsIjgwODE5MyJdLHI9e25qY2s6WyJ1RnM3SU4iLCJMaDJYMkEiXSxnZGptOlsidUZzN0lOIiwiTGgyWDJBIl0sanhkeDpbIkRTekVGYSIsInRXNm50USJdLG1pX25ldzpbIkdQVmo2MCIsIk9zbUpLYiJdLGpzZHg6WyI2VkpNb00iLCJuNndHekEiXSxqc3h5OlsiNlZKTW9NIiwibjZ3R3pBIl0sY2h1eXVuOlsiOWtrektQIiwiUXkxR0ExIl0sYmpsdDpbIjlra3pLUCIsIlF5MUdBMSJdLHpqZHg6WyJVMng4V3QiLCI3bDVZMVciXSx4aW5neXVlOlsiQ0g3ZmlyIiwiaFhhVlNtIl0saG50dDpbIkNIN2ZpciIsImhYYVZTbSJdLHNoY2s6WyI5b3hEQTYiLCJmcFdBR3UiXSx0bHhzOlsiZk95Q0xiIiwicGJMcW1DIl0seGRqZjpbIlBtYThySCIsImQzQXAzMiJdLHNobHQ6WyJKVlBDRW8iLCJValo3Q04iXSxoYWd3OlsiODZlUE92IiwiNW80S1VtIl0sMTA5ODE2NDpbIkNIN2ZpciIsIkNIN2ZpciJdLDgwODE5MzpbIkNIN2ZpciIsIkNIN2ZpciJdLDc2NDA1MDpbIkNIN2ZpciIsIkNIN2ZpciJdLDUzODYyNTpbIlVqWjdDTiIsIlVqWjdDTiJdLDkyMzI1MzpbIlVqWjdDTiIsIlVqWjdDTiJdLDEzMjkxODU6WyJValo3Q04iLCJValo3Q04iXSw5Mjk3MzM6WyJEU3pFRmEiLCJEU3pFRmEiXX0scz1bImVmb3RpbGUiXSxsPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXt2YXIgZSxuPTEsaT0wO2lmKHQpZm9yKG49MCxlPXQubGVuZ3RoLTE7ZT49MDtlLS0paT10LmNoYXJDb2RlQXQoZSksbj0objw8NiYyNjg0MzU0NTUpK2krKGk8PDE0KSxpPTI2NjMzODMwNCZuLG49MCE9aT9uXmk+PjIxOm47cmV0dXJuIG59cmV0dXJuKCIiK3Qod2luZG93LmxvY2F0aW9uLmhyZWYpK3QoZG9jdW1lbnQuZG9tYWluKSsobmV3IERhdGUtMCkrTWF0aC5mbG9vcigxZTMqTWF0aC5yYW5kb20oKSkpLnN1YnN0cigwLDMyKX0oKSxjPWZ1bmN0aW9uKHQpe2Zvcih2YXIgbj1bXSxpPTE7aTx0Lmxlbmd0aDtpKyspe3ZhciBvPXt9LGE9dFtpXS5jdXJsMS5tYXRjaCgvJnVybD0oW14mXSspJi8pJiZ0W2ldLmN1cmwxLm1hdGNoKC8mdXJsPShbXiZdKykmLylbMV07Im1pX25ldyI9PT1lLmZyb21fZGV2aWNlJiZhJiZhLm1hdGNoKC8oPzpsZW1hbGx8dm1hbGwpLyl8fChvLnVybD10W2ldLmN1cmwxLG8uaW1nX3VybD10W2ldLnRpbWcsby50aXRsZT10W2ldLnBuLG8ucHJpY2U9dFtpXS5wcmljZSxvLnR5cGVzPSJmYXNoaW9uIixuLnB1c2gobykpfXJldHVybiBufSxwPWZ1bmN0aW9uKHQsZSl7aS5hamF4KHt1cmw6dCxzY3JpcHRDaGFyc2V0OiJVVEYtOCIsZGF0YVR5cGU6Impzb25wIixqc29ucDoianNvbnEiLHN1Y2Nlc3M6ZnVuY3Rpb24odCl7b3x8KGUodCYmdC5sZW5ndGg+MT9jKHQpOltdKSxvPSEwKX0sZXJyb3I6ZnVuY3Rpb24oKXtvfHwoZShbXSksbz0hMCl9fSksc2V0VGltZW91dChmdW5jdGlvbigpe298fChlKFtdKSxvPSEwKX0sNTUwMCl9LGQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MDt0PHMubGVuZ3RoO3QrKylpZihlLnNpdGU9PT1zW3RdKXJldHVybiEwO3JldHVybiEhbigxMDEpLmluaXQoKX07dC5leHBvcnRzLmdldGxMb3dlc3Q9ZnVuY3Rpb24odCl7aWYoZCgpKXJldHVybiB2b2lkIHQoW10pO3ZhciBuPWUuZnJvbV9kZXZpY2VfdHx8ZS5mcm9tX2RldmljZTtpZigidGx4cyI9PW4pcmV0dXJuIHZvaWQgdChbXSk7aWYoYS5pbmRleE9mKG4pPT0tMSlyZXR1cm4gdm9pZCB0KFtdKTt2YXIgaT0iaHR0cHM6Ly9zaG93LTMubWVkaWF2LmNvbS9zP3R5cGU9MSZzaG93aWQ9IityW25dWzBdKyImb2Y9NCZ1aWQ9IitsKyJ9JnFocGlkPSZpbXBjdD0yMCI7cChpLHQpfSx0LmV4cG9ydHMuZ2V0RHBMb3dlc3Q9ZnVuY3Rpb24odCl7aWYoZCgpKXJldHVybiB2b2lkIHQoW10pO2lmKGEuaW5kZXhPZihlLmZyb21fZGV2aWNlKT09LTEpcmV0dXJuIHZvaWQgdChbXSk7dmFyIG49Imh0dHBzOi8vc2hvdy0zLm1lZGlhdi5jb20vcz90eXBlPTEmc2hvd2lkPSIrcltlLmZyb21fZGV2aWNlXVsxXSsiJm9mPTQmdWlkPSIrbCsifSZxaHBpZD0maW1wY3Q9MjAiO3Aobix0KX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIG49WyJqZC5jb20iLCJ0YW9iYW8uY29tIiwic3VuaW5nLmNvbSIsInRtYWxsLmNvbSIsIndlc3QuY24iLCJjaHVhbmdjZC5jbiIsImVkaWFuenUuY29tIiwiYmFvc2h1aWd1b2ppLmNvbSIsIm12bWFsbC5jbiIsImdhcC5jbiIsImpzc3dvcmRzaG9wLmNvbSIsImJ3c2t1LmNvbSIsImd4LmNuIiwic3R3ZmRlLmNvbSIsInF1d2FpZnUuY29tIiwiYW9sYWlnby5jb20iLCJkYW9nb3VtYW8uY24iLCIxNjg4LmNvbSIsImdocy5uZXQiLCJzaGlqaWVndWFuLmNuIiwiZ2RsaXdhbjg4OC5jb20iLCJpenVqaWUuY29tIiwieXhscC1iai5jb20iLCI2Nzhwdy5jbiIsImlsYWh1aS5jb20iLCJnb3V3dWJhbmcuY29tIiwiY3R0eXcuY29tIiwiYW9qaWVzaS5jbiIsInhpYW5nc2hlbmdoYW5nLmNvbSIsIm5iemRwdC5jbiIsIjM2MC5jbiIsInpqY3JlYXRlLmNvbSIsImRseWlqdS5jb20uY24iLCJodWFtdTAxMDEuY29tIiwiZnVzaGlodWEuY24iLCJ3anloLmNvbSIsImZzYW90aW5nLmNuIiwibWl5aW5zdW8uY29tIiwia20xODE4LmNvbSIsInNodWh1YXR5LmNvbSIsInNnZHotcG93ZXIuY29tIiwicHVyY290dG9uLmNvbSIsInltaS5jbiIsInhqdC5jYyIsImxlbmNvbG8uY29tIiwieWl3dWdvdS5jb20iLCIzNjFmZW5xaWdvLmNvbSIsImJlbmdob21lLmNvbSIsImVsZWl0ZXguY29tIiwiamluZ3podW9oYW5nLmNvbSIsInpoYW9qaWFmYW5nLmNvbSIsIm5ueWh3ai5jb20iLCJkdW9kdW8xMjMuY29tIiwia3MtbG9uZy5jb20iLCIyMWtrLmNuIiwic3RhcGxlcy5jbiIsImx5bGp3LmNvbSIsImhvbWVkby5jb20iLCI1OTF5aHcuY29tIiwicWlhbnNoaTM2MC5jb20iLCIzNjUzNTAuY29tIiwiYWZqeTk4OC5jb20iLCJoY2J1eS5jb20iLCJiamZ0c3QuY29tIiwibGFib3JsZXNzLXRmdC5jb20iLCJtYWlnYW5nbGUuY29tIiwiaml1OTF5aS5jb20iLCJlbHN0ZWVsLmNvbS5jbiIsImpuMzYwc28uY24iLCJiZGZkai5jb20iLCJuYW5nd2ouY29tIiwiemhlOTAwLmNvbSIsInFlZ29vLmNuIiwiZmVpc3UuY29tIiwiaGR5ZG9vci5jb20iLCJjbm1laWppbi5jbiIsImp5MDI3LmNvbSIsImNuYnV5ZXJzLmNuIiwicXE1MDEuY29tIiwiYmFvdXBpbi5jb20iLCJqbzM2NS5jbiIsInRhb2RpYW5qaWEuY29tIiwiNTExYm94LmNvbSIsInZoYWxsLmNvbSIsIndpbmU5LmNvbSIsInNhZmUtYmVzdC5jb20iLCJqdWRhemhlLmNvbSIsImhvbmdsaW5namluLmNuIiwiZGFuZ2RhbmcuY29tIiwieW5nOTYwLmNvbSIsIjM2MHNhZmUuY29tIiwiMTBmdXIuY29tIiwidGVhb2suY29tIiwiNTF5aG8uY29tIiwic2hsZWl5aS5jb20iLCJsb29rZmFudGFzdGljLmNvbSIsIndpbmRlbG4uZGUiLCJ3aW5kZWxuLmNvbS5jbiIsInRyaXBpZGkuY29tIiwibXlwcm90ZWluLmNuIiwibW91c2VyLmNuIiwibWlvc2tpbmNhcmUuY29tIiwibG9va2ZhbnRhc3RpYy5jbiIsImloZXJiLmNuIiwiZ3Jvd2dvcmdlb3VzLmNvbSIsImdsb2JhbGJsdWUuY24iLCJnY21hc2lhLmNvbSIsImVzcHJpdC5jbiIsImJhLmRlIiwiNzlnb2xkLmNvbSIsInNhc2EuY29tIiwiam9pbndld29yay5jbiIsInJha3V0ZW4uY29tIiwidGFrZXlhLmNvLmpwIiwic3RyYXdiZXJyeW5ldC5jb20iLCJyb3l5b3VuZ2NoZW1pc3QuY29tLmF1IiwicGhhcm1hY3lvbmxpbmUuY29tLmF1IiwicGhhcm1hY3k0bGVzcy5jb20uYXUiLCJwLWJhbmRhaS5hc2lhIiwiZ2V0dGhlbGFiZWwuY29tIiwiZmVlbHVuaXF1ZS5jb20iLCJiYWJ5aGF2ZW4uY29tIiwiaGt0ZGMuY29tIl07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXtpZighZS5uZXdfZXh0ZW5zaW9uKXJldHVybiExO2Zvcih2YXIgdD1kb2N1bWVudC5kb21haW4saT0wO2k8bi5sZW5ndGg7aSsrKWlmKHQ9PT1uW2ldKXJldHVybiEwO3JldHVybiExfX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dC5leHBvcnRzLmNoZWNraW1nPWZ1bmN0aW9uKHQsbixpLG8pe3ZhciBhPSJ1bmRlZmluZWQiPT10eXBlb2YgaXx8IiI9PWl8fG51bGw9PWk/OTA6aSxyPXQscz1uZXcgSW1hZ2U7ZS5icm93c2VyLm1zaWUmJmUuYnJvd3Nlci52ZXJzaW9uPDExP3Mub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7aWYoImNvbXBsZXRlIj09cy5yZWFkeVN0YXRlfHwibG9hZGVkIj09cy5yZWFkeVN0YXRlKXtpZihzLndpZHRoPjAmJnMuaGVpZ2h0PjApe3ZhciBlPWEvcy53aWR0aDxhL3MuaGVpZ2h0P2Evcy53aWR0aDphL3MuaGVpZ2h0O2U8PTE/KG4uY3NzKCJ3aWR0aCIscy53aWR0aCplKSxuLmNzcygiaGVpZ2h0IixzLmhlaWdodCplKSk6KG4uY3NzKCJ3aWR0aCIscy53aWR0aCksbi5jc3MoImhlaWdodCIscy5oZWlnaHQpKX1uLmF0dHIoInNyYyIsdCl9fTpzLm9ubG9hZD1mdW5jdGlvbigpe2lmKDE9PXMuY29tcGxldGUpe2lmKHMud2lkdGg+MCYmcy5oZWlnaHQ+MCl7dmFyIGU9YS9zLndpZHRoPGEvcy5oZWlnaHQ/YS9zLndpZHRoOmEvcy5oZWlnaHQ7ZTw9MT8obi5jc3MoIndpZHRoIixzLndpZHRoKmUpLG4uY3NzKCJoZWlnaHQiLHMuaGVpZ2h0KmUpKToobi5jc3MoIndpZHRoIixzLndpZHRoKSxuLmNzcygiaGVpZ2h0IixzLmhlaWdodCkpfW4uYXR0cigic3JjIix0KSxvJiZvKCl9fSxzLm9uZXJyb3I9ZnVuY3Rpb24oKXtuLmF0dHIoInNyYyIsZS5zX3NlcnZlcisiL2ltYWdlcy9leHRlbnNpb25zL2RlZmF1bHRfbG9hZF9pbWFnZS5wbmciKS5jc3MoIndpZHRoIiw5MCksbi5hdHRyKCJkYXRhLW9yaWdpbmFsIixlLnNfc2VydmVyKyIvaW1hZ2VzL2V4dGVuc2lvbnMvZGVmYXVsdF9sb2FkX2ltYWdlLnBuZyIpfSxzLnNyYz1yfX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9Int7ZXh0QnJhbmR9fV9pbm5lcl97e3R5cGV9fSIgY2xhc3M9Int7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZSI+XG4gIDxkaXYgY2xhc3M9Int7ZXh0QnJhbmR9fV9pbm5lcl9oZWFkIj5cbiAgICA8YSBjbGFzcz0ic2l0ZV9pY29uIGJkZXh0LWJnIiBocmVmPSJqYXZhc2NyaXB0OiIgPjwvYT5cbiAgICA8c3BhbiBjbGFzcz0iYmlnX3RpdGxlIj5cbiAgICAgICAg5Y6G5Y+y5pyA5L2O5Lu3XG4gICAgPC9zcGFuPlxuICAgIDxzcGFuIGNsYXNzPSJzbWFsbF90aXRsZSI+XG4gICAgICAgIOi/meS6m+WQjOexu+WVhuWTgeWkhOS6juWOhuWPsuacgOS9juS7t1xuICAgIDwvc3Bhbj5cblxuICAgIDxhIGNsYXNzPSJ7e2V4dEJyYW5kfX1faW5uZXJfcGFnZSI+XG4gICAgICA8c3BhbiBjbGFzcz0iY3VyX3BhZ2UiPjE8L3NwYW4+XG4gICAgICA8c3Bhbj4vPC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9InRvdGFsX3BhZ2UiPjE8L3NwYW4+XG4gICAgPC9hPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz0ie3tleHRCcmFuZH19X2lubmVyX2NvbnRlbnQiPlxuICAgIDxhIGNsYXNzPSJpbm5lcl9wYWdlX2xlZnQgdHVybnBhZ2UiPjxlbSBjbGFzcz0iYmRleHQtYmciPjwvZW0+PC9hPlxuICAgIDxkaXYgY2xhc3M9ImlubmVyX3Byb19saXN0IiA+XG4gICAgICA8dWwgY2xhc3M9Int7ZXh0QnJhbmR9fV97e3R5cGV9fV9saXN0Ij5cbiAgICAgIDwvdWw+XG4gICAgPC9kaXY+XG4gICAgPGEgY2xhc3M9ImlubmVyX3BhZ2VfcmlnaHQgdHVybnBhZ2UiPjxlbSBjbGFzcz0iYmRleHQtYmciPjwvZW0+PC9hPlxuICA8L2Rpdj5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAzMThweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkOWQ5ZDk7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgLnt7ZXh0QnJhbmR9fV9qaXV4aWFuIC57e2V4dEJyYW5kfX1faW5uZXJfbG93cHJpY2UsIC57e2V4dEJyYW5kfX1fa2FvbGEgLnt7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZXtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1fd2JpYW8gLnt7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZSB7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2NvbnRlbnQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfaGVhZCB7XG4gICAgICBoZWlnaHQ6IDUycHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuICAgIC5iaWdfdGl0bGUge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgbWFyZ2luLXRvcDogMjFweDtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDUxcHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIGNvbG9yOiAjNDI1NzY2O1xuICAgIH1cbiAgICAuc21hbGxfdGl0bGUge1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgICBjb2xvcjogI2EwYWJiMjtcbiAgICB9XG4gICAgYS57e2V4dEJyYW5kfX1faW5uZXJfcGFnZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMjBweDtcbiAgICAgIHRvcDogMjBweDtcbiAgICAgIGNvbG9yOiAjNDI1NzY2O1xuICAgIH1cbiAgICAgYS57e2V4dEJyYW5kfX1faW5uZXJfcGFnZTpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfaGVhZCAuc2l0ZV9pY29uIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMThweDtcbiAgICAgIGxlZnQ6IDE4cHg7XG4gICAgICBoZWlnaHQ6IDIzcHg7XG4gICAgICB3aWR0aDogMjNweDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAwcHg7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfbG93cHJpY2UgKntcbiAgICAgIGZvbnQtZmFtaWx5OiBcJ01pY3Jvc29mdCBZYWhlaVwnO1xuICAgIH1cbiAgICBhLmlubmVyX3BhZ2VfbGVmdCwuaW5uZXJfcGFnZV9yaWdodCB7XG4gICAgICB3aWR0aDogNTBweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogMTcwcHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIGEuaW5uZXJfcGFnZV9sZWZ0IGVtIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogNTBweDtcbiAgICAgIHdpZHRoOiAzMHB4O1xuICAgICAgbWFyZ2luLXRvcDogODBweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTc3cHggLTEyN3B4O1xuICAgIH1cbiAgICAuaW5uZXJfcGFnZV9yaWdodCBlbSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICB3aWR0aDogMzBweDtcbiAgICAgIG1hcmdpbi10b3A6IDgwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogOHB4O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTExNXB4IC0xMjdweDtcbiAgICB9XG4gICAgLmlubmVyX3Byb19saXN0IHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBoZWlnaHQ6IDI2NHB4O1xuICAgICAgd2lkdGg6IDEwMDBweDtcbiAgICB9XG4gICAgLmlubmVyX3BhZ2VfbGVmdCwgLmlubmVyX3Byb19saXN0IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlIHVsIGxpIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgICBoZWlnaHQ6IDI2NHB4O1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG4gICAgLnt7ZXh0QnJhbmR9fV9pbm5lcl9sb3dwcmljZSB1bCBsaS5saV9maXJzdCB7XG4gICAgICBtYXJnaW4tbGVmdDogMHB4O1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlIHVsIGxpIC5pdGVtX2ltZyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBoZWlnaHQ6IDE3MnB4O1xuICAgICAgd2lkdGg6IDE3MnB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2YxZjFmMTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfbG93cHJpY2UgbGkgaW1nIHtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgbWF4LWhlaWdodDogMTcwcHg7XG4gICAgICBtYXgtd2lkdGg6IDE3MHB4O1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19X2lubmVyX2xvd3ByaWNlIGxpIC5zbWFsbF9kZXNjIGltZyB7XG4gICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICB3aWR0aDogMTZweDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0O1xuICAgIH1cbiAgICAuc21hbGxfZGVzYyAuc2l0ZV9pY29uIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAyMXB4O1xuICAgICAgaGVpZ2h0OiAxOHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC57e2V4dEJyYW5kfX1faW5uZXJfbG93cHJpY2UgbGkgYSBlbXtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMHB4O1xuICAgICAgbGVmdDogMHB4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNDUwMDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgd2lkdGg6IDQycHg7XG4gICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICB9XG4gICAgLmlubmVyX2RwX2Rlc2Mge1xuICAgICAgd2lkdGg6IDE3MHB4O1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICB9XG4gICAgLmlubmVyX2RwX2Rlc2MgLmRwX3RpdGxle1xuICAgICAgY29sb3I6ICM0MjU3NjY7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogMTcwcHg7XG4gICAgICBoZWlnaHQ6IDM2cHg7XG4gICAgICBsaW5lLWhlaWdodDogMThweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuICAgIC5zbWFsbF9kZXNjIHtcbiAgICAgIG1hcmdpbi10b3A6IDZweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIHdpZHRoOiAxNzBweDtcbiAgICAgIGN1cnNvcjogdGV4dDtcbiAgICB9XG4gICAgLnNtYWxsX2Rlc2M6aG92ZXIge1xuICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgIH1cbiAgICAuc21hbGxfZGVzYyAubmV3X3ByaWNlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAjZTUyMjIyO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC5zbWFsbF9kZXNjIC5vbGRfcHJpY2Uge1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICNhMGFiYjI7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbiAgICB9XG4gIDwvc3R5bGU+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0ne3tlYWNoIGRhdGF9fVxuICA8bGkgY2xhc3M9Int7JGluZGV4PT0wP1wnbGlfZmlyc3RcJzpcJ1wnfX0iPlxuICAgIDxhIGNsYXNzPSJpdGVtX2ltZyIgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRpdGxlPSJ7eyR2YWx1ZS50aXRsZX19IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgICA8aW1nIHNyYz0ie3skdmFsdWUuaW1nX3VybH19Ij5cbiAgICAgIHt7aWYgJHZhbHVlLm5ld2Rpc2NvdW50fX1cbiAgICAgICAgPGVtPnt7JHZhbHVlLm5ld2Rpc2NvdW50fX3mipg8L2VtPlxuICAgICAge3svaWZ9fVxuICAgIDwvYT5cbiAgICA8ZGl2IGNsYXNzPSJpbm5lcl9kcF9kZXNjIj5cbiAgICAgIDxhIGNsYXNzPSJkcF90aXRsZSIgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRpdGxlPSJ7eyR2YWx1ZS50aXRsZX19IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgICAgIHt7JHZhbHVlLnRpdGxlfX1cbiAgICAgIDwvYT5cbiAgICAgIDxhIGNsYXNzPSJzbWFsbF9kZXNjIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9Im5ld19wcmljZSI+XG4gICAgICAgICAgICDCpXt7JHZhbHVlLnByaWNlfX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0ib2xkX3ByaWNlIiBzdHlsZT0iZGlzcGxheToge3soJHZhbHVlLmhpZ2hlc3QpP1wnaW5saW5lLWJsb2NrXCc6XCdub25lXCd9fSI+wqV7eyR2YWx1ZS5oaWdoZXN0fX08L3NwYW4+XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG4gIDwvbGk+XG57ey9lYWNofX0nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0iZ3dkX2xvd3ByaV9kZXRhaWwiIGNsYXNzPSJiamQtcHJvZHVjdC1kZXRhaWwge3tpZiBpc1RvcH19IHRvcGRldGFpbCB7ey9pZn19IiBzdHlsZT0id2lkdGg6e3t3aWR0aH19cHg7Ij5cbiAgPHVsIGlkPSJsb3dwcmktaXRlbS1saXN0Ij5cbiAgICB7e2VhY2ggZGF0YX19XG4gICAgICA8bGkgaWQ9Imxvd3ByaS1wcm9kLWl0ZW0te3skaW5kZXh9fSI+XG4gICAgICAgIDxhIGhyZWY9Int7JHZhbHVlLnVybH19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Int7JHZhbHVlLnRpdGxlfX0iIGNsYXNzPSJzbWFsbC1pbWciPlxuICAgICAgICAgIDxpbWcgc3JjPSJ7eyR2YWx1ZS5pbWdfdXJsfX0iPlxuICAgICAgICA8L2E+XG4gICAgICAgICA8ZGl2IGNsYXNzPSJzYWxlLXByaS1pbmZvIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJzYWxlLXByaS1ib3giPlxuICAgICAgICAgICAgPGltZyBzcmM9Int7c19zZXJ2ZXJ9fS9pbWFnZXMvZmF2aWNvbi97eyR2YWx1ZS5zaXRlX2lkfX0uaWNvIiBjbGFzcz0ic2l0ZV9pY29uX2ltZyI+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2FsZS1kZXNjIGJsa2NvbG9yMyI+5Yiw5omL5Lu3OiA8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2FsZS1wcmljZSBwcmlmb250ZiI+IMKle3skdmFsdWUucHJpY2V9fTwvc3Bhbj5cbiAgICAgICAgICAgIFxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICBcbiAgICAgICAgIDwvZGl2PlxuICAgICAgICAgPHNwYW4gY2xhc3M9Im9yaWctcHJpLWluZm8iPlxuICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IzIHByaWZvbnRmIj7pobXpnaLku7c6IMKle3skdmFsdWUubGFzdF9wcmljZX19PC9zcGFuPlxuICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgPHNwYW4gY2xhc3M9Imxvd3ByaS1wcm9tbyBibGtjb2xvcjQiPnt7IyR2YWx1ZS5wcm9tbzJ9fTwvc3Bhbj5cbiAgICAgICAgIDxhIGNsYXNzPSJsb3dwcmktdGxlIGJsa2NvbG9yMSIgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRpdGxlPSJ7eyR2YWx1ZS50aXRsZX19IiB0YXJnZXQ9Il9ibGFuayI+e3skdmFsdWUudGl0bGV9fTwvYT5cbiAgICAgIDwvbGk+XG4gICAge3svZWFjaH19XG4gIDwvdWw+XG4gIHt7aWYgIWFsaXNpdGV9fVxuICA8YSBocmVmPSJ7e2xvd1VybH19IiBpZD0ibG93cHJpX21vcmVsaW5rIiBjbGFzcz0iYmxrY29sb3I0IiB0YXJnZXQ9Il9ibGFuayI+5p+l55yL5YWo6YOoIDxlbSBjbGFzcz0ibG93cHJpX21vcmVsaW5rX2VtIj4+PC9lbT48L2E+XG4gIHt7L2lmfX1cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAuYmpkLXByb2R1Y3QtZGV0YWlsIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBtYXgtd2lkdGg6IDY5OHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIHotaW5kZXg6IDk5OTk5OTk5OTtcbiAgICAgIHRvcDogMzZweDtcbiAgICB9XG4gICAgLmJqZC1wcm9kdWN0LWRldGFpbC50b3BkZXRhaWwge1xuICAgICAgYm94LXNoYWRvdzogMCA1cHggMTBweCAwIHJnYmEoMjIsMjQsMjYsMC4xNSk7XG4gICAgfVxuICAgICNnd2RfbG93cHJpX2RldGFpbCB7XG4gICAgICBoZWlnaHQ6IDI2OHB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VkZjFmMjtcbiAgICB9XG4gICAgLmxvd3ByaV9pY29ue1xuICAgICAgbWFyZ2luLXJpZ2h0OiAzcHg7XG4gICAgfVxuICAgIC5sb3dwcmlfaWNvbiBpbWcge1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBtYXJnaW4tdG9wOiAtNHB4O1xuICAgIH1cbiAgICAjZ3dkX2xvd3ByaSAubG93cHJpX2ljb257XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogMjJweDtcbiAgICAgIHdpZHRoOiAyMnB4O1xuICAgICAgbWFyZ2luLXRvcDogNnB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMThweCAtMTlweDtcbiAgICB9XG4gICAgXG4gICAgI2d3ZF9sb3dwcmlfZGV0YWlsIC5sb3dwcmlfZGVzYyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIGhlaWdodDogMTVweDtcbiAgICAgICAgd2lkdGg6IDQ1cHg7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiA3N3B4O1xuICAgICAgICBsZWZ0OiA5M3B4O1xuICAgICAgfVxuICAgICAgI2xvd3ByaS1pdGVtLWxpc3Qge1xuICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgIH1cbiAgICAgICNsb3dwcmktaXRlbS1saXN0IGxpIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBtYXJnaW46IDBweDtcbiAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgIH1cbiAgICAgICNsb3dwcmktaXRlbS1saXN0IGxpI2xvd3ByaS1wcm9kLWl0ZW0tMCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNHB4O1xuICAgICAgfVxuICAgICAgI2xvd3ByaS1pdGVtLWxpc3QgbGkjbG93cHJpLXByb2QtaXRlbS0yLCNsb3dwcmktaXRlbS1saXN0IGxpOmxhc3QtY2hpbGQge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDE0cHg7XG4gICAgICB9XG4gICAgICAjZ3dkX2xvd3ByaV9kZXRhaWwgI2xvd3ByaS1pdGVtLWxpc3QgLmxhdGVzdENyZWF0ZSB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQwcHggLTExM3B4OztcbiAgICAgIH1cbiAgICAgICNnd2RfbG93cHJpX2RldGFpbCAjbG93cHJpLWl0ZW0tbGlzdCAuaGlnaGVzdF9kaXNjb3VudCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTQwcHggLTE0cHg7XG4gICAgICB9XG4gICAgICAjbG93cHJpX21vcmVsaW5rIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgIGJvdHRvbTogOHB4O1xuICAgICAgICByaWdodDogMTRweDtcbiAgICAgIH1cbiAgICAgICNsb3dwcmlfbW9yZWxpbms6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzVlYmVmZjtcbiAgICAgIH1cbiAgICAgICNsb3dwcmlfbW9yZWxpbmsgLmxvd3ByaV9tb3JlbGlua19lbSB7XG4gICAgICAgIGZsb2F0OiBub25lO1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICB9XG4gICAgICAuc2FsZS1wcmktYm94IHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgfVxuICAgICAgLnNhbGUtcHJpLWJveD4qIHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB9XG4gICAgICAuc2l0ZV9pY29uX2ltZyB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogNHB4O1xuICAgICAgfVxuICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDIyKSxhPW4oMTA3KSxyPW4oOTMpLHM9ZnVuY3Rpb24odCl7aWYodCYmMCE9PXQuYWQubGVuZ3RoKXt2YXIgbj1lKCI8bGk+PC9saT4iKTtlKG4pLmFwcGVuZChvLmNvbXBpbGUoYSkoe3Byb2R1Y3Q6dC5hZFswXX0pKSxlKCIjZ3dkX2xvd3ByaV9kZXRhaWwgI2xvd3ByaS1pdGVtLWxpc3QiKS5hcHBlbmQoZShuKSl9fSxsPWZ1bmN0aW9uKHQpe2lmKHQmJjAhPT10LnByb21vLmxlbmd0aCl7dmFyIG49dC5wcm9tb1swXSxvPSc8bGkgY2xhc3M9ImxpXzAiID48c3BhbiBjbGFzcz0icHJvbW9fYWRfc3BhbiI+54Ot5Y2WPC9zcGFuPiA8YSBjbGFzcz0icHJvbW9fYWRfYSIgaHJlZj0iJytuLnVybCsnIiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Iicrbi50aXRsZSsnIj4nK24udGl0bGUrIjwvYT48L2xpPiIsYT1lKCIucHJvbW9fYm94X2xlZnQgdWwiKSxyPWUoIi5wcm9tb19ib3hfbGVmdCB1bCBsaVtkYXRhLXR5cGVdIikscz1yLmxlbmd0aDswPT09cz8oYS5wcmVwZW5kKGUobykpLGUoIiMiK2kuZXh0QnJhbmQrIl9wcm9tb19ib3giKS5zaG93KCksZSgiIyIraS53aXNoZG9tMikuYWRkQ2xhc3MoIm9uZWxpbmUiKSk6ci5hZnRlcihlKG8pKTtmb3IodmFyIGw9YS5maW5kKCJsaSIpLGM9MDtjPmwubGVuZ3RoO2MrKylsLmVxKGMpLmF0dHIoImNsYXNzIiwibGlfIitjKX19O3QuZXhwb3J0cy5yZW5kZXJMb3dlc3RBZD1mdW5jdGlvbih0LGUpe3IuaW5pdCh7a2V5d29yZDplLGNsYXNzX2lkOnR9LHMpfSx0LmV4cG9ydHMucmVuZGVyV2lzaGxpc3RBZD1mdW5jdGlvbih0LGUpe3IuaW5pdCh7a2V5d29yZDplLGNsYXNzX2lkOnR9LGwpfX0pLmNhbGwoZSxuKDQpLG4oMSkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nXG4gIDxkaXYgaWQ9InByb2R1Y3RfYWRfaXRlbSI+XG4gICAgPGEgY2xhc3M9ImFkX2l0ZW1faW1nIiBocmVmPSJ7e3Byb2R1Y3QudXJsfX0iIHRhcmdldD0iX2JsYW5rIj5cbiAgICAgIDxpbWcgc3JjPSJ7e3Byb2R1Y3QuaW1nfX0iPlxuICAgIDwvYT5cbiAgICA8c3BhbiBjbGFzcz0iYWRfcHJpY2VpbmZvIj5cbiAgICAgIDxzcGFuIGNsYXNzPSJub3dfcHJpY2UiPsKlIHt7cHJvZHVjdC5kcF9wcmljZX19PC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9Im9sZF9wcmljZSI+wqUge3twcm9kdWN0Lm9yaV9wcmljZX19PC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgICA8YSBocmVmPSJ7e3Byb2R1Y3QudXJsfX0iIGNsYXNzPSJhZF90bGUiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0ie3twcm9kdWN0LnRpdGxlfX0iPnt7cHJvZHVjdC50aXRsZX19PC9hPlxuICAgIDxhIGhyZWY9Int7cHJvZHVjdC5zdG9yZV91cmx9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJhZF9zaG9wX25hbWUiPnt7aWYgcHJvZHVjdC5wbGF0Zm9ybX19IHt7cHJvZHVjdC5wbGF0Zm9ybSArICLvvJoifX0ge3svaWZ9fXt7cHJvZHVjdC5zdG9yZV9uYW1lfX08L2E+XG4gICAgPHNwYW4gY2xhc3M9Im90aGVyX2Rlc2MiPlxuICAgICAgPHNwYW4gY2xhc3M9ImFkX2Rpc2NvdW50Ij57e3Byb2R1Y3QuZGlzY291bnR9feaKmDwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJhZF9mb3JlaWdoIj57e3Byb2R1Y3QuZnJlaWdodHRsZX19PC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz0idHVpZ3VhbmdfbGluayIgPuaOqOW5vzwvc3Bhbj5cbiAgPC9kaXY+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgI3Byb2R1Y3RfYWRfaXRlbSB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gICAgI3Byb2R1Y3RfYWRfaXRlbSA+ICogLCAjcHJvZHVjdF9hZF9pdGVtIC5hZF9pdGVtX2ltZ3tcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICAuYWRfaXRlbV9pbWcge1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICB3aWR0aDogMTgwcHg7XG4gICAgICBoZWlnaHQ6IDkwcHg7XG5cbiAgICB9XG4gICAgI3Byb2R1Y3RfYWRfaXRlbSAuYWRfcHJpY2VpbmZvIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAyMnB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIG1hcmdpbi10b3A6IDNweDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICAjcHJvZHVjdF9hZF9pdGVtIC5hZF90bGV7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICBkaXYjcHJvZHVjdF9hZF9pdGVtIC5hZF9zaG9wX25hbWUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG4gICAgI3Byb2R1Y3RfYWRfaXRlbSAuYWRfcHJpY2VpbmZvIC5ub3dfcHJpY2Uge1xuICAgICAgY29sb3I6ICNFNTI2MDA7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuICAgICNwcm9kdWN0X2FkX2l0ZW0gLmFkX3ByaWNlaW5mbyAub2xkX3ByaWNlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjOTk5O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XG4gICAgfVxuICAgICNwcm9kdWN0X2FkX2l0ZW0gLm90aGVyX2Rlc2Mge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwcHg7XG4gICAgICBsZWZ0OiAwcHg7XG4gICAgfVxuICAgICNwcm9kdWN0X2FkX2l0ZW0gLmFkX2Rpc2NvdW50IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFNTI2MDA7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgIH1cbiAgICAjcHJvZHVjdF9hZF9pdGVtIC5hZF9mb3JlaWdoIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjRTUyNjAwO1xuICAgICAgY29sb3I6ICNFNTI2MDA7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gICAgfVxuICAgIGRpdiNwcm9kdWN0X2FkX2l0ZW0gc3Bhbi50dWlndWFuZ19saW5rIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGNvbG9yOiAjYmJiO1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICAgIHRvcDogMHB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbiAgPC9zdHlsZT5cbid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG8sYSxyLHM9bigyMiksbD1uKDEzKSxjPWZ1bmN0aW9uKHQpe3ZhciBpPXZvaWQgMCxvPWwuZ2V0KCJvdGhlcl9pbmZvIik7aWYodC5sZW5ndGg+PTE1KXQ9dC5zbGljZSgwLDE1KSxpPSJodHRwczovL3d3dy5nd2RhbmcuY29tL2RwIitvLm5vdy5kcF9pZCsiL3doZXJlX2J1eS8/ZnJvbT1icm93c2VyJmNyYzY0PTEmbT1iMmMjdGFicyI7ZWxzZXt2YXIgYz1wYXJzZUludCh0Lmxlbmd0aC8zKTt0PXQuc2xpY2UoMCwzKmMpfWE9TWF0aC5jZWlsKHQubGVuZ3RoLzMpLHI9MSxtKCLllYbln47nm7jkvLzmrL4iLCJtaW5pLWIyYy1jb20iKTt2YXIgcD1uKDEwOSksZD1zLmNvbXBpbGUocCkoe2RhdGE6dCx0b3RhbFBhZ2VzOmEsbGlua0FsbDppfSk7ZSgiI2d3ZF9taW5pX2NvbXBhcmUiKS5hcHBlbmQoZCksdSgiI2d3ZF9taW5pX2NvbXBhcmUgdWwiKX0scD12b2lkIDAsZD12b2lkIDAsaD1mdW5jdGlvbih0LG4pe3A9ITA7dmFyIGk9TnVtYmVyKG4uY3NzKCJsZWZ0IikucmVwbGFjZSgicHgiLCIiKSk7aWYoIi0xIj09PXQpci0tLDE9PT1yJiZlKCIubWluaS1jb20tZm9vdCAubWluaS1jb20tdGxlZnQiKS5oaWRlKCksZHx8KGQ9ITAsZSgiLmxpbmtBbGwiKS5oaWRlKCksZSgiLm1pbmktY29tLXRyaWdodCIpLnNob3coKSksbi5hbmltYXRlKHtsZWZ0OmkrNDUwKyJweCJ9LDUwMCxmdW5jdGlvbigpe3A9ITF9KTtlbHNlIGlmKCIxIj09PXQpe2lmKHI9PT1hKXJldHVybiB2b2lkKHA9ITEpO3IrKyxyPT09YSYmKGUoIi5saW5rQWxsIikuc2hvdygpLGQ9ITEsZSgiLm1pbmktY29tLXRyaWdodCIpLmhpZGUoKSksMj09PXImJmUoIi5taW5pLWNvbS1mb290IC5taW5pLWNvbS10bGVmdCIpLnNob3coKSxuLmFuaW1hdGUoe2xlZnQ6aS00NTArInB4In0sNTAwLGZ1bmN0aW9uKCl7cD0hMX0pfX0sdT1mdW5jdGlvbih0KXt2YXIgbj1lKHQpO2UoIi5taW5pLWNvbS1mb290Iikub24oImNsaWNrIixmdW5jdGlvbih0KXt2YXIgaT1lKHQudGFyZ2V0KS5hdHRyKCJkYXRhLXR5cGUiKTtwfHwiQSI9PT10LnRhcmdldC5ub2RlTmFtZXx8aChpLG4pfSksZSgiI2d3ZF9taW5pX2NvbXBhcmUiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtlKCIubWluaS1jb21wYXJlLWRldGFpbCIpLnNob3coKX0pLGUoIiNnd2RfbWluaV9jb21wYXJlIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7ZSgiLm1pbmktY29tcGFyZS1kZXRhaWwiKS5oaWRlKCl9KX0sbT1mdW5jdGlvbih0LG4pe3ZhciBpPSc8ZGl2IGNsYXNzPSJtaW5pYmFyLWJ0bi1ib3giPlxuICAgICAgICA8ZW0gY2xhc3M9InNldHRpbmctYmcgbWluaS1jb21wYXJlLWljb24iPjwvZW0+XG4gICAgICAgIDxzcGFuID4nK3QrIjwvc3Bhbj5cbiAgICAgIDwvZGl2PiI7ZSgiI2d3ZF9taW5pX2NvbXBhcmUiKS5hcHBlbmQoZShpKSkuc2hvdygpLmFkZENsYXNzKG4pfSxmPWZ1bmN0aW9uKHQsaSl7YT1NYXRoLmNlaWwodC5sZW5ndGgvMykscj0xLG0oIuWQjOexu+WOhuWPsuS9juS7tyIsIm1pbmktbG93ZXN0Iik7dmFyIG89bigxMTApLGw9cy5jb21waWxlKG8pKHtkYXRhOnQsbGlua0FsbDppLHRvdGFsUGFnZXM6YSx1bFdpZHRoOjE1MCp0Lmxlbmd0aH0pO2UoIiNnd2RfbWluaV9jb21wYXJlIikuYXBwZW5kKGwpLHUoIiNtaW5pX2xvd2VzdF91bCIpfSxnPTAsdz1mdW5jdGlvbigpe2lmKGcrKywyPT09Zyl7dmFyIHQ9Im5vLWNvbS1pbmZvIixuPSc8ZGl2IGNsYXNzPSJtaW5pYmFyLWJ0bi1ib3giPlxuICAgICAgICA8ZW0gY2xhc3M9InNldHRpbmctYmcgbWluaS1jb21wYXJlLWljb24gIj48L2VtPlxuICAgICAgICA8c3BhbiA+5pqC5peg5ZWG5Z+O5q+U5Lu3PC9zcGFuPlxuICAgICAgPC9kaXY+JztlKCIjZ3dkX21pbmlfY29tcGFyZSIpLmFwcGVuZChlKG4pKS5zaG93KCkuYWRkQ2xhc3ModCl9fSx4PWZ1bmN0aW9uKHQpe3ZhciBlPWwuZ2V0KCJvdGhlcl9pbmZvIiksbj1lbmNvZGVVUklDb21wb25lbnQoZS5ub3cuY29yZXdvcmR8fCIiKSxpPWVbImNvZGUtc2VydmVyIl0uY2xhc3NfaWR8fCIwMDAwMDAwMCI7aT1pLnRyaW0oKTt2YXIgYT12b2lkIDA7aWYodCl7aWYodC5sZW5ndGg+PTE1KXQ9dC5zbGljZSgwLDE1KSxhPSJodHRwczovL3d3dy5nd2RhbmcuY29tL3Byb21vdGlvbi9wcmljZT9rZXl3b3JkPSIrbisiJmV4dD0xJmNsYXNzX2lkPSIraTtlbHNle3ZhciByPXBhcnNlSW50KHQubGVuZ3RoLzMpO3Q9dC5zbGljZSgwLDMqcil9Zih0LGEpLG89ITB9ZWxzZSB3KCl9LGI9dm9pZCAwLF89dm9pZCAwO3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKHQsYSl7b3x8aS5hbGlTaXRlfHwoImIyYyI9PT10PyhiPSEwLGE/IShhLmIyYyBpbnN0YW5jZW9mIEFycmF5KSYmKGEuYjJjLnByb2R1Y3R8fGEuYjJjLnN0b3JlKSYmYS5iMmMuc3RvcmUubGVuZ3RoPjA/KG4oMTExKS5yZW5kZXJNaW5pQ29tKGEpLG89ITApOiEoYS5iMmNfZnV6enkgaW5zdGFuY2VvZiBBcnJheSkmJmEuYjJjX2Z1enp5LnByb2R1Y3QubGVuZ3RoPjImJk51bWJlcihhLmIyY19mdXp6eS5taW5fcHJpY2UpPyhjKGEuYjJjX2Z1enp5LnByb2R1Y3QpLG89ITApOl8/KHcoKSxlKGRvY3VtZW50KS50cmlnZ2VyKCJsb3dlc3RyZWFkeSIpKTp3KCk6dygpKToibG93ZXN0Ij09PXQmJihfPSEwLGE/Yj94KGEpOmUoZG9jdW1lbnQpLm9uKCJsb3dlc3RyZWFkeSIsZnVuY3Rpb24oKXt4KGEpfSk6dygpKSl9fSkuY2FsbChlLG4oNCksbigxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJtaW5pLWNvbXBhcmUtZGV0YWlsIj5cbiAgPGRpdiBjbGFzcz0ibWluaS1jb20tYm94Ij5cbiAgICA8dWw+XG4gICAge3tlYWNoIGRhdGF9fVxuICAgICAgPGxpIGNsYXNzPSJtaW5pLWIyYy1saXN0Ij5cbiAgICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0ibWluaS1iaWdpbWciPlxuICAgICAgICAgIDxpbWcgc3JjPSJ7eyR2YWx1ZS5pbWdfdXJsMn19Ij5cbiAgICAgICAgPC9hPlxuICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJtaW5pLXRsZSIgdGl0bGU9Int7JHZhbHVlLnRpdGxlfX0iPlxuICAgICAgICAgIHt7JHZhbHVlLnRpdGxlfX1cbiAgICAgICAgPC9hPlxuICAgICAgICA8ZGl2IGNsYXNzPSJvdC1pbmZvLWJveCI+XG4gICAgICAgICAgPHNwYW4+XG4gICAgICAgICAgICA8aW1nIHNyYz0ie3skdmFsdWUuaWNvbl91cmx9fSI+XG4gICAgICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJtaW5pLXNpdGUtbmFtZSI+e3skdmFsdWUuc2l0ZV9uYW1lfX08L2E+XG4gICAgICAgICAgPC9zcGFuPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHNwYW4gY2xhc3M9Im1pbmktcHJpY2UgcHJpZm9udGYiPsKle3skdmFsdWUucHJpY2V9fTwvc3Bhbj5cbiAgICAgIDwvbGk+XG4gICAge3svZWFjaH19XG4gIDwvdWw+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJtaW5pLWNvbS1mb290Ij4gXG4gICAgPHNwYW4gY2xhc3M9Im1pbmktY29tLXR1cm5idG4gbWluaS1jb20tdGxlZnQiIGRhdGEtdHlwZT0iLTEiPjwg5LiK5LiA6aG1PC9zcGFuPlxuICAgIHt7aWYgdG90YWxQYWdlcyA+IDF9fVxuICAgIDxzcGFuIGNsYXNzPSJtaW5pLWNvbS10dXJuYnRuIG1pbmktY29tLXRyaWdodCIgZGF0YS10eXBlPSIxIj7kuIvkuIDpobUgPjwvc3Bhbj5cbiAgICB7ey9pZn19XG4gICAge3tpZiBsaW5rQWxsfX1cbiAgICA8YSBocmVmPSJ7e2xpbmtBbGx9fSIgY2xhc3M9ImxpbmtBbGwiIHRhcmdldD0iX2JsYW5rIj7mn6XnnIvlhajpg6g8L2E+XG4gICAge3svaWZ9fVxuICA8L2Rpdj5cbiAgXG4gICAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAubWluaS1jb21wYXJlLWRldGFpbCB7XG4gICAgICBoZWlnaHQ6IDI4NHB4O1xuICAgICAgd2lkdGg6IDQ2MHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMzZweDtcbiAgICAgIGxlZnQ6IC0xcHg7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI0U2RTlFQjtcbiAgICB9XG4gICAgLm1pbmktY29tLWJveCB1bDphZnRlciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgICAgY29udGVudDogIiI7XG4gICAgfVxuICAgIC5taW5pLWNvbS1ib3gge1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgIGhlaWdodDogMjQ3cHg7XG4gICAgICB3aWR0aDogNDYwcHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAubWluaS1jb20tYm94IHVsIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGhlaWdodDogMjQ3cHg7XG4gICAgICBsZWZ0OiAwcHg7XG4gICAgICBwYWRkaW5nOiAwcHg7XG4gICAgICBtYXJnaW46IDBweDtcbiAgICB9XG4gICAgLm1pbmktY29tcGFyZS1kZXRhaWwgLm1pbmktYjJjLWxpc3Qge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgIHdpZHRoOiAxNDBweDtcbiAgICAgIGhlaWdodDogMjQ3cHg7XG4gICAgICBjbGVhcjogbm9uZTtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICAgIC5taW5pLWJpZ2ltZyB7XG4gICAgICB3aWR0aDogMTQwcHg7XG4gICAgICBoZWlnaHQ6IDE0MHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBsaW5lLWhlaWdodDogMTQwcHg7XG4gICAgfVxuICAgIC5taW5pLWJpZ2ltZyBpbWcge1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgfVxuICAgIC5vdC1pbmZvLWJveCB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTZweCFpbXBvcnRhbnQ7XG4gICAgICBsaW5lLWhlaWdodDogMTZweCFpbXBvcnRhbnQ7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIC5vdC1pbmZvLWJveD5zcGFuIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICBmbG9hdDogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5vdC1pbmZvLWJveD5zcGFuOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICIiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gICAgLm90LWluZm8tYm94PnNwYW4gKiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgLm90LWluZm8tYm94PnNwYW4gaW1nIHtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIHdpZHRoOiAxNnB4O1xuICAgIH1cbiAgICAub3QtaW5mby1ib3g+c3BhbiBhIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2cHg7XG4gICAgICBsaW5lLWhlaWdodDogMTZweCFpbXBvcnRhbnQ7XG4gICAgICBoZWlnaHQ6IDE2cHghaW1wb3J0YW50O1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgbWF4LXdpZHRoOiAxMTRweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lIWltcG9ydGFudDtcbiAgICB9XG4gICAgLm1pbmktY29tcGFyZS1kZXRhaWwgLm1pbmktdGxlIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICAgIHdpZHRoOiAxMzZweDtcbiAgICAgIGhlaWdodDogMzJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICM1QzYyNjY7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICAubWluaS1wcmljZSB7XG4gICAgICBmbG9hdDogbGVmdCFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4IWltcG9ydGFudDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxOXB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE5cHghaW1wb3J0YW50O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNFNDM5M0M7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgLm1pbmktY29tLWZvb3Qge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDI2cHg7XG4gICAgfVxuICAgIC5taW5pLWNvbS1mb290IC5taW5pLWNvbS10dXJuYnRuIHtcbiAgICAgIGNvbG9yOiAjOTk5O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgICBib3R0b206IDhweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLm1pbmktY29tLWZvb3QgLmxpbmtBbGwge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgYm90dG9tOiA4cHg7XG4gICAgICByaWdodDogMTBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgY29sb3I6ICM5OTk7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAubWluaS1jb20tZm9vdCAubWluaS1jb20tdHVybmJ0bjpob3ZlciwubWluaS10bGU6aG92ZXIsLm1pbmktY29tLWZvb3QgLmxpbmtBbGw6aG92ZXIsIC5taW5pLXNpdGUtbmFtZTpob3ZlciB7XG4gICAgICBjb2xvcjogIzQ4QkVGRiFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5taW5pLWNvbS10bGVmdCB7XG4gICAgICBsZWZ0OiAxMHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLm1pbmktY29tLXRyaWdodCB7XG4gICAgICByaWdodDogMTBweDtcbiAgICB9XG4gIDwvc3R5bGU+XG48L2Rpdj5cbid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJtaW5pLWNvbXBhcmUtZGV0YWlsIj5cbiAgPGRpdiBjbGFzcz0ibWluaS1jb20tYm94Ij5cbiAgICAgIDx1bCBpZD0ibWluaV9sb3dlc3RfdWwiIHN0eWxlPSJ3aWR0aDp7e3VsV2lkdGh9fXB4Ij5cbiAgICAgIHt7ZWFjaCBkYXRhfX1cbiAgICAgICAgPGxpIGNsYXNzPSJtaW5pLWxvd2VzdC1saXN0Ij5cbiAgICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJtaW5pLWJpZ2ltZyI+XG4gICAgICAgICAgICA8aW1nIHNyYz0ie3skdmFsdWUuaW1nX3VybH19Ij5cbiAgICAgICAgICAgIHt7aWYgJHZhbHVlLnByb21vfX1cbiAgICAgICAgICAgIDxzcGFuPnt7JHZhbHVlLnByb21vfX08L3NwYW4+XG4gICAgICAgICAgICB7ey9pZn19XG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxhIGhyZWY9Int7JHZhbHVlLnVybH19IiB0YXJnZXQ9Il9ibGFuayIgY2xhc3M9Im1pbmktdGxlIiB0aXRsZT0ie3skdmFsdWUudGl0bGV9fSI+XG4gICAgICAgICAgICB7eyR2YWx1ZS50aXRsZX19XG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxhIGNsYXNzPSJtaW5pLWxvdy1vdGhlciIgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRhcmdldD0iX2JsYW5rIj5cbiAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZmF2aWNvbi97eyR2YWx1ZS5zaXRlX2lkfX0uaWNvIj5cbiAgICAgICAgICAgICAgPHNwYW4+e3skdmFsdWUuc2l0ZV9uYW1lfX08L3NwYW4+XG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJtaW1pLXBhZ2UtcHJpY2UgIj7pobXpnaLku7fvvJo8c3BhbiBjbGFzcz0icHJpZm9udGYiPsKle3skdmFsdWUubGFzdF9wcmljZX19PC9zcGFuPjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWluaS1wcmljZSI+PHNwYW4+5Yiw5omL5Lu377yaPC9zcGFuPjxzdHJvbmcgY2xhc3M9InByaWZvbnRmIj7CpXt7JHZhbHVlLnByaWNlfX08L3N0cm9uZz48L3NwYW4+XG4gICAgICAgIDwvbGk+XG4gICAgICB7ey9lYWNofX1cbiAgICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgICAgIC5taW5pLWNvbXBhcmUtZGV0YWlsIHtcbiAgICAgICAgICBoZWlnaHQ6IDI4NHB4O1xuICAgICAgICAgIHdpZHRoOiA0NjBweDtcbiAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICB0b3A6IDM2cHg7XG4gICAgICAgICAgbGVmdDogLTFweDtcbiAgICAgICAgICB6LWluZGV4OiA5OTk5OTk5OTtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0U2RTlFQjtcbiAgICAgICAgfVxuICAgICAgICAubWluaS1jb20tYm94IHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICAgIGhlaWdodDogMjQ3cHg7XG4gICAgICAgICAgd2lkdGg6IDQ2MHB4O1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB9XG4gICAgICAgICNtaW5pX2xvd2VzdF91bDphZnRlciB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgY2xlYXI6IGJvdGg7XG4gICAgICAgICAgY29udGVudDogIiI7XG4gICAgICAgIH1cbiAgICAgICAgI21pbmlfbG93ZXN0X3VsIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICAgIGhlaWdodDogMjQ3cHg7XG4gICAgICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgICB9XG4gICAgICAgICNtaW5pX2xvd2VzdF91bCAubWluaS1sb3dlc3QtbGlzdCB7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICAgICAgd2lkdGg6IDE0MHB4O1xuICAgICAgICAgIGhlaWdodDogMjQ3cHg7XG4gICAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgICBjbGVhcjogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICAjbWluaV9sb3dlc3RfdWwgLm1pbmktYmlnaW1nIHtcbiAgICAgICAgICB3aWR0aDogMTQwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAxNDBweDtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgI21pbmlfbG93ZXN0X3VsIC5taW5pLWJpZ2ltZyBpbWcge1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgICB9XG4gICAgICAgICNtaW5pX2xvd2VzdF91bCAubWluaS1iaWdpbWcgc3BhbiB7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIGJvdHRvbTogMHB4O1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB3aWR0aDogMTM1cHg7XG4gICAgICAgICAgei1pbmRleDogOTk7XG4gICAgICAgICAgbWF4LWhlaWdodDogMzZweDtcbiAgICAgICAgICBsZWZ0OiAwcHg7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDE4cHghaW1wb3J0YW50O1xuICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMTcsNTEsNzUsIC42KTtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICNtaW5pX2xvd2VzdF91bCAubWluaS10bGUge1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgICAgd2lkdGg6IDEzNnB4O1xuICAgICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICAgICAgY29sb3I6ICM2NjY2NjY7XG4gICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICAgICAgfVxuICAgICAgICAjbWluaV9sb3dlc3RfdWwgLm1pbWktcGFnZS1wcmljZSB7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIGNvbG9yOiAjOTk5O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDE2cHghaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgICAgICNtaW5pX2xvd2VzdF91bCAubWluaS1sb3ctb3RoZXIge1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGhlaWdodDogMTRweDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgICNtaW5pX2xvd2VzdF91bCAubWluaS1sb3ctb3RoZXIgKiB7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIH1cbiAgICAgICAgI21pbmlfbG93ZXN0X3VsIC5taW5pLWxvdy1vdGhlciBpbWcge1xuICAgICAgICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICAgICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICAgIH1cbiAgICAgICAgI21pbmlfbG93ZXN0X3VsIC5taW5pLWxvdy1vdGhlciBzcGFuIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTRweCFpbXBvcnRhbnQ7XG4gICAgICAgICAgY29sb3I6ICM2NjY7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICB9XG4gICAgICAgICNtaW5pX2xvd2VzdF91bCAubWluaS1wcmljZSB7XG4gICAgICAgICAgZmxvYXQ6IGxlZnQhaW1wb3J0YW50O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDZweCFpbXBvcnRhbnQ7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4IWltcG9ydGFudDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBjb2xvcjogI0U0MzkzQztcbiAgICAgICAgfVxuICAgICAgICAjbWluaV9sb3dlc3RfdWwgLm1pbmktcHJpY2Ugc3Ryb25nIHtcbiAgICAgICAgICBmb250LXNpemU6IDE0cHghaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgICAgIC5taW5pLWNvbS1mb290IHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICBoZWlnaHQ6IDI2cHg7XG4gICAgICAgIH1cbiAgICAgICAgLm1pbmktY29tLWZvb3QgLm1pbmktY29tLXR1cm5idG4ge1xuICAgICAgICAgIGNvbG9yOiAjOTk5O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgICAgICAgYm90dG9tOiA4cHg7XG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICB9XG4gICAgICAgIC5taW5pLWNvbS1mb290IC5saW5rQWxsIHtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgYm90dG9tOiA4cHg7XG4gICAgICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgICAgIGNvbG9yOiAjOTk5O1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICAgICAgLm1pbmktY29tLWZvb3QgLm1pbmktY29tLXR1cm5idG46aG92ZXIsLm1pbmktdGxlOmhvdmVyLC5taW5pLWNvbS1mb290IC5saW5rQWxsOmhvdmVyLCAubWluaS1sb3ctb3RoZXIgc3Bhbjpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICM0OEJFRkYhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgICAgIC5taW5pLWNvbS10bGVmdCB7XG4gICAgICAgICAgbGVmdDogMTBweDtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgICAgIC5taW5pLWNvbS10cmlnaHQge1xuICAgICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICB9XG4gICAgICA8L3N0eWxlPlxuICAgIDwvdWw+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJtaW5pLWNvbS1mb290Ij4gXG4gICAgICA8c3BhbiBjbGFzcz0ibWluaS1jb20tdHVybmJ0biBtaW5pLWNvbS10bGVmdCIgZGF0YS10eXBlPSItMSI+PCDkuIrkuIDpobU8L3NwYW4+XG4gICAgICB7e2lmIHRvdGFsUGFnZXMgPiAxfX1cbiAgICAgIDxzcGFuIGNsYXNzPSJtaW5pLWNvbS10dXJuYnRuIG1pbmktY29tLXRyaWdodCIgZGF0YS10eXBlPSIxIj7kuIvkuIDpobUgPjwvc3Bhbj5cbiAgICAgIHt7L2lmfX1cbiAgICAgIHt7aWYgbGlua0FsbH19XG4gICAgPGEgaHJlZj0ie3tsaW5rQWxsfX0iIGNsYXNzPSJsaW5rQWxsIiB0YXJnZXQ9Il9ibGFuayI+5p+l55yL5YWo6YOoPC9hPlxuICAgIHt7L2lmfX1cbiAgICA8L2Rpdj5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDEzKSxyPW4oMTIpLHM9e3ZtYWxsOlsiLnByb2R1Y3QtaW5mbyAucHJvZHVjdC1pbmZvLWxpc3QiLCIucHJvLXJpZ2h0IC5wcm8tbWV0YS1hcmVhIiwiLnByby1wcmljZSJdLHlvdWdvdTpbIiN5Z3ByaWNlX2FyZWEiXSxnb21lOlsiLnByZHByaWNlIiwiI2JhcmdhaW4iLCIucHJkLXByaWNlLTEiXSx2aXBzaG9wOlsiLnBpLXByaWNlLWJveCJdLCIzNjBidXkiOlsiI3N1bW1hcnktcHJpY2UiLCIuc3VtbWFyeS1wcmljZSIsIiNzdXJwbHVzLXRpbWUiLCIjcHJvZHVjdC1pbnRybyAjcHJpY2UiXSwiMzYwYnV5LWJvb2siOlsiI3N1bW1hcnktcHJpY2UiXSwiMzYwYnV5LXJlIjpbIi5zaG9wX2ludHJvIC5zaG9wX2ludHJvX2EiXSx0YW9iYW86WyIudG0tZmNzLXBhbmVsIiwiI0pfUHJvbW9QcmljZSIsIiNKX1N0clByaWNlTW9kQm94Il0sInRhb2Jhby1qdSI6WyIuSl9CdXlTdWJGb3JtIl0sInRhb2Jhby05NTA5NSI6WyIudG0tZmNzLXBhbmVsIiwiI0pfUHJvbW9QcmljZSIsIiNKX1N0clByaWNlTW9kQm94Il0sdG1hbGw6WyIudG0tZmNzLXBhbmVsIiwiI0pfUHJvbW9QcmljZSIsIiNKX1N0clByaWNlTW9kQm94Il0sIjUxYnV5IjpbJy54YmFzZV9pdGVtOmNvbnRhaW5zKCLkv4PplIDku7ciKScsJy54YmFzZV9pdGVtOmNvbnRhaW5zKCLmmJPov4Xku7ciKScsIiNnb29kc19kZXRhaWxfbWF0ZSAuaXRlbV9pY3NvbiIsIi54YmFzZV9yb3cyIiwiI3Byb21vdGVQcmljZSIsIiNzaG9wcHJpY2UiLCIjcHJvbW90ZVByaWNlQXJlYSJdLApzdW5pbmc6WyIjbm9QcmljZSIsIiNfbWFpbl9wcmljZSIsIiNleGlzdFByaWNlIiwiI25ldFByaWNlQm94IiwiI2hhc1ByaWNlIiwiI21haW5QcmljZSIsIiNwcmljZURvbSJdLGRhbmdkYW5nOlsiLnByaWNlX3RpbWUiLCIuZDE1X3ByaWNlX2luZm8iLCIucHJpY2VfcWlhbmciLCIucHJpY2VfaW5mbyIsIi5zaG93X2luZm8gLnNhbGU+cCIsIi5zYWxlX2JveDpmaXJzdCJdLHlpaGFvZGlhbjpbIiNwb2ludF9wcm9kdWN0UHJpY2UiLCIucHJpY2VfYXJyYXkiLCIjY3VycmVudFByaWNlQXJlYSJdLHZhbmNsOlsiI3ByaWNlYXJlYSAuY3V4aWFvUHJpY2UiXSxuZXdlZ2c6WyIubmV3ZWdnUHJpY2UiLCIuZ29vZHNfcHJpY2Vfbm93Il0sa2FvbGE6WyIubS1wcmljZSJdLGxlbm92bzpbIiNkaXZfcHJvZHVjdF9kZWMiLCIjc3Bhbl9wcm9kdWN0X25hbWUiXSxtaWNyb3NvZnRzdG9yZTpbIi5wcmljZUFuZFJhbmsiXSx4aWFvbWk6WyIuSl9zYWxlV3JhcC5zYWxlLXdyYXAiLCIucHJvLXRpbWUuSl9wcm9TZWNraWxsIiwiLmdvb2RzLWluZm8taGVhZC1wcmljZSIsIi5wcm8tdGltZS5KX3Byb09yZGVyIl0sb2tidXk6WyIucHJvZFByaWNlTGlKIC5wcm9kUHJpY2UiXSxiYW5nZ286WyIubWJzaG9wX2RldGFpbF9iYXNlaW5mbyJdLHlvdTE2MzpbIi5wcmljZT4uZi1jbGVhcmZpeCJdfSxsPWZ1bmN0aW9uKCl7dmFyIHQ9ZS5zaXRlLG49c1t0XTtpZihuJiYoIW58fDAhPT1uLmxlbmd0aCkpe2Zvcih2YXIgbz0wO288bi5sZW5ndGg7bysrKWlmKGkobltvXSkubGVuZ3RoPjApcmV0dXJuIG5bb107cmV0dXJuITF9fSxjPWZ1bmN0aW9uKHQpe3ZhciBhPWVuY29kZVVSSUNvbXBvbmVudChkb2N1bWVudC5sb2NhdGlvbi5ocmVmKSxyPW4oMTEyKSxzPWUuc2VydmVyKyIvYnJ3ZXh0L3NldHRpbmc/ZnJvbT0iK2UuZnJvbV9kZXZpY2UsbD0iaHR0cHM6Ly93d3cuIitlLmV4dE5hbWUrIi5jb20vYnJ3ZXh0L3N1Z2dlc3Q/cmVmZXI9IithKyImZnJvbV9kZXZpY2U9IitlLmZyb21fZGV2aWNlLGM9by5jb21waWxlKHIpKHtzZXRVcmw6cyxhbGlTaXRlOmUuYWxpU2l0ZSxmZWVkYmFja1VybDpsLG1pbmlkb206ZS53aXNoZG9tMix3aXNoZG9tOmUud2lzaGRvbX0pO2kodCkuZXEoMCkuYWZ0ZXIoYyl9LHA9ZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlSW50KHQpPjk5OTk5OT9wYXJzZUludCh0KTp0fSxkPWZ1bmN0aW9uKCl7aSgiLmd3ZC1taW5pYmFyLWJnIikub24oIm1vdXNlZW50ZXIiLCIubWluaWJhci10YWIiLGZ1bmN0aW9uKCl7aSgiI2d3ZF9taW5pYmFyIikuYWRkQ2xhc3MoIm1zX2VudGVyIiksaSh0aGlzKS5hZGRDbGFzcygibXMtdGFiLWVudGVyIik7dmFyIHQ9aSh0aGlzKS5hdHRyKCJpZCIpO2koIiMiK3QrIl9kZXRhaWwiKS5zaG93KCksIm1pbmlfcHJpY2VfaGlzdG9yeSI9PT10JiYocigibWluaXRyZW5kLXNob3ciKSxuKDExMykuY2FsTGluZUhlaWdodCgpKX0pLGkoIi5nd2QtbWluaWJhci1iZyIpLm9uKCJtb3VzZWxlYXZlIiwiLm1pbmliYXItdGFiIixmdW5jdGlvbigpe2koIiNnd2RfbWluaWJhciIpLnJlbW92ZUNsYXNzKCJtc19lbnRlciIpLGkodGhpcykucmVtb3ZlQ2xhc3MoIm1zLXRhYi1lbnRlciIpLGkodGhpcykucmVtb3ZlQ2xhc3MoIm1zLXRhYi1lbnRlciIpO3ZhciB0PWkodGhpcykuYXR0cigiaWQiKTtpKCIjIit0KyJfZGV0YWlsIikuaGlkZSgpfSl9O3QuZXhwb3J0cy5yZW5kZXJNaW5pQ29tPWZ1bmN0aW9uKHQpe3ZhciByPXZvaWQgMDt0cnl7cj1hLmdldCgib3RoZXJfaW5mbyIpWyJjb2RlLXNlcnZlciJdLnByaWNlfWNhdGNoKHMpe3I9ZS5kcC5wcmljZX1pZihyfHwocj1lLmRwLnByaWNlKSwhKGUuc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8ZS5zaXRlLmluZGV4T2YoInRtYWxsIik+LTEpKXt2YXIgbD12b2lkIDA7bD10LmIyYyYmMCE9PXQuYjJjLmxlbmd0aD90LmIyYy5zdG9yZTpbXTtmb3IodmFyIGM9W10sZD1sLmxlbmd0aCxoPVsxLDEwMywxMDgsMTIzLDEyNCwxMjYsMTI5LDEzNCwxMzYsMTQsMTQxLDE1LDE2NywxNjgsMTksMiwyMSwyNSwyNiwyOCwzLDMxLDM0LDM1LDQxLDYsNjYsNyw4Niw5Myw5XSx1PTA7dTxsLmxlbmd0aCYmdTw2O3UrKyl7dmFyIG09bFt1XS5wcm9kdWN0JiZsW3VdLnByb2R1Y3RbMF18fGxbdV0sZj1tLmRwX2lkfHwiIixnPWYubWF0Y2goL1swLTldKy0oWzAtOV0rKS8pO2c9ZyYmZ1sxXTt2YXIgdz1oLmluZGV4T2YoTnVtYmVyKGcpKT4tMT8iLnBuZyI6Ii5pY28iO2cmJihtLnByaWNlPXAobS5wcmljZS5yZXBsYWNlKC8sL2csIiIpKSxtLmljb3VybD1lLnNfc2VydmVyKyIvaW1hZ2VzL2Zhdmljb24vIitnK3csYy5wdXNoKG0pKX12YXIgeD0i5YW25LuWIitkKyLlrrbmiqXku7ciLGI9IiI7MD09PWMubGVuZ3RoPyh4PSLmmoLml6DllYbln47mr5Tku7ciLGI9Im5vLWNvbS1pbmZvIik6Y1swXS5wcmljZTxOdW1iZXIocikmJih4PSc8ZW0+5pu05L2O5Lu3OjwvZW0+PGVtIGNsYXNzPSJwcmlmb250ZiBwcmljZS1lbSI+JytjWzBdLnByaWNlKyI8L2VtPiIpO3ZhciBfPSc8ZGl2IGNsYXNzPSJtaW5pYmFyLWJ0bi1ib3giPlxuICAgICAgICA8ZW0gY2xhc3M9InNldHRpbmctYmcgbWluaS1jb21wYXJlLWljb24gIj48L2VtPlxuICAgICAgICA8c3BhbiA+Jyt4KyI8L3NwYW4+XG4gICAgICA8L2Rpdj4iO2lmKGkoIiNnd2RfbWluaV9jb21wYXJlIikuYXBwZW5kKGkoXykpLnNob3coKS5hZGRDbGFzcyhiKSxjLmxlbmd0aD4wKXt2YXIgdj1uKDExNSkseT17ZGF0YTpjLGFsbExpbms6ZS5jX3NlcnZlcisiL2RwIit0LmRwLmRwX2lkLHN0b3JlU2l6ZTpkfTtpKCIjZ3dkX21pbmlfY29tcGFyZSIpLmFwcGVuZChvLmNvbXBpbGUodikoeSkpLGEuc2V0KCJtaW5pY29tIix5KX1lbHNlIGkoIiNnd2RfbWluaV9jb21wYXJlIikub2ZmKCl9fSx0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpe2lmKCJhbWF6b24iPT1lLnNpdGV8fCI2cG0iPT1lLnNpdGUpcmV0dXJuIHZvaWQgbigxMTYpLmluaXQoKTt2YXIgdD1hLmdldCgicGVybWFuZW50Iik7aWYoIjAiIT09dC5zZXRXaXNobGlzdCYmMCE9PXQuc2V0V2lzaGxpc3Qpe3ZhciBpPWwoKTtpJiYoYyhpKSxkKCkpfX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9Imd3ZC1taW5pYmFyLWJnIj5cbiAgPGRpdiBpZD0iZ3dkX21pbmliYXIiIGNsYXNzPSJ7e2lmIGFsaVNpdGV9fWFsaXNpdGVfcGFnZSB7ey9pZn19Ij5cbiAgICA8YSBjbGFzcz0iZ3dkX3dlYnNpdGUiIHRpdGxlPSLotK3nianlhZoiIGlkPSJnd2Rfd2Vic2l0ZV9pY29uIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuZ3dkYW5nLmNvbSI+XG4gICAgICA8ZW0gY2xhc3M9InNldHRpbmctYmcgd2Vic2l0ZV9pY29uIj48L2VtPlxuICAgIDwvYT5cbiAgICA8ZGl2IGlkPSJtaW5pX3ByaWNlX2hpc3RvcnkiIGNsYXNzPSJtaW5pYmFyLXRhYiI+PC9kaXY+XG4gICAgPGRpdiBpZD0iZ3dkX21pbmlfY29tcGFyZSIgY2xhc3M9Im1pbmliYXItdGFiIj48L2Rpdj5cbiAgICA8ZGl2IGlkPSJnd2RfbWluaV9yZW1pbmQiIGNsYXNzPSJtaW5pYmFyLXRhYiI+XG4gICAgICA8ZGl2IGNsYXNzPSJtaW5pYmFyLWJ0bi1ib3giPlxuICAgICAgICA8ZW0gY2xhc3M9InNldHRpbmctYmcgY29sbGVjdF9tYWlsb3V0X2ljb24iPjwvZW0+XG4gICAgICAgIDxzcGFuPumZjeS7t+aPkOmGkjwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBpZD0icHJvbW9fYm94Ij48L2Rpdj5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciBpPW4oMjIpLG89big3MyksYT12b2lkIDAscj12b2lkIDA7dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCxlLG4pe2ModCxlLG4pfTt2YXIgcz1mdW5jdGlvbih0LGUsbil7dmFyIGk9blswXS5sb3dlc3Qscj1uWzBdLmFsbF9saW5lLmxlbmd0aDtpZihyPjE4MCl7dmFyIHM9blswXS5hbGxfbGluZS5zbGljZShyLTE4MCk7aT1NYXRoLm1pbi5hcHBseShudWxsLHMpfWU9ZXx8W107Zm9yKHZhciBsPXQubGVuZ3RoLGM9dFtsLTFdLnByaWNlLHA9bC0xLGQ9bC0xO2Q+PTA7ZC0tKWZvcih2YXIgaD0wO2g8ZS5sZW5ndGg7aCsrKXRbZF0udGltZT09PWVbaF0udGltZSYmKHRbZF0ucHJpY2U9PT1lW2hdLnByaWNlPyh0W2RdPUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZVtoXSkpLHRbZF0uaXNEU0o9ITApOih0LnNwbGljZShkKzEsMCxKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGVbaF0pKSksdFtkKzFdLmlzRFNKPSEwKSk7Zm9yKHZhciBkPTA7ZDx0Lmxlbmd0aDtkKyspe2lmKHRbZF0ucHJpY2U8PWMmJihjPXRbZF0ucHJpY2UscD1kKSx0W2RdLm1zZy5jb3Vwb24pe3ZhciB1PXRbZF0ubXNnLmNvdXBvbjtpZih1Lm1hdGNoKC9cZCstXGQrLykpe3ZhciBtPXUuc3BsaXQoIi0iKTt0W2RdLmNvdXBvbj0i5Yi4OiDmu6EiK21bMF0rIuWHjyIrbVsxXX1lbHNlIHRbZF0uY291cG9uPSLliLg6ICIrdFtkXS5tc2cuY291cG9ufXRbZF0ubXNnLnByb21vdGlvbiYmKHRbZF0ucHJvbW90aW9uPSLkv4M6ICIrdFtkXS5tc2cucHJvbW90aW9uKTt2YXIgZj0xZTMqdFtkXS50aW1lLGc9bmV3IERhdGUoZikuZ2V0TW9udGgoKSsxLHc9bmV3IERhdGUoZikuZ2V0RGF0ZSgpO2c8MTAmJihnPSIwIitnLnRvU3RyaW5nKCkpLHc8MTAmJih3PSIwIit3LnRvU3RyaW5nKCkpLHRbZF0udGltZTI9ZysiLSIrdyx0W2RdLnByaWNlPSh0W2RdLnByaWNlLzEwMCkudG9GaXhlZCgyKSx0W2RdLm9yaV9wcmljZT0odFtkXS5vcmlfcHJpY2UvMTAwKS50b0ZpeGVkKDIpfWMvMTAwPGkmJih0W3BdLmlzTG93ZXN0PSEwKSx0LnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gZS50aW1lLXQudGltZX0pO2Zvcih2YXIgeD12b2lkIDAsZD0wO2Q8dC5sZW5ndGg7ZCsrKXRbZF0uaXNMb3dlc3QmJih4PWQsdFtkXS5tYXJrPSJsb3dlc3Rfbm93IikseHx8MD09PXg/ZD54JiYodFtkXS5tYXJrPSJsb3dlc3RfYWZ0ZXIiKTp0W2RdLm1hcms9Imxvd2VzdF9iZWZvcmUiO2E9eDt2YXIgYj1vLmdldFRpbWVOdW1iZXIoKG5ldyBEYXRlKS5nZXRUaW1lKCksIjIiKTtyZXR1cm4gYj09PXRbMF0udGltZTImJih0WzBdLmlzbm93RGF5PSEwKSx0fSxsPWZ1bmN0aW9uKCl7ZSgiLnNob3dfZm9sZCAuZm9sZC1iYXIiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7ZSgiLmhpc3RvcnktY29udGVudCIpLnJlbW92ZUNsYXNzKCJzaG93X2ZvbGQiKSxyPSExLHAoKX0pfSxjPWZ1bmN0aW9uKHQsbyxjKXt0PXModCxvLGMpLHQubGVuZ3RoPjMmJmE+MSYmKHI9ITApO3ZhciBwPW4oMTE0KTtlKCIjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbCIpLmFwcGVuZChpLmNvbXBpbGUocCkoe2RhdGE6dCxzaG93Rm9sZDpyfSkpLGwoKX0scD1mdW5jdGlvbigpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxuPWUoIi5oaXN0b3J5LWNvbnRlbnQ+dWwgbGkiKSxpPTA7aTxuLmxlbmd0aC0xO2krKyl7dmFyIG89bi5lcShpKS5oZWlnaHQoKTtvPjAmJm4uZXEoaSkuaXMoIjp2aXNpYmxlIikmJih0PXQrbysyMil9ciYmKHQrPTMyKSxlKCIuaGlzdG9yeS1saW5lIikuY3NzKCJoZWlnaHQiLHQrInB4Iik7dmFyIGE9ZSgiLmhpc3RvcnktY29udGVudD51bCBsaSIpLmVxKDApLm91dGVySGVpZ2h0KCkrMjY7ZSgiLnNob3dfZm9sZCAuZm9sZC1iYXIiKS5jc3MoInRvcCIsYSsicHgiKX0sMTApfTt0LmV4cG9ydHMuY2FsTGluZUhlaWdodD1wfSkuY2FsbChlLG4oNCkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0icHJvbW9faGlzdG9yeSIgY2xhc3M9InByb21vLWhpc3RvcnktZGV0YWlsIj5cbiAgPHA+5Y6G5Y+y5L+D6ZSA5LyY5oOg5L+h5oGvPC9wPlxuICA8ZGl2IGNsYXNzPSJoaXN0b3J5LWNvbnRlbnQge3tpZiBzaG93Rm9sZH19IHNob3dfZm9sZCB7ey9pZn19Ij5cbiAgICA8c3BhbiBjbGFzcz0iaGlzdG9yeS1saW5lIj48L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9ImZvbGQtYmFyIj7lsZXlvIDmm7TlpJo8L3NwYW4+XG4gICAgPHVsPlxuICAgICAge3tlYWNoIGRhdGF9fVxuICAgICAgICA8bGkgY2xhc3M9Int7aWYgJHZhbHVlLmlzTG93ZXN0fX0gbm93X2xpc3QgIHt7L2lmfX0ge3skdmFsdWUubWFya319Ij5cbiAgICAgICAgICA8YSBjbGFzcz0icHJvLXByaS1pdGVtIj5cbiAgICAgICAgICAgIDxlbT48L2VtPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBwaS1zcDEgcHJpZm9udGYiPnt7JHZhbHVlLnRpbWUyfX08L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0icHBpLXNwMiI+e3tpZiAkdmFsdWUuaXNEU0p9fSDliLDmiYvku7cge3tlbHNlfX0g5YeR5Y2V5Lu3IHt7L2lmfX08L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0icHBpLXNwMiBwcGktZmgiPjo8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0icHBpLXNwMyBwcmlmb250ZiI+wqV7eyR2YWx1ZS5wcmljZX19PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBwaS1yZW1pbmQtdGxlIj5cbiAgICAgICAgICAgICAge3tpZiAkdmFsdWUuaXNMb3dlc3R9fVxuICAgICAgICAgICAgICAgIOacgOS9jlxuICAgICAgICAgICAgICB7e2Vsc2V9fVxuICAgICAgICAgICAgICAgIOacgOi/kVxuICAgICAgICAgICAgICB7ey9pZn19XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9hPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm8tY291cG9uLWl0ZW0iPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBjaS10bGVzcCI+6aG16Z2i5Lu3PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBwaS1maCI+Ojwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmlmb250ZiI+wqV7eyR2YWx1ZS5vcmlfcHJpY2V9fTwvc3Bhbj5cbiAgICAgICAgICAgIFxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICB7e2lmICR2YWx1ZS5jb3Vwb259fVxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcm8tY291cG9uLWl0ZW0iPlxuICAgICAgICAgICAge3skdmFsdWUuY291cG9ufX1cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAge3svaWZ9fVxuICAgICAgICAgIHt7aWYgJHZhbHVlLnByb21vdGlvbn19XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InByby1wcm8taXRlbSI+XG4gICAgICAgICAgICB7eyR2YWx1ZS5wcm9tb3Rpb259fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICB7ey9pZn19XG4gICAgICAgIDwvbGk+XG4gICAgICB7ey9lYWNofX1cbiAgICA8L3VsPlxuICA8L2Rpdj5cbjwvZGl2PlxuPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgZGl2I21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWwge1xuICAgIHdpZHRoOiA2NjdweDtcbiAgfVxuICAjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbCAuZGlzY291bnQtcHJpY2UtcmUge1xuICAgIGxlZnQ6IDM2NHB4O1xuICAgIHJpZ2h0OiBpbmhlcml0O1xuICB9XG4gIC5mb2xkLWJhciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0Y0RjRGNDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgd2lkdGg6IDE1OHB4O1xuICAgIGhlaWdodDogMjZweDtcbiAgICBsaW5lLWhlaWdodDogMjZweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICM5OTk7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAyM3B4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5mb2xkLWJhcjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbiAgfVxuICAuc2hvd19mb2xkIC5mb2xkLWJhciB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICB9XG4gIHNwYW4ucHBpLXNwMSB7XG4gICAgbWFyZ2luLXJpZ2h0OiA3cHg7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gIH1cbiAgLnBwaS1yZW1pbmQtdGxlIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogMzJweDtcbiAgICBoZWlnaHQ6IDE2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAjNUFDRkZBO1xuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICAubm93X2xpc3QgLnBwaS1yZW1pbmQtdGxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzVCQzY4O1xuICB9XG4gIC5ub3dfbGlzdDIgLnBwaS1yZW1pbmQtdGxlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkY5RjIyO1xuICB9XG4gIC5ub3dfbGlzdCAucHBpLXJlbWluZC10bGUsLm5vd19saXN0MiAucHBpLXJlbWluZC10bGUsIC5wcm9tby1oaXN0b3J5LWRldGFpbCB1bCBsaTpmaXJzdC1jaGlsZCAucHBpLXJlbWluZC10bGUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuICAucHBpLXNwMiB7XG4gICAgbGluZS1oZWlnaHQ6IDE3cHg7XG4gIH1cbiAgLnBwaS1maCB7XG4gICAgaGVpZ2h0OiAxN3B4O1xuICAgIHdpZHRoOiA0cHghaW1wb3J0YW50O1xuICB9XG4gIC5wcm8tY291cG9uLWl0ZW0gLnBwaS1maCtzcGFuIHtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgfVxuICAucHBpLXNwMSAsLnBwaS1zcDJ7XG4gICAgY29sb3I6ICM5OTk7XG4gIH1cbiAgc3Bhbi5wcGktc3AzIHtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgY29sb3I6ICNlNDM5M2M7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgfVxuICAjcHJvbW9faGlzdG9yeSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDIwNnB4O1xuICAgIGhlaWdodDogMzA4cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZTRlNGU0O1xuICB9XG4gIC5fZHNqX3Nob3cgI3Byb21vX2hpc3Rvcnkge1xuICAgIGhlaWdodDogMzM4cHg7XG4gIH1cbiAgI3Byb21vX2hpc3Rvcnk+cCB7XG4gICAgaGVpZ2h0OiA0NHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBjb2xvcjogIzY2NjY2NjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmYmZiO1xuICAgIGxpbmUtaGVpZ2h0OiA0NHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgfVxuICAuaGlzdG9yeS1jb250ZW50IHtcbiAgICBoZWlnaHQ6IDI2NXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5fZHNqX3Nob3cgLmhpc3RvcnktY29udGVudCB7XG4gICAgaGVpZ2h0OiAyOTVweDtcbiAgfVxuICAuaGlzdG9yeS1saW5lIHtcbiAgICBib3JkZXItbGVmdDogMXB4IGRhc2hlZCAjZTBlMGUwO1xuICAgIGhlaWdodDogMjAwcHg7XG4gICAgd2lkdGg6IDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogOXB4O1xuICAgIHRvcDogMjRweDtcbiAgfVxuICAucHJvbW8taGlzdG9yeS1kZXRhaWwgdWwgbGkge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXJnaW4tdG9wOiAyMnB4O1xuICB9XG4gIC5wcm9tby1oaXN0b3J5LWRldGFpbCAuc2hvd19mb2xkIHVsIGxpLmxvd2VzdF9iZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLnByb21vLWhpc3RvcnktZGV0YWlsIHVsIGxpOmZpcnN0LWNoaWxkLmxvd2VzdF9iZWZvcmUge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxuICAucHJvbW8taGlzdG9yeS1kZXRhaWwgLnNob3dfZm9sZCB1bCBsaS5sb3dlc3Rfbm93IHtcbiAgICBtYXJnaW4tdG9wOiA1NHB4O1xuICB9XG4gIC5wcm9tby1oaXN0b3J5LWRldGFpbCB1bCBsaTpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgfVxuICAucHJvbW8taGlzdG9yeS1kZXRhaWwgLmhpc3RvcnktY29udGVudD4gdWwgbGk6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxuICAucHJvbW8taGlzdG9yeS1kZXRhaWwgdWwgbGkgYSB7XG4gICAgbGluZS1oZWlnaHQ6IDE3cHg7XG4gICAgaGVpZ2h0OiAxN3B4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG4gIC5wcm9tby1oaXN0b3J5LWRldGFpbCB1bCBsaS5ub3dfbGlzdCBhIGVtIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzVCRDY4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMzNUJENjg7XG4gIH1cbiAgLnByb21vLWhpc3RvcnktZGV0YWlsIHVsIGxpIGEgZW0ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGhlaWdodDogNXB4O1xuICAgIHdpZHRoOiA1cHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYmFiZWMwO1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLXJpZ2h0OiA3cHg7XG4gICAgdG9wOiA1cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDZweDtcbiAgfVxuICAucHJvbW8taGlzdG9yeS1kZXRhaWwgdWwgbGkgYSBzcGFuIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuICAucHJvbW8taGlzdG9yeS1kZXRhaWwgdWwgbGk+c3BhbiB7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIGhlaWdodDogYXV0bztcbiAgICBjb2xvcjogIzY2NjtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB3aWR0aDogMTQxcHg7XG4gIH1cbiAgLnByby1jb3Vwb24taXRlbT5zcGFuIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBoZWlnaHQ6IDE3cHg7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgY29sb3I6ICM2NjY7XG4gIH1cbiAgLnByby1jb3Vwb24taXRlbSAucHBpLWZoLCAucHJvLXByby1pdGVtIC5wcGktZmgge1xuICAgIG1hcmdpbi1yaWdodDogMnB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG4gIC5wcm8tY291cG9uLWl0ZW0gLnBjaS10bGVzcCwgLnByby1wcm8taXRlbSAucGNpLXRsZXNwe1xuICAgIGNvbG9yOiAjNjY2O1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG4gIC5wcm9tby1oaXN0b3J5LWRldGFpbCB1bCBsaSAucHJvLWNvdXBvbi1pdGVtKy5wcm8tcHJvLWl0ZW0ge1xuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICB3aWR0aDogMTY0cHg7XG4gIH1cblxuXG5cblxuXG5cbiAgI3Byb21vX2hpc3RvcnkgOjotd2Via2l0LXNjcm9sbGJhciB7d2lkdGg6NnB4O31cbiAgI3Byb21vX2hpc3RvcnkgOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7YmFja2dyb3VuZDojZjBmMGYwO31cbiAgI3Byb21vX2hpc3RvcnkgOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgYmFja2dyb3VuZDogI0E3QTdBNztcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICB9XG4gICNwcm9tb19oaXN0b3J5IDo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICM2NjY7XG4gIH1cbjwvc3R5bGU+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9Imd3ZF9taW5pX2NvbXBhcmVfZGV0YWlsIiBjbGFzcz0ibWluaWJhci1kZXRhaWwiPlxuICA8dWw+XG4gICAge3tlYWNoIGRhdGF9fVxuICAgICAgPGxpPlxuICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiPlxuICAgICAgICAgIDxpbWcgc3JjPSJ7eyR2YWx1ZS5pY291cmx9fSI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9Im0taXRlbS1zaXRlbmFtZSI+e3skdmFsdWUuc2l0ZV9uYW1lfX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9Im0taXRlbS1wcmljZSBwcmlmb250ZiI+wqV7eyR2YWx1ZS5wcmljZX19PC9zcGFuPlxuICAgICAgICA8L2E+XG4gICAgICA8L2xpPlxuICAgIHt7L2VhY2h9fVxuICA8L3VsPlxuICA8YSBocmVmPSJ7e2FsbExpbmt9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJtLWFsbC1saW5rIj5cbiAgICDmn6XnnIvlhajpg6goe3tzdG9yZVNpemV9fSlcbiAgPC9hPlxuPC9kaXY+XG4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG8odCxuKXt2YXIgaT1sb2NhdGlvbi5wcm90b2NvbCsoIi8vYnJvd3Nlci4iK2UuZXh0TmFtZSsiLmNvbS9leHRlbnNpb24/YWM9ZmFueWkmc3RyaW5nPSIpK3Q7Yi5nZXQoaSkuZG9uZShmdW5jdGlvbihlKXtpZihlLnRyYW5zX3Jlc3VsdCYmIWUuZXJyb3JfY29kZSl7Zm9yKHZhciBpPVtdLG89MDtvPGUudHJhbnNfcmVzdWx0Lmxlbmd0aDtvKyspaS5wdXNoKGUudHJhbnNfcmVzdWx0W29dLmRzdCk7bihpKX1lbHNlIG4oW3RdKX0pfWZ1bmN0aW9uIGEodCxlKXtvKHQsZSksXygicmVxdWVzdDpoYWl0YW86ZmFueWkiKSx2LmxvZygi6K+35rGC5YiS6K+N57+76K+RIil9ZnVuY3Rpb24gcih0KXt0PXQuam9pbigiIiksaSgiLmh0X2ZhbnlpIikucmVtb3ZlKCk7dmFyIGU9JzxkaXYgY2xhc3M9Imh0X2ZhbnlpIiBzdHlsZT0idG9wOnt7aHR5fX07bGVmdDp7e2h0eH19Ij48c3BhbiBpZD0iaHRfdG9wIj48L3NwYW4+e3tkYXRhfX08L2Rpdj4nLG49eC5jb21waWxlKGUpKHtkYXRhOnQsaHR4OnMoKSsicHgiLGh0eTpnKyJweCJ9KTtpKCJib2R5IikuYXBwZW5kKG4pLGMoKX1mdW5jdGlvbiBzKCl7dmFyIHQ9MDtyZXR1cm4gdD1mPnc/Zi0oZi13KS8yLTY1OmYrKHctZikvMi02NX1mdW5jdGlvbiBsKHQpe2EodCxyKX1mdW5jdGlvbiBjKCl7aSgiLmh0X2ZhbnlpIikuc2libGluZ3MoKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aSgiLmh0X2ZhbnlpIikucmVtb3ZlKCl9KX1mdW5jdGlvbiBwKCl7aSgiYm9keSIpLm9uKCJtb3VzZWRvd24iLGZ1bmN0aW9uKHQpe2NsZWFyVGltZW91dCh1KSx3PXQucGFnZVh9KSxpKCJib2R5Iikub24oIm1vdXNldXAiLGZ1bmN0aW9uKHQpe3U9c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBlPSIiO2Y9dC5wYWdlWCxnPXQucGFnZVkrMjAsd2luZG93LmdldFNlbGVjdGlvbj9lPXdpbmRvdy5nZXRTZWxlY3Rpb24oKS50b1N0cmluZygpOmRvY3VtZW50LnNlbGVjdGlvbiYmKGU9ZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCkudGV4dCksIiIhPWUmJmwoZSl9LDEwMCl9KX1mdW5jdGlvbiBkKCl7cmV0dXJuInd3dy42cG0uY29tIj09bT8ieml5aW5nIjppKCIjbWVyY2hhbnQtaW5mbyIpLmxlbmd0aD4wPyJ3d3cuYW1hem9uLmNvbSI9PW0/aSgiI21lcmNoYW50LWluZm8iKS50ZXh0KCkuaW5kZXhPZigic29sZCBieSBBbWF6b24iKT4tMT8ieml5aW5nIjoic2FuZmFuZyI6Ind3dy5hbWF6b24uY28uanAiPT1tP2koIiNtZXJjaGFudC1pbmZvIikudGV4dCgpLmluZGV4T2YoImpwIOOBjOiyqeWjsiIpPi0xPyJ6aXlpbmciOiJzYW5mYW5nIjoid3d3LmFtYXpvbi5kZSI9PW0/aSgiI21lcmNoYW50LWluZm8iKS50ZXh0KCkuaW5kZXhPZigiVmVya2F1ZiB1bmQgVmVyc2FuZCBkdXJjaCBBbWF6b24iKT4tMT8ieml5aW5nIjppKCIjbWVyY2hhbnQtaW5mbyIpLnRleHQoKS5pbmRleE9mKCJEaXNwYXRjaGVkIGZyb20gYW5kIHNvbGQgYnkgQW1hem9uIik+LTE/InppeWluZyI6InNhbmZhbmciOnZvaWQgMDoic2FuZmFuZyJ9dmFyIGgsdSxtLGYsZyx3LHg9bigyMiksYj1uKDI0KSxfPW4oMTIpLHY9bigxNCkseT1uKDEzKSxrPSJ1cyIsej17IuexsyI6M2UzLCLljpjnsbMiOjMwLCLmr6vnsbMiOjMsIuiLseWwuiI6OTE0LjQsIuiLseWvuCI6NzYuMiwi56CBIjoyNzQzLjIsIuWwuiI6MWUzLCLlr7giOjEwMCwi5YiGIjoxMCwi5Y6YIjoxfSxqPXtzaGFuZ3lpOnt1czp7bWFuOlsidXNfbWFuX3N6LmpwZyIsInVzX21hbl9zejIuanBnIl0sd29tYW46WyJ1c193b21hbl9zei5qcGciLCJ1c193b21hbl9zejIuanBnIl19LHVrOnttYW46WyJ1a19tYW5fc3ouanBnIiwidWtfbWFuX3N6Mi5qcGciXSx3b21hbjpbInVrX3dvbWFuX3N6LmpwZyIsInVrX3dvbWFuX3N6Mi5qcGciXX0sanA6e21hbjpbImpwX21hbl9zei5qcGciLCJqcF9tYW5fc3oyLmpwZyJdLHdvbWFuOlsianBfd29tYW5fc3ouanBnIiwianBfd29tYW5fc3oyLmpwZyJdfX0seGlhemh1YW5nOnt1czp7bWFuOlsidXNfbWFuX3h6LmpwZyIsInVzX21hbl94ejIuanBnIl0sd29tYW46WyJ1c193b21hbl94ei5qcGciLCJ1c193b21hbl94ejIuanBnIl19LHVrOnttYW46WyJ1a19tYW5feHouanBnIiwidWtfbWFuX3h6Mi5qcGciXSx3b21hbjpbInVrX3dvbWFuX3h6LmpwZyIsInVrX3dvbWFuX3h6Mi5qcGciXX0sanA6e21hbjpbImpwX21hbl94ei5qcGciLCJqcF9tYW5feHoyLmpwZyJdLHdvbWFuOlsianBfd29tYW5feHouanBnIiwianBfd29tYW5feHoyLnBuZyJdfX0sa2lkc2Nsb3RoOnt1czpbInVzX2tpZHMuanBnIiwidXNfa2lkczJfMC5qcGciLCJ1c19raWRzMl80LmpwZyJdLHVrOlsidWtfa2lkcy5qcGciLCJ1a19raWRzMl8wLmpwZyIsInVrX2tpZHMyXzQuanBnIl0sanA6WyJqcF9raWRzLmpwZyIsImpwX2tpZHMyXzQuanBnIiwianBfa2lkczJfNC5qcGciXX0sc2hvZXM6e21hbjpbIndvbWFuX3Nob2VzXzEuanBnIiwibWFuX3Nob2VzMi5qcGciXSx3b21hbjpbIndvbWFuX3Nob2VzXzEuanBnIiwid29tYW5fc2hvZXMyLmpwZyJdLGtpZHM6WyJraWRzX3Nob2VzLmpwZyIsImtpZHNfc2hvZXMyXzAuanBnIiwia2lkc19zaG9lczJfNC5qcGciXX19LEM9eyJ3d3cuYW1hem9uLmNvbSI6e2NvdW46InVzIixkb206WyIjcHJpY2VfZmVhdHVyZV9kaXYiLCIjdW5pZmllZFByaWNlX2ZlYXR1cmVfZGl2IiwiI3RtbVN3YXRjaGVzIl0scG9zaXRpb246ImFmdGVyIn0sInd3dy5hbWF6b24uY28uanAiOntjb3VuOiJqcCIsZG9tOlsiI3ByaWNlX2ZlYXR1cmVfZGl2IiwiI3VuaWZpZWRQcmljZV9mZWF0dXJlX2RpdiJdLHBvc2l0aW9uOiJhZnRlciJ9LCJ3d3cuNnBtLmNvbSI6e2NvdW46InVzIixkb206WyIubUdJUXoiLCIjaXRlbUluZm9ybWF0aW9uIl0scG9zaXRpb246ImJlZm9yZSJ9fSxTPWZ1bmN0aW9uKHQsbil7dmFyIG89JzxpbWcgc3JjPSJodHRwOi8vczEuJytlLmV4dE5hbWUrJy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMve3tpbWd1cmx9fSI+JztpKCIuc2l6ZV9zIikuZW1wdHkoKS5hcHBlbmQoeC5jb21waWxlKG8pKHtpbWd1cmw6dH0pKSxpKCIuc2l6ZV9pdGVtX2ltZyIpLmVtcHR5KCkuYXBwZW5kKHguY29tcGlsZShvKSh7aW1ndXJsOm59KSl9LFA9ZnVuY3Rpb24oKXt2YXIgdD0oaSh3aW5kb3cpLndpZHRoKCktNTk1KS8yLGU9KGkod2luZG93KS5oZWlnaHQoKS00MjApLzI7cmV0dXJue3Bvc3g6dCxwb3N5OmV9fSxUPWZ1bmN0aW9uKCl7dmFyIHQ9bigxMTcpO2koImJvZHkiKS5hcHBlbmQoeC5jb21waWxlKHQpKHtwb3M6UCgpfSkpfSxBPWZ1bmN0aW9uKHQsZSl7c3dpdGNoKHQpe2Nhc2Ui55S36KOFIjpyZXR1cm4gai5zaGFuZ3lpW2VdLm1hbjtjYXNlIuWls+ijhSI6cmV0dXJuIGouc2hhbmd5aVtlXS53b21hbjtjYXNlIuerpeijhSI6cmV0dXJuIGoua2lkc2Nsb3RoW2VdO2Nhc2Ui55S36Z6LIjpyZXR1cm4gai5zaG9lcy5tYW47Y2FzZSLlpbPpnosiOnJldHVybiBqLnNob2VzLndvbWFuO2Nhc2Ui56ul6Z6LIjpyZXR1cm4gai5zaG9lcy5raWRzfX0sTj1mdW5jdGlvbigpe2koIi5jbG9zZWJhciIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKHRoaXMpLnBhcmVudCgpLmhpZGUoKX0pLGkoIi5jbG90aGVzX25hdiBsaSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKCIuY2xvdGhlc19uYXYgbGkiKS5yZW1vdmVDbGFzcygic2VsZWN0IiksaSh0aGlzKS5hZGRDbGFzcygic2VsZWN0Iik7dmFyIHQ9aSh0aGlzKS50ZXh0KCksZT1BKHQsayk7dC5pbmRleE9mKCLpnosiKT4tMT8oaSgiLnVuaXRfY20iKS5jc3MoImRpc3BsYXkiLCJub25lIiksaSgiLnVuaXRfbW0iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIjc2l6ZV9kZXRhaWwgLmRldGFpbF9sZWZ0IHNwYW4iKS5oaWRlKCksaSgiLmNsb3RoX2ljb24iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIjc2l6ZV9kZXRhaWwgLnNob2VzIikuY3NzKCJkaXNwbGF5IiwiaW5saW5lLWJsb2NrIiksdC5pbmRleE9mKCLnlLfpnosiKT4tMT8oaSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIGh0X3Nob2VzIG1hbl9mb290IiksaSgiLmRldGFpbF9sZWZ0IC5zaG9lcyIpLnRleHQodCkpOnQuaW5kZXhPZigi5aWz6Z6LIik+LTE/KGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBodF9zaG9lcyB3b21hbl9mb290IiksaSgiLmRldGFpbF9sZWZ0IC5zaG9lcyIpLnRleHQodCkpOihpKCIjc2l6ZV9kZXRhaWwgLnNob2VzIikuaGlkZSgpLGkoIi5jbG90aF9pY29uIikuY3NzKCJkaXNwbGF5IiwiaW5saW5lLWJsb2NrIiksaSgiLnRvbmd4aWUiKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIudG9uZ3hpZTAiKS5hZGRDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi50b25neGllNCIpLnJlbW92ZUNsYXNzKCJzaXplX2hvdmVyIiksaSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIGh0X3Nob2VzIGtpZHNfZm9vdCIpKSk6dC5pbmRleE9mKCLnq6Xoo4UiKT4tMT8oaSgiLnVuaXRfbW0iKS5jc3MoImRpc3BsYXkiLCJub25lIiksaSgiLnVuaXRfY20iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIjc2l6ZV9kZXRhaWwgLmRldGFpbF9sZWZ0IHNwYW4iKS5oaWRlKCksaSgiI3NpemVfZGV0YWlsIC50b25nemh1YW5nIikuY3NzKCJkaXNwbGF5IiwiaW5saW5lLWJsb2NrIiksaSgiLmNsb3RoX2ljb24iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24ga2lkMCIpLGkoIi50b25nemh1YW5nMCIpLmFkZENsYXNzKCJzaXplX2hvdmVyIiksaSgiLnRvbmd6aHVhbmc0IikucmVtb3ZlQ2xhc3MoInNpemVfaG92ZXIiKSk6dC5pbmRleE9mKCLnlLfoo4UiKT4tMT8oaSgiLnVuaXRfbW0iKS5jc3MoImRpc3BsYXkiLCJub25lIiksaSgiLnVuaXRfY20iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIjc2l6ZV9kZXRhaWwgLmRldGFpbF9sZWZ0IHNwYW4iKS5oaWRlKCksaSgiLmNsb3RoX2ljb24iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIjc2l6ZV9kZXRhaWwgLnNoYW5neWkiKS5zaG93KCksaSgiI3NpemVfZGV0YWlsIC54aWF6aHVhbmciKS5zaG93KCksaSgiLnhpYXpodWFuZyIpLnJlbW92ZUNsYXNzKCJzaXplX2hvdmVyIiksaSgiLnNoYW5neWkiKS5hZGRDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBtYW5zaGFuZ3podWFuZyIpKTooaSgiLnVuaXRfbW0iKS5jc3MoImRpc3BsYXkiLCJub25lIiksaSgiLnVuaXRfY20iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIjc2l6ZV9kZXRhaWwgLmRldGFpbF9sZWZ0IHNwYW4iKS5oaWRlKCksaSgiLmNsb3RoX2ljb24iKS5jc3MoImRpc3BsYXkiLCJpbmxpbmUtYmxvY2siKSxpKCIjc2l6ZV9kZXRhaWwgLnNoYW5neWkiKS5zaG93KCksaSgiI3NpemVfZGV0YWlsIC54aWF6aHVhbmciKS5zaG93KCksaSgiLnhpYXpodWFuZyIpLnJlbW92ZUNsYXNzKCJzaXplX2hvdmVyIiksaSgiLnNoYW5neWkiKS5hZGRDbGFzcygic2l6ZV9ob3ZlciIpLHQuaW5kZXhPZigi55S36KOFIik+LTE/aSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIG1hbnNoYW5nemh1YW5nIik6aSgiLmNsb3RoX2ljb24iKS5hdHRyKCJjbGFzcyIsIiIpLmFkZENsYXNzKCJjbG90aF9pY29uIHdvbWFuc2hhbmd6aHVhbmciKSksUyhlWzBdLGVbMV0pfSksaSgiLnNoYW5neWkiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7aWYoIShpKHRoaXMpLmF0dHIoImNsYXNzIikuaW5kZXhPZigic2l6ZV9ob3ZlciIpPi0xKSl7dmFyIHQ9aSgnLmNsb3RoZXNfbmF2IGxpW2NsYXNzPSJzZWxlY3QiXScpLnRleHQoKTtpZigi56ul6KOFIiE9dCl7IueUt+ijhSI9PXQmJmkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBtYW5zaGFuZ3podWFuZyIpLCLlpbPoo4UiPT10JiZpKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24gd29tYW5zaGFuZ3podWFuZyIpO3ZhciBlPUEodCxrKTtTKGVbMF0sZVsxXSksaSh0aGlzKS5hZGRDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi54aWF6aHVhbmciKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpfX19KSxpKCIueGlhemh1YW5nIikub24oImNsaWNrIixmdW5jdGlvbigpe2lmKCEoaSh0aGlzKS5hdHRyKCJjbGFzcyIpLmluZGV4T2YoInNpemVfaG92ZXIiKT4tMSkpe3ZhciB0PWkoJy5jbG90aGVzX25hdiBsaVtjbGFzcz0ic2VsZWN0Il0nKS50ZXh0KCk7aWYoIuerpeijhSIhPXQpe2lmKCLnlLfoo4UiPT10KXt2YXIgZT1qLnhpYXpodWFuZ1trXS5tYW47UyhlWzBdLGVbMV0pLGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBtYW54aWF6aHVhbmciKX1pZigi5aWz6KOFIj09dCl7dmFyIGU9ai54aWF6aHVhbmdba10ud29tYW47UyhlWzBdLGVbMV0pLGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiB3b21hbnhpYXpodWFuZyIpfWkodGhpcykuYWRkQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIuc2hhbmd5aSIpLnJlbW92ZUNsYXNzKCJzaXplX2hvdmVyIil9fX0pLGkoIi50b25nemh1YW5nMCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1BKCLnq6Xoo4UiLGspO1ModFswXSx0WzFdKSxpKHRoaXMpLmFkZENsYXNzKCJzaXplX2hvdmVyIiksaSgiLnRvbmd6aHVhbmc0IikucmVtb3ZlQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIuY2xvdGhfaWNvbiIpLmF0dHIoImNsYXNzIiwiIikuYWRkQ2xhc3MoImNsb3RoX2ljb24ga2lkMCIpfSksaSgiLnRvbmd6aHVhbmc0Iikub24oImNsaWNrIixmdW5jdGlvbigpe3ZhciB0PUEoIuerpeijhSIsayk7Uyh0WzBdLHRbMl0pLGkodGhpcykuYWRkQ2xhc3MoInNpemVfaG92ZXIiKSxpKCIudG9uZ3podWFuZzAiKS5yZW1vdmVDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi5jbG90aF9pY29uIikuYXR0cigiY2xhc3MiLCIiKS5hZGRDbGFzcygiY2xvdGhfaWNvbiBraWQ0Iil9KSxpKCIudG9uZ3hpZTAiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIHQ9QSgi56ul6Z6LIixrKTtTKHRbMF0sdFsxXSksaSh0aGlzKS5hZGRDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi50b25neGllNCIpLnJlbW92ZUNsYXNzKCJzaXplX2hvdmVyIil9KSxpKCIudG9uZ3hpZTQiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIHQ9QSgi56ul6Z6LIixrKTtTKHRbMF0sdFsyXSksaSh0aGlzKS5hZGRDbGFzcygic2l6ZV9ob3ZlciIpLGkoIi50b25neGllMCIpLnJlbW92ZUNsYXNzKCJzaXplX2hvdmVyIil9KSxpKCIuc2l6ZV9oZWxwIikub24oImNsaWNrIixmdW5jdGlvbigpe2koIiNzaXplX2RldGFpbCIpLnNob3coKSxfKCJjbGljazpoYWl0YW86c2l6ZV9oZWxwIiksdi5sb2coIueCueWHu+WwuueggeW4ruWKqSIpfSksaSgiLnNpemVfeGlhbGEiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtpKHRoaXMpLm5leHQoIi5zaXplX3hpYWxhYm94Iikuc2hvdygpLGkodGhpcykuYWRkQ2xhc3MoIm1zSG92ZXIiKX0pLGkoIi5zaXplX3hpYWxhIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztoPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtpKHQpLm5leHQoIi5zaXplX3hpYWxhYm94IikuaGlkZSgpLGkodCkucmVtb3ZlQ2xhc3MoIm1zSG92ZXIiKX0sMTAwKX0pLGkoIi5zaXplX3hpYWxhYm94Iikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KGgpfSksaSgiLnNpemVfeGlhbGFib3giKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtpKHRoaXMpLmhpZGUoKX0pLGkoIi5zaXplX3hpYWxhYm94IGEiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKS50ZXh0KCksZT1pKHRoaXMpLnBhcmVudCgpLmF0dHIoImRhdGEtc2l6ZSIpO2koIi4iK2UpLnZhbCh0KSxpKHRoaXMpLnBhcmVudCgpLmhpZGUoKSxJKCl9KSxpKCIjZmlyc3Rfc2l6ZSIpLm9uKCJrZXl1cCIsZnVuY3Rpb24oKXtJKCl9KX0sST1mdW5jdGlvbigpe3ZhciB0PWkoIi5maXJzdF94aWFsYSIpLnZhbCgpLGU9aSgiLnNlY29uZF94aWFsYSIpLnZhbCgpLG49aSgiI2ZpcnN0X3NpemUiKS52YWwoKTtuJiYobj1OdW1iZXIobikpO3ZhciBvPXpbdF0sYT16W2VdLHI9bipvL2E7ci50b1N0cmluZygpLmluZGV4T2YoIi4iKT4tMSYmKHI9ci50b0ZpeGVkKDIpKSxpKCIjc2Vjb25kX3NpemUiKS52YWwocil9LEI9ZnVuY3Rpb24oKXt2YXIgdD1sb2NhdGlvbi5ob3N0O2Zvcih2YXIgZSBpbiBDKWU9PXQmJihrPUNbZV0uY291bixtPWUpfSxxPWZ1bmN0aW9uKCl7dmFyIHQ9bG9jYXRpb24uaG9zdCxlPUNbdF07aWYoZSl7Zm9yKHZhciBuPTA7bjxlLmRvbS5sZW5ndGg7bisrKWlmKGkoZS5kb21bbl0pLmxlbmd0aD4wKXJldHVybiBlLmRvbVtuXTtyZXR1cm4hMX19LE89ZnVuY3Rpb24oKXt2YXIgdD1sb2NhdGlvbi5ocmVmO2koIiNnd2RfbWluaWJhciIpLm9uKCJjbGljayIsZnVuY3Rpb24odCl7KGkodC50YXJnZXQpLmhhc0NsYXNzKCJzaXplaGVscCIpfHxpKHQudGFyZ2V0KS5wYXJlbnQoKS5oYXNDbGFzcygic2l6ZWhlbHAiKSkmJmkoIiNzaXplX2RldGFpbCIpLnNob3coKX0pLGkoIiNodF9mYXZvciIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtlLmVtYWlsP24oODgpLmFkZEZhdm9yKGZ1bmN0aW9uKCl7d2luZG93LmxvY2F0aW9uLmhyZWY9ZS5jX3NlcnZlcisiL3VzZXIvbG9naW4/ZnJvbV91cmw9IitlbmNvZGVVUklDb21wb25lbnQodCl9KTp3aW5kb3cubG9jYXRpb24uaHJlZj1lLmNfc2VydmVyKyIvdXNlci9sb2dpbj9mcm9tX3VybD0iK2VuY29kZVVSSUNvbXBvbmVudCh0KX0pfSxFPWZ1bmN0aW9uKHQpe2koImJvZHkiKS5hZGRDbGFzcygiaHRfc2l0ZSIpO3ZhciBlPWxvY2F0aW9uLmhvc3Qsbz1uKDExOCksYT14LmNvbXBpbGUobykoe30pO3N3aXRjaChDW2VdLnBvc2l0aW9uKXtjYXNlImJlZm9yZSI6aSh0KS5iZWZvcmUoYSk7YnJlYWs7Y2FzZSJhZnRlciI6aSh0KS5hZnRlcihhKX1PKCl9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7dmFyIHQ9eS5nZXQoInBlcm1hbmVudCIpO2lmKCIwIiE9PXQuc2V0aGFpdGFvKXtuKDExOSk7dmFyIGU9cSgpO0IoKSxlJiYoRShlKSxwKCksVCgpLFMoai5zaGFuZ3lpW2tdLm1hblswXSxqLnNoYW5neWlba10ubWFuWzFdKSxOKCksc2V0VGltZW91dChmdW5jdGlvbigpe30sMWUzKSl9fSx0LmV4cG9ydHMuZ2V0SHRJbmZvPWZ1bmN0aW9uKCl7dmFyIHQ9e307cmV0dXJuIHQuSE9TVD1tLHQucHJvdHlwZT1kKCksdH19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9InNpemVfZGV0YWlsIiBjbGFzcz0iaHRfc2l6ZV9kZXRhaWwgZ3dkX2hhaXRhbyIgc3R5bGU9InRvcDoge3twb3MucG9zeX19cHg7bGVmdDoge3twb3MucG9zeH19cHg7Ij5cbiAgICA8c3BhbiBjbGFzcz0iY2xvc2ViYXIgY2xvc2ViZyIgdGl0bGU9IuWFs+mXrSI+PC9zcGFuPlxuICAgIFxuICAgIDxkaXYgY2xhc3M9InNpemVfaGVhZCI+XG4gICAgICAgIDxkaXYgY2xhc3M9ImNsb3RoZXNfbmF2Ij5cbiAgICAgICAgICA8dWw+XG4gICAgICAgICAgICA8bGkgY2xhc3M9InNlbGVjdCI+55S36KOFPC9saT5cbiAgICAgICAgICAgIDxsaT7lpbPoo4U8L2xpPlxuICAgICAgICAgICAgPGxpPuerpeijhTwvbGk+XG4gICAgICAgICAgICA8bGk+55S36Z6LPC9saT5cbiAgICAgICAgICAgIDxsaT7lpbPpnos8L2xpPlxuICAgICAgICAgICAgPGxpPuerpemeizwvbGk+XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InVuaXRfZGVzYyB1bml0X2NtIj7ljZXkvY3vvJrljpjnsbMoQ00pPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InVuaXRfZGVzYyB1bml0X21tIj7ljZXkvY3vvJrmr6vnsbMoTU0pPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0ic2l6ZV9jb250ZW50Ij5cbiAgICAgIDxkaXYgY2xhc3M9ImRldGFpbF9sZWZ0Ij5cbiAgICAgICAgPHNwYW4gY2xhc3M9InNoYW5neWkgc2l6ZV9ob3ZlciI+5LiK6KOFPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0ieGlhemh1YW5nIj7kuIvoo4U8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJ0b25nemh1YW5nIHRvbmd6aHVhbmcwIj4wIH4gNOWygTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InRvbmd6aHVhbmcgdG9uZ3podWFuZzQiPjQgfiAxMuWygTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InNob2VzIj7pnovlrZA8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJ0b25neGllIHRvbmd4aWUwIj4wIH4gNOWygTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InRvbmd4aWUgdG9uZ3hpZTQiPjQgfiAxMuWygTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9ImNsb3RoX2ljb24gaHRfc2hhbmd5aSBtYW5zaGFuZ3podWFuZyI+PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPSJkZXRhaWxfcmlnaHQiPlxuICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50X2NlbnRlciI+XG4gICAgICAgICAgPGRpdiBjbGFzcz0ic2l6ZV9zIj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGlkPSJzaXplX2l0ZW0iPlxuICAgICAgICAgICAgPGEgY2xhc3M9InNpemVfaXRlbV9pbWciPjwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICBcbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3M9InNpemVfZGVzYyI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InJlZCI+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuID7mraTlsLrnoIHkuLrkuIDoiKzlsLrnoIHvvIzkuI3lkIzlk4HniYzlj6/og73kvJrlrZjlnKjnm7jlupTkuI3lkIw8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0ic2l6ZV9mb290Ij5cbiAgICAgICAgPGRpdiBjbGFzcz0ic2l6ZV9jb24iPuWcqOe6v+WwuuWvuOi9rOaNouW3peWFtzwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPSJzaXplX29wIj5cbiAgICAgICAgICA8aW5wdXQgaWQ9ImZpcnN0X3NpemUiIHR5cGU9InRleHQiPlxuICAgICAgICAgIDxpbnB1dCBjbGFzcz0ic2l6ZV94aWFsYSBmaXJzdF94aWFsYSIgdmFsdWU9IuWOmOexsyIgcmVhZG9ubHk+XG4gICAgICAgICAgPGRpdiBjbGFzcz0ic2l6ZV94aWFsYWJveCIgZGF0YS1zaXplPSJmaXJzdF94aWFsYSI+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij48L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7nsbM8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7ljpjnsbM8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7mr6vnsbM8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7oi7HlsLo8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7oi7Hlr7g8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7noIE8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7lsLo8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7lr7g8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7liIY8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7ljpg8L2E+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbnZlcnNpb24iPui9rOaNouS4ujwvc3Bhbj5cbiAgICAgICAgICA8aW5wdXQgaWQ9InNlY29uZF9zaXplIj5cbiAgICAgICAgICA8aW5wdXQgY2xhc3M9InNpemVfeGlhbGEgc2Vjb25kX3hpYWxhIiB2YWx1ZT0i6Iux5a+4IiByZWFkb25seT5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJzaXplX3hpYWxhYm94IiBkYXRhLXNpemU9InNlY29uZF94aWFsYSI+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij48L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7nsbM8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7ljpjnsbM8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7mr6vnsbM8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7oi7HlsLo8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7oi7Hlr7g8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7noIE8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7lsLo8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7lr7g8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7liIY8L2E+XG4gICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7Ij7ljpg8L2E+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgICAgPC9kaXY+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9Imd3ZC1taW5pYmFyLWJnIj5cbiAgPGRpdiBpZD0iZ3dkX21pbmliYXIiIGNsYXNzPSIiPlxuICAgIDxhIGNsYXNzPSJodF93ZWJzaXRlIiB0aXRsZT0i6LSt54mp5YWaIiBpZD0iZ3dkX3dlYnNpdGVfaWNvbiIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3Lmd3ZGFuZy5jb20iPlxuICAgICAgPGVtIGNsYXNzPSJodC1iZyB3ZWJzaXRlX2ljb24iPjwvZW0+XG4gICAgPC9hPlxuICAgIDxkaXYgaWQ9Im1pbmlfcHJpY2VfaGlzdG9yeSIgY2xhc3M9Im1pbmliYXItdGFiIj5cbiAgICAgIDxkaXYgY2xhc3M9InRyZW5kLWRldGFpbCBodC1jb20tZGV0YWlsIiBpZD0iaHRfbWluaXRyZW5kX2RldGFpbCI+XG4gICAgICAgIDxkaXYgY2xhc3M9Imh0LXRyZW5kLW90aW5mbyI+XG4gICAgICAgICAgPGRpdiBjbGFzcz0iaHQtdHJlbmQtbWlubWF4Ij5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJodC1tbS1zcDEiPuacgOmrmDo8L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0iaHQtbW0tc3AyIGh0LW1tLW1heCBwcmlmb250ZiI+PC9zcGFuPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imh0LW1tLXNwMyI+5pyA5L2OOjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJodC1tbS1zcDQgaHQtbW0tbWluIHByaWZvbnRmIj48L3NwYW4+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9Imh0LWZhdm9yLWJ0biIgaWQ9Imh0X2Zhdm9yIj7pmY3ku7fmj5DphpI8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGlkPSJiaWdfdG9vbHRpcCIgY2xhc3M9ImJpZ190b29sdGlwX2JveCI+PC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9Im1pbmlfaHRfZGV0YWlsX2NoYXJ0Ij48L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgaWQ9ImFtYXpvbl9nbG9iYWxfYm94IiBjbGFzcz0ibWluaWJhci10YWIiPjwvZGl2PlxuICAgIDxkaXYgaWQ9InlqX2hhaXRhbyIgY2xhc3M9Im1pbmliYXItdGFiIj5cbiAgICAgIFxuICAgIDwvZGl2PlxuICAgIFxuICA8L2Rpdj5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgLmd3ZC1taW5pYmFyLWJnIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDEwcHggMDtcbiAgfVxuICAuZ3dkXzZwbSAuZ3dkLW1pbmliYXItYmcge1xuICAgIG1heC13aWR0aDogNDQ1cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDExOHB4O1xuICB9XG4gIC5taW5pYmFyLXRhYjpob3ZlciAuaHQtY29tLWRldGFpbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbiAgI2h0X21pbml0cmVuZF9kZXRhaWwge1xuICAgIGhlaWdodDogMjUwcHg7XG4gICAgbGVmdDogLTFweDtcbiAgfVxuICAuaHQtdHJlbmQtb3RpbmZvIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBoZWlnaHQ6IDU2cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmh0LXRyZW5kLW1pbm1heCBzcGFuIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgfVxuICAuaHQtY29tLWRldGFpbCAuaHQtbW0tc3AxIHtcbiAgICBtYXJnaW4tbGVmdDogMThweDtcbiAgfVxuICAuaHQtY29tLWRldGFpbCAuaHQtbW0tc3AxLCAuaHQtY29tLWRldGFpbCAuaHQtbW0tc3AyIHtcbiAgICBjb2xvcjogICNFNDM5M0M7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIH1cbiAgLmh0LWNvbS1kZXRhaWwgLmh0LW1tLXNwMiwgLmh0LWNvbS1kZXRhaWwgLmh0LW1tLXNwNCB7XG4gICAgbGluZS1oZWlnaHQ6IDE4cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcbiAgfVxuICAuaHQtY29tLWRldGFpbCAuaHQtbW0tc3AzIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuICAuaHQtY29tLWRldGFpbCAuaHQtbW0tc3AzLCAuaHQtY29tLWRldGFpbCAuaHQtbW0tc3A0IHtcbiAgICBjb2xvcjogIzM1QkQ2NztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICAuaHQtY29tLWRldGFpbCAuaHQtZmF2b3ItYnRuIHtcbiAgICB3aWR0aDogNzRweDtcbiAgICBoZWlnaHQ6IDI2cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0YwNzk2MDtcbiAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgY29sb3I6ICNGMDc4NjA7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbi1yaWdodDogMjJweDtcbiAgICBtYXJnaW4tdG9wOiAxMXB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyNnB4O1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB9XG4gIC5odC1jb20tZGV0YWlsIC5odC1mYXZvci1idG4uY29sbGVjdGVkIHtcbiAgICBiYWNrZ3JvdW5kOiAjRjA3ODYwO1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gICNtaW5pX2h0X2RldGFpbF9jaGFydCB7XG4gICAgd2lkdGg6IDQwMnB4O1xuICAgIGhlaWdodDogMTcycHg7XG4gICAgbWFyZ2luLWxlZnQ6IDE4cHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZsb2F0OiBsZWZ0O1xuICB9XG4gICAgZGl2I2d3ZF9taW5pYmFyLGRpdiNnd2RfbWluaWJhciAuaHRfd2Vic2l0ZSwgZGl2I2d3ZF9taW5pYmFyIC5taW5pYmFyLXRhYiB7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgfVxuICAgIC5odF93ZWJzaXRlIHtcbiAgICAgIHdpZHRoOiA0NHB4O1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgICNnd2RfbWluaWJhciAubWluaWJhci10YWIge1xuICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gICAgfVxuICAgICNnd2RfbWluaWJhciAubWluaWJhci10YWI6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogI0VERjFGMjtcbiAgICAgfVxuICAgIC5odF93ZWJzaXRlIGVte1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTdweCAtOHB4O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDIycHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNHB4O1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICB9XG4gICAgLmhhc2dsb2JhbCAuaHRfd2Vic2l0ZSBlbSB7XG4gICAgICBtYXJnaW4tbGVmdDogMTFweDtcbiAgICB9XG4gICAgI21pbmlfcHJpY2VfaGlzdG9yeSBlbS5odC1iZyB7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIGhlaWdodDogMTNweDtcbiAgICAgIG1hcmdpbi10b3A6IDE0cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDZweDtcbiAgICB9XG4gICAgI21pbmlfcHJpY2VfaGlzdG9yeSBlbS5wcmktdDEge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTU4cHggLTEzcHg7XG4gICAgfVxuICAgICNtaW5pX3ByaWNlX2hpc3RvcnkgZW0ucHJpLXQwIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC04MnB4IC0xM3B4O1xuICAgIH1cbiAgICAjbWluaV9wcmljZV9oaXN0b3J5IGVtLnByaS10LTEge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM1cHggLTEzcHg7XG4gICAgfVxuICAgICNtaW5pX3ByaWNlX2hpc3RvcnkgZW0ucHJpLXQtMiB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTA3cHggLTEzcHg7XG4gICAgfVxuICAgIGRpdiNnd2RfbWluaWJhciAuaHRfd2Vic2l0ZSB7XG4gICAgICB3aWR0aDogNTBweDtcbiAgICB9XG4gICAgZGl2I2d3ZF9taW5pYmFyLmhhc2dsb2JhbCAuaHRfd2Vic2l0ZSB7XG4gICAgICB3aWR0aDogNDRweDtcbiAgICB9XG4gICAgZGl2I2d3ZF9taW5pYmFyIHtcbiAgICAgIHdpZHRoOiA0NDBweDtcbiAgICB9XG4gICAgI3lqX2hhaXRhbyB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB3aWR0aDogMjA5cHg7XG4gICAgfVxuICAgIC5oYXNnbG9iYWwgI3lqX2hhaXRhbyB7XG4gICAgICB3aWR0aDogMTUxcHg7XG4gICAgfVxuICAgIC5taW5pYmFyLXRhYiB7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICB9XG5cblxuICAgIC5odC1iZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCdodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL3hidC9oYWl0YW9fbWluaTEucG5nXCcpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuaHQtY29tLWRldGFpbCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDQwcHg7XG4gICAgICBsZWZ0OiAtMXB4O1xuICAgICAgYmFja2dyb3VuZDogI0ZGRkZGRjtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNFNkU5RUI7XG4gICAgICBib3gtc2hhZG93OiAwIDJweCA0cHggMCByZ2JhKDAsMCwwLDAuMTEpO1xuICAgICAgaGVpZ2h0OiAyMjBweDtcbiAgICAgIHdpZHRoOiA0NDBweDtcbiAgICAgIHotaW5kZXg6IDk5OTtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgIC5nbG9iYWwtY29udGVudCB7XG4gICAgICBoZWlnaHQ6IDE4MHB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICAgIC5nbC1sZWZ0IHtcbiAgICAgIHdpZHRoOiAxNTNweDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAuZ2xvYmFsLW1vZGVsIC5nbC1sZWZ0IHtcbiAgICAgIHdpZHRoOiAxNTNweDtcbiAgICB9XG4gICAgLnlqaHQtbW9kZWwgLmdsLWxlZnQge1xuICAgICAgd2lkdGg6IDE2MHB4O1xuICAgIH1cbiAgICAuZ2wtbGVmdCAuZ2wtbC1pdGVte1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGOUY5Rjk7XG4gICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjRjlGOUY5O1xuICAgIH1cbiAgICAuZ2wtbC1pdGVtIHtcbiAgICAgIGhlaWdodDogNDRweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuICAgIC5nbC1sZWZ0IC5nbC1sLWl0ZW06bGFzdC1jaGlsZCB7XG4gICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgIH1cbiAgICAuZ2wtbC1pdGVtIGVtIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogMjZweDtcbiAgICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgfVxuICAgIC56aXlpbmcgZW17XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNHB4IC0zNnB4O1xuICAgIH1cbiAgICAuc2FuZmFuZyBlbSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjhweCAtMzZweDtcbiAgICB9XG4gICAgLnpoaXlvdSBlbSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTI0cHggLTM2cHg7XG4gICAgfVxuICAgIC5zYW1lc3R5bGUgZW0ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTE0OHB4IC0zNnB4O1xuICAgIH1cbiAgICAudmlwZmVlIGVtIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xNzJweCAtMzZweDtcbiAgICB9XG4gICAgLmdsLWwtaXRlbSBzcGFuIHtcbiAgICAgIGNvbG9yOiAjNDA0NTQ3O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDQ0cHg7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICB9XG4gICAgLmdsb2JhbC1mb290IHtcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICB9XG4gICAgLmdsb2JhbC1jb250ZW50IC5wcmlmb250ZiB7XG4gICAgICBsaW5lLWhlaWdodDogNDZweDtcbiAgICB9XG4gICAgLmdsb2JhbC1mb290IHNwYW4ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogMjg1cHg7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRURGMUYyO1xuICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogIzk2OTg5OTtcbiAgICB9XG4gICAgLmdsb2JhbC1mb290IGEge1xuICAgICAgd2lkdGg6IDE1NXB4O1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgYmFja2dyb3VuZDogIzY0NkZCMDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC5nbC1yaWdodCBhIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDI4NXB4O1xuICAgICAgaGVpZ2h0OiAxODBweDtcbiAgICB9XG4gICAgLmdsLWltZy1ib3gge1xuICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLXRvcDogMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICBmb250LXNpemU6MDtcbiAgICB9XG4gICAgLmdsLXJpZ2h0IGEgaW1nIHtcbiAgICAgIGhlaWdodDogYXV0bztcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgICAgIG1heC1oZWlnaHQ6IDEwMHB4O1xuICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICBmb250LXNpemU6MTZweDtcbiAgICB9XG4gICAgLmdsLWltZy1ib3g6YWZ0ZXIge1xuICAgICAgY29udGVudDpcJ1wnO1xuICAgICAgd2lkdGg6MDtcbiAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgfVxuICAgIC5nbC1yaWdodCBwIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDI0MHB4O1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgbWFyZ2luLWxlZnQ6IDIycHg7XG4gICAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE3cHg7XG4gICAgICBtYXgtaGVpZ2h0OiAzNHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjNUM2MjY2O1xuICAgIH1cblxuICAgIGRpdi5nd2RfaGFpdGFvIC5odF9nZXRwcmljZSB7XG4gICAgICB3aWR0aDogMTYwcHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIH1cbiAgICBkaXYuZ3dkX2hhaXRhbyAuaHRfZ2V0cHJpY2Ugc3BhbiB7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgfVxuICAgICNhbWF6b25fZ2xvYmFsX2JveCB7XG4gICAgICB3aWR0aDogMTQ1cHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgICNhbWF6b25fZ2xvYmFsIHtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGNvbG9yOiAjNDA0NTQ3O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgICAuaGFzZ2xvYmFsICNtaW5pX3ByaWNlX2hpc3Rvcnkge1xuICAgICAgd2lkdGg6IDk3cHg7XG4gICAgfVxuICAgICNtaW5pX3ByaWNlX2hpc3Rvcnkge1xuICAgICAgd2lkdGg6IDE3OXB4O1xuICAgIH1cbiAgICAjYW1hem9uX2dsb2JhbCBzcGFuLCAueWpodGJ0biBzcGFuIHtcbiAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICAgIGNvbG9yOiAjNDA0NTQ3O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgfVxuICAgICNhbWF6b25fZ2xvYmFsOmhvdmVyIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjNDU0YTRkO1xuICAgIH1cbiAgICBcbiAgICAuaHRfZ2V0cHJpY2VfbnVtLCAueWpodC10bGUtcHJpIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjRTQzOTNDIWltcG9ydGFudDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAycHg7XG4gICAgICBsaW5lLWhlaWdodDogNDJweCFpbXBvcnRhbnQ7XG4gICAgfVxuICAgICNnd2RfbWluaWJhciAubWluaWJhci1idG4tYm94PnNwYW4ge1xuICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pic7Cn0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPW4oMTIwKTsic3RyaW5nIj09dHlwZW9mIGkmJihpPVtbdC5pZCxpLCIiXV0pO24oMjkpKGkse30pO2kubG9jYWxzJiYodC5leHBvcnRzPWkubG9jYWxzKX0sZnVuY3Rpb24odCxlLG4pe2U9dC5leHBvcnRzPW4oMjgpKCksZS5wdXNoKFt0LmlkLCIgI2d3ZF9odF9tYWluIGF7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGZvbnQtZmFtaWx5OiAnTWljcm9zb2Z0IFlhaGVpJ1xuICAgIH1cbiAgICAjZ3dkX2h0X21haW4gLnVuaXRfcHJpY2UgI2h0X2FkZGNvbGxlY3R7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZjA3ODYwO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB3aWR0aDogNzdweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgbWFyZ2luLWJvdHRvbTogNnB4O1xuICAgICAgbWFyZ2luLXRvcDogNHB4O1xuICAgICAgY29sb3I6ICNmMDc4NjA7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAudW5pdF9wcmljZSAjaHRfYWRkY29sbGVjdC50cmVuZF93YWl0LmNfYWRkaW5ne1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YwNzg2MDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAjZ3dkX2h0X21haW4gLnVuaXRfcHJpY2UgI2h0X2FkZGNvbGxlY3QudHJlbmRfd2FpdC5jX2FkZGVke1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2YwNzg2MDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuZGl2X2RldGFpbCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDE0NnB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U2ZTllYjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICB6LWluZGV4OiA5OTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICM4ODg7XG4gICAgICBwYWRkaW5nOiA2cHggNnB4IDlweCA2cHg7XG4gICAgICBib3gtc2hhZG93OiAycHggMnB4IDEycHggMnB4ICNlNmU5ZWI7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jb250ZW50X2RlZmF1bHRfbGVmdCAud2VpZ2h0X3R5cGVfZGV0YWlsICB7XG4gICAgICB0b3A6IDdweDtcbiAgICAgIGxlZnQ6IDE1NnB4O1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDExM3B4O1xuICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgICBwYWRkaW5nOiAwcHggNnB4O1xuICAgIH1cbiAgICAucHJvX3R5cGVfZGV0YWlsIHtcbiAgICAgIHRvcDogOXB4O1xuICAgICAgbGVmdDogMzUwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5wcm9fdHlwZV9kZXRhaWwuZGl2X2RldGFpbCB7XG4gICAgICBwYWRkaW5nOiAwIDZweDtcbiAgICAgIHdpZHRoOiAxMzRweDtcbiAgICB9XG4gICAgLnNpemVfZGV0YWlsIHtcbiAgICAgIHRvcDogMTMwcHg7XG4gICAgICBsZWZ0OiAzNTBweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnNpemVfZGV0YWlsLmRpdl9kZXRhaWwge1xuICAgICAgcGFkZGluZzogMHB4IDZweDtcbiAgICAgIHdpZHRoOiAxMTBweDtcbiAgICB9XG4gICAgLnByb190eXBlOmhvdmVyLC5tYWlsX3R5cGU6aG92ZXIge1xuICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuaHRfZ2V0cHJpY2U6aG92ZXJ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBjb2xvcjogIzQ1NEE0RDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9sZWZ0e1xuICAgICAgaGVpZ2h0OiAxNjBweDtcbiAgICAgIHdpZHRoOiAyNTRweDtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmh0X2ZyZWlnaHQsLmd3ZF9oYWl0YW8gLmRlbF9saW5le1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICAgIH1cbiAgICBhLmh0X3RyYW5zcG9ydF9idG4gc3BhbiwgLmh0X3RhcmlmZl9idG4gc3BhbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgIH1cbiAgICBhLmh0X3RyYW5zcG9ydF9idG4gc3Bhbjpob3ZlciwgLmh0X3RhcmlmZl9idG4gc3Bhbjpob3ZlciB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNvbnRlbnRfZGVmYXVsdF9yaWdodHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGhlaWdodDogMTYwcHg7XG4gICAgICB3aWR0aDogMTE5cHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jb250ZW50X2RlZmF1bHRfcmlnaHQgYXtcbiAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICAgICAgY29sb3I6ICMzODM4MzU7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U2ZTllYjtcbiAgICAgIHBhZGRpbmc6IDAgMCAwIDE0cHg7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jb250ZW50X2RlZmF1bHRfcmlnaHQgYSBzcGFuIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3cHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jb250ZW50X2RlZmF1bHRfcmlnaHQgYTpob3ZlcntcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjMzgzODM1O1xuICAgIH1cbiAgICAjZ3dkX2h0X21haW4gLnNpemVfaGVscHtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJvcmRlci1ib3R0b206IG5vbmU7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAuc2l6ZV9oZWxwIHNwYW4ge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6ICM1YWE0Y2M7XG4gICAgfVxuICAgICNnd2RfaHRfbWFpbiAuc2l6ZV9oZWxwIHNwYW46aG92ZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jb250ZW50X2RlZmF1bHRfcmlnaHQgZW17XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHRvcDogNXB4O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuc2l6ZV9oZWxwIGVte1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX3NpemVpY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5odF90cmFuc2xhdGUgZW17XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fdHJhbnNpY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5wcm9fdHlwZSAueml5aW5ne1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX3ppeWluZ2ljb24ucG5nJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5wcm9fdHlwZSAuc2FuZmFuZ3tcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zYW5pY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5tYWlsX3R5cGUgLnpoaXlvdXtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb196aGlpY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAubWFpbF90eXBlIC5mZWl6aGl5b3V7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9femh1YW5pY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4IDIwcHg7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5zYW1lLXN0eWxlIGVtIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zYW1lc3R5bGUucG5nJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC52aXBfdGxlIGVtIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb192aXBpY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuZ3dkX3dpc2hsaXN0X3RyZW5kX2RldGFpbF93cmFwcGVye1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5odF9jb250ZW50e1xuICAgICAgaGVpZ2h0OiAxNjJweDtcbiAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZTZlOWViO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuY29udGVudF9kZWZhdWx0IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAuY29udGVudF9kZWZhdWx0OmFmdGVyLCAuZ3dkX2hhaXRhbyAuY29udGVudF9kZWZhdWx0X3JpZ2h0OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgICAjY2F0ZV9zZWxlY3RfYm94e1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLXRvcDogNHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAjY2F0ZV9zZWxlY3RfYm94IGlucHV0e1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgd2lkdGg6IDEwOXB4O1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Rvd25ncmF5aWNvbi5wbmcnKSBuby1yZXBlYXQgODlweCAxMXB4O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDdweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIHBhZGRpbmc6IDNweCA3cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBjb2xvcjogIzljYTdhZDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gI2NhdGVfc2VsZWN0X2JveCBpbnB1dC5zZWxfaW5mb3tcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlMWUxZTE7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvICNjYXRlX3NlbGVjdF9ib3ggaW5wdXQuaW5wdXRfaG92ZXJ7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2ZmZjtcbiAgICAgIGNvbG9yOiAjOWNhN2FkO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY2F0ZV9zZWxlY3RfMXtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIycHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTY5ODk5O1xuICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY2F0ZV9zZWxlY3RfMS5zZWxlY3RfaG92ZXIgLCAuZ3dkX2hhaXRhbyAuY2F0ZV9zZWxlY3RfMi5zZWxlY3RfaG92ZXJ7XG4gICAgICBoZWlnaHQ6IDIxOHB4O1xuICAgICAgei1pbmRleDogOTk5OTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG5cbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNhdGVfc2VsZWN0XzJ7XG4gICAgICBtYXJnaW4tbGVmdDogMTZweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Njk4OTk7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLnhpYWxhYm94e1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gICAgICBvdmVyZmxvdy14OiBoaWRkZW47XG4gICAgICBoZWlnaHQ6IDE4NXB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMTA5cHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICAgIC5pZV9oYWNrLmd3ZF9oYWl0YW8gLnhpYWxhYm94IHtcbiAgICAgIHdpZHRoOiAxMTFweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gI3NlbGVjdF9idG57XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogMjRweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0N2JlZmU7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyM3B4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiA1NHB4O1xuICAgICAgbGVmdDogMTE2cHg7XG4gICAgfVxuICAgICN0cmFuc3BvcnRfZGV0YWlse1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgd2lkdGg6IDc1NXB4O1xuICAgICAgaGVpZ2h0OiAzMTRweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgdG9wOiA0MDBweDtcbiAgICAgIGxlZnQ6IDQwMHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIHotaW5kZXg6IDk5OTk5O1xuICAgICAgYm94LXNoYWRvdzogMHB4IDVweCAxOXB4IDBweCAjZDdkOGQ5O1xuICAgIH1cbiAgICAjdHJhbnNwb3J0X2RldGFpbCAqe1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB9XG4gICAgI3RyYW5zcG9ydF9kZXRhaWwgLnRyYW5zX25hdiAuc3Bhbl8wIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIH1cbiAgICAjdHJhbnNwb3J0X2RldGFpbCAudHJhbnNfbmF2IC5zcGFuXzF7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgd2lkdGg6IDE0NnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDE3cHg7XG4gICAgfVxuICAgICN0cmFuc3BvcnRfZGV0YWlsIC50cmFuc19uYXYgLnNwYW5fMntcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB3aWR0aDogMTQ3cHg7XG4gICAgICBtYXJnaW4tbGVmdDogNHB4O1xuICAgIH1cbiAgICAuaHRfdHJhbnNfZGV0YWlsIC50cmFuc19oZWFke1xuICAgICAgaGVpZ2h0OiA1MXB4O1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgfVxuICAgIC5nd2RfaGFpdGFvIC5jbG9zZWJhcntcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogNHB4O1xuICAgICAgcmlnaHQ6IDdweDtcbiAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuZ3dkX2hhaXRhbyAuY2xvc2ViYXIuY2xvc2ViZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCJodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Nsb3NlaWNvbi5wbmdcIikgNnB4IDZweCBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDlweCA5cHg7XG4gICAgICBoZWlnaHQ6IDIycHg7XG4gICAgICB3aWR0aDogMjJweDtcbiAgICAgIHRvcDogMXB4O1xuICAgICAgcmlnaHQ6IDFweDtcbiAgICB9XG4gICAgLmd3ZF9oYWl0YW8gLmNsb3NlYmFyLmNsb3NlYmc6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogdXJsKFwiaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19jbG9zZWhvdmVyaWNvbi5wbmdcIikgM3B4IDNweCBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDE1cHggMTVweDtcbiAgICB9XG5cbiAgICAuc2l6ZV9kZXNjIHtcbiAgICAgIGNvbG9yOiAjOWY5ZjlmO1xuICAgICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgfVxuXG5cbiAgICAvKiDlsLrnoIHluK7liqkgKi9cbiAgICAjc2l6ZV9kZXRhaWx7XG4gICAgICB3aWR0aDogNjE4cHg7XG4gICAgICBoZWlnaHQ6IDQ0MHB4O1xuICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgdG9wOiA0MDBweDtcbiAgICAgIGxlZnQ6IDQwMHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5O1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTZlOWViOyBcbiAgICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTlweCAwcHggI2Q3ZDhkOTsgICAgICAgXG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuc2hhbmd5aSwgLnRvbmd6aHVhbmcwLCAudG9uZ3hpZTB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAzOHB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnhpYXpodWFuZywgLnRvbmd6aHVhbmc0LCAudG9uZ3hpZTR7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDUwcHg7XG4gICAgICBsZWZ0OiAzOHB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNob2VzLC5odF9zaXplX2RldGFpbCAudG9uZ3podWFuZywgLmh0X3NpemVfZGV0YWlsIC50b25neGlle1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIHNwYW4uc2hvZXMge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAzOXB4O1xuICAgICAgbGVmdDogMzhweDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQ3YmVmZTtcbiAgICAgIGJvcmRlcjogIDFweCBzb2xpZCAjNDdiZWZlO1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNoYW5neWkuc2l6ZV9ob3ZlciwuaHRfc2l6ZV9kZXRhaWwgLnhpYXpodWFuZy5zaXplX2hvdmVyLCAuaHRfc2l6ZV9kZXRhaWwgLnhpYXpodWFuZy5zaXplX2hvdmVyLCAuaHRfc2l6ZV9kZXRhaWwgLnRvbmd6aHVhbmcuc2l6ZV9ob3ZlciwgLmh0X3NpemVfZGV0YWlsIC50b25neGllLnNpemVfaG92ZXJ7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDdiZWZlO1xuICAgICAgYm9yZGVyOiAgMXB4IHNvbGlkICM0N2JlZmU7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaGFuZ3lpLC5odF9zaXplX2RldGFpbCAueGlhemh1YW5nLC5odF9zaXplX2RldGFpbCAuc2hvZXMsLmh0X3NpemVfZGV0YWlsIC50b25nemh1YW5nLCAuaHRfc2l6ZV9kZXRhaWwgLnRvbmd4aWV7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgICAgIGJvcmRlcjogIDFweCBzb2xpZCAjOTY5ODk5O1xuICAgICAgY29sb3I6ICM4QTk0OTk7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhfaWNvbntcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMTAwcHg7XG4gICAgICBsZWZ0OiAyMnB4O1xuICAgIH1cbiAgICBcbiAgICAuaHRfc2l6ZV9kZXRhaWwgLm1hbnNoYW5nemh1YW5nIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL21hbl9zaGFuZ3podWFuZy5wbmcnKSAtNHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBoZWlnaHQ6IDE5MXB4O1xuICAgICAgd2lkdGg6IDkzcHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAud29tYW5zaGFuZ3podWFuZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy93b21hbl9zaGFuZ3podWFuZy5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGhlaWdodDogMTg3cHg7XG4gICAgICB3aWR0aDogODdweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5raWQwIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2tpZHMwXzQucG5nJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBoZWlnaHQ6IDE4N3B4O1xuICAgICAgd2lkdGg6IDg3cHg7XG4gICAgICBtYXJnaW4tbGVmdDogOHB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLmtpZDQge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMva2lkczRfMTIucG5nJykgLTJweCAwcHggbm8tcmVwZWF0O1xuICAgICAgaGVpZ2h0OiAxODdweDtcbiAgICAgIHdpZHRoOiA4N3B4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDBweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5tYW54aWF6aHVhbmcge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvbWFuX3hpYXpodWFuZy5wbmcnKSAtMTdweCAwcHggbm8tcmVwZWF0O1xuICAgICAgaGVpZ2h0OiAyMTZweDtcbiAgICAgIHdpZHRoOiA2M3B4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEzcHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAud29tYW54aWF6aHVhbmcge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvd29tYW5feGlhemh1YW5nLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgaGVpZ2h0OiAyMjBweDtcbiAgICAgIHdpZHRoOiA2NnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDExcHg7XG4gICAgfVxuICAgIFxuICAgIC5odF9zaXplX2RldGFpbCAuaHRfc2hvZXMubWFuX2Zvb3Qge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvbWFuX2Zvb3QucG5nJykgNHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBoZWlnaHQ6IDE3MHB4O1xuICAgICAgd2lkdGg6IDExMXB4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLmh0X3Nob2VzLndvbWFuX2Zvb3Qge1xuICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL3MxLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvd29tYW5fZm9vdC5wbmcnKSA0cHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGhlaWdodDogMTcwcHg7XG4gICAgICB3aWR0aDogMTExcHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuaHRfc2hvZXMua2lkc19mb290IHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2tpZF9zaG9lcy5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGhlaWdodDogMTcxcHg7XG4gICAgICB3aWR0aDogMTMxcHg7XG4gICAgICBsZWZ0OiA0cHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXZ7XG4gICAgICBtYXJnaW4tdG9wOiAxM3B4O1xuICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICB3aWR0aDogNTY3cHg7XG4gICAgICBtYXJnaW4tbGVmdDogNTVweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5jbG90aGVzX25hdiB1bHtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBtYXJnaW46IDBweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX3N7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAjZTZlOWViO1xuICAgIH1cbiAgICAuZGV0YWlsX2xlZnQge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogMTM2cHg7XG4gICAgICBoZWlnaHQ6IDM2N3B4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuZGV0YWlsX2xlZnQgc3BhbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAjc2l6ZV9pdGVte1xuICAgICAgaGVpZ2h0OiAxODBweDtcbiAgICAgIHdpZHRoOiA0NTJweDtcbiAgICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNmU5ZWI7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXYgdWwgbGl7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICB3aWR0aDogMzJweDtcbiAgICAgIG1hcmdpbi1yaWdodDogNTdweDtcbiAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICNmZmY7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXYgdWwgbGk6aG92ZXIge1xuICAgICAgY29sb3I6ICM0N2JlZmU7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuY2xvdGhlc19uYXYgdWwgbGkuc2VsZWN0e1xuICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICM0N2JlZmU7XG4gICAgICBjb2xvcjogIzQ3YmVmZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX2hlYWR7XG4gICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAudW5pdF9kZXNje1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyN3B4O1xuICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNpemVfY29ue1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTFweDtcbiAgICAgIG1hcmdpbi1yaWdodDogMjZweDtcbiAgICAgIGNvbG9yOiAjNTc1ZTYxO1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNpemVfb3B7XG4gICAgICB3aWR0aDogNDQwcHg7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuXG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX29wIGlucHV0K2lucHV0IHtcbiAgICAgbWFyZ2luLWxlZnQ6IDBweDsgXG4gICAgfVxuICAgICNmaXJzdF9zaXplKy5maXJzdF94aWFsYSB7XG4gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgcmlnaHQ6IDI2N3B4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNpemVfb3AgaW5wdXR7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBoZWlnaHQ6IDMxcHg7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIH1cbiAgICAjZmlyc3Rfc2l6ZSwgI3NlY29uZF9zaXplIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAwIDdweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Njk4OTk7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgIH1cbiAgICAjZmlyc3Rfc2l6ZTpmb2N1cywgI3NlY29uZF9zaXplOmZvY3VzIHtcbiAgICAgIGJvcmRlci1jb2xvcjogIzQ3YmVmZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX3hpYWxhYm94IHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogMTkwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBsaW5lLWhlaWdodDogMTlweDtcbiAgICAgIHRvcDogLTE4OXB4O1xuICAgICAgcmlnaHQ6IDI2N3B4O1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiA0cHg7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogNHB4O1xuICAgIH1cbiAgICAjc2Vjb25kX3NpemUrLnNlY29uZF94aWFsYXtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAtMTRweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsICNzZWNvbmRfc2l6ZStpbnB1dCsuc2l6ZV94aWFsYWJveHtcbiAgICAgIHJpZ2h0OiAtMTRweDtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX3hpYWxhYm94IGF7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmctbGVmdDogN3B4O1xuICAgICAgY29sb3I6ICM1YzYyNjY7XG4gICAgfVxuICAgIC5odF9zaXplX2RldGFpbCAuc2l6ZV94aWFsYWJveCBhOmhvdmVye1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgICBjb2xvcjogIzQ3YmVmZTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX29wIC5zaXplX3hpYWxhe1xuICAgICAgd2lkdGg6IDYwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xuICAgICAgcGFkZGluZy1sZWZ0OiA3cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICBjb2xvcjogIzhhOTQ5OTtcbiAgICB9XG4gICAgLmh0X3NpemVfZGV0YWlsIC5zaXplX29wIC5zaXplX3hpYWxhLm1zSG92ZXIge1xuICAgICAgYm9yZGVyLXJhZGl1czogMHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDRweDtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb191cGdyYXlpY29uLnBuZycpIG5vLXJlcGVhdCA0MnB4IDEycHg7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDEycHggN3B4O1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLnNpemVfeGlhbGF7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczEuZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fZG93bmdyYXlpY29uLnBuZycpIG5vLXJlcGVhdCA0MnB4IDEycHg7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDEycHggN3B4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAuaHRfc2l6ZV9kZXRhaWwgLmNvbnZlcnNpb257XG4gICAgICBtYXJnaW46IDAgMzBweCAwIDEwNXB4O1xuICAgIH1cbiAgICAvKiBmYW55aSAqL1xuICAgIC5odF9mYW55aXtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgei1pbmRleDogOTk7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmIHVybCgnaHR0cHM6Ly9zMS5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19mYW55aV9pY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzQ3YmVmZTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgIG1pbi1oZWlnaHQ6IDI1cHg7XG4gICAgICBjb2xvcjogIzQ5NGI0ZDtcbiAgICAgIHRleHQtaW5kZW50OiAzMnB4O1xuICAgICAgcGFkZGluZzogMnB4IDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMTlweDtcbiAgICB9XG4gICAgLmh0X2ZhbnlpIGF7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMzBweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjNDk0YjRkO1xuICAgIH1cbiAgICAuaHRfZmFueWkgYTpob3ZlcntcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjNDk0YjRkO1xuICAgIH1cbiAgICAjaHRfdG9we1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgd2lkdGg6IDBweDtcbiAgICAgIGhlaWdodDogMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDBweDtcbiAgICAgIGJvcmRlci1ib3R0b206IDhweCBzb2xpZCAjMjc4YWM5O1xuICAgICAgYm9yZGVyLWxlZnQ6IDlweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgIGJvcmRlci1yaWdodDogOXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgbGVmdDogNThweDtcbiAgICAgIHRvcDogLThweDtcbiAgICB9XG4gICAgI2h0X3RvcDphZnRlciB7XG4gICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB3aWR0aDogMHB4O1xuICAgICAgaGVpZ2h0OiAwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMHB4O1xuICAgICAgYm9yZGVyLWJvdHRvbTogN3B4IHNvbGlkICNmZmY7XG4gICAgICBib3JkZXItbGVmdDogOHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgYm9yZGVyLXJpZ2h0OiA4cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICBsZWZ0OiAtOHB4O1xuICAgICAgdG9wOiAxcHg7XG4gICAgfVxuICAgIC8qIOa7muWKqOadoeagt+W8jyAqL1xuICAgIC5nd2RfaGFpdGFvIDo6LXdlYmtpdC1zY3JvbGxiYXIge3dpZHRoOjZweDtoZWlnaHQ6IDZweDt9XG4gICAgLmd3ZF9oYWl0YW8gOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7YmFja2dyb3VuZDojZjBmMGYwO31cbiAgICAuZ3dkX2hhaXRhbyA6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iIHtcbiAgICAgIGJhY2tncm91bmQ6ICNjZGNkY2Q7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgfVxuICAgICNzaXplX2RldGFpbCA6Oi13ZWJraXQtc2Nyb2xsYmFyIHt3aWR0aDoycHg7aGVpZ2h0OiA2cHg7fVxuICAgIC8qIOS6mumprOmAiumBruaMoSAqL1xuICAgIGRpdiNhY3Rpb25QYW5lbFdyYXBwZXIuYnVyaiB7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZSFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAiLCIiXSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDEzKSxyPXsi5Lqs5LicIjp7c2l0ZV9pZDozLHBhdHRlcm46Imh0dHA6Ly9zZWFyY2guamQuY29tL1NlYXJjaD9lbmM9dXRmLTgma2V5d29yZD0ifSwi5Lqa6ams6YCKIjp7c2l0ZV9pZDoxLHBhdHRlcm46Imh0dHA6Ly93d3cuYW1hem9uLmNuL3M/ZmllbGQta2V5d29yZHM9In0sIuW9k+W9kyI6e3NpdGVfaWQ6MixwYXR0ZXJuOiJodHRwOi8vc2VhcmNoLmRhbmdkYW5nLmNvbS8/a2V5PSJ9LCLoi4/lroEiOntzaXRlX2lkOjI1LHBhdHRlcm46Imh0dHA6Ly9zZWFyY2guc3VuaW5nLmNvbS9lbWFsbC9zZWFyY2guZG8/a2V5d29yZD0ifSwi5reY5a6dIjp7c2l0ZV9pZDo4MyxwYXR0ZXJuOiJodHRwOi8vcy50YW9iYW8uY29tL3NlYXJjaD9xPSJ9LCLlm73nvo4iOntzaXRlX2lkOjI4LHBhdHRlcm46Imh0dHA6Ly93d3cuZ29tZS5jb20uY24vc2VhcmNoP3F1ZXN0aW9uPSJ9LCLkuIDlj7flupciOntzaXRlX2lkOjMxLHBhdHRlcm46Imh0dHA6Ly9zZWFyY2gueWhkLmNvbS9zMi9jMC0wL2sifSwi5ZSv5ZOB5LyaIjp7c2l0ZV9pZDoxMjkscGF0dGVybjoiaHR0cDovL3d3dy4iK2UuZXh0TmFtZSsiLmNvbS9zZWFyY2g/ZnJvbT1leHQmY3JjNjQ9MSZzX3ZpcD0ifSwi6LSt54mp5YWaIjp7cGF0dGVybjoiaHR0cHM6Ly93d3cuIitlLmV4dE5hbWUrIi5jb20vc2VhcmNoP2Zyb209ZXh0JnNfcHJvZHVjdD0iLHNpdGVfaWQ6MH19LHM9ZnVuY3Rpb24odCl7dmFyIG49IiIsbz1yW3RdLnBhdHRlcm4sYT1yW3RdLnNpdGVfaWQscz1pKCIuc2VhcmNoLWlucHV0IikudmFsKCk7cmV0dXJuIG49Iui0reeJqeWFmiI9PT10fHwi5ZSv5ZOB5LyaIj09PXR8fCLoi4/lroEiPT09dD9vK2VuY29kZVVSSUNvbXBvbmVudChzKToi5b2T5b2TIj09PXQ/bytlbmNvZGVVUklDb21wb25lbnQocykrIiZhY3Q9aW5wdXQiOmUudV9zZXJ2ZXIyKyIvdW5pb24vZ28vP3NfcHJvZHVjdD0iK2VuY29kZVVSSUNvbXBvbmVudChzKSsiJnRhcmdldF91cmw9IitlbmNvZGVVUklDb21wb25lbnQobytlbmNvZGVVUkkocykpKyImc2l0ZV9pZD0iK2EsaSgiLnNlYXJjaC1zdWJtaXQiKS5hdHRyKCJocmVmIixuKSxufSxsPWZ1bmN0aW9uKCl7dmFyIHQ9dm9pZCAwLGU9dm9pZCAwO2koIi5zZWFyY2gtdGxlIikub24oImNsaWNrIixmdW5jdGlvbigpe2U/KGkoIi5iamQtc2VhcmNoLWxpc3QiKS5oaWRlKCksaSgiLnNlYXJjaC10bGUgZW0iKS5yZW1vdmVDbGFzcygiZW11cCIpLGkoIi5zZWFyY2gtdGxlIikucmVtb3ZlQ2xhc3MoInNlYXJjaC1zZWxlY3QiKSxlPSExKTooZT0hMCxpKCIuYmpkLXNlYXJjaC1saXN0Iikuc2hvdygpLGkoIi5zZWFyY2gtdGxlIikuYWRkQ2xhc3MoInNlYXJjaC1zZWxlY3QiKSxpKCIuc2VhcmNoLXRsZSBlbSIpLmFkZENsYXNzKCJlbXVwIikpfSksaSgiLmJqZC1zZWFyY2gtbGlzdCIpLm9uKCJjbGljayIsZnVuY3Rpb24odCl7aWYoIlNQQU4iPT09dC50YXJnZXQubm9kZU5hbWUpe3ZhciBuPWkodC50YXJnZXQpLnRleHQoKSxvPWkoIi5zZWFyY2gtdGxlIHNwYW4iKSxhPW8udGV4dCgpO28udGV4dChuKSxpKCIuYmpkLXNlYXJjaC1saXN0IikuaGlkZSgpLmFwcGVuZChpKCI8c3Bhbj4iK2ErIjwvc3Bhbj4iKSksaSgiLnNlYXJjaC10bGUiKS5yZW1vdmVDbGFzcygic2VhcmNoLXNlbGVjdCIpLGkoIi5zZWFyY2gtdGxlIGVtIikucmVtb3ZlQ2xhc3MoImVtdXAiKSxlPSExLGkodC50YXJnZXQpLnJlbW92ZSgpfX0pLGkoIi5zZWFyY2gtdGxlLCAuYmpkLXNlYXJjaC1saXN0Iikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHQpfSkub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZT0hMSxpKCIuYmpkLXNlYXJjaC1saXN0IikuaGlkZSgpLGkoIi5zZWFyY2gtdGxlIGVtIikucmVtb3ZlQ2xhc3MoImVtdXAiKSxpKCIuc2VhcmNoLXRsZSIpLnJlbW92ZUNsYXNzKCJzZWFyY2gtc2VsZWN0Iil9LDMwMCl9KSxpKCIuc2VhcmNoLXN1Ym1pdCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD1pKCIuc2VhcmNoLXRsZSBzcGFuIikudGV4dCgpO3ModCksc2V0VGltZW91dChmdW5jdGlvbigpe2koIi5zZWFyY2gtc3VibWl0IikuYXR0cigiaHJlZiIsbnVsbCl9LDIwMCl9KSxpKCIuc2VhcmNoLXRsZSIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2NsZWFyVGltZW91dCh0KX0pfSxjPWZ1bmN0aW9uKHQpe3ZhciByPWEuZ2V0KCJwZXJtYW5lbnQiKS5zdHlsZSxzPXQuZXhhY3RfYXJyLmtleXdvcmRzLnJlcGxhY2UoLywvZywiICIpO3QuZXhhY3RfYXJyLmJyYW5kJiZ0WyJjb2RlLXNlcnZlciJdLmNvZGUmJihzPXQuZXhhY3RfYXJyLmJyYW5kKyIgIit0WyJjb2RlLXNlcnZlciJdLmNvZGUrIiAiKyh0WyJjb2RlLXNlcnZlciJdLnNwZWN8fCIiKSksdC5leGFjdF9hcnIuaXNibiYmKHM9dC5leGFjdF9hcnIuaXNibik7dmFyIGM9Iua3mOWunSIscD0i5ZSv5ZOB5LyaIjsidmlwc2hvcCI9PT1lLnNpdGUmJihzPXQubm93LmNvcmV3b3JkLGM9IuWUr+WTgeS8miIscD0i5reY5a6dIik7dmFyIGQ9bigxMjIpOyJ0b3AiPT09ciYmKGQ9bigxMjMpKSxpKCIuc2VhcmNoLW1vZCIpLmFwcGVuZChvLmNvbXBpbGUoZCkoe2tleXdvcmQ6cyxzaXRlX2s6YyxzaXRlX2syOnB9KSkuYWRkQ2xhc3MoImhhc1NlYXJjaCIpLGwoKSwidG9wIj09PXImJm4oNTYpLmF1dG9GaXhXaWR0aCgpfTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0KXtjKHQpfX0pLmNhbGwoZSxuKDEpLG4oNCkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBjbGFzcz0ic2VhcmNoLXRsZSI+XG4gIDxzcGFuIGNsYXNzPSJibGtjb2xvcjEiPnt7c2l0ZV9rfX08L3NwYW4+XG4gIDxlbSBjbGFzcz0iZ3dkX2JnIj48L2VtPlxuPC9kaXY+XG48aW5wdXQgY2xhc3M9InNlYXJjaC1pbnB1dCBibGtjb2xvcjMiIHZhbHVlPSJ7e2tleXdvcmR9fSI+XG48YSBocmVmPSIiIGNsYXNzPSJzZWFyY2gtc3VibWl0IGd3ZF9iZyIgdGFyZ2V0PSJfYmxhbmsiPjwvYT5cbjxkaXYgY2xhc3M9ImJqZC1zZWFyY2gtbGlzdCI+XG4gIDxzcGFuPnt7c2l0ZV9rMn19PC9zcGFuPlxuICA8c3Bhbj7kuqzkuJw8L3NwYW4+XG4gIDxzcGFuPuiLj+WugTwvc3Bhbj5cbiAgPHNwYW4+5Lqa6ams6YCKPC9zcGFuPlxuICA8c3Bhbj7lvZPlvZM8L3NwYW4+XG4gIDxzcGFuPuS4gOWPt+W6lzwvc3Bhbj5cbiAgPHNwYW4+5Zu9576OPC9zcGFuPlxuICA8c3Bhbj7otK3nianlhZo8L3NwYW4+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgLnNlYXJjaC10bGUge1xuICAgICAgYmFja2dyb3VuZDogI0YwRjVGNztcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZGYxZjI7XG4gICAgICB3aWR0aDogNjFweDtcbiAgICAgIGhlaWdodDogMjZweDtcbiAgICAgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDE4cHg7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxOHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gICAgfVxuICAgIC5zZWFyY2gtdGxlLnNlYXJjaC1zZWxlY3Qge1xuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMHB4O1xuICAgIH1cbiAgICAuc2VhcmNoLXRsZSBzcGFuIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDM2cHg7XG4gICAgICBoZWlnaHQ6IDI2cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gICAgICAtd2Via2l0LXRleHQtYWxpZ24tbGFzdDpqdXN0aWZ5O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbiAgICAuc2VhcmNoLXRsZSBlbSB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogNnB4O1xuICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMXB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xNzBweCAtMjRweDtcbiAgICB9XG4gICAgLnNlYXJjaC10bGUgZW0uZW11cCB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTcwcHggLTM0cHg7XG4gICAgfVxuICAgIC5iamQtc2VhcmNoLWxpc3Qge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgaGVpZ2h0OiAxNjBweDtcbiAgICAgIHdpZHRoOiA3MHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJvdHRvbTogNDFweDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGMEY1Rjc7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWRmMWYyO1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgICB9XG4gICAgLmd3ZF92aXBzaG9wIC5iamQtc2VhcmNoLWxpc3Qge1xuICAgICAgbGVmdDogMTM4cHg7XG4gICAgfVxuICAgIC5iamQtc2VhcmNoLWxpc3Qgc3BhbiB7XG4gICAgICB3aWR0aDogMzZweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICAgICAgLXdlYmtpdC10ZXh0LWFsaWduLWxhc3Q6anVzdGlmeTtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGNvbG9yOiAjMzAzMjMzO1xuICAgIH1cbiAgICAuYmpkLXNlYXJjaC1saXN0IHNwYW46aG92ZXIge1xuICAgICAgY29sb3I6ICM1ZWJlZmY7XG4gICAgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86MCl7XG4gICAgICAuYmpkLXNlYXJjaC1saXN0IHNwYW46YWZ0ZXIsIC5zZWFyY2gtdGxlIHNwYW46YWZ0ZXJ7XG4gICAgICAgICAgY29udGVudDoiLiI7XG4gICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICAgIGhlaWdodDowO1xuICAgICAgfVxuICAgIH1cbiAgICAuc2VhcmNoLWlucHV0IHtcbiAgICAgIHdpZHRoOiAxMjVweDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGhlaWdodDogMjZweDtcbiAgICAgIHBhZGRpbmc6IDAgMCAwIDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZGYxZjI7XG4gICAgICBib3JkZXItbGVmdDogbm9uZTtcbiAgICAgIGJvcmRlci1yaWdodDogbm9uZTtcbiAgICAgIG91dGxpbmU6IDA7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBmb250LWZhbWlseTogXCdNaWNyb3NvZnQgWWFIZWlcJyx0YWhvbWEsYXJpYWwsU2ltU3VuO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0YwRjVGNztcbiAgICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgfVxuICAgIGEuc2VhcmNoLXN1Ym1pdCB7XG4gICAgICB3aWR0aDogMzBweDtcbiAgICAgIGhlaWdodDogMjhweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246LTE4MHB4IC0xOXB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0YwRjVGNztcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxOHB4O1xuICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDE4cHg7XG4gICAgfVxuICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9InNlYXJjaC10bGUiPlxuICA8c3BhbiBjbGFzcz0iYmxrY29sb3IxIj57e3NpdGVfa319PC9zcGFuPlxuICA8ZW0gY2xhc3M9Imd3ZF9iZyI+PC9lbT5cbjwvZGl2PlxuPGlucHV0IGNsYXNzPSJzZWFyY2gtaW5wdXQgYmxrY29sb3IzIiB2YWx1ZT0ie3trZXl3b3JkfX0iPlxuPGEgaHJlZj0iIiBjbGFzcz0ic2VhcmNoLXN1Ym1pdCIgdGFyZ2V0PSJfYmxhbmsiPlxuICA8ZW0gY2xhc3M9Imd3ZF9iZyI+PC9lbT5cbjwvYT5cbjxkaXYgY2xhc3M9ImJqZC1zZWFyY2gtbGlzdCI+XG4gIDxzcGFuPnt7c2l0ZV9rMn19PC9zcGFuPlxuICA8c3Bhbj7kuqzkuJw8L3NwYW4+XG4gIDxzcGFuPuiLj+WugTwvc3Bhbj5cbiAgPHNwYW4+5Lqa6ams6YCKPC9zcGFuPlxuICA8c3Bhbj7lvZPlvZM8L3NwYW4+XG4gIDxzcGFuPuS4gOWPt+W6lzwvc3Bhbj5cbiAgPHNwYW4+5Zu9576OPC9zcGFuPlxuICA8c3Bhbj7otK3nianlhZo8L3NwYW4+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgLnNlYXJjaC10bGUge1xuICAgICAgYmFja2dyb3VuZDogI0YwRjVGNztcbiAgICAgIHdpZHRoOiA2MXB4O1xuICAgICAgaGVpZ2h0OiAyOHB4O1xuICAgICAgYm9yZGVyLXJpZ2h0OiBub25lO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMThweDtcbiAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE4cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjJweDtcbiAgICAgIG1hcmdpbi10b3A6IDRweDtcbiAgICB9XG4gICAgLnNlYXJjaC10bGUuc2VhcmNoLXNlbGVjdCB7XG4gICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwcHg7XG4gICAgfVxuICAgIC5zZWFyY2gtdGxlIHNwYW4ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogMzZweDtcbiAgICAgIGhlaWdodDogMjhweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICAgICAgLXdlYmtpdC10ZXh0LWFsaWduLWxhc3Q6anVzdGlmeTtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG4gICAgLnNlYXJjaC10bGUgZW0ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDZweDtcbiAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjAxcHggLTE1cHg7XG4gICAgfVxuICAgIC5zZWFyY2gtdGxlIGVtLmVtdXAge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwMXB4IC0yNXB4O1xuICAgIH1cbiAgICAuYmpkLXNlYXJjaC1saXN0IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGhlaWdodDogMTYwcHg7XG4gICAgICB3aWR0aDogNzBweDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB0b3A6IDMycHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBGNUY3O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VkZjFmMjtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgfVxuICAgIC5nd2RfYW1hem9uIC5iamQtc2VhcmNoLWxpc3Qge1xuICAgICAgYm90dG9tOiA1N3B4O1xuICAgIH1cbiAgICAuZ3dkX3ZpcHNob3AgLmJqZC1zZWFyY2gtbGlzdCB7XG4gICAgICBsZWZ0OiAxMzNweDtcbiAgICB9XG4gICAgLmJqZC1zZWFyY2gtbGlzdCBzcGFuIHtcbiAgICAgIHdpZHRoOiAzNnB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIGNvbG9yOiAjMzAzMjMzO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdGV4dC1hbGlnbjoganVzdGlmeTtcbiAgICAgIC13ZWJraXQtdGV4dC1hbGlnbi1sYXN0Omp1c3RpZnk7XG4gICAgfVxuICAgIC5iamQtc2VhcmNoLWxpc3Qgc3Bhbjpob3ZlciB7XG4gICAgICBjb2xvcjogIzVlYmVmZjtcbiAgICB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzowKXtcbiAgICAgIC5iamQtc2VhcmNoLWxpc3Qgc3BhbjphZnRlciwgLnNlYXJjaC10bGUgc3BhbjphZnRlcntcbiAgICAgICAgICBjb250ZW50OiIuIjtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgICAgaGVpZ2h0OjA7XG4gICAgICB9XG4gICAgfVxuICAgIC5zZWFyY2gtaW5wdXQge1xuICAgICAgd2lkdGg6IDEyM3B4O1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgaGVpZ2h0OiAyOHB4O1xuICAgICAgcGFkZGluZzogMCA0cHggMCAxMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI4cHg7XG4gICAgICBib3JkZXI6IDBweCBzb2xpZCAjY2RjZGNkO1xuICAgICAgYm9yZGVyLWxlZnQ6IG5vbmU7XG4gICAgICBvdXRsaW5lOiAwO1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgZm9udC1mYW1pbHk6IFwnTWljcm9zb2Z0IFlhSGVpXCcsdGFob21hLGFyaWFsLFNpbVN1bjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGMEY1Rjc7XG4gICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgfVxuICAgIGEuc2VhcmNoLXN1Ym1pdCB7XG4gICAgICB3aWR0aDogMzBweDtcbiAgICAgIGhlaWdodDogMjhweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGMEY1Rjc7XG4gICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMThweDtcbiAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxOHB4O1xuICAgICAgbWFyZ2luLXRvcDogNHB4O1xuICAgIH1cbiAgICBhLnNlYXJjaC1zdWJtaXQgZW0ge1xuICAgICAgd2lkdGg6IDE3cHg7XG4gICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTNweCAtMzlweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbi1yaWdodDogN3B4O1xuICAgICAgbWFyZ2luLXRvcDogM3B4O1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDEyKSxyPWZ1bmN0aW9uKCl7dmFyIHQ9bigxMjUpLHI9by5jb21waWxlKHQpKHtzX3NlcnZlcjplLnNfc2VydmVyfSk7aSgiLnNlYXJjaC1tb2QiKS5wcmVwZW5kKHIpLmFkZENsYXNzKCJ2aXBiYXIiKSxpKCIjZ3dkYW5nLXNlYXJjaCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXthKCJ2aXBzaG9wOnNlYXJjaF9jbGljayIpfSl9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7InZpcHNob3AiPT09ZS5zaXRlJiZyKCl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPScgPGRpdiBpZD0idmlwc2VhcmNoX3JlbWluZCI+XG4gICA8c3BhbiBjbGFzcz0idmlwLXJlLXRsZSI+5ZSv5ZOB5Lya54m55Y2WPC9zcGFuPlxuICAgPHNwYW4gY2xhc3M9InZpcC1yZS1pY29uIj48L3NwYW4+XG4gICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgI3ZpcHNlYXJjaF9yZW1pbmQge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgfVxuICAgICN2aXBzZWFyY2hfcmVtaW5kIC52aXAtcmUtdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAjZjEwMTgwO1xuICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDJweDtcbiAgICB9XG4gICAgI3ZpcHNlYXJjaF9yZW1pbmQgLnZpcC1yZS1pY29uIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbi1yaWdodDogNnB4O1xuICAgICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci92aXBfc2VhcmNoX2ljb24ucG5nXCcpIG5vLXJlcGVhdCAwcHggMHB4O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0b3A6IDZweDtcbiAgICB9XG5cbiAgIDwvc3R5bGU+XG4gPC9kaXY+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDI0KSxhPW4oMTMpLHI9bigyMikscz1uKDE0KSxsPW4oMTIpLGM9ZnVuY3Rpb24odCl7dmFyIG49YS5nZXQoIm90aGVyX2luZm8iKSxpPW5bImNvZGUtc2VydmVyIl0mJm5bImNvZGUtc2VydmVyIl0uY2xhc3NfaWR8fCIwMDAwMDAwMCIscj1uLm5vdy5kcF9pZCxzPWVuY29kZVVSSUNvbXBvbmVudChlLmRwLm5hbWUpLGw9ZW5jb2RlVVJJQ29tcG9uZW50KGxvY2F0aW9uLmhyZWYpLGM9ZW5jb2RlVVJJQ29tcG9uZW50KG4uZXhhY3RfYXJyLnNicmFuZCkscD1lbmNvZGVVUklDb21wb25lbnQobi5ub3cuY29yZXdvcmQpLGQ9ZS5zZXJ2ZXIrIi9icndleHQvcHJvbW9fYnJhbmQ/cGc9MSZwcz0zMCZvcmRlcj0wJmNsYXNzX2lkPSIraSsiJmRwX2lkPSIrcisiJnRpdGxlPSIrcysiJnVybD0iK2wrIiZzYnJhbmQ9IitjKyIma2V5d29yZD0iK3A7by5nZXQoZCkuZG9uZShmdW5jdGlvbihlKXtlJiYwIT09ZS5sZW5ndGgmJnQoZSl9KX0scD1mdW5jdGlvbih0KXtpZigwIT09dC5wcm9kdWN0cy5sZW5ndGgpe3ZhciBlPW4oMTI3KSxvPXsxOiLkv4MiLDI6IuaKmCIsMzoi6LWgIiw0OiLlh48iLDU6Iui1oCIsNjoi6L+UIn07aWYodC5wcm9kdWN0cz10LnByb2R1Y3RzLnNsaWNlKDAsNCksISh0LnByb2R1Y3RzLmxlbmd0aDw0KSl7Zm9yKHZhciBhPTA7YTx0LnByb2R1Y3RzLmxlbmd0aDthKyspb1t0LnByb2R1Y3RzW2FdLnByb21vX3R5cGVdP3QucHJvZHVjdHNbYV0ucHJvbW9rZXlzPW9bdC5wcm9kdWN0c1thXS5wcm9tb190eXBlXTp0LnByb2R1Y3RzW2FdLnByb21va2V5cz0i5L+DIjtpKCIjcHJvbW9fYm94IikuYXBwZW5kKHIuY29tcGlsZShlKSh7ZGF0YTp0LnByb2R1Y3RzfSkpLnNob3coKSxzLmxvZygidHJhY2s6bWluaTpwcm9tbyIpLGwoInRyYWNrOm1pbmk6cHJvbW8iKSxpKCIjcHJvbW9fYm94Iikub24oImNsaWNrIixmdW5jdGlvbigpe3MubG9nKCJjbGljazptaW5pOnByb21vIiksbCgiY2xpY2s6bWluaTpwcm9tbyIpfSl9fX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD1hLmdldCgicGVybWFuZW50Iik7IjAiIT09dC5zZXRTaG93UHJvbW8mJjAhPT10LnNldFNob3dQcm9tbyYmIjM2MGJ1eS1yZSIhPT1lLnNpdGUmJmMocCl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPScgIDx1bD5cbiAgICB7e2VhY2ggZGF0YX19XG4gICAgICA8bGkgY2xhc3M9ImxpX3t7JGluZGV4fX0iPlxuICAgICAgICA8c3Bhbj57eyR2YWx1ZS5wcm9tb2tleXN9fTwvc3Bhbj5cbiAgICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0ie3skdmFsdWUudGl0bGV9fSI+e3skdmFsdWUudGl0bGV9fTwvYT5cbiAgICAgIDwvbGk+XG4gICAge3svZWFjaH19XG4gIDwvdWw+XG4gIDxlbSBjbGFzcz0icHJvbW9fc2h1eGlhbiI+PC9lbT4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMjIpLGE9bigyNCkscj1uKDEzKSxzPWZ1bmN0aW9uKCl7dmFyIHQ9JzxkaXYgaWQ9InJldmlld19idG4iIGNsYXNzPSJnd2RhbmctdGFiIj5cbiAgICA8c3BhbiBjbGFzcz0iYnRuLXRhYi1zcCI+XG4gICAgICA8ZW0gY2xhc3M9Imd3ZF9iZyI+PC9lbT5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0YWItc3AxIGJsa2NvbG9yMSI+5Y+j56KRPC9zcGFuPlxuICAgIDwvc3Bhbj5cbiAgPC9kaXY+JztlKCIuZ3dkLXRvcGJhci1sZWZ0IikuYXBwZW5kKG8uY29tcGlsZSh0KSh7fSkpLGUoIiNyZXZpZXdfYnRuIikuc2hvdygpfSxsPWZ1bmN0aW9uKCl7dmFyIHQ9dm9pZCAwLG49dm9pZCAwO2UoIiNyZXZpZXdfYnRuIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7aWYoIXQpe3ZhciBuPWUoIi5yZXZpZXctZ29vZCIpLmF0dHIoImRhdGEtZCIpO2UoIi4iK24pLnNob3coKX12YXIgaT1lKHRoaXMpLm9mZnNldCgpLmxlZnQ7ZSgiI3Jldmlld19kZXRhaWwiKS5jc3MoImxlZnQiLGkrInB4IiksZSgiI3Jldmlld19kZXRhaWwiKS5zaG93KCksZSh0aGlzKS5hZGRDbGFzcygibXNlbnRlciIpLGUod2luZG93KS53aWR0aCgpLShlKCIjcmV2aWV3X2RldGFpbCIpLm9mZnNldCgpLmxlZnQrZSgiI3Jldmlld19kZXRhaWwiKS5vdXRlcldpZHRoKCkrMik8MCYmZSgiI3Jldmlld19kZXRhaWwiKS5jc3MoInJpZ2h0IiwiMHB4IikuY3NzKCJsZWZ0IiwiYXV0byIpfSksZSgiI3Jldmlld19idG4iKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXt2YXIgdD10aGlzO249c2V0VGltZW91dChmdW5jdGlvbigpe2UoIiNyZXZpZXdfZGV0YWlsIikuaGlkZSgpLGUodCkucmVtb3ZlQ2xhc3MoIm1zZW50ZXIiKX0sMjAwKX0pLGUoIiNyZXZpZXdfZGV0YWlsIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KG4pfSksZSgiI3Jldmlld19kZXRhaWwiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtlKCIjcmV2aWV3X2RldGFpbCIpLmhpZGUoKSxlKCIjcmV2aWV3X2J0biIpLnJlbW92ZUNsYXNzKCJtc2VudGVyIil9KSxlKCIjcmV2aWV3X2RldGFpbCAucmV2aWV3LXRhYiIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt0PSEwO3ZhciBuPWUodGhpcykuYXR0cigiZGF0YS1kIik7ZSgiI3Jldmlld19kZXRhaWwgLnJldmlldy10YWIiKS5yZW1vdmVDbGFzcygic2VsZWN0ZWQiKSxlKHRoaXMpLmFkZENsYXNzKCJzZWxlY3RlZCIpLGUoIi5yZXZpZXctcmlnaHQ+ZGl2IikuaGlkZSgpLGUoIi4iK24pLnNob3coKX0pfSxjPWZ1bmN0aW9uKHQpe3ZhciBlPXIuZ2V0KCJvdGhlcl9pbmZvIiksbj1lJiZlLm5vdy5kcF9pZDtpZighbilyZXR1cm4gdDtpZih0LmJhZCYmdC5iYWQubGVuZ3RoPjApZm9yKHZhciBvPTA7bzx0LmJhZC5sZW5ndGg7bysrKXt2YXIgYT1pLmNfc2VydmVyKyIvY3JjNjQvZHAiK24rIi9yZXZpZXdzLz9yd29yZD0iK2VuY29kZVVSSUNvbXBvbmVudCh0LmJhZFtvXS5sYWJlbCkrIiZleHQ9MSZydHlwZT0yIjt0LmJhZFtvXS51cmw9YX1pZih0Lmdvb2QmJnQuZ29vZC5sZW5ndGg+MClmb3IodmFyIG89MDtvPHQuZ29vZC5sZW5ndGg7bysrKXt2YXIgYT1pLmNfc2VydmVyKyIvY3JjNjQvZHAiK24rIi9yZXZpZXdzLz9yd29yZD0iK2VuY29kZVVSSUNvbXBvbmVudCh0Lmdvb2Rbb10ubGFiZWwpKyImZXh0PTEmcnR5cGU9MSI7dC5nb29kW29dLnVybD1hfXJldHVybiB0fSxwPWZ1bmN0aW9uKHQpe3ZhciBlPWVuY29kZVVSSUNvbXBvbmVudChsb2NhdGlvbi5ocmVmKSxuPWkuc2VydmVyKyIvZXh0ZW5zaW9uL3Jldmlldz91cmw9IitlO2EuZ2V0KG4pLmRvbmUoZnVuY3Rpb24oZSl7IWV8fGUgaW5zdGFuY2VvZiBBcnJheXx8dChlKX0pfSxkPWZ1bmN0aW9uKHQpe3QuZ29vZGJveD0icmV2aWV3LXItZ29vZCIsdC5iYWRib3g9InJldmlldy1yLWJhZCIsdC5nb29kfHwodC5nb29kYm94PSJyZXZpZXctci1ub2luZm8iKSx0LmJhZHx8KHQuYmFkYm94PSJyZXZpZXctci1ub2luZm8iKTt2YXIgYT1uKDEyOSk7dD1jKHQpO3ZhciByPW8uY29tcGlsZShhKSh7ZGF0YTp0LHNfc2VydmVyOmkuc19zZXJ2ZXJ9KTtlKCIuZ3dkLXRvcGJhci1sZWZ0IikuYXBwZW5kKHIpLGwoKX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7cChmdW5jdGlvbih0KXswIT09dC5yZXZpZXdzLmxlbmd0aCYmKHMoKSxkKHQucmV2aWV3cykpfSl9fSkuY2FsbChlLG4oNCksbigxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGlkPSJyZXZpZXdfZGV0YWlsIiBjbGFzcz0icmV2aWV3LWJveCI+XG4gIDxkaXYgY2xhc3M9InJldmlldy1sZWZ0Ij5cbiAgICA8ZGl2IGNsYXNzPSJyZXZpZXctdGFiIHJldmlldy1nb29kIHNlbGVjdGVkIiBkYXRhLWQ9Int7ZGF0YS5nb29kYm94fX0iPlxuICAgICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IxIj7lpb3or4Q8L3NwYW4+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0icmV2aWV3LXRhYiByZXZpZXctYmFkIiBkYXRhLWQ9Int7ZGF0YS5iYWRib3h9fSI+XG4gICAgICA8ZW0gY2xhc3M9Imd3ZF9iZyI+PC9lbT5cbiAgICAgIDxzcGFuIGNsYXNzPSJibGtjb2xvcjEiPuW3ruivhDwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9InJldmlldy1yaWdodCI+XG4gICAgPGRpdiBjbGFzcz0icmV2aWV3LXItZ29vZCI+XG4gICAgICB7e2VhY2ggZGF0YS5nb29kfX1cbiAgICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIGNsYXNzPSJibGtjb2xvcjMiIHRhcmdldD0iX2JsYW5rIj57eyR2YWx1ZS5sYWJlbH19KHt7JHZhbHVlLm51bX19KTwvYT5cbiAgICAgIHt7L2VhY2h9fVxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InJldmlldy1yLWJhZCI+XG4gICAgICB7e2VhY2ggZGF0YS5iYWR9fVxuICAgICAgICA8YSBocmVmPSJ7eyR2YWx1ZS51cmx9fSIgY2xhc3M9ImJsa2NvbG9yMyIgdGFyZ2V0PSJfYmxhbmsiPnt7JHZhbHVlLmxhYmVsfX0oe3skdmFsdWUubnVtfX0pPC9hPlxuICAgICAge3svZWFjaH19XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0icmV2aWV3LXItbm9pbmZvIj5cbiAgICAgIDxlbSBjbGFzcz0icmV2aWV3LWJnIj48L2VtPlxuICAgICAgPHNwYW4+5pqC5peg6K+E6K66PC9zcGFuPlxuICAgIDwvZGl2PlxuICA8L2Rpdj4gXG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgLnJldmlldy1iZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMveGJ0L3Jldmlldy1iZy5wbmdcJykgbm8tcmVwZWF0O1xuICAgIH1cbiAgICAjcmV2aWV3X2J0biB7XG4gICAgICB3aWR0aDogNTlweDtcbiAgICB9XG4gICAgI3Jldmlld19idG4gLnJldmlld19pY29ue1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDIycHg7XG4gICAgICB3aWR0aDogMjJweDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xNzFweCAtMTlweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwcHg7XG4gICAgICBtYXJnaW4tdG9wOiA2cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDZweDtcbiAgICB9XG4gICAgI3Jldmlld19idG4ubXNlbnRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRmMWYyO1xuICAgICAgei1pbmRleDogOTk5OTk5OTk5OTk5OTk5OTtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG4gICAgI3Jldmlld19idG4gLnJldmlld190ZXh0IHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICBjb2xvcjogIzQ5NGQ1MDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuICAgICNyZXZpZXdfZGV0YWlsIHtcbiAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgIHRvcDogMzdweDtcbiAgICAgIHdpZHRoOiA1NzBweDtcbiAgICAgIGhlaWdodDogODVweDtcbiAgICAgIHotaW5kZXg6IDk5OTk5OTk5O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNlZGYxZjI7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgYm94LXNoYWRvdzogMCA1cHggMTBweCAwIHJnYmEoMjIsMjQsMjYsMC4xNSk7XG4gICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICB9XG4gICAgLnJldmlldy1sZWZ0IHtcbiAgICAgIGZsb2F0OiBsZWZ0IWltcG9ydGFudDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiA4MHB4O1xuICAgIH1cbiAgICAucmV2aWV3LXJpZ2h0IHtcbiAgICAgIGZsb2F0OiBsZWZ0IWltcG9ydGFudDsgIFxuICAgICAgd2lkdGg6IDQ5MHB4O1xuICAgICAgaGVpZ2h0OiA4NXB4O1xuICAgIH1cbiAgICAucmV2aWV3LXRhYiB7XG4gICAgICBoZWlnaHQ6IDQycHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBsaW5lLWhlaWdodDogNDJweDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAjMzMzO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2VkZjFmMjtcbiAgICB9XG4gICAgLnJldmlldy10YWIgZW0ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDE4cHg7XG4gICAgICB3aWR0aDogMThweDtcbiAgICAgIG1hcmdpbjogMTFweCA4cHggMCAxMnB4O1xuICAgIH1cbiAgICAucmV2aWV3LXRhYi5zZWxlY3RlZCBzcGFuIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIH1cbiAgICAucmV2aWV3LWdvb2QgZW0ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEyMnB4IC04NXB4O1xuICAgIH1cbiAgICAucmV2aWV3LWJhZCBlbSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTQ2cHggLTg1cHg7XG4gICAgfVxuICAgIC5yZXZpZXctdGFiLnNlbGVjdGVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gICAgfVxuICAgIC5yZXZpZXctZ29vZCB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U2ZTZlNjtcbiAgICB9XG4gICAgLnJldmlldy1yLWJhZCB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAucmV2aWV3LXJpZ2h0IC5yZXZpZXctci1iYWQsIC5yZXZpZXctcmlnaHQgLnJldmlldy1yLWdvb2Qge1xuICAgICAgcGFkZGluZzogMHB4IDJweCAwIDEycHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgaGVpZ2h0OiA4MHB4O1xuICAgIH1cbiAgICAucmV2aWV3LXItYmFkIGEsIC5yZXZpZXctci1nb29kIGEge1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICMzMzM7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNGY0O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7XG4gICAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgICAgbWFyZ2luLWJvdHRvbTogMnB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjRweDtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAxcHg7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIHBhZGRpbmc6IDAgNnB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5yZXZpZXctci1nb29kIGE6aG92ZXIge1xuICAgICAgY29sb3I6ICNmZmYhaW1wb3J0YW50O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmOWYyMjtcbiAgICB9XG4gICAgLnJldmlldy1yLWJhZCBhOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjZmZmIWltcG9ydGFudDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNiY2I5YjI7XG4gICAgfVxuICAgIC5yZXZpZXctci1ub2luZm8ge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEzMHB4O1xuICAgICAgZmxvYXQ6IGxlZnQhaW1wb3J0YW50O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNjlweDtcbiAgICB9XG4gICAgLnJldmlldy1yLW5vaW5mbyBlbSB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAzOXB4O1xuICAgICAgaGVpZ2h0OiA0M3B4O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTUzcHggLTExN3B4O1xuICAgICAgbWFyZ2luLXRvcDogMjNweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICAgIH1cbiAgICAucmV2aWV3LXItbm9pbmZvIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNiMmIyYjI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgbWFyZ2luLXRvcDogMzVweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzcHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgfVxuICA8L3N0eWxlPlxuPC9kaXY+JzsKfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMTMxKSxhPW4oMjIpLHI9big3Mykscz1uKDEzKSxsPTAsYz1uKDY5KSxwPW4oNTYpLGQ9ZnVuY3Rpb24oKXt2YXIgdD0nPGEgaWQ9IicrZS5leHRCcmFuZCsnX2hpc3RvcnkiIGNsYXNzPSInK2UuZXh0QnJhbmQrJy1jbG9zZS1tb2R1bGUiPiA8c3Bhbj48ZW0+PC9lbT7mtY/op4jljoblj7I8L3NwYW4+PC9hPicsbj1pKCIuIitlLmV4dEJyYW5kKyJfb3B0aW9uX3NldHRpbmciKTtuLmFmdGVyKGEuY29tcGlsZSh0KSgpKX0saD1mdW5jdGlvbigpe2koIiMiK2UuZXh0TmFtZSsiLWZlZWQtY2xvc2UiKS5hZGRDbGFzcygiX25ld2JhcjEiKSxpKCIjIitlLmV4dE5hbWUrIi1tYWluIikuYWRkQ2xhc3MoIl9uZXdiYXIyIil9LHU9ZnVuY3Rpb24oKXtoKCk7dmFyIHQ9JzxkaXYgaWQ9Imd3ZF9oaXN0b3J5IiBjbGFzcz0iZ3dkYW5nLXRhYiI+XG4gICAgPHNwYW4gY2xhc3M9ImJ0bi10YWItc3AiPlxuICAgICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgICA8c3BhbiBjbGFzcz0idGFiLXNwMSBibGtjb2xvcjEiPua1j+iniOWOhuWPsjwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gIDwvZGl2Pic7aSgiLnNlYXJjaC1tb2QiKS5hZnRlcihhLmNvbXBpbGUodCkoKSksaSgiI2d3ZF9oaXN0b3J5Iikuc2hvdygpLG4oNTYpLmF1dG9GaXhXaWR0aCgpfSxtPWZ1bmN0aW9uKCl7dmFyIHQ9cy5nZXQoInBlcm1hbmVudCIpOyJ0b3AiPT10LnN0eWxlP3UoKToiYm90dG9tIj09dC5zdHlsZSYmZCgpfSxmPWZ1bmN0aW9uKHQsbyxyKXt2YXIgcz1uKDEzMyk7aSh0KS5hcHBlbmQoYS5jb21waWxlKHMpKHtkYXRhOm8sc19zZXJ2ZXI6ZS5zX3NlcnZlcixoaXNfc2l6ZTpsLGV4dE5hbWU6ZS5leHROYW1lfSkpfSxnPWZ1bmN0aW9uKHQsZSl7dmFyIG49cy5nZXQoInBlcm1hbmVudCIpOyJ0b3AiPT1uLnN0eWxlP2YoaSgiI2d3ZF9oaXN0b3J5IiksdCxlKToiYm90dG9tIj09bi5zdHlsZSYmZigiI2JqZF9ib3R0b21fZGV0YWlsIix0LGUpfSx3PWZ1bmN0aW9uKCl7cmV0dXJuIGw+PTQ/MzQzOjc1KmwrMTQqKGwtMSkrMX0seD1mdW5jdGlvbih0KXtmb3IodmFyIG49W10saT0wO2k8dC5sZW5ndGg7aSsrKWlmKHRbaV0udXJsKXt2YXIgbz17c2l0ZV9pZDp0W2ldLnNpdGVfaWQsdXJsOnRbaV0udXJsLG1vZDoiaGlzdG9yeSIsdW5pb246ZS51bmlvbi5zcGxpdCgiXyIpWzFdLGRwX2lkOnRbaV0uZHBfaWR9O3RbaV0udXJsPWMuaW5pdChvKSxuLnB1c2godFtpXSl9cmV0dXJuIG59LGI9ZnVuY3Rpb24odCl7aWYodCYmMCE9dC5sZW5ndGgpe3Q9eCh0LnNsaWNlKDAsMTApKSxsPXQubGVuZ3RoO3ZhciBlPXcoKTttKCksZyh0LGUpLF8obCl9fSxfPWZ1bmN0aW9uKHQpe3ZhciBuPXZvaWQgMCxvPXZvaWQgMCxhPXZvaWQgMDtpKCIjIitlLmV4dEJyYW5kKyJfaGlzdG9yeSIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe298fChvPSEwLHAubG9hZEltZygwLHQsaSgiI2hpc3RvcnlfZGV0YWlsIGxpIC5pdGVtX2ltZyBpbWciKSkpLGF8fChyLnNldFNpbXBsZVBhZ2VQb3MoaSgiI2d3ZF9oaXN0b3J5IiksaSgiI2hpc3RvcnlfZGV0YWlsIiksMjg4KSxhPSEwKSxpKCIjIitlLmV4dEJyYW5kKyJfaGlzdG9yeSIpLmFkZENsYXNzKCJoaXN0b3J5X2hvdmVyIiksaSgiI2hpc3RvcnlfZGV0YWlsIikuc2hvdygpfSksaSgiIyIrZS5leHRCcmFuZCsiX2hpc3RvcnkiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtuPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtpKCIjIitlLmV4dEJyYW5kKyJfaGlzdG9yeSIpLnJlbW92ZUNsYXNzKCJoaXN0b3J5X2hvdmVyIiksaSgiI2hpc3RvcnlfZGV0YWlsIikuaGlkZSgpfSwyMDApfSksaSgiI2hpc3RvcnlfZGV0YWlsIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KG4pfSksaSgiI2hpc3RvcnlfZGV0YWlsIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7aSgiIyIrZS5leHRCcmFuZCsiX2hpc3RvcnkiKS5yZW1vdmVDbGFzcygiaGlzdG9yeV9ob3ZlciIpLGkoIiNoaXN0b3J5X2RldGFpbCIpLmhpZGUoKX0pLGkoIiNoaXN0b3J5X2RldGFpbCAuaXRlbV9jbG9zZV9idG4iKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKS5hdHRyKCJkYXRhLWlkIik7bC0tLHooaSh0aGlzKS5wYXJlbnRzKCJsaSIpLHQpfSksaSgiI2hpc3RvcnlfZGV0YWlsIC5jbGVhcl9oaXMiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7eSgpfSl9LHY9ZnVuY3Rpb24oKXtvLmdldChiKX0seT1mdW5jdGlvbigpe28uZGVsQWxsKGZ1bmN0aW9uKCl7aSgiLmhpc3RvcnlfZGV0YWlsIC5oaXN0b3J5X2NvbnRlbnQgdWwiKS5lbXB0eSgpLGkoIi5oaXN0b3J5X2RldGFpbCAuaGlzdG9yeV9jb250ZW50IikuYWRkQ2xhc3MoIm5vLWhpcy1jb250ZW50IiksaSgiLmhpc3RvcnlfZGV0YWlsIC5oaXN0b3J5X2NvbnRlbnQiKS5oZWlnaHQoNzYpLGkoIi5jbGVhcl9oaXMiKS5oaWRlKCl9KX0saz1mdW5jdGlvbigpe3ZhciB0PXMuZ2V0KCJvdGhlcl9pbmZvIiksbj10JiZ0Lm5vdyYmdC5ub3cuZHBfaWQ7InRhb2JhbyIhPWUuc2l0ZSYmInRtYWxsIiE9ZS5zaXRlJiZvLmFkZChuKX0sej1mdW5jdGlvbih0LGUpe3ZhciBuPXcoKTtvLmRlbChlLGZ1bmN0aW9uKCl7aWYoaSh0KS5yZW1vdmUoKSwzNDMhPW4pcmV0dXJuIDA9PT1sPyhpKCIuaGlzdG9yeV9kZXRhaWwgLmhpc3RvcnlfY29udGVudCIpLmFkZENsYXNzKCJuby1oaXMtY29udGVudCIpLHZvaWQgaSgiLmNsZWFyX2hpcyIpLmhpZGUoKSk6dm9pZCBpKCIuaGlzdG9yeV9kZXRhaWwgLmhpc3RvcnlfY29udGVudCIpLmhlaWdodChuKX0pfTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpe3YoKSxrKCl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyl7InVzZSBzdHJpY3QiO2k9ZnVuY3Rpb24oKXt2YXIgdCxlLGksYT17fSxyPW4oMjQpLHM9bigxMzIpO2EuZ2V0PWZ1bmN0aW9uKG4pe3IuZ2V0KG8uc2VydmVyKyIvYnJ3ZXh0L2hpc3Rvcnk/b3A9Z2V0IikuZG9uZShmdW5jdGlvbihvKXtvPXMoby5yZXN1bHQpLG89bChvKSx0PW8sbiYmbihvKSxpJiYhZSYmKGkobyksZT0hMCl9KX07dmFyIGw9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGk9TnVtYmVyKHRbbl0ucHJpY2UpO3Rbbl0udXJsJiZ0W25dLnRpdGxlJiZpJiZpPjAmJmUucHVzaCh0W25dKX1yZXR1cm4gZX07cmV0dXJuIGEuYWRkPWZ1bmN0aW9uKHQsZSl7ci5nZXQoby5zZXJ2ZXIrIi9icndleHQvaGlzdG9yeT9vcD1hZGQmZHBfaWQ9Iit0KS5kb25lKGZ1bmN0aW9uKHQpe2UmJmUodCl9KX0sYS5kZWxBbGw9ZnVuY3Rpb24odCl7ci5nZXQoby5zZXJ2ZXIrIi9icndleHQvaGlzdG9yeT9vcD1kZWxBbGwiKS5kb25lKGZ1bmN0aW9uKGUpe3QoKX0pfSxhLmRlbD1mdW5jdGlvbih0LGUpe3IuZ2V0KG8uc2VydmVyKyIvYnJ3ZXh0L2hpc3Rvcnk/b3A9ZGVsJmRwX2lkPSIrdCkuZG9uZShmdW5jdGlvbih0KXtlJiZlKCl9KX0sYS5nZXRTaXplPWZ1bmN0aW9uKG4pe3Q/KG4odCksZT0hMCk6aT1uLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlfHwoaShudWxsKSxlPSEwKX0sMTRlMyl9LGF9LmNhbGwoZSxuLGUsdCksISh2b2lkIDAhPT1pJiYodC5leHBvcnRzPWkpKX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBuPVsiMTUiLCI5NCIsIjEwOCIsIjE5NiIsIjMyIiwiMjM0IiwiMjczIiwiMjkwIiwiMjkyIiwiMzY3IiwiMzczIiwiMzc3Il0saT1lLmNyYzY0P2UuaW1nNjRfc2VydmVyOmUuaW1nX3NlcnZlcjtpZighdC5sZW5ndGgpcmV0dXJuW107Zm9yKHZhciBvPTA7bzx0Lmxlbmd0aDtvKyspe3ZhciBhPXRbb10scj1hLmRwX2lkO2lmKHIpe3ZhciBzPXIubWF0Y2goL1xkKy0oXGQrKS8pJiZyLm1hdGNoKC9cZCstKFxkKykvKVsxXTtpZihzKWZvcih2YXIgbD0wO2w8bi5sZW5ndGg7bCsrKXM9PT1uW2xdJiYodFtvXS5waWNfdXJsP3Rbb10ucGljX3VybD1pKyIvY196b29tLGhfOTAvZHAiK2EuZHBfaWQ6dFtvXS5pbWdfdXJsPWkrIi9jX3pvb20saF85MC9kcCIrYS5kcF9pZCl9fXJldHVybiB0fX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9Imhpc3RvcnlfZGV0YWlsIiBjbGFzcz0iaGlzdG9yeV9kZXRhaWwiPlxuICA8ZGl2IGNsYXNzPSJoaXN0b3J5X2hlYWQiPlxuICAgIDxzcGFuIGNsYXNzPSJoaXN0b3J5X2hlYWRfdGxlIGJsa2NvbG9yMSI+5rWP6KeI5Y6G5Y+yPC9zcGFuPlxuICAgIHt7aWYgaGlzX3NpemUgIT0gMH19XG4gICAgPHNwYW4gY2xhc3M9ImNsZWFyX2hpcyBibGtjb2xvcjQiPua4heepuuWOhuWPsjwvc3Bhbj5cbiAgICB7ey9pZn19XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJoaXN0b3J5X2NvbnRlbnQgaGlzX3NpemVfe3toaXNfc2l6ZX19Ij5cbiAgICA8dWw+XG4gICAgICB7e2VhY2ggZGF0YX19XG4gICAgICA8bGkgPlxuICAgICAgICA8YSBjbGFzcz0iaXRlbV9pbWciIGhyZWY9Int7JHZhbHVlLnVybH19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Int7JHZhbHVlLnRpdGxlfX0iPjxpbWcgc3JjPSJodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci8xMjAuZ2lmIiBkYXRhLW9yaWdpbmFsPSJ7eyR2YWx1ZS5pbWdfdXJsfX0iPjwvYT5cbiAgICAgICAgPGRpdiBjbGFzcz0iaXRlbV9kZXNjIj5cbiAgICAgICAgICA8YSBjbGFzcz0iaXRlbV90aXRsZSBibGtjb2xvcjMiIGhyZWY9Int7JHZhbHVlLnVybH19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Int7JHZhbHVlLnRpdGxlfX0iPnt7JHZhbHVlLnRpdGxlfX08L2E+XG4gICAgICAgICAgPGEgY2xhc3M9Im90aGVyX2Rlc2MiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9InNpdGVfaWNvbiIgdGl0bGU9Int7JHZhbHVlLnNpdGVfbmFtZX19Ij48aW1nIHNyYz0ie3tzX3NlcnZlcn19L2ltYWdlcy9mYXZpY29uL3t7JHZhbHVlLnNpdGVfaWR9fS5pY28iPjwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpdGVtX3ByaWNlIHByaWZvbnRmIj7CpXt7JHZhbHVlLnByaWNlfX08L3NwYW4+XG4gICAgICAgICAgICA8c3BhbiBjbGFzcz0iaXRlbV9jbG9zZV9idG4gYmxrY29sb3I0IiBkYXRhLWlkPSJ7eyR2YWx1ZS5kcF9pZH19Ij7liKDpmaQ8L3NwYW4+XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbGk+XG4gICAgICB7ey9lYWNofX1cbiAgICA8L3VsPlxuICAgIDxkaXYgY2xhc3M9Im5vLWhpc3RvcnkiPuaaguaXoOa1j+iniOWOhuWPsjwvZGl2PlxuICA8L2Rpdj5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAjaGlzdG9yeV9kZXRhaWwge1xuICAgICAgd2lkdGg6IDI4OHB4O1xuICAgICAgbWluLWhlaWdodDogMTQwcHg7XG4gICAgICBtYXgtaGVpZ2h0OiA0MDVweDtcbiAgICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJveC1zaGFkb3c6IDAgNXB4IDEwcHggMCByZ2JhKDIyLDI0LDI2LDAuMTUpO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2VkZjFmMjtcbiAgICB9XG4gICAgLmhpc3RvcnlfaGVhZCB7XG4gICAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG4gICAgLm5vLWhpc3Rvcnkge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDcwcHg7XG4gICAgICBsaW5lLWhlaWdodDogNzBweDtcbiAgICAgIGNvbG9yOiAjMzIzMzMzO1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgLmhpc3RvcnlfaGVhZCBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIC5oaXN0b3J5X2hlYWRfdGxlIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgdG9wOiAxNHB4O1xuICAgICAgbGVmdDogMTRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgLmNsZWFyX2hpcyB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICB0b3A6IDE0cHg7XG4gICAgICByaWdodDogMTlweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgLmNsZWFyX2hpczpob3ZlciB7XG4gICAgICBjb2xvcjogIzQ4YmVmZTtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIC5oaXN0b3J5X2NvbnRlbnQge1xuICAgICAgbWFyZ2luOiAwcHggMHB4IDE3cHggMDtcbiAgICAgIHdpZHRoOiAyNzJweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xuICAgICAgaGVpZ2h0OiAzNDFweDtcbiAgICAgIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIC5oaXN0b3J5X2NvbnRlbnQuaGlzX3NpemVfMCwgI2hpc3RvcnlfZGV0YWlsIC5oaXN0b3J5X2NvbnRlbnQuaGlzX3NpemVfMSB7XG4gICAgICBoZWlnaHQ6IDc2cHg7XG4gICAgfVxuICAgICNoaXN0b3J5X2RldGFpbCAuaGlzdG9yeV9jb250ZW50Lmhpc19zaXplXzAsICNoaXN0b3J5X2RldGFpbCAuaGlzdG9yeV9jb250ZW50Lm5vLWhpcy1jb250ZW50IHtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgfVxuICAgICNoaXN0b3J5X2RldGFpbCAuaGlzdG9yeV9jb250ZW50Lmhpc19zaXplXzIge1xuICAgICAgaGVpZ2h0OiAxNjVweDtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIC5oaXN0b3J5X2NvbnRlbnQuaGlzX3NpemVfMyB7XG4gICAgICBoZWlnaHQ6IDI1NHB4O1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgLmhpc3RvcnlfY29udGVudC5oaXNfc2l6ZV8wIC5uby1oaXN0b3J5LCAjaGlzdG9yeV9kZXRhaWwgLmhpc3RvcnlfY29udGVudC5uby1oaXMtY29udGVudCAubm8taGlzdG9yeSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIHVsIHtcbiAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgcGFkZGluZzogMHB4O1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgdWwgbGl7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgaGVpZ2h0OiA3MnB4O1xuICAgICAgbWFyZ2luLXRvcDogMTdweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIHVsIGxpOmZpcnN0LWNoaWxke1xuICAgICAgbWFyZ2luLXRvcDogMHB4O1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgLml0ZW1faW1nIHtcbiAgICAgIGhlaWdodDogNzBweDtcbiAgICAgIHdpZHRoOiA3MHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWRmMWYyO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgLml0ZW1faW1nOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6XCdcJztcbiAgICAgIHdpZHRoOjA7XG4gICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgLml0ZW1fZGVzYyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW4tbGVmdDogMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgLW1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgd2lkdGg6IDE2N3B4O1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgYS5pdGVtX3RpdGxlLCAjaGlzdG9yeV9kZXRhaWwgYS5vdGhlcl9kZXNjIHtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIHdpZHRoOiAxNTlweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIGEub3RoZXJfZGVzYyB7XG4gICAgICBtYXJnaW4tdG9wOiAyNHB4O1xuICAgICAgd2lkdGg6IDE2N3B4O1xuICAgIH1cbiAgICAjaGlzdG9yeV9kZXRhaWwgYS5pdGVtX3RpdGxle1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICB3aWR0aDogMTU5cHg7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgfVxuICAgICNoaXN0b3J5X2RldGFpbCBhLml0ZW1fdGl0bGU6aG92ZXJ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBjb2xvcjogIzQ4YmVmZTtcbiAgICB9XG4gICAgLm90aGVyX2Rlc2M6YWZ0ZXIge1xuICAgICAgY29udGVudDogIiI7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgICAub3RoZXJfZGVzYyBzcGFuIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgICBzcGFuLml0ZW1fcHJpY2Uge1xuICAgICAgbWFyZ2luLWxlZnQ6IDhweDtcbiAgICAgIG1hcmdpbi10b3A6IDJweDtcbiAgICAgIGNvbG9yOiAjRTQzOTNDO1xuICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiAxNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE0cHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIHNwYW4uaXRlbV9wcmljZTpob3ZlciB7XG4gICAgICBjb2xvcjogI0U0MzkzQztcbiAgICAgIGN1cnNvcjogdGV4dDtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIC5pdGVtX2ltZyBpbWcge1xuICAgICAgbWF4LWhlaWdodDogNzBweDtcbiAgICAgIG1heC13aWR0aDogNzBweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB9XG4gICAgI2hpc3RvcnlfZGV0YWlsIHNwYW4uc2l0ZV9pY29uIHtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgY3Vyc29yOiB0ZXh0O1xuICAgIH1cbiAgICBcbiAgICBzcGFuLml0ZW1fY2xvc2VfYnRuIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGhlaWdodDogMTJweDtcbiAgICAgIHdpZHRoOiAyNXB4O1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDE3cHg7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgfVxuICAgIHNwYW4uaXRlbV9jbG9zZV9idG46aG92ZXIge1xuICAgICAgY29sb3I6ICM0OGJlZmUhaW1wb3J0YW50O1xuICAgIH1cbiAgICBcbiAgICBcbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyl7InVzZSBzdHJpY3QiO2k9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQsZSl7aWYoIShhKCIjZG91YmFuLXRvcCIpLmxlbmd0aD4wfHxudWxsPT10LnJhdGluZy5hdmVyYWdlfHwwPT1wYXJzZUludCh0LnJhdGluZy5hdmVyYWdlKSkpe3ZhciBuPXQucmF0aW5nLmF2ZXJhZ2U7YSgiLmd3ZC10b3BiYXItbGVmdCIpLmFwcGVuZChhKCI8YT4iLHtzdHlsZToiaGVpZ2h0OjM2cHgiLHRpdGxlOiLosYbnk6Por4TliIYiLGlkOiJkb3ViYW4tdG9wIix0YXJnZXQ6Il9ibGFuayIsaHJlZjp0LmFsdCsoInJldmlld3M/IitvLmV4dEJyYW5kKyJfaXNibj0iKStlfSkuYXBwZW5kKGEoIjxzcGFuPiIseyJjbGFzcyI6ImRvdWJhbi1pY29uIn0pKS5hcHBlbmQoYSgiPHNwYW4+Iix7c3R5bGU6ImNvbG9yOiMwMDc2MTAifSkuYXBwZW5kKG4rIuWIhiIpKSl9fWZ1bmN0aW9uIGUodCxlKXtpZighKGEoIiMiK28uZXh0QnJhbmQrIi1kb3ViYW4iKS5sZW5ndGg+MHx8bnVsbD09dC5yYXRpbmcuYXZlcmFnZXx8MD09cGFyc2VJbnQodC5yYXRpbmcuYXZlcmFnZSkpKXt2YXIgbj10LnJhdGluZy5hdmVyYWdlO2EoIi4iK28uZXh0QnJhbmQrIi1mYXZvci1tb2R1bGUiKS5lcSgwKS5hZnRlcihhKCI8ZGl2PiIse2lkOm8uZXh0QnJhbmQrIi1kb3ViYW4iLCJjbGFzcyI6by5leHRCcmFuZCsiLWNsb3NlLW1vZHVsZSAiK28uZXh0QnJhbmQrIi1kZXNjIHJlLSIrby5leHRCcmFuZCsiLWRlc2MifSkuYXBwZW5kKGEoIjxhPiIse2lkOiJnb3RvX2RvdWJhbiIsdGl0bGU6IuixhueTo+ivhOWIhiIsdGFyZ2V0OiJfYmxhbmsiLGhyZWY6dC5hbHQrKCJyZXZpZXdzPyIrby5leHRCcmFuZCsiX2lzYm49IikrZX0pLmFwcGVuZChhKCI8ZGl2PiIseyJjbGFzcyI6by5leHRCcmFuZCsiYW5kX2RvdWJhbl9pY29uX2JvdHRvbSJ9KSkuYXBwZW5kKGEoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dE5hbWUrIl9kb3ViYW5fdGV4dF9ib3R0b20ifSkuYXBwZW5kKG4rIuWIhiIpKSkpLHMuc2V0Qm90dG9tVmlld09mZnNldCgpLGwuc2V0Qm90dG9tVmlld09mZnNldCgpfX1mdW5jdGlvbiBpKHQsZSl7aWYoIShhKCIjIitvLmV4dE5hbWUrIl9kb3ViYW5fZGl2IikudGV4dCgpLmxlbmd0aD4xfHxudWxsPT10LnJhdGluZy5hdmVyYWdlfHwwPT1wYXJzZUludCh0LnJhdGluZy5hdmVyYWdlKSkpe3ZhciBuPXQucmF0aW5nLmF2ZXJhZ2UsaT0xNixyPTgwLHM9MTYsbD0tODAsYz0tMTc5LHA9MCxkPTAsaD1wYXJzZUZsb2F0KG4pLzIsdT1wYXJzZUludChoKTtoIT11JiYoaD1oLXU8PS4yNT91OmgtdT49Ljc1P3UrMTp1Ky41KSxwPXMqcGFyc2VJbnQoaC01KSxkPXBhcnNlSW50KGgpPT1oP2w6Yzt2YXIgbT0iaGVpZ2h0OiIraSsicHg7d2lkdGg6IityKyJweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOiIrcCsicHggIitkKyJweDtmbG9hdDpsZWZ0IjthKCIjIitvLmV4dE5hbWUrIl9kb3ViYW5fZGl2IikuYWRkQ2xhc3Moby5leHROYW1lKyJfZG91YmFuIiksYSgiIyIrby5leHROYW1lKyJfZG91YmFuX2RpdiIpLmFwcGVuZChhKCI8YT4iLHtpZDpvLmV4dE5hbWUrIl9kb3ViYW5faW5zZXJ0X2ljb24iLHRpdGxlOiLosYbnk6Por4TliIYiLHRhcmdldDoiX2JsYW5rIixocmVmOnQuYWx0KygicmV2aWV3cz8iK28uZXh0QnJhbmQrIl9pc2JuPSIpK2V9KSkuYXBwZW5kKGEoIjxkaXY+Iix7aWQ6by5leHROYW1lKyJfZG91YmFuX2luc2VydF90ZXh0In0pLmFwcGVuZChhKCI8c3Bhbj4iLHsiY2xhc3MiOm8uZXh0TmFtZSsiX2RvdWJhbl9pbnNlcnRfdGV4dCJ9KS5hcHBlbmQoIuivhOWIhu+8miIpKSkuYXBwZW5kKGEoIjxkaXY+Iix7aWQ6by5leHROYW1lKyJfZG91YmFuX3N0YXIiLHN0eWxlOm19KSkuYXBwZW5kKGEoIjxkaXY+Iix7aWQ6by5leHROYW1lKyJfZG91YmFuX2F2ZXJhZ2UifSkuYXBwZW5kKHQucmF0aW5nLmF2ZXJhZ2UrIuWIhiIpKSxhKCIjIitvLmV4dE5hbWUrIl9kb3ViYW5fZGl2Iikuc2hvdygpfX12YXIgYT1uKDQpLHI9e30scz1uKDEzNSksbD1uKDEzOSk7cmV0dXJuIHIuc2hvdz1mdW5jdGlvbihvLGEpe2lmKG51bGwhPW8mJiIiIT1vKXt2YXIgcj1uKDI0KTtyLmdldFB1cmUoImh0dHBzOi8vYXBpLmRvdWJhbi5jb20vdjIvYm9vay9pc2JuLyIrbykuZG9uZShmdW5jdGlvbihuKXsiNjAwMCIhPW4uY29kZSYmKCJ0b3AiPT1hJiZ0KG4sbyksImJvdHRvbSI9PWEmJmUobixvKSxpKG4sbykpfSl9fSxyfS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyl7InVzZSBzdHJpY3QiO2k9ZnVuY3Rpb24oKXt2YXIgdD1uKDQpLGU9bigyNCksaT1uKDEzNiksYT1uKDEzNyk7cmV0dXJue2luaXQ6ZnVuY3Rpb24odCxpKXtpZihudWxsIT1vLnNhdmVUYlJlc0RhdGEpcmV0dXJuIHZvaWQgdGhpcy5yZW5kZXJUYW9iYW9VSShvLnNhdmVUYlJlc0RhdGEpO3ZhciByPSIxIixzPXRbImNvZGUtc2VydmVyIl0sbD10LmV4YWN0X2FycixjPTEwMCp0Lm5vdy5wcmljZTtjfHwoYz0xMDAqby5kcC5wcmljZSksc3x8KHM9e30scj0iMCIpO3ZhciBwPVsiYW1hem9uIiwiNnBtIiwiZWJheSJdO2lmKHAuaW5kZXhPZihvLnNpdGUpPi0xJiYoYz0xMDAqby5kcC5wcmljZSksImFtYXpvbiIhPW8uc2l0ZXx8bC5icmFuZHx8IjEiPT09dC5ub3cuc2l0ZV9pZCl7dmFyIGQ9by5zZXJ2ZXIrIi9icndleHQvdGJyZXM/dW5pb249IitvLnVuaW9uKyImdXJsPSIrZW5jb2RlVVJJQ29tcG9uZW50KGwudXJsKSsiJnNpdGU9IitsLnNpdGUrIiZpc2JuPSIrbC5pc2JuKyIma2V5d29yZHM9IitlbmNvZGVVUklDb21wb25lbnQobC5rZXl3b3JkcykrIiZicmFuZD0iK2VuY29kZVVSSUNvbXBvbmVudChsLmJyYW5kKSsiJnR5cGU9IitlbmNvZGVVUklDb21wb25lbnQobC50eXBlKSsiJnByaWNlPSIrYysiJmNsYXNzX2lkPSIrbC5jbGFzc19pZCsiJm5hbWU9IitlbmNvZGVVUklDb21wb25lbnQoby5kcC5uYW1lKSsiJmNvZGVfYnJhbmRfaWQ9IitzLmJyYW5kX2lkKyImY29kZV9jbGVhbl90aXRsZT0iK2VuY29kZVVSSUNvbXBvbmVudChzLmNsZWFuX3RpdGxlKSsiJmNvZGVfY29kZT0iK3MuY29kZSsiJmNvZGVfZGlzcGxheV9icmFuZD0iK2VuY29kZVVSSUNvbXBvbmVudChzLmRpc3BsYXlfYnJhbmQpKyImY29kZV9icmFuZD0iK2VuY29kZVVSSUNvbXBvbmVudChzLmJyYW5kKSsiJmNvZGVfY2xhc3NfaWQ9IitlbmNvZGVVUklDb21wb25lbnQocy5jbGFzc19pZCkrIiZjb2RlX3ByaWNlPSIrZW5jb2RlVVJJQ29tcG9uZW50KHMucHJpY2UpKyImY29kZV9zcGVjPSIrZW5jb2RlVVJJQ29tcG9uZW50KHMuc3BlYykrIiZjb2RlLXNlcnZlcj0iK3I7ZS5nZXQoZCkuZG9uZShmdW5jdGlvbih0KXsidGFvYmFvIj09by5zaXRlfHwidG1hbGwiPT1vLnNpdGU/YS5nZXRVbmlxUGlkKHQsZnVuY3Rpb24odCl7by5zYXZlVGJSZXNEYXRhPXQsbig2MSkucmVuZGVyQnQodCl9KTphLmdldEltZ1NlYXJjaCh0LGZ1bmN0aW9uKHQpe28uc2F2ZVRiUmVzRGF0YT10LG4oNjEpLnJlbmRlckJ0KHQpfSl9KX19LHJlbmRlclRhb2Jhb1VJOmZ1bmN0aW9uKGUpe3ZhciBuPXRoaXMsaT1vLmdldEZpeGVkU2hvd1Byb2R1Y3ROdW0oKTtuLnNob3dCb3R0b21WaWV3KCJ0bWFsbCIsZSksbi5zaG93Qm90dG9tVmlldygidGFvYmFvIixlKSxvLnNldFBhZ2VBcmdzKG8uZXh0QnJhbmQrIi1jb21wYXJlLXRtYWxsIixpKSxvLnNldFBhZ2VBcmdzKG8uZXh0QnJhbmQrIi1jb21wYXJlLXRhb2JhbyIsaSksbi5zZXRCb3R0b21WaWV3T2Zmc2V0KCksby5hdXRvRml4V2lkdGgoKSwiIj09ZS5zZWFyY2gua2V5d29yZHMmJiIiIT1vLmRwLmlzYm4mJnQoIi4iK28uZXh0QnJhbmQrIi1zZWFyY2gtaW5wdXQiKS52YWwoby5kcC5pc2JuKSwiIiE9ZS5zZWFyY2gua2V5d29yZHMmJnQoIi4iK28uZXh0QnJhbmQrIi1zZWFyY2gtaW5wdXQiKS52YWwoZS5zZWFyY2gua2V5d29yZHMpLCJ2aXBzaG9wIj09PW8uc2l0ZSYmdCgiLiIrby5leHRCcmFuZCsiLXNlYXJjaC1pbnB1dCIpLnZhbChvLmRwLmNhdF9uYW1lKSx0KHdpbmRvdykuYmluZCgicmVEcmF3VGFvYmFvQmFubmVyIixmdW5jdGlvbigpe3ZhciB0PW8uZ2V0Rml4ZWRTaG93UHJvZHVjdE51bSgpO24uc2hvd0JvdHRvbVZpZXcoInRtYWxsIixlKSxuLnNob3dCb3R0b21WaWV3KCJ0YW9iYW8iLGUpLG8uc2V0UGFnZUFyZ3Moby5leHRCcmFuZCsiLWNvbXBhcmUtdG1hbGwiLHQpLG8uc2V0UGFnZUFyZ3Moby5leHRCcmFuZCsiLWNvbXBhcmUtdGFvYmFvIix0KSxuLnNldEJvdHRvbVZpZXdPZmZzZXQoKX0pLDE9PW8ucF9mb2xkJiZ0KCIuIitvLmV4dEJyYW5kKyItY2xvc2UtbW9kdWxlIikuaGlkZSgpfSxzaG93Qm90dG9tVmlldzpmdW5jdGlvbihlLG4pe3ZhciBhPW8uZ2V0Rml4ZWRTaG93UHJvZHVjdE51bSgpLHI9IiI7aWYoInRtYWxsIj09ZT9yPSLlpKnnjKvllYbln44iOiJ0YW9iYW8iPT1lJiYocj0i5reY5a6d572RIiksbi5zaXRlJiYocj0i5ZCM57G754Ot5Y2WIiksbltlXSYmbltlXS5taW5fcHJpY2Upe2lmKG5bZV0ucHJvZHVjdC5sZW5ndGg+MCl7dmFyIHM9aS50YihuW2VdKTtpZihzIGluc3RhbmNlb2YgQXJyYXkpcmV0dXJuO2lmKDA9PT1zLnByb2R1Y3QubGVuZ3RoKXJldHVybjt2YXIgbD1zLnByb2R1Y3RbMF0sYz1wYXJzZUludChzLnByb2R1Y3QubGVuZ3RoKSxwPWMlYT09MD9wYXJzZUludChjL2EpOnBhcnNlSW50KGMvYSkrMSxkPXQoIjxsaT4iKTtkLmFwcGVuZCh0KCI8c3Bhbj4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0iLGhyZWY6bC51cmwsdGFyZ2V0OiJfYmxhbmsifSkuYXBwZW5kKHQoIjxwPiIse3N0eWxlOiJoZWlnaHQ6MTBweDtkaXNwbGF5Om5vbmU7IiwiY2xhc3MiOm8uZXh0QnJhbmQrIi1pc3p3ZiJ9KS5odG1sKCImbmJzcCIpKS5hcHBlbmQodCgiPHA+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItcHJpY2UifSkuaHRtbCgiJnllbjsiK3MubWluX3ByaWNlKyhzLm1heF9wcmljZSE9cy5taW5fcHJpY2U/In4iK3MubWF4X3ByaWNlOiIiKSkpLmFwcGVuZCh0KCI8cD4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1zdG9yZSJ9KS50ZXh0KHIpKS5hcHBlbmQodCgiPHA+Iix7c3R5bGU6ImhlaWdodDoxMHB4O2Rpc3BsYXk6bm9uZTsiLCJjbGFzcyI6by5leHRCcmFuZCsiLWlzendmIn0pLmh0bWwoIiZuYnNwIikpKTt2YXIgaD10KCI8ZGl2PiIseyJjbGFzcyI6by5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwgcmUtIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbCAiK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLWZpeGVkIixzdHlsZToiZGlzcGxheTpub25lOyJ9KTtoLmFwcGVuZCh0KCI8cD4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLXRpdGxlICIrby5leHRCcmFuZCsiLWhlaWdodC1hdXRvICIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtdGl0bGUtZml4ZWQifSkuYXBwZW5kKHQoIjxzcGFuPiIseyJjbGFzcyI6by5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtdGl0bGUtZGVzYyJ9KS50ZXh0KHIrIu+8muS4jeWQjOWNluWutui/kOi0ueS4jeWQjCIpKSk7Zm9yKHZhciB1PXQoIjx1bD4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1pdGVtLWxpc3QifSksbT0wO208YzttKyspe3ZhciBmPXMucHJvZHVjdFttXTt1LmFwcGVuZCh0KCI8bGk+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItbGlzdC1pdGVtICIrKG0lYT09YS0xfHxtPT1jLTE/by5leHRCcmFuZCsiLWxhc3QiOiIiKSxzdHlsZToiZGlzcGxheTogIisobT49YT8ibm9uZSI6ImJsb2NrIil9KS5hcHBlbmQodCgiPGE+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItcGljIixocmVmOmYudXJsLHRhcmdldDoiX2JsYW5rIn0pLmFwcGVuZCh0KCI8aW1nPiIse3NyYzpvLnNfc2VydmVyKyIvaW1hZ2VzL2RwX2RlZmF1bHQuanBnIiwiZGF0YS1vcmlnaW5hbCI6Zi5waWNfdXJsLHRpdGxlOmYudGl0bGV9KSkpLmFwcGVuZCh0KCI8YT4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1wcm9kdWN0LXRpdGxlIixocmVmOmYudXJsLHRhcmdldDoiX2JsYW5rIix0aXRsZTpmLnRpdGxlfSkudGV4dChmLnRpdGxlKSkuYXBwZW5kKHQoIjxhPiIseyJjbGFzcyI6by5leHRCcmFuZCsiLXByaWNlIixocmVmOmYudXJsLHRhcmdldDoiX2JsYW5rIn0pLmh0bWwoIiZ5ZW47IitmLnByaWNlKSkpfXZhciBnPXQoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItdGItdG0tUGFnZVZpZXcgIitvLmV4dEJyYW5kKyItYjJjLVBhZ2VWaWV3LWZpeGVkIn0pO2lmKGcuYXBwZW5kKHQoIjxwPiIseyJjbGFzcyI6by5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtdGl0bGUiLHN0eWxlOiJoZWlnaHQ6YXV0bzsifSkuYXBwZW5kKHQoIjxzcGFuPiIse3N0eWxlOiJmbG9hdDpub25lO3BhZGRpbmctbGVmdDoxMHB4OyIsImNsYXNzIjpvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC1wYWdlcyJ9KS5hcHBlbmQodCgiPGVtPiIse2lkOiJwYWdlLW5vdy0iK2UsImNsYXNzIjoicGFnZS1ub3cifSkudGV4dCgiMSIpKS5hcHBlbmQoIi8iKS5hcHBlbmQodCgiPGVtPiIse2lkOiJwYWdlLXRvdGFsLSIrZSwiY2xhc3MiOiJwYWdlLXRvdGFsIn0pLnRleHQoIjEiKSkpKSxoLmFwcGVuZCh0KCI8ZGl2PiIseyJjbGFzcyI6by5leHRCcmFuZCsiLWNvbXBhcmUtcHJldi1wYWdlICIrby5leHRCcmFuZCsiLWxlZnQifSkuYXBwZW5kKHQoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItYmcgcGFnZS1hcnJvdyJ9KSkpLmFwcGVuZCh1KS5hcHBlbmQodCgiPGRpdj4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1jb21wYXJlLW5leHQtcGFnZSAiK28uZXh0QnJhbmQrIi1yaWdodCJ9KS5hcHBlbmQodCgiPGRpdj4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1iZyBwYWdlLWFycm93In0pKSkuYXBwZW5kKGcpLGQuYXBwZW5kKGgpLHQoIiMiK28uZXh0QnJhbmQrIi1jb21wYXJlLSIrZSkuaHRtbCgiIikuYXBwZW5kKGQpLDE9PXApe2QuZmluZCgiLiIrby5leHRCcmFuZCsiLWNvbXBhcmUtcHJldi1wYWdlIikuaGlkZSgpLGQuZmluZCgiLiIrby5leHRCcmFuZCsiLWNvbXBhcmUtbmV4dC1wYWdlIikuaGlkZSgpLGQuZmluZCgiLiIrby5leHRCcmFuZCsiLWIyYy1QYWdlVmlldy1maXhlZCIpLmhpZGUoKSxkLmF0dHIoInBhZ2VzIiwxKSxkLmF0dHIoImxlbiIsYyk7dmFyIHc9MjAwKmM7ZC5jaGlsZHJlbigiZGl2LiIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtZml4ZWQiKS5jc3MoIndpZHRoIix3KzIpfWVsc2UgZC5jaGlsZHJlbigiZGl2LiIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtZml4ZWQiKS5jc3MoIndpZHRoIixvLndpZHRoLTIpO3QoIiNwYWdlLXRvdGFsLSIrZSkudGV4dChwKX10KCIjIitvLmV4dEJyYW5kKyItY29tcGFyZS0iK2UpLmNzcygiZGlzcGxheSIsImJsb2NrIil9dCgiIyIrby5leHRCcmFuZCsiLWNvbXBhcmUtdG1hbGwsIyIrby5leHRCcmFuZCsiLWNvbXBhcmUtdGFvYmFvIikuZWFjaChmdW5jdGlvbigpe3QodGhpcykuZmluZCgiYS4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0sYS4iK28uZXh0QnJhbmQrIi1waWMsYS4iK28uZXh0QnJhbmQrIi1wcm9kdWN0LXRpdGxlLGEuIitvLmV4dEJyYW5kKyItcHJpY2UiKS5lYWNoKGZ1bmN0aW9uKCl7dCh0aGlzKS5hdHRyKCJyZWwiLCJub3JlZmVycmVyIikuYXR0cigiaHJlZiIsdCh0aGlzKS5hdHRyKCJocmVmIikrby51dCl9KX0pfSxzZXRCb3R0b21WaWV3T2Zmc2V0OmZ1bmN0aW9uKCl7dCgiIyIrby5leHRCcmFuZCsiLWNvbXBhcmUtdG1hbGwgbGksIyIrby5leHRCcmFuZCsiLWNvbXBhcmUtdGFvYmFvIGxpIikuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyk7aWYoIjEiPT1lLmF0dHIoInBhZ2VzIikpe3ZhciBuPWUub2Zmc2V0KCkubGVmdCxpPWUud2lkdGgoKSxhPTIwMCpwYXJzZUludChlLmF0dHIoImxlbiIpKSxyPW4tKGEvMi1pLzIpO3I8MCYmKHI9MCk7dmFyIHM9by53aWR0aC1yO28uSUU2PyhyPWkvMi1hLzIscituPDAmJihyPS1uKSxlLmNoaWxkcmVuKCJkaXYuIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC1maXhlZCIpLmNzcygicG9zaXRpb24iLCJhYnNvbHV0ZSIpLmNzcygibGVmdCIsciksZS5maW5kKCIuIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC10aXRsZS1maXhlZCIpLmNzcygibGVmdCIsMCkpOmE8cz8oZS5jaGlsZHJlbigiZGl2LiIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtZml4ZWQiKS5jc3MoImxlZnQiLHIpLGUuZmluZCgiLiIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtdGl0bGUtZml4ZWQiKS5jc3MoImxlZnQiLHIpKTooZS5jaGlsZHJlbigiZGl2LiIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtZml4ZWQiKS5jc3MoImxlZnQiLG8ud2lkdGgtYSksZS5maW5kKCIuIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC10aXRsZS1maXhlZCIpLmNzcygibGVmdCIsby53aWR0aC1hKSl9ZWxzZSBpZihvLklFNil7dmFyIG49ZS5vZmZzZXQoKS5sZWZ0LHI9MC1uO2UuY2hpbGRyZW4oImRpdi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLWZpeGVkIikuY3NzKCJwb3NpdGlvbiIsImFic29sdXRlIikuY3NzKCJsZWZ0IixyKSxlLmZpbmQoIi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLXRpdGxlLWZpeGVkIikuY3NzKCJsZWZ0IiwwKX19KX19fS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciBpPW4oMjMpO3QuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgbj1bXSxvPWUuZHAucHJpY2V8fDA7aWYoIjE4OSI9PT1lLnNpdGUpe2Zvcih2YXIgYT0wO2E8dC5sZW5ndGg7YSsrKWkodFthXS5wcmljZSk+PW8mJm4ucHVzaCh0W2FdKTtyZXR1cm4gbn1yZXR1cm4gdH0sdC5leHBvcnRzLnRiPWZ1bmN0aW9uKHQpe2lmKHQgaW5zdGFuY2VvZiBBcnJheSlyZXR1cm4gdDtmb3IodmFyIG49W10sbz10LnByb2R1Y3QsYT1lLmRwLnByaWNlfHwwLHI9MDtyPG8ubGVuZ3RoO3IrKylvW3JdLmltZ191cmwmJiFvW3JdLmltZ191cmwubWF0Y2goL19cZCt4XGQrLykmJihvW3JdLmltZ191cmw9b1tyXS5pbWdfdXJsKyJfMTAweDEwMCIpLG9bcl0ucGljX3VybCYmIW9bcl0ucGljX3VybC5tYXRjaCgvX1xkK3hcZCsvKSYmKG9bcl0ucGljX3VybD1vW3JdLnBpY191cmwrIl8xMDB4MTAwIik7aWYoIjE4OSI9PT1lLnNpdGUpe2Zvcih2YXIgcj0wO3I8by5sZW5ndGg7cisrKWkob1tyXS5wcmljZSk+PWEmJm4ucHVzaChvW3JdKTt0Lm1pbl9wcmljZT1uWzBdJiZuWzBdLnByaWNlLHQucHJvZHVjdD1ufXJldHVybiB0fX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDI0KSxhPW4oMjIpLHI9bigxMzYpLHM9big1NSksbD1uKDEzOCk7dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7aWYobnVsbCE9ZS5zYXZlX3RicmVzX2RhdGEpcmV0dXJuIHZvaWQgdGhpcy5yZW5kZXJUYnJlcyhlLnNhdmVfdGJyZXNfZGF0YSk7dmFyIG49dGhpcyxhPSIxIixyPXQuZXhhY3RfYXJyLHM9dFsiY29kZS1zZXJ2ZXIiXSxsPTEwMCp0Lm5vdy5wcmljZTtsfHwobD0xMDAqZS5kcC5wcmljZSksc3x8KHM9e30sYT0iMCIpO3ZhciBjPVsiYW1hem9uIiwiNnBtIiwiZWJheSJdO2lmKGMuaW5kZXhPZihlLnNpdGUpPi0xJiYobD0xMDAqZS5kcC5wcmljZSksImFtYXpvbiIhPWUuc2l0ZXx8ci5icmFuZHx8IjEiPT09dC5ub3cuc2l0ZV9pZCl7ZS5kcC5taW5fcHJpY2U9cGFyc2VJbnQoMTAwKmUuZHAubWluX3ByaWNlKSxlLmRwLm1heF9wcmljZT1wYXJzZUludCgxMDAqZS5kcC5tYXhfcHJpY2UpO3ZhciBwPWUuc2VydmVyKyIvYnJ3ZXh0L3RicmVzP3VuaW9uPSIrZS51bmlvbisiJnVybD0iK2VuY29kZVVSSUNvbXBvbmVudChyLnVybCkrIiZzaXRlPSIrci5zaXRlKyImaXNibj0iK3IuaXNibisiJmtleXdvcmRzPSIrZW5jb2RlVVJJQ29tcG9uZW50KHIua2V5d29yZHMpKyImYnJhbmQ9IitlbmNvZGVVUklDb21wb25lbnQoci5icmFuZCkrIiZ0eXBlPSIrZW5jb2RlVVJJQ29tcG9uZW50KHIudHlwZSkrIiZwcmljZT0iK2wrIiZjbGFzc19pZD0iK3IuY2xhc3NfaWQrIiZuYW1lPSIrZW5jb2RlVVJJQ29tcG9uZW50KGUuZHAubmFtZSkrIiZjb2RlX2JyYW5kX2lkPSIrcy5icmFuZF9pZCsiJmNvZGVfY2xlYW5fdGl0bGU9IitlbmNvZGVVUklDb21wb25lbnQocy5jbGVhbl90aXRsZSkrIiZjb2RlX2NvZGU9IitlbmNvZGVVUklDb21wb25lbnQocy5jb2RlKSsiJmNvZGVfZGlzcGxheV9icmFuZD0iK2VuY29kZVVSSUNvbXBvbmVudChzLmRpc3BsYXlfYnJhbmQpKyImY29kZV9icmFuZD0iK2VuY29kZVVSSUNvbXBvbmVudChzLmJyYW5kKSsiJmNvZGVfY2xhc3NfaWQ9IitlbmNvZGVVUklDb21wb25lbnQocy5jbGFzc19pZCkrIiZjb2RlX3ByaWNlPSIrZW5jb2RlVVJJQ29tcG9uZW50KHMucHJpY2UpKyImY29kZV9zcGVjPSIrZW5jb2RlVVJJQ29tcG9uZW50KHMuc3BlYykrIiZjb2RlLXNlcnZlcj0iK2E7by5nZXQocCkuZG9uZShmdW5jdGlvbih0KXsidGFvYmFvIj09ZS5zaXRlfHwidG1hbGwiPT1lLnNpdGV8fCJhaS10YW9iYW8iPT1lLnNpdGU/bi5nZXRVbmlxUGlkKHQsZnVuY3Rpb24odCl7ZS5zYXZlX3RicmVzX2RhdGE9dCxuLnJlbmRlclRicmVzKHQpfSk6bi5nZXRJbWdTZWFyY2godCxmdW5jdGlvbih0KXtlLnNhdmVfdGJyZXNfZGF0YT10LG4ucmVuZGVyVGJyZXModCl9KX0pLmZhaWwoZnVuY3Rpb24oKXsicmlnaHQiPT1lLnN0eWxlJiYoaSgiI3BsdC10bWFsbC1ibG9jayIpLmhpZGUoKSxpKCIjcGx0LXRhb2Jhby1ibG9jayIpLmhpZGUoKSl9KX19LHQuZXhwb3J0cy5yZW5kZXJUYnJlcz1mdW5jdGlvbih0KXtuKDY0KS5pbml0KHQudG1hbGwucHJvZHVjdCwidG1hbGwiKSxuKDY0KS5pbml0KHQudGFvYmFvLnByb2R1Y3QsInRhb2JhbyIpLHQudG1hbGw9ci50Yih0LnRtYWxsKSx0LnRhb2Jhbz1yLnRiKHQudGFvYmFvKSwidG9wIj09ZS5zdHlsZSYmKHRoaXMuc2hvd190YW9iYW9fcHJvZHVjdHNfdG9wKHQpLGUuZml4V2lkdGgoKSl9LHQuZXhwb3J0cy5zaG93X3Rhb2Jhb19wcm9kdWN0c190b3A9ZnVuY3Rpb24odCl7dmFyIG89cy5pbml0KCkscj0i5pyA6L+R6ZSA6YePIjt0LmZyb21fc2VsZj09PSEwJiYocj0i5oC76ZSA6YePIik7dmFyIGM9big3OCk7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiB0LnRtYWxsLm1pbl9wcmljZSYmbnVsbCE9PXQudG1hbGwubWluX3ByaWNlKXtpZigwPT10LnNlYXJjaC5pc19leGFjdCYmZS5zaXRlLmluZGV4T2YoInRhb2JhbyIpPj0wKXt2YXIgcD1pKCIjIitlLmV4dE5hbWUrIi10bWFsbC1kcCIpLmh0bWwoKTtwPXAucmVwbGFjZSgvXHU1OTI5XHU3MzJiL2dpLCLlpKnnjKvnm7jkvLzmrL4iKSxpKCIjIitlLmV4dE5hbWUrIi10bWFsbC1kcCIpLmh0bWwocCl9bC5pbml0KCJ0bWFsbCIsdC50bWFsbC5wcm9kdWN0LCImY29sdW1uPWIyYyIpLGkoIiMiK2UuZXh0TmFtZSsiLXRtYWxsLWRwIC5nd2QtcHJpY2UiKS5odG1sKCImeWVuOyIrdC50bWFsbC5taW5fcHJpY2UpLGkoIiMiK2UuZXh0TmFtZSsiLXRtYWxsLWRwIikuc2hvdygpLGkoIiMiK2UuZXh0TmFtZSsiLXRtYWxsLWRwLWRldGFpbCIpLmFwcGVuZChhLmNvbXBpbGUoYykoe2RhdGE6dC50bWFsbC5wcm9kdWN0LHNfc2VydmVyOmUuc19zZXJ2ZXIsd2lkdGg6by50dXJucFcsbGluazp0LnRtYWxsLm1vcmVfbGluayxzYWxlX3RsZTpyLGFsbFByb2R1Y3RXOm8uYWxsUHJvZHVjdFd9KSksaSgiI3RtYWxsLXByZXYtcGFnZSIpLmNsaWNrKGZ1bmN0aW9uKCl7ZS5jaGFuZ2VfcGFnZSgidG1hbGwiLC0xKX0pLGkoIiN0bWFsbC1uZXh0LXBhZ2UiKS5jbGljayhmdW5jdGlvbigpe2UuY2hhbmdlX3BhZ2UoInRtYWxsIiwxKX0pfWlmKCJ1bmRlZmluZWQiIT10eXBlb2YgdC50YW9iYW8ubWluX3ByaWNlJiZudWxsIT09dC50YW9iYW8ubWluX3ByaWNlKXtpZigwPT10LnNlYXJjaC5pc19leGFjdCYmZS5zaXRlLmluZGV4T2YoInRhb2JhbyIpPj0wKXt2YXIgcD1pKCIjIitlLmV4dE5hbWUrIi10YW9iYW8tZHAiKS5odG1sKCk7cD1wLnJlcGxhY2UoL1x1NmRkOFx1NWI5ZC9naSwi5reY5a6d55u45Ly85qy+IiksaSgiIyIrZS5leHROYW1lKyItdGFvYmFvLWRwIikuaHRtbChwKX12YXIgZD1uKDc3KTtsLmluaXQoInRhb2JhbyIsdC50YW9iYW8ucHJvZHVjdCwiJmNvbHVtbj1iMmMiKSxpKCIjIitlLmV4dE5hbWUrIi10YW9iYW8tZHAgLmd3ZC1wcmljZSIpLmh0bWwoIiZ5ZW47Iit0LnRhb2Jhby5taW5fcHJpY2UpLGkoIiMiK2UuZXh0TmFtZSsiLXRhb2Jhby1kcCIpLnNob3coKSxpKCIjIitlLmV4dE5hbWUrIi10YW9iYW8tZHAtZGV0YWlsIikuYXBwZW5kKGEuY29tcGlsZShkKSh7ZGF0YTp0LnRhb2Jhby5wcm9kdWN0LHNfc2VydmVyOmUuc19zZXJ2ZXIsd2lkdGg6by50dXJucFcsbGluazp0LnRhb2Jhby5tb3JlX2xpbmssYWxsUHJvZHVjdFc6by5hbGxQcm9kdWN0V30pKSxpKCIjdGFvYmFvLXByZXYtcGFnZSIpLmNsaWNrKGZ1bmN0aW9uKCl7ZS5jaGFuZ2VfcGFnZSgidGFvYmFvIiwtMSl9KSxpKCIjdGFvYmFvLW5leHQtcGFnZSIpLmNsaWNrKGZ1bmN0aW9uKCl7ZS5jaGFuZ2VfcGFnZSgidGFvYmFvIiwxKX0pfSJ2aXBzaG9wIj09PWUuc2l0ZT9pKCIjIitlLmV4dE5hbWUrIi1zZWFyY2gtcHJvZHVjdCIpLnZhbChlLmRwLmNhdF9uYW1lfHxlLnNhdmVfZHBfcXVlcnkubm93LmNvcmV3b3JkKTooIiI9PXQuc2VhcmNoLmtleXdvcmRzJiYiIiE9ZS5kcC5pc2JuJiZpKCIjIitlLmV4dE5hbWUrIi1zZWFyY2gtcHJvZHVjdCIpLnZhbChlLmRwLmlzYm4pLCIiIT10LnNlYXJjaC5rZXl3b3JkcyYmaSgiIyIrZS5leHROYW1lKyItc2VhcmNoLXByb2R1Y3QiKS52YWwodC5zZWFyY2gua2V5d29yZHMpKSxlLmluaXRfaXRlbV9saXN0KCJ0bWFsbCIpLGUuc2V0X2l0ZW1fYXJncygidG1hbGwiKSxlLnNldF9wYWdlX2FyZ3MoInRtYWxsIiksZS5sb2FkX2ltYWdlKCJ0bWFsbCIsMCxlLnBhZ2Vfc2l6ZSksZS5pbml0X2l0ZW1fbGlzdCgidGFvYmFvIiksZS5zZXRfaXRlbV9hcmdzKCJ0YW9iYW8iKSxlLnNldF9wYWdlX2FyZ3MoInRhb2JhbyIpLGUubG9hZF9pbWFnZSgidGFvYmFvIiwwLGUucGFnZV9zaXplKX0sdC5leHBvcnRzLmdldEltZ1NlYXJjaD1mdW5jdGlvbih0LGkpe3ZhciBvPW4oNzkpO2lmKHQ9by5idWlsZENvbW1vbih0KSwibHV5b3UiPT1lLmJ0eXBlKXJldHVybiB2b2lkIGkodCk7dmFyIGE9big4MCkscj1hLmdldCgiZHBfZGF0YSIpJiZhLmdldCgiZHBfZGF0YSIpLmV4YWN0X2Fyci5icmFuZF9pZDtyZXR1cm4iMzYwYnV5IiE9ZS5zaXRlfHwhcnx8dC50YW9iYW8uc29ydCYmdC50bWFsbC5zb3J0P3ZvaWQgbig4MSkuaW5pdChmdW5jdGlvbihlKXtlPyh0LnRtYWxsLnNvcnQmJih0LnRtYWxsPXt9KSxlLnRtYWxsLmxlbmd0aD4wJiYodC50bWFsbC5taW5fcHJpY2U9ZS50bWFsbFswXS5wcmljZSx0LnRtYWxsLm1heF9wcmljZT1lLnRtYWxsW2UudG1hbGwubGVuZ3RoLTFdLnByaWNlLHQudG1hbGwuc3RvcmU9ZS50bWFsbCx0LnRtYWxsLnByb2R1Y3Q9ZS50bWFsbCksZS50YW9iYW8ubGVuZ3RoPjAmJih0LnRhb2Jhby5wcm9kdWN0PWUudGFvYmFvLHQudGFvYmFvLnN0b3JlPWUudGFvYmFvLHQudGFvYmFvLm1pbl9wcmljZT1lLnRhb2Jhb1swXS5wcmljZSx0LnRhb2Jhby5tYXhfcHJpY2U9ZS50YW9iYW9bZS50YW9iYW8ubGVuZ3RoLTFdLnByaWNlKSx0LnRtYWxsLm1vcmVfbGlua3x8KHQudG1hbGwubW9yZV9saW5rPSJodHRwczovL3MudGFvYmFvLmNvbS9zZWFyY2g/cT0iK3Quc2VhcmNoLmtleXdvcmRzKyImcGlkPSIrdC5zZWFyY2gudW5pb24pLHQudGFvYmFvLm1vcmVfbGlua3x8KHQudGFvYmFvLm1vcmVfbGluaz0iaHR0cHM6Ly9zLnRhb2Jhby5jb20vc2VhcmNoP3E9Iit0LnNlYXJjaC5rZXl3b3JkcysiJnBpZD0iK3Quc2VhcmNoLnVuaW9uKSxpKHQpKTppKHQpfSk6dm9pZCBpKHQpfSx0LmV4cG9ydHMuZ2V0VW5pcVBpZD1mdW5jdGlvbih0LGkpe3ZhciBvPW4oNzkpO3JldHVybiB0PW8uYnVpbGRDb21tb24odCksImx1eW91Ij09ZS5idHlwZT92b2lkIGkodCk6dm9pZCBuKDgyKS5nZXRUYW9iYW91bmlxRGF0YShmdW5jdGlvbihlKXtlPyh0LnRtYWxsLnNvcnQmJih0LnRtYWxsPXt9KSxlLnRtYWxsLmxlbmd0aD4wJiYodC50bWFsbC5taW5fcHJpY2U9ZS50bWFsbFswXS5wcmljZSx0LnRtYWxsLm1heF9wcmljZT1lLnRtYWxsW2UudG1hbGwubGVuZ3RoLTFdLnByaWNlLHQudG1hbGwuc3RvcmU9ZS50bWFsbCx0LnRtYWxsLnByb2R1Y3Q9ZS50bWFsbCksZS50YW9iYW8ubGVuZ3RoPjAmJih0LnRhb2Jhby5wcm9kdWN0PWUudGFvYmFvLHQudGFvYmFvLnN0b3JlPWUudGFvYmFvLHQudGFvYmFvLm1pbl9wcmljZT1lLnRhb2Jhb1swXS5wcmljZSx0LnRhb2Jhby5tYXhfcHJpY2U9ZS50YW9iYW9bZS50YW9iYW8ubGVuZ3RoLTFdLnByaWNlKSx0LnRtYWxsLm1vcmVfbGlua3x8KHQudG1hbGwubW9yZV9saW5rPSJodHRwczovL3MudGFvYmFvLmNvbS9zZWFyY2g/cT0iK3Quc2VhcmNoLmtleXdvcmRzKyImcGlkPSIrdC5zZWFyY2gudW5pb24pLHQudGFvYmFvLm1vcmVfbGlua3x8KHQudGFvYmFvLm1vcmVfbGluaz0iaHR0cHM6Ly9zLnRhb2Jhby5jb20vc2VhcmNoP3E9Iit0LnNlYXJjaC5rZXl3b3JkcysiJnBpZD0iK3Quc2VhcmNoLnVuaW9uKSxpKHQpKTppKHQpfSl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSl7InVzZSBzdHJpY3QiO3ZhciBuPWZ1bmN0aW9uKHQsbixpKXtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKyluW29dLm51bV9paWQmJihuW29dLm9sZFVybD1uW29dLnVybCxuW29dLnVybD1lLnNlcnZlcisiL2V4dGVuc2lvbi9SZWRpcmVjdEluVGltZT9pZD0iK25bb10ubnVtX2lpZCsiJnNvdXJjZT0iK25bb10uc291cmNlKyImZnJvbV9kZXZpY2U9IitlLmZyb21fZGV2aWNlKX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCxpLG8pe2kmJmkgaW5zdGFuY2VvZiBBcnJheSYmIWUuYWxpU2l0ZSYmKG89b3x8IiIsbih0LGksbykpfX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpOyhmdW5jdGlvbihvKXsidXNlIHN0cmljdCI7aT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCl7ZnVuY3Rpb24gZSgpe2Zvcih2YXIgZT10LmIyYy5zdG9yZS5sZW5ndGgsbj0wO248dC5iMmMuc3RvcmUubGVuZ3RoO24rKyl0LmIyYy5zdG9yZVtuXS5wcmljZT10LmIyYy5zdG9yZVtuXS5wcmljZS5yZXBsYWNlKCIsIiwiIiksdC5iMmMuc3RvcmVbbl0ucHJvbW8ubGVuZ3RoPjMmJih0LmIyYy5zdG9yZVtuXS5wcm9tbzI9dC5iMmMuc3RvcmVbbl0ucHJvbW8uc2xpY2UoMCwzKSk7cmV0dXJuIHQuYjJjLnN0b3JlMj10LmIyYy5zdG9yZS5zbGljZSgwLDYpLGV9dmFyIG49aC5pbml0KCk7aWYodC5iMmMucHJvZHVjdD1kKHQuYjJjLnByb2R1Y3QpLDAhPT10LmIyYy5wcm9kdWN0Lmxlbmd0aCl7dC5iMmMucHJvZHVjdFswXT1nKHQuYjJjLnByb2R1Y3RbMF0pLHQuYjJjLm1pbl9wcmljZT10LmIyYy5wcm9kdWN0WzBdLnByaWNlLnJlcGxhY2UoIiwiLCIiKTt2YXIgaT0nPGEgaHJlZj0iamF2YXNjcmlwdDoiIGlkPSInK28uZXh0TmFtZSsnLWIyYy1kcCIgY2xhc3M9Iicrby5leHROYW1lKyctdGFiIiA+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYjJjLWljb24iPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtc3RvcmUtbiI+5ZWG5Z+OPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imxvd2VzdCAnK28uZXh0QnJhbmQrJy1wcmljZSI+JnllbjsnK3QuYjJjLm1pbl9wcmljZSsiPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvYT4iO3MoIiMiK28uZXh0TmFtZSsiLW1haW4tY29udGVudHMiKS5hcHBlbmQoaSk7Zm9yKHZhciByPTA7cjx0LmIyYy5wcm9kdWN0Lmxlbmd0aDtyKyspe3ZhciBsPXQuYjJjLnByb2R1Y3Rbcl07aWYobD1nKGwpLGwucHJvbW89YShsLnByb21vKSxsLnByb21vJiZsLnByb21vLmxlbmd0aD4wKXtsLnByb21vZG9tPSIiO2Zvcih2YXIgdT0wLG09bC5wcm9tby5sZW5ndGg7dTwzJiZ1PG07dSsrKXt2YXIgZj1sLnByb21vW3VdO2YuaGFzU2FtZXx8KGwucHJvbW9kb20rPSc8c3BhbiAgdGl0bGU9IicrKGYuaGFzU2FtZVRpdGxlP2YuaGFzU2FtZVRpdGxlOmYuZGVzYykrJyIgY2xhc3M9InByb21vX2ljb24gcHJvbW9faWNvbl8nK2YudHlwZSsnIj48L3NwYW4+Jyl9fX12YXIgdz1lKCk7cygiIyIrby5leHROYW1lKyItbWFpbiIpLmFwcGVuZChjLmNvbXBpbGUocCkoe2RhdGE6dCxsZW46dyxleHROYW1lOm8uZXh0TmFtZSx3aWR0aDpuLmIyY1R1cm5wVyxwcm9kdWN0VzpuLmIyY1Byb2R1Y3RXfSkpLHMoIiMiK28uZXh0TmFtZSsiLWIyYy1kcC1kZXRhaWwgbGkgaW1nLnN0b3JlIikub24oImVycm9yIixmdW5jdGlvbigpe28ubmV3X2V4dGVuc2lvbnx8cyh0aGlzKS5hdHRyKCJzcmMiLG8uY19zZXJ2ZXIrIi9mYXZpY29uLmljbyIpfSkscygiI2IyYy1wcmV2LXBhZ2UiKS5jbGljayhmdW5jdGlvbigpe28uY2hhbmdlX3BhZ2UoImIyYyIsLTEpfSkscygiI2IyYy1uZXh0LXBhZ2UiKS5jbGljayhmdW5jdGlvbigpe28uY2hhbmdlX3BhZ2UoImIyYyIsMSl9KX19ZnVuY3Rpb24gZSh0KXt2YXIgZT1oLmluaXQoKTtpZih0LmIyY19mdXp6eS5wcm9kdWN0PWQodC5iMmNfZnV6enkucHJvZHVjdCksMCE9PXQuYjJjX2Z1enp5LnByb2R1Y3QubGVuZ3RoKXt0LmIyY19mdXp6eS5wcm9kdWN0WzBdPWcodC5iMmNfZnV6enkucHJvZHVjdFswXSksdC5iMmNfZnV6enkubWluX3ByaWNlPXQuYjJjX2Z1enp5LnByb2R1Y3RbMF0ucHJpY2U7dmFyIGk9JzxhIGhyZWY9ImphdmFzY3JpcHQ6IiBpZD0iJytvLmV4dE5hbWUrJy1iMmNfZnV6enktZHAiIGNsYXNzPSInK28uZXh0TmFtZSsnLXRhYiI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiMmMtaWNvbiBnd2RfYmciPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImIyYy1zdG9yZS1uIj7llYbln47nm7jkvLzmrL48L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJsb3dlc3QgJytvLmV4dEJyYW5kKyctcHJpY2UiPiZ5ZW47Jyt0LmIyY19mdXp6eS5taW5fcHJpY2UrIjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvYT4iO3MoIiMiK28uZXh0TmFtZSsiLW1haW4tY29udGVudHMiKS5hcHBlbmQoYy5jb21waWxlKGkpKCkpO2Zvcih2YXIgcj0wO3I8dC5iMmNfZnV6enkucHJvZHVjdC5sZW5ndGg7cisrKXt2YXIgbD10LmIyY19mdXp6eS5wcm9kdWN0W3JdO2lmKGw9ZyhsKSxsLnByb21vPWEobC5wcm9tbyksbC5wcm9tbyYmbC5wcm9tby5sZW5ndGg+MCl7bC5wcm9tb2RvbT0iIjtmb3IodmFyIHA9MCx1PWwucHJvbW8ubGVuZ3RoO3A8MyYmcDx1O3ArKyl7dmFyIG09bC5wcm9tb1twXTttLmhhc1NhbWV8fChsLnByb21vZG9tKz0nPHNwYW4gdGl0bGU9IicrKG0uaGFzU2FtZVRpdGxlP20uaGFzU2FtZVRpdGxlOm0uZGVzYykrJyIgY2xhc3M9InByb21vX2ljb24gcHJvbW9faWNvbl8nK20udHlwZSsnIj48L3NwYW4+Jyl9fX12YXIgZj1uKDYwKTtzKCIjIitvLmV4dE5hbWUrIi1tYWluIikuYXBwZW5kKGMuY29tcGlsZShmKSh7ZGF0YTp0LmIyY19mdXp6eS5wcm9kdWN0LHNfc2VydmVyOm8uc19zZXJ2ZXIsd2lkdGg6ZS50dXJucFcscHJvZHVjdFc6ZS5hbGxQcm9kdWN0V30pKSxzKCIjYjJjX2Z1enp5LXByZXYtcGFnZSIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtvLmNoYW5nZV9wYWdlKCJiMmNfZnV6enkiLC0xKX0pLHMoIiNiMmNfZnV6enktbmV4dC1wYWdlIikub24oImNsaWNrIixmdW5jdGlvbigpe28uY2hhbmdlX3BhZ2UoImIyY19mdXp6eSIsMSl9KSxzKCIjIitvLmV4dE5hbWUrIi1iMmNfZnV6enktZHAtZGV0YWlsIikuYXBwZW5kKCc8ZGl2IGNsYXNzPSJwYW5lbC1zaGFkb3ciPjwvZGl2PicpfX1mdW5jdGlvbiBpKHQpe3ZhciBlPXQuYjJjO3QuYjJjMiYmKGU9dC5iMmMyKTt2YXIgbj1vLmdldEZpeGVkU2hvd1Byb2R1Y3ROdW0oKTtpZihlLnN0b3JlLmxlbmd0aD4wKXtzKCIjIitvLmV4dEJyYW5kKyItY29tcGFyZSIpLmh0bWwoIiIpO3RyeXtmb3IodmFyIGk9MDtpPGUuc3RvcmUubGVuZ3RoO2krKyl7dmFyIHI9ZS5zdG9yZVtpXSxsPXIucHJvZHVjdFswXTtsPWcobCk7dmFyIGM9cGFyc2VJbnQoci5wcm9kdWN0Lmxlbmd0aCkscD1jJW49PTA/cGFyc2VJbnQoYy9uKTpwYXJzZUludChjL24pKzEsZD1zKCI8bGk+Iik7ZC5hcHBlbmQocygiPHNwYW4+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtIixocmVmOmwudXJsLHRhcmdldDoiX2JsYW5rIn0pLmFwcGVuZChzKCI8cD4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1wcmljZSJ9KS5odG1sKCImeWVuOyIrbC5wcmljZSkpLmFwcGVuZChzKCI8cD4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1zdG9yZSJ9KS50ZXh0KGwuc2l0ZV9uYW1lKSkpO3ZhciBoPXMoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbCByZS0iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsICIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtZml4ZWQiLHN0eWxlOiJkaXNwbGF5Om5vbmU7In0pO2guYXBwZW5kKHMoIjxwPiIseyJjbGFzcyI6by5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtdGl0bGUgIitvLmV4dEJyYW5kKyItaGVpZ2h0LWF1dG8gIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC10aXRsZS1maXhlZCJ9KS5hcHBlbmQocygiPHNwYW4+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC10aXRsZS1kZXNjIn0pLnRleHQobC5zaXRlX25hbWUrIu+8miIrci5mZWUpKSk7Zm9yKHZhciB1PXMoIjx1bD4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1pdGVtLWxpc3QifSksbT0wO208YzttKyspe3ZhciBmPXIucHJvZHVjdFttXTtmPWcoZiksKGYuc2l0ZV9uYW1lLmluZGV4T2YoIuW+ruS/oeerryIpPi0xfHxmLnNpdGVfbmFtZS5pbmRleE9mKCLnp7vliqjnq68iKT4tMSkmJihmLmlzT3RoZXJDbGllbnQ9ITApO3ZhciB3PWYucmV2X2NudD9mLnJldl9jbnQ6MCx4PSIiO2lmKGYucHJvbW89YShmLnByb21vKSxmLnByb21vJiZmLnByb21vLmxlbmd0aD4wKWZvcih2YXIgYj0wLF89Zi5wcm9tby5sZW5ndGg7YjxuJiZiPF87YisrKWlmKCFmLnByb21vW2JdLmhhc1NhbWUpe3ZhciB2PWYucHJvbW9bYl0uaGFzU2FtZVRpdGxlP2YucHJvbW9bYl0uaGFzU2FtZVRpdGxlOmYucHJvbW9bYl0uZGVzYzt4Kz0nPHNwYW4gY2xhc3M9Iicrby5leHRCcmFuZCsiLWJnIHByb21vX2ljb24gcHJvbW9faWNvbl8iK2YucHJvbW9bYl0udHlwZSsnIiB0aXRsZT0iJyt2KyciPiZuYnNwPC9zcGFuPid9dS5hcHBlbmQocygiPGxpPiIseyJjbGFzcyI6by5leHRCcmFuZCsiLWxpc3QtaXRlbSAiKyhtJW49PW4tMXx8bT09Yy0xP28uZXh0QnJhbmQrIi1sYXN0IjoiIiksc3R5bGU6ImRpc3BsYXk6ICIrKG0+PW4/Im5vbmUiOiJibG9jayIpfSkuYXBwZW5kKHMoIjxhPiIseyJjbGFzcyI6by5leHRCcmFuZCsiLXBpYyIsaHJlZjpmLnVybCx0YXJnZXQ6Il9ibGFuayJ9KS5hcHBlbmQocygiPGltZz4iLHtzcmM6by5zX3NlcnZlcisiL2ltYWdlcy9kcF9kZWZhdWx0LmpwZyIsImRhdGEtb3JpZ2luYWwiOmYuaW1nX3VybCx0aXRsZTpmLnRpdGxlfSkpKS5hcHBlbmQocygiPGE+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItcHJvZHVjdC10aXRsZSIsaHJlZjpmLnVybCx0YXJnZXQ6Il9ibGFuayIsdGl0bGU6Zi50aXRsZX0pLmFwcGVuZChzKCI8ZGl2PiIpLnRleHQoZi50aXRsZSkpKS5hcHBlbmQocygiPGRpdj4iKS5hcHBlbmQocygiPGE+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItcHJpY2UiLGhyZWY6Zi51cmwsdGFyZ2V0OiJfYmxhbmsifSkuaHRtbCgiJnllbjsiKyhmLnByaWNlX3JtYj9mLnByaWNlX3JtYjpmLnByaWNlKSkuYXBwZW5kKHgpKSkuYXBwZW5kKHMoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyJfcmV2X2NudCJ9KS5hcHBlbmQocygiPGE+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyJfcHJvZHVjdF9jb21tZW50X2Ftb3VudCIsaHJlZjpmLnVybCx0YXJnZXQ6Il9ibGFuayIsdGl0bGU6Zi5pc090aGVyQ2xpZW50P2Yuc2l0ZV9uYW1lOiLllYblk4Hor4TorrrmlbAifSkuYXBwZW5kKHMoIjxzcGFuPiIpLnRleHQoZi5pc090aGVyQ2xpZW50P2Yuc2l0ZV9uYW1lOjAhPXc/IuivhOiuuuaVsDoiK2YucmV2X2NudDoiIikpKSkpfXZhciB5PXMoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItYjJjLVBhZ2VWaWV3ICIrby5leHRCcmFuZCsiLWIyYy1QYWdlVmlldy1maXhlZCJ9KTtpZih5LmFwcGVuZChzKCI8cD4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLXRpdGxlIixzdHlsZToiaGVpZ2h0OmF1dG87In0pLmFwcGVuZChzKCI8c3Bhbj4iLHtzdHlsZToiZmxvYXQ6bm9uZTtwYWRkaW5nLWxlZnQ6MTBweDsiLCJjbGFzcyI6by5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtcGFnZXMifSkuYXBwZW5kKHMoIjxlbT4iLHtpZDoicGFnZS1ub3ctIitpLCJjbGFzcyI6InBhZ2Utbm93In0pLnRleHQoIjEiKSkuYXBwZW5kKCIvIikuYXBwZW5kKHMoIjxlbT4iLHtpZDoicGFnZS10b3RhbC0iK2ksImNsYXNzIjoicGFnZS10b3RhbCJ9KS50ZXh0KCIxIikpKSksaC5hcHBlbmQocygiPGRpdj4iLHsiY2xhc3MiOm8uZXh0QnJhbmQrIi1jb21wYXJlLXByZXYtcGFnZSAiK28uZXh0QnJhbmQrIi1sZWZ0In0pLmFwcGVuZChzKCI8ZGl2PiIseyJjbGFzcyI6by5leHRCcmFuZCsiLWJnIHBhZ2UtYXJyb3cifSkpKS5hcHBlbmQodSkuYXBwZW5kKHMoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItY29tcGFyZS1uZXh0LXBhZ2UgIitvLmV4dEJyYW5kKyItcmlnaHQifSkuYXBwZW5kKHMoIjxkaXY+Iix7ImNsYXNzIjpvLmV4dEJyYW5kKyItYmcgcGFnZS1hcnJvdyJ9KSkpLmFwcGVuZCh5KSxkLmFwcGVuZChoKSwxPT1wKXtkLmZpbmQoIi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLXByZXYtcGFnZSIpLmhpZGUoKSxkLmZpbmQoIi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLW5leHQtcGFnZSIpLmhpZGUoKSxkLmZpbmQoIi4iK28uZXh0QnJhbmQrIi1iMmMtUGFnZVZpZXctZml4ZWQiKS5oaWRlKCksZC5hdHRyKCJwYWdlcyIsMSksZC5hdHRyKCJsZW4iLGMpO3ZhciBrPTIwMCpjO2QuY2hpbGRyZW4oImRpdi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLWZpeGVkIikuY3NzKCJ3aWR0aCIsaysyKX1lbHNlIGQuY2hpbGRyZW4oImRpdi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLWZpeGVkIikuY3NzKCJ3aWR0aCIsby53aWR0aC0yKTtzKCIjIitvLmV4dEJyYW5kKyItY29tcGFyZSIpLmFwcGVuZChkKSxzKCIjcGFnZS10b3RhbC0iK2kpLnRleHQocCl9fWNhdGNoKHope2lmKG8uZGVidWcpdGhyb3cgen19cygiIyIrby5leHRCcmFuZCsiLWNvbXBhcmUiKS5zaG93KCl9ZnVuY3Rpb24gYSh0KXtpZighdHx8dCYmIXQubGVuZ3RoKXJldHVybiB0O2Zvcih2YXIgZT0wLG49dC5sZW5ndGg7ZTxuO2UrKylpZih0W2VdKWZvcih2YXIgaT0xO2k8bjtpKyspaWYodFtlK2ldJiZ0W2VdLnR5cGU9PXRbZStpXS50eXBlKXtpZih0W2VdLmhhc1NhbWUpY29udGludWU7dFtlXS5oYXNTYW1lVGl0bGU9KHRbZV0uaGFzU2FtZVRpdGxlP3RbZV0uaGFzU2FtZVRpdGxlOnRbZV0uZGVzYykrIiAiK3RbZStpXS5kZXNjLHRbZStpXS5oYXNTYW1lPSEwfXJldHVybiB0fWZ1bmN0aW9uIHIodCl7dmFyIGU9e30sbj10LnByb2R1Y3Q7bj1kKG4pO2Zvcih2YXIgaSBpbiBuKWlmKCIxIj09bltpXS5tb3JlKXt2YXIgbz1uW2ldLmFsbDtmb3IodmFyIGEgaW4gbyl7dmFyIHI9b1thXS5zaXRlX25hbWU7bnVsbD09ZVtyXSYmKGVbcl09W10pLGVbcl0ucHVzaChvW2FdKX19ZWxzZXt2YXIgcj1uW2ldLnNpdGVfbmFtZTtudWxsPT1lW3JdJiYoZVtyXT1bXSksZVtyXS5wdXNoKG5baV0pfXZhciBzPXtzdG9yZTpbXX07Zm9yKHZhciBsIGluIGUpaWYoInVuZGVmaW5lZCIhPXR5cGVvZiBlW2xdWzBdLmZlZSl7dmFyIGM9e3Byb2R1Y3Q6ZVtsXSxmZWU6ZVtsXVswXS5mZWV9O3Muc3RvcmUucHVzaChjKX1yZXR1cm4gc312YXIgcz1uKDQpLGw9e30sYz1uKDIyKSxwPW4oNTkpLGQ9bigxMzYpLGg9big1NSksdT17MjI4OiJVU0QiLDIyOToiSlBZIiwyMzg6IlVTRCIsMjQ2OiJFVVIifSxtPXsyMjg6IiQiLDIzODoiJCIsMjI5OiLml6XlhYMiLDI0NjoiRVVSIn0sZj1mdW5jdGlvbih0KXtpZighdClyZXR1cm4gdDt0cnl7dmFyIGU9dC5zcGxpdCgiLiIpO3Q9ZVswXS5yZXBsYWNlKCIsIiwiIiksdD1OdW1iZXIodCk+OTk5OTk/ZVswXTplWzBdKyIuIitlWzFdfWNhdGNoKGkpewpyZXR1cm4gbigxMikoImIyY0NvbXBhcmU6Zml4ZWRQcmljZTplcnJvciIpLHR9cmV0dXJuIHR9LGc9ZnVuY3Rpb24odCl7aWYodC5wcmljZV9ybWIpcmV0dXJuIHQ7dmFyIGU9bigyMyk7aWYoIXQuZHBfaWQpcmV0dXJuIHQ7dmFyIGk9dC5kcF9pZC5zcGxpdCgiLSIpWzFdLG89aSYmdVtpXTtpZighbylyZXR1cm4gdDt2YXIgYT1lKHQucHJpY2Usbykscj1mKHQucHJpY2UpO3JldHVybiIyMjkiPT1pP3QucHJpY2Vfcm1iPWErKCIoIityK21baV0rIikiKTp0LnByaWNlX3JtYj1hKygiKCIrbVtpXStyKyIpIiksdC5wcmljZT1hLHR9O3JldHVybiBsLmluaXQ9ZnVuY3Rpb24obixhKXtpZighKG8uc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8by5zaXRlLmluZGV4T2YoInRtYWxsIik+LTEpKWlmKCJib3R0b20iPT1hKXtpZihuLmIyYyYmbi5iMmMubWluX3ByaWNlKWkobiksby5zZXRQYWdlQXJncyhvLmV4dEJyYW5kKyItY29tcGFyZSIsby5nZXRGaXhlZFNob3dQcm9kdWN0TnVtKCkpLHRoaXMuc2V0Qm90dG9tVmlld09mZnNldCgpO2Vsc2UgaWYobi5iMmNfZnV6enkpe3ZhciBsPXt9O2wuYjJjMj1yKG4uYjJjX2Z1enp5KSxpKGwpLG8uc2V0UGFnZUFyZ3Moby5leHRCcmFuZCsiLWNvbXBhcmUiLG8uZ2V0Rml4ZWRTaG93UHJvZHVjdE51bSgpKSx0aGlzLnNldEJvdHRvbVZpZXdPZmZzZXQoKSxzKCIuIitvLmV4dEJyYW5kKyItYmkiKS5hZGRDbGFzcyhvLmV4dEJyYW5kKyItYmktYmciKX1vLmNpcmNsZU5vdGljZShuLnF1YW4sbi5wcm9tb3Rpb24pfWVsc2Ugbi5iMmMmJm4uYjJjLm1pbl9wcmljZT90KG4pOm4uYjJjX2Z1enp5JiZlKG4pfSxsLnNldEJvdHRvbVZpZXdPZmZzZXQ9ZnVuY3Rpb24oKXtzKCJ1bC4iK28uZXh0QnJhbmQrIi1pdGVtLWxpc3QiKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIHQ9cyh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5lcSgwKTtpZigiMSI9PXQuYXR0cigicGFnZXMiKSl7dmFyIGU9dC5vZmZzZXQoKS5sZWZ0LG49dC53aWR0aCgpLGk9MjAwKnBhcnNlSW50KHQuYXR0cigibGVuIikpLGE9ZS0oaS8yLW4vMik7YTwwJiYoYT0wKTt2YXIgcj1vLndpZHRoLWE7by5JRTY/KGE9bi8yLWkvMixhK2U8MCYmKGE9LWUpLHQuY2hpbGRyZW4oImRpdi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLWZpeGVkIikuY3NzKCJwb3NpdGlvbiIsImFic29sdXRlIikuY3NzKCJsZWZ0IixhKSx0LmZpbmQoIi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLXRpdGxlLWZpeGVkIikuY3NzKCJsZWZ0IiwwKSk6aTxyPyh0LmNoaWxkcmVuKCJkaXYuIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC1maXhlZCIpLmNzcygibGVmdCIsYSksdC5maW5kKCIuIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC10aXRsZS1maXhlZCIpLmNzcygibGVmdCIsYSkpOih0LmNoaWxkcmVuKCJkaXYuIitvLmV4dEJyYW5kKyItY29tcGFyZS1pdGVtLWRldGFpbC1maXhlZCIpLmNzcygibGVmdCIsby53aWR0aC1pKSx0LmZpbmQoIi4iK28uZXh0QnJhbmQrIi1jb21wYXJlLWl0ZW0tZGV0YWlsLXRpdGxlLWZpeGVkIikuY3NzKCJsZWZ0IixvLndpZHRoLWkpKX1lbHNlIGlmKG8uSUU2KXt2YXIgZT10Lm9mZnNldCgpLmxlZnQsYT0wLWU7dC5jaGlsZHJlbigiZGl2LiIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtZml4ZWQiKS5jc3MoInBvc2l0aW9uIiwiYWJzb2x1dGUiKS5jc3MoImxlZnQiLGEpLHQuZmluZCgiLiIrby5leHRCcmFuZCsiLWNvbXBhcmUtaXRlbS1kZXRhaWwtdGl0bGUtZml4ZWQiKS5jc3MoImxlZnQiLDApfX0pfSxsfS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDE0MSkscj1uKDE0KSxzPW4oMTIpLGw9dm9pZCAwLGM9eyIzNjBidXkiOlsiI25vdGljZS1kb3ducCIsIi5KLW5vdGlmeS1zYWxlIiwiLnN1bW1hcnktcHJpY2UgLmRkIC5wLXByaWNlK2VtIiwiI3N1bW1hcnktd3JhcCAuZGQgLnAtcHJpY2UiLCIuc3VtbWFyeS1wcmljZSAuZGQ+Omxhc3QtY2hpbGQiXSxzdW5pbmc6WyIjbWFpblByaWNlIGRkICNQcmljZU5vdGljZTEiLCIjbWFpblByaWNlIGRkIC5idG4tcHJpY2Utbm90aWNlIiwiI21haW5QcmljZSBkZCAuYnRuLXByaWNlLWJ1c2luZXNzIiwiI21haW5QcmljZSBkZCAubWFpbnByaWNlIl19LHA9ZnVuY3Rpb24odCxhLHApe2lmKHQpe3ZhciB1PW4oMTQyKSxtPU9iamVjdC5rZXlzKHQpLGY9T2JqZWN0LmtleXMocCk7aWYodCYmbS5sZW5ndGg+MCl7bS5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIE51bWJlcih0KS1OdW1iZXIoZSl9KSxwJiZmLmxlbmd0aD4wJiZmLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gTnVtYmVyKHQpLU51bWJlcihlKX0pO2Zvcih2YXIgZz1bbVswXSx0W21bMF1dXSx3PWNbZS5zaXRlXSx4PTAsYj0wO2I8Z1sxXS5sZW5ndGg7YisrKXg8Z1sxXVtiXS5sZW5ndGgmJih4PWdbMV1bYl0ubGVuZ3RoKTt2YXIgXz0iIjtpZigxPT09Z1sxXS5sZW5ndGgmJmdbMV1bMF0uaW5kZXhPZigi5L+DOiIpPi0xJiYhYVtnWzBdLnRvU3RyaW5nKCldKXt2YXIgdj1OdW1iZXIoZS5kcC5wcmljZSktZ1swXTt2LnRvU3RyaW5nKCkuaW5kZXhPZigiLiIpPi0xJiYodj12LnRvRml4ZWQoMSkpLGdbMV1bMF09IuS4i+WNleS7mOasvueri+WHjyIrdisi5YWDIix4PTExLF89InhkbGoifXZhciB5PSLkuIvljZXnq4vlh48iO2FbZ1swXS50b1N0cmluZygpXSYmKHk9IumcgOWHkeWNlSIpO3ZhciBrPXZvaWQgMDtpZigi5LiL5Y2V56uL5YePIj09PXkmJihrPSEwKSxnWzBdLnRvU3RyaW5nKCkuaW5kZXhPZigiLiIpPi0xJiYoZ1swXT1OdW1iZXIoZ1swXSkudG9GaXhlZCgxKSksTnVtYmVyKGdbMF0pPD0wKXJldHVybjtmb3IodmFyIGI9MDtiPHcubGVuZ3RoO2IrKylpZihpKHdbYl0pLmVxKDApLmxlbmd0aD4wKXt2YXIgej1oKGkod1tiXSkuZXEoMCkucGFyZW50KCkpLGo9Z1swXS5sZW5ndGgrMSxDPXZvaWQgMDt6LTEwLjgqai0xMTI8MCYmInN1bmluZyI9PWUuc2l0ZSYmKEM9ITApLGkod1tiXSkuZXEoMCkuYWZ0ZXIoby5jb21waWxlKHUpKHtwcmljZTpnWzBdLHNpemU6MTAqeCx4ZGxqOl8saXNYZDprLG5ld2xpbmU6QyxyZXRsZTp5LHByaWNlZGVzYzpnWzFdfSkpLGQoKSxyLmxvZygiY2FsLWRpc2NvdW50LXByaS10cmFjazpkcF9pZDoiK2wrImZyb206IitlLmZyb21fZGV2aWNlKSxzKCJjYWwtZGlzY291bnQtcHJpLXRyYWNrOmRwX2lkOiIrbCsiZnJvbToiK2UuZnJvbV9kZXZpY2UpO2JyZWFrfX1pKCIjZGlzX3ByaWNlX2JveCIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe3ZhciB0PWkoIi5kaXMtc3AzIC5kaXMtdGxlLXNwMSIpLnRleHQoKTt0LmluZGV4T2YoIumcgOWHkeWNlSIpPi0xJiZpKCIuZGlzLXNwMyAuZGlzLXRsZS1zcDEiKS50ZXh0KCIo6ZyA5YeR5Y2VPykiKSxyLmxvZygiY2FsLWRpc2NvdW50LXByaTpkcF9pZDoiK2wrImZyb206IitlLmZyb21fZGV2aWNlKSxzKCJjYWwtZGlzY291bnQtcHJpOmRwX2lkOiIrbCsiZnJvbToiK2UuZnJvbV9kZXZpY2UpfSksaSgiI2Rpc19wcmljZV9ib3giKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXt2YXIgdD1pKCIuZGlzLXNwMyAuZGlzLXRsZS1zcDEiKS50ZXh0KCk7dC5pbmRleE9mKCLpnIDlh5HljZUiKT4tMSYmaSgiLmRpcy1zcDMgLmRpcy10bGUtc3AxIikudGV4dCgiKOmcgOWHkeWNlSkiKX0pfX0sZD1mdW5jdGlvbigpe2lmKCJzdW5pbmciPT1lLnNpdGUpe3ZhciB0PWkoJyNtYWluUHJpY2UgZHQ6Y29udGFpbnMoIuWumumHkSIpICtkZCAuc21hbGwtcHJpY2UnKTt0Lmxlbmd0aD4wJiZpKCIjZGlzX3ByaWNlX2JveCIpLmNzcygibGluZS1oZWlnaHQiLCIyMnB4Iil9fSxoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10Lm91dGVyV2lkdGgoKSxuPXQuY2hpbGRyZW4oKSxpPTAsbz0wO288bi5sZW5ndGg7bysrKWlmKG4uZXEobykuaXMoIjp2aXNpYmxlIikpe3ZhciBhPW4uZXEobykub3V0ZXJXaWR0aCgpO2lmKGE+MCl7dmFyIHI9TnVtYmVyKG4uZXEobykuY3NzKCJtYXJnaW4tbGVmdCIpLnJlcGxhY2UoInB4IiwiIikpLHM9TnVtYmVyKG4uZXEobykuY3NzKCJtYXJnaW4tcmlnaHQiKS5yZXBsYWNlKCJweCIsIiIpKTthPWErcitzfWkrPWF9cmV0dXJuIHBhcnNlSW50KGUtaSl9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKHQpe2w9dCxjW2Uuc2l0ZV0mJmEuZ2V0UHJpY2UocCl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89big0NyksYT1uKDQwKSxyPXttYW5qaWFuOnt9LHpoZTp7fSxxdWFubWFuamlhbjp7fSxxdWFubWVpbWFuamlhbjp7fSxtYW56aGU6e319LHM9e21hbmppYW46e30sbWVpbWFuamlhbjp7fSxtYW56aGU6e30sbWFuemhlMjp7fSx6aGU6e319LGw9dm9pZCAwLGM9dm9pZCAwLHA9e30sZD17fSxoPXt9LHU9e3N1bmluZzpmdW5jdGlvbigpe3ZhciB0PU51bWJlcihlKCcjbWFpblByaWNlIGR0OmNvbnRhaW5zKCLlrprph5EiKSArZGQgLnNtYWxsLXByaWNlJykudGV4dCgpLnJlcGxhY2UoIsKlIiwiIikpLG49ZSgiLmRlcG9zaXQtaW5mby1zbWFsbCIpLnRleHQoKS5tYXRjaCgvWzAtOS5dKy8pO3JldHVybiBuJiYobj1OdW1iZXIoblswXSkpLHQmJm4/bi10OjB9LCIzNjBidXkiOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgnI3BpbmdvdSAuc3VtbWFyeS1wcmljZSBkaXYuZHQ6Y29udGFpbnMoIuWumiIpKy5kZCAucHJpY2UnKS50ZXh0KCksbj1lKCcjcGluZ291IC5zdW1tYXJ5LXByaWNlIGRpdi5kdDpjb250YWlucygi5a6aIikrLmRkIC55eS1jYXRlZ29yeScpLnRleHQoKS5tYXRjaCgvWzAtOS5dKy8pO3JldHVybiBuJiYobj1OdW1iZXIoblswXSkpLHQmJm4/bi10OjB9fSxtPXsiMzYwYnV5IjpmdW5jdGlvbigpe3ZhciB0PXZvaWQgMCxuPXZvaWQgMDtpZihlKCIjcGluZ291IC5zdW1tYXJ5LXByaWNlPi5kdCIpLnRleHQoKS5yZXBsYWNlKC9ccy9nLCIiKS5pbmRleE9mKCLlrprph5EiKT4tMSlyZXR1cm57cXVhbjp0LHByb21vOm59O3ZhciBpPWUoIiNzdW1tYXJ5LXF1YW46dmlzaWJsZSIpLG89ZSgiI3Byb20tb25lIC5KLXByb206dmlzaWJsZSIpO2lmKGkubGVuZ3RoPjApe3ZhciBhPWkuZmluZCgic3Bhbi5xdWFuLWl0ZW0gc3Bhbi50ZXh0Iik7dD1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwoYSxmdW5jdGlvbih0KXtyZXR1cm4gZSh0KS50ZXh0KCl9KX1pZihvLmxlbmd0aD4wKXt2YXIgYT1vLmZpbmQoImVtLmhsX3JlZCIpLHI9by5maW5kKCJlbS5obF9yZWRfYmcrZW0iKTtuPUFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChhLGZ1bmN0aW9uKHQpe3ZhciBuPWUodCkucHJldigpLnRleHQoKTtyZXR1cm4gbi5pbmRleE9mKCLot6joh6rokKUv5bqX6ZO65ruh5YeP6L+b6KGM5LitIik+LTF8fG4uaW5kZXhPZigi5rS75Yqo6aKE5ZGKIik+LTE/IiI6ZSh0KS50ZXh0KCl9KTt2YXIgcz1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwocixmdW5jdGlvbih0KXt2YXIgbj1lKHQpLnByZXYoKS50ZXh0KCk7cmV0dXJuIG4uaW5kZXhPZigi6Leo6Ieq6JClL+W6l+mTuua7oeWHj+i/m+ihjOS4rSIpPi0xfHxuLmluZGV4T2YoIua0u+WKqOmihOWRiiIpPi0xPyIiOmUodCkudGV4dCgpfSk7bj1uLmNvbmNhdChzKX1yZXR1cm57cXVhbjp0LHByb21vOm59fSxzdW5pbmc6ZnVuY3Rpb24oKXt2YXIgdD12b2lkIDAsbj12b2lkIDAsaT1lKCIjZnJlZUNvdXBvblRpdGxlIGRkIC5tb3JlLWp1YW4gLnAtcXVhbjIiKSxvPWUoJy5wcm9tby1saXN0IGxpPmxhYmVsOmNvbnRhaW5zKCLmu6Eg5YePIikraStwJyk7aWYoaS5sZW5ndGg+MCl7dmFyIGE9aS5maW5kKCJzcGFuLnAtcXVhbi13aGl0ZSIpO3Q9QXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKGEsZnVuY3Rpb24odCl7dmFyIG49ZSh0KS50ZXh0KCk7cmV0dXJuIG4ubWF0Y2goL+avj1xkK+eUqFxkKy8pJiYobj1uKyLmnIDlpJrlj6/lh48iK2UodCkucHJldigpLnByZXYoKS50ZXh0KCkpLG59KX1pZihvLmxlbmd0aD4wKXt2YXIgYT1vO249QXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKGEsZnVuY3Rpb24odCl7dmFyIG49ZSh0KS50ZXh0KCk7aWYoZSh0KS5jaGlsZHJlbigpLnRleHQoKSl7dmFyIGk9ZSh0KVswXS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZTtpJiYobj1pKX1yZXR1cm4gbn0pfXJldHVybntxdWFuOnQscHJvbW86bn19fSxmPWZ1bmN0aW9uKCl7dmFyIHQ9WyIzNjBidXkiXTtyZXR1cm4gdC5pbmRleE9mKGkuc2l0ZSk+LTF9LGc9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXMsbz0i5L+DOiAiOyJxdWFuIj09PW4mJihpPXIsbz0i5Yi4OiAiKSxsfHwobD17fSk7Zm9yKHZhciBhPTA7YTxlLmxlbmd0aDthKyspe3ZhciBjPWVbYV0sdT0v5LiU5ruhW++/pe+/pV0/KFsuXGRdezIsfSnlhYM/KD865ZSu5Lu3KT9bXuS7tl17MCwzfT/lj68/56uLP+WHj1vvv6Xvv6VdPyhbLlxkXSspLztpZighdS50ZXN0KGMpKXt2YXIgbT0v5q+PKFxkKynnlKgoXGQrKeacgOWkmuWPr+WHjy4/KFsxLTldXGQrKS87aWYobS50ZXN0KGMpJiYicXVhbiI9PT1uKXt2YXIgZz1pLnF1YW5tZWltYW5qaWFuLHc9Yy5tYXRjaChtKTt3WzNdP2dbd1sxXSsiLSIrd1syXSsiLSIrd1szXV09bytjOmdbd1sxXSsiLSIrd1syXV09bytjfWVsc2V7dmFyIHg9L+avj+a7oShbLlxkXXsyLH0p5YWDPy57MCwzfT/lj68/5YePKFsuXGRdKynlhYPnjrDph5EoPzooPzrvvIx8LCkoPzrmnIDlpJrlj6/lh498KShbLlxkXSspKT8vO2lmKHgudGVzdChjKSl7dmFyIGI9aS5tZWltYW5qaWFuLHc9Yy5tYXRjaCh4KTt3WzNdP2Jbd1sxXSsiLSIrd1syXSsiLSIrd1szXV09bytjOmJbd1sxXSsiLSIrd1syXV09bytjfWVsc2V7dmFyIF89Lyg/Olte5q+PXXxeKea7oVvvv6Xvv6VdPyhbLlxkXXsxLH0p5YWDPyg/OuWUruS7tyk/W17ku7ZdezAsM30/5Y+vP+eriz/lh49b77+l77+lXT8oWy5cZF0rJT8pLyx2PS8oPzpbXuavj118Xinmu6Fb77+l77+lXT8oWy5cZF17MSx9KeWFgz8oPzrllK7ku7cpP1te5Lu2XXswLDN9P+WPrz/nq4s/5YePW++/pe+/pV0/KFsuXGRdKyU/KS9nLHk9aS5tYW5qaWFuO2lmKF8udGVzdChjKSl7dmFyIGs9Yy5tYXRjaCh2KTtpZihrLmxlbmd0aD4xKWZvcih2YXIgej0wO3o8ay5sZW5ndGg7eisrKXt2YXIgaj1rW3pdLm1hdGNoKF8pO3lbalsxXSsiLSIralsyXV09bytrW3pdLnRyaW0oKS5yZXBsYWNlKC9eWyzvvIw777ybXS8sIiIpfWVsc2V7dmFyIHc9Yy5tYXRjaChfKTt5W3dbMV0rIi0iK3dbMl1dPW8rY319ZWxzZXt2YXIgQz0v5ruhKFsuXGRdezIsfSnkuqsoWy5cZF0rKeaKmC8sUz1pLm1hbnpoZTtpZihDLnRlc3QoYykpe3ZhciB3PWMubWF0Y2goQyk7U1t3WzFdKyItIit3WzJdXT1vK2N9ZWxzZXt2YXIgUD0v6YeR6aKd6L6+5YiwKFsuXGRdezIsfSkuKj/kuqvlj5coWy5cZF0rKS87aWYoUC50ZXN0KGMpKXt2YXIgdz1jLm1hdGNoKFApO3lbd1sxXSsiLSIrd1syXV09bytjfWVsc2V7dmFyIFQ9LyhbLlxkXXsyLH0pXC0oWy5cZF0rKS87aWYoVC50ZXN0KGMpKXt2YXIgdz1jLm1hdGNoKFQpO3lbd1sxXSsiLSIrd1syXV09bytjfWVsc2V7dmFyIEE9aS56aGUsTj0v5ruhKFxkKynku7YuezAsNH3miZMoWy5cZF0rKeaKmC8sST0v5ruhKFxkKynku7YuezAsNH3miZMoWy5cZF0rKeaKmC9nO2lmKE4udGVzdChjKSl7dmFyIGs9Yy5tYXRjaChJKTtpZihrLmxlbmd0aD4xKWZvcih2YXIgej0wO3o8ay5sZW5ndGg7eisrKXt2YXIgaj1rW3pdLm1hdGNoKE4pO0FbalsxXSsiLSIralsyXV09bytrW3pdfWVsc2V7dmFyIHc9Yy5tYXRjaChOKTtBW3dbMV0rIi0iK3dbMl1dPW8rY319ZWxzZXt2YXIgQj1pLnF1YW5tYW5qaWFuLHE9L+a7oT8oXGQrKSg/OuWHj3znlKh85Y+v55SofOWPr+WHjykoXGQrKS87aWYocS50ZXN0KGMpKXt2YXIgdz1jLm1hdGNoKHEpO0Jbd1sxXSsiLSIrd1syXV09bytjfWVsc2V7dmFyIE89aS5tYW56aGUyLEU9L+a7oShcZCnku7YuezEsNH3lh4/mnIDkvY4x5Lu25ZWG5ZOB5Lu35qC8LztpZihFLnRlc3QoYykpe3ZhciB3PWMubWF0Y2goRSk7T1t3WzFdXT1vK2N9ZWxzZTt9fX19fX19fX19Zm9yKHZhciBMIGluIGkpc3dpdGNoKEwpe2Nhc2UibWFuamlhbiI6Zm9yKHZhciBEIGluIGlbTF0pe3ZhciBGPUQuc3BsaXQoIi0iKTtpZigicXVhbiI9PT1uJiZPYmplY3Qua2V5cyhsKS5sZW5ndGg+MClmb3IodmFyIE0gaW4gbCl7dmFyIFI9ZigpJiZoW01dJiZOdW1iZXIoRlswXSk8PXQsJD1mKCkmJmRbTV0mJmRbTV0udHQxPk51bWJlcihGWzBdKTtpZihSfHxOdW1iZXIoRlswXSk8PU51bWJlcihNKSYmaFtNXSl7dmFyIEg9TnVtYmVyKE0pLU51bWJlcihGWzFdKTtoW01dJiYoaFtIXT0hMCkscFtIXT1sW01dLmNvbmNhdChbaVtMXVtEXV0pfWVsc2UgaWYoZFtNXSYmZFtNXS50dDEtZFtNXS50dDI+TnVtYmVyKEZbMF0pfHwkKXt2YXIgSD12b2lkIDA7aWYoIm1hbnpoZTIiPT09ZFtNXS50eXBlKWlmKGYoKSlpZihkW01dLnR0MT49TnVtYmVyKEZbMF0pKUg9KGRbTV0udHQxLU51bWJlcihGWzFdKS10KS9kW01dLnQyO2Vsc2V7dmFyIFc9ZFtNXS50dDEqKE51bWJlcihGWzFdKS9OdW1iZXIoRlswXSkpO0g9KGRbTV0udHQxLXQtVykvZFtNXS50Mn1lbHNle3ZhciBVPWRbTV0udDE+TnVtYmVyKEZbMF0pP2RbTV0udDE6TnVtYmVyKEZbMF0pO0g9KFUtTnVtYmVyKEZbMV0pKS9kW01dLnQyfWVsc2UgaWYoInpoZSI9PT1kW01dLnR5cGUpSD1mKCk/KGRbTV0udDEqZFtNXS50NC1OdW1iZXIoRlsxXSkpL2RbTV0udDM6KGRbTV0udDEqZFtNXS50NC1OdW1iZXIoRlsxXSkpL2RbTV0udDM7ZWxzZSBpZigibWFuemhlIj09PWRbTV0udHlwZSl7dmFyIFU9ZFtNXS50MS1kW01dLnQyO0g9KFUtTnVtYmVyKEZbMV0pKS8oZFtNXS50MS90KX1lbHNlIEg9KGRbTV0udDEtZFtNXS50Mi1OdW1iZXIoRlsxXSkpLyhkW01dLnQxL3QpO0g9SC50b0ZpeGVkKDQpLGRbSF09ITAscFtIXT1sW01dLmNvbmNhdChbaVtMXVtEXV0pfWVsc2UgaWYoTnVtYmVyKEZbMV0pL051bWJlcihGWzBdKT4uMnx8TS9OdW1iZXIoRlswXSk+Ljl8fGRbTV0mJihkW01dLnR0MS1kW01dLnR0MikvTnVtYmVyKEZbMF0pPi45fHxmKCkmJmRbTV0mJmRbTV0udHQxL051bWJlcihGWzBdKT4uOXx8ZigpJiZ0L051bWJlcihGWzBdKT4uOSl7dmFyIEg9dm9pZCAwO0g9aFtNXSYmIm1laW1hbmppYW4iPT09aFtNXS50eXBlP2YoKT9oW01dLmxhc3RwLU51bWJlcihGWzFdKSoodC9OdW1iZXIoRlswXSkpOmhbTV0ubGFzdHAtTnVtYmVyKEZbMV0pKihoW01dLmxhc3RwL051bWJlcihGWzBdKSk6aD9mKCk/TS1OdW1iZXIoRlsxXSkqKHQvTnVtYmVyKEZbMF0pKTpNLU51bWJlcihGWzFdKSooTS9OdW1iZXIoRlswXSkpOiJ6aGUiPT09ZFtNXS50eXBlP2YoKT8oZFtNXS50MSpkW01dLnQ0LU51bWJlcihGWzFdKSooZFtNXS50MS9OdW1iZXIoRlsxXSkpKS9kW01dLnQzOihkW01dLnQxKmRbTV0udDQtTnVtYmVyKEZbMV0pKihkW01dLnQxKmRbTV0udDQvTnVtYmVyKEZbMV0pKSkvZFtNXS50MzoibWFuemhlIj09PWRbTV0udHlwZT9mKCk/ZFtNXS50MSpkW01dLnQzLU51bWJlcihGWzFdKSooZFtNXS50MS9OdW1iZXIoRlswXSkpOmRbTV0udDEqZFtNXS50My1OdW1iZXIoRlsxXSkqKGRbTV0udDEqZFtNXS50My9OdW1iZXIoRlswXSkpOmYoKT9kW01dLnQxLWRbTV0udDItTnVtYmVyKEZbMV0pKihkW01dLnQxL051bWJlcihGWzBdKSk6ZFtNXS50MS1kW01dLnQyLU51bWJlcihGWzFdKSooZFtNXS50MS1kW01dLnQyL051bWJlcihGWzBdKSksSD1ILnRvRml4ZWQoNCksZFtIXT0hMCxwW0hdPWxbTV0uY29uY2F0KFtpW0xdW0RdXSl9fWVsc2UgaWYoInF1YW4iPT09bil7aWYoTnVtYmVyKEZbMF0pPD10KXt2YXIgSD10LU51bWJlcihGWzFdKTtoW0hdPSEwLHBbSF09W2lbTF1bRF1dfWVsc2UgaWYoTnVtYmVyKEZbMV0pL051bWJlcihGWzBdKT4uMnx8dC9OdW1iZXIoRlswXSk+Ljkpe3ZhciBZPXQtdCpOdW1iZXIoRlsxXSkvTnVtYmVyKEZbMF0pLEg9WS50b0ZpeGVkKDQpO2RbSF09ITAscFtIXT1baVtMXVtEXV19fWVsc2UgaWYoTnVtYmVyKEZbMF0pPD10KXtGWzFdLmluZGV4T2YoIiUiKT4tMSYmKEZbMV09dCpOdW1iZXIoRlsxXS5yZXBsYWNlKCIlIiwiIikpLzEwMCk7dmFyIEg9dC1OdW1iZXIoRlsxXSk7aFtIXT0hMCxsW0hdPVtpW0xdW0RdXX1lbHNle3ZhciBZPXQtdCpOdW1iZXIoRlsxXSkvTnVtYmVyKEZbMF0pLEg9WS50b0ZpeGVkKDQpO2lmKEZbMV0uaW5kZXhPZigiJSIpPi0xJiYoSD10LXQqTnVtYmVyKEZbMV0ucmVwbGFjZSgiJSIsIiIpKS8xMDApLGRbSF0mJiJvYmplY3QiPT10eXBlb2YgZFtIXSYmIm1hbmppYW4iPT09ZFtIXS50eXBlJiZOdW1iZXIoRlswXSk+PWRbSF0udDEpY29udGludWU7ZFtIXT17dHlwZToibWFuamlhbiIsdHQxOk51bWJlcihGWzBdKSx0dDI6TnVtYmVyKEZbMV0pLHQxOk51bWJlcihGWzBdKSx0MjpOdW1iZXIoRlsxXSl9LGxbSF09W2lbTF1bRF1dfX1icmVhaztjYXNlIm1laW1hbmppYW4iOmZvcih2YXIgRyBpbiBpW0xdKXt2YXIgWD1HLnNwbGl0KCItIik7aWYoTnVtYmVyKFhbMF0pPD10KXt2YXIgSj1wYXJzZUludCh0L051bWJlcihYWzBdKSksWj1KKk51bWJlcihYWzFdKTtOdW1iZXIoWFsyXSkmJk51bWJlcihYWzJdKTxaJiYoWj1OdW1iZXIoWFsyXSkpO3ZhciBIPXQtWjtoW0hdPXt0eXBlOiJtZWltYW5qaWFuIix0dDE6dCx0dDI6Wix0MTpOdW1iZXIoWFswXSksdDI6TnVtYmVyKFhbMV0pLGRpc3A6WixsYXN0cDpIfSxsW0hdPVtpW0xdW0ddXX1lbHNle3ZhciBZPXQtdCpOdW1iZXIoWFsxXSkvTnVtYmVyKFhbMF0pLEg9WS50b0ZpeGVkKDQpO2RbSF09e3R5cGU6Im1laW1hbmppYW4iLHR0MTpOdW1iZXIoWFswXSksdHQyOk51bWJlcihYWzFdKSx0MTpOdW1iZXIoWFswXSksdDI6TnVtYmVyKFhbMV0pfSxsW0hdPVtpW0xdW0ddXX19YnJlYWs7Y2FzZSJxdWFubWVpbWFuamlhbiI6Zm9yKHZhciBWIGluIGlbTF0pe3ZhciBLPVYuc3BsaXQoIi0iKTtpZihPYmplY3Qua2V5cyhsKS5sZW5ndGg+MCl7Zm9yKHZhciBNIGluIGwpaWYoInpoZSI9PWRbTV0udHlwZSYmKGRbTV0udDEqZFtNXS50ND49TnVtYmVyKEtbMF0pfHxmKCkmJmRbTV0udDE+PU51bWJlcihLWzBdKSkpe3ZhciBRPWRbTV0udDMsSD0oZFtNXS50MSpkW01dLnQ0LU51bWJlcihLWzBdKSkvUTtkW0hdPSEwLHBbSF09bFtNXS5jb25jYXQoW2lbTF1bVl1dKX19ZWxzZXt2YXIgSD12b2lkIDA7aWYoTnVtYmVyKEtbMF0pPnQpTnVtYmVyKEtbMV0pL051bWJlcihLWzBdKT4uMiYmKEg9KE51bWJlcihLWzBdKS1OdW1iZXIoS1sxXSkpLyhOdW1iZXIoS1swXSkvdCksZFtIXT0hMCk7ZWxzZXt2YXIgdHQ9cGFyc2VJbnQodC9OdW1iZXIoS1swXSkpLGV0PTk5OTk5O051bWJlcihLWzJdKSYmKGV0PXBhcnNlSW50KE51bWJlcihLWzJdKS9OdW1iZXIoS1sxXSkpKSxIPXR0PGV0P3QtdHQqTnVtYmVyKEtbMV0pOnQtZXQqTnVtYmVyKEtbMV0pfUgmJihwW0hdPVtpW0xdW1ZdXSl9fWJyZWFrO2Nhc2UiemhlIjpmb3IodmFyIG50IGluIGlbTF0pe3ZhciBpdD1udC5zcGxpdCgiLSIpLG90PU51bWJlcihpdFsxXSkvMTAsSD0odCpvdCkudG9GaXhlZCg0KTtOdW1iZXIoaXRbMF0pPjE/ZFtIXT17dHlwZToiemhlIix0dDE6TnVtYmVyKGl0WzBdKSp0LHR0MjpOdW1iZXIoaXRbMF0pLHQxOk51bWJlcihpdFswXSkqdCx0MzpOdW1iZXIoaXRbMF0pLHQ0Ok51bWJlcihpdFsxXSkvMTAsdDI6TnVtYmVyKGl0WzBdKSp0KigxLU51bWJlcihpdFsxXSkvMTApfTpoW0hdPSEwLGxbSF09W2lbTF1bbnRdXX1icmVhaztjYXNlIm1hbnpoZSI6Zm9yKHZhciBhdCBpbiBpW0xdKXt2YXIgcnQ9YXQuc3BsaXQoIi0iKTtpZigicXVhbiI9PT1uJiZPYmplY3Qua2V5cyhsKS5sZW5ndGg+MClmb3IodmFyIE0gaW4gbCl7dmFyIHN0PWRbTV0mJk51bWJlcihydFswXSk8PWRbTV0udHQxLGx0PWhbTV07aWYoTnVtYmVyKHJ0WzBdKTw9TnVtYmVyKE0pfHxmKCkmJihzdHx8bHQpKXt2YXIgSD12b2lkIDA7aWYoZigpJiZkW01dKXt2YXIgY3Q9ZFtNXS50dDEtZFtNXS50dDItZFtNXS50dDEqKDEtTnVtYmVyKHJ0WzFdKS8xMCk7SD1jdC8oZFtNXS50dDEvdCl9ZWxzZSBIPWYoKSYmaFtNXT9NLXQqKDEtTnVtYmVyKHJ0WzFdKS8xMCk6TnVtYmVyKE0pKihOdW1iZXIocnRbMV0pLzEwKTtkW01dJiYoZFtIXT0hMCksaFtNXSYmKGhbSF09ITApLHBbSF09bFtNXS5jb25jYXQoW2lbTF1bYXRdXSl9ZWxzZSBpZihOdW1iZXIocnRbMV0pPD04fHxNL051bWJlcihydFswXSk+Ljkpe3ZhciBIPU51bWJlcihNKSooTnVtYmVyKHJ0WzFdKS8xMCk7cFtIXT1sW01dLmNvbmNhdChbaVtMXVthdF1dKSxkW0hdPSEwfWVsc2UgaWYoZFtNXSYmTnVtYmVyKHJ0WzBdKTw9ZFtNXSl7dmFyIEg9TnVtYmVyKE0pKihOdW1iZXIocnRbMV0pLzEwKTtkW0hdPSEwLHBbSF09bFtNXS5jb25jYXQoW2lbTF1bYXRdXSl9fWVsc2UgaWYoInF1YW4iPT09bil7aWYoTnVtYmVyKHJ0WzBdKTw9dCl7dmFyIEg9dCooTnVtYmVyKHJ0WzFdKS8xMCk7aFtIXT0hMCxwW0hdPVtpW0xdW2F0XV19ZWxzZSBpZihOdW1iZXIocnRbMV0pPDl8fHQvTnVtYmVyKHJ0WzBdKT4uOSl7dmFyIEg9dCooTnVtYmVyKHJ0WzFdKS8xMCk7ZFtIXT0hMCxwW0hdPVtpW0xdW2F0XV19fWVsc2UgaWYoTnVtYmVyKHJ0WzBdKTw9dCl7dmFyIEg9dCooTnVtYmVyKHJ0WzFdKS8xMCk7aFtIXT0hMCxsW0hdPVtpW0xdW2F0XV19ZWxzZXt2YXIgSD10KihOdW1iZXIocnRbMV0pLzEwKTtkW0hdPXt0eXBlOiJtYW56aGUiLHR0MTpOdW1iZXIocnRbMF0pLHR0MjpOdW1iZXIocnRbMF0pLUgsdDE6TnVtYmVyKHJ0WzBdKSx0MjpOdW1iZXIocnRbMF0pLUgsdDM6TnVtYmVyKHJ0WzFdKS8xMH0sbFtIXT1baVtMXVthdF1dfX1icmVhaztjYXNlIm1hbnpoZTIiOmZvcih2YXIgYXQgaW4gaVtMXSl7dmFyIEg9dCooTnVtYmVyKGF0KS0xKS9OdW1iZXIoYXQpO2RbSF09e3R5cGU6Im1hbnpoZTIiLHR0MTp0Kk51bWJlcihhdCksdHQyOnQsdDE6dCooTnVtYmVyKGF0KS0xKSx0MjpOdW1iZXIoYXQpfSxsW0hdPVtpW0xdW2F0XV19YnJlYWs7Y2FzZSJxdWFubWFuamlhbiI6Zm9yKHZhciBwdCBpbiBpW0xdKXt2YXIgZHQ9cHQuc3BsaXQoIi0iKTtpZihPYmplY3Qua2V5cyhsKS5sZW5ndGg+MCl7Zm9yKHZhciBNIGluIGwpaWYoTnVtYmVyKE0pPj1OdW1iZXIoZHRbMF0pfHxmKCkmJnQ+PU51bWJlcihkdFswXSkpe3ZhciBIPU51bWJlcihNKS1OdW1iZXIoZHRbMV0pO2hbSF09ITAscFtIXT1sW01dLmNvbmNhdChbaVtMXVtwdF1dKX19ZWxzZSBpZihOdW1iZXIoZHRbMF0pPD10KXt2YXIgSD10LU51bWJlcihkdFsxXSk7aFtIXT0hMCxwW0hdPVtpW0xdW3B0XV19ZWxzZSBpZihOdW1iZXIoZHRbMV0pL051bWJlcihkdFswXSk+LjIpe3ZhciBIPShOdW1iZXIoZHRbMF0pLU51bWJlcihkdFsxXSkpLyhOdW1iZXIoZHRbMF0pL3QpO2RbSF09ITAscFtIXT1baVtMXVtwdF1dfX19fTt0LmV4cG9ydHMuZ2V0UHJpY2U9ZnVuY3Rpb24odCl7bD90KGwsZCxoKTpjPXR9O3ZhciB3PWZ1bmN0aW9uKCl7dmFyIHQ9bVtpLnNpdGVdKCk7dC5wcm9tbyYmZyhpLmRwLnByaWNlLHQucHJvbW8sInByb21vIiksdC5xdWFuJiZnKGkuZHAucHJpY2UsdC5xdWFuLCJxdWFuIik7Zm9yKHZhciBlIGluIHApbFtlXT1wW2VdO3ZhciBuPXVbaS5zaXRlXSgpO2lmKG4pZm9yKHZhciBvIGluIGwpe3ZhciBhPW8tbjtsW2FdPWxbb119YyYmYyhsLGQsaCl9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7IjM2MGJ1eSIhPT1pLnNpdGUmJiJzdW5pbmciIT09aS5zaXRlfHxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIHQ9aS5zaXRlLGU9by5nZXRTaXRlSWQodCk7YS5pbml0KGUsZnVuY3Rpb24odCl7dCYmdD4wJiYoaS5kcC5vbGRQcmljZT10LGkuZHAucHJpY2U9dCksdygpfSl9LDJlMyl9fSkuY2FsbChlLG4oNCksbigxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8YSBpZD0iZGlzX3ByaWNlX2JveCIgY2xhc3M9Int7eGRsan19IHt7aWYgaXNYZH19IGlzeGRsaiB7ey9pZn19IHt7aWYgbmV3bGluZX19IG5ld2xpbmUge3svaWZ9fSI+XG4gIDxzcGFuIGNsYXNzPSJkaXMtc3AxIj7liLDmiYvku7c6PC9zcGFuPlxuICA8c3BhbiBjbGFzcz0iZGlzLXNwMiI+PGVtPu+/pTwvZW0+e3twcmljZX19PC9zcGFuPlxuICAgIDxzcGFuIGNsYXNzPSJkaXMtc3AzIj5cbiAgICAgIDxzcGFuIGNsYXNzPSJkaXMtdGxlLXNwMSI+KHt7cmV0bGV9fSk8L3NwYW4+XG4gICAgICBcbiAgICA8ZGl2IGNsYXNzPSJkaXMtZGV0YWlsIj5cbiAgICAgIHt7ZWFjaCBwcmljZWRlc2N9fVxuICAgICAgICA8c3Bhbj57eyR2YWx1ZX19PC9zcGFuPlxuICAgICAge3svZWFjaH19XG4gICAgICA8ZGl2IGNsYXNzPSJkc2otZGVzYyI+XG4gICAgICAgIDxzcGFuPuWIsOaJi+S7t+aMh+S/g+mUgOa0u+WKqOWujOe+juWHkeWNleWSjOS9v+eUqOS8mOaDoOWIuOWQjueahOeQhuiuuuWIsOaJi+S7t++8jOS4jeS7o+ihqOaCqOeahOWunumZheaUr+S7mOS7t+agvDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDwvc3Bhbj5cbiAgICBcbiAgXG48c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAjZGlzX3ByaWNlX2JveC5uZXdsaW5lIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuICAjZGlzX3ByaWNlX2JveCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIHZlcnRpY2FsLWFsaWduOiAycHg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gICNkaXNfcHJpY2VfYm94IC5kc2otZGVzYyB7XG4gICAgaGVpZ2h0OiA1NHB4O1xuICAgIHdpZHRoOiAxOTJweDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgYm9yZGVyLXRvcDogMXB4IGRvdHRlZCAjRDRENEQ0O1xuICB9XG4gICNkaXNfcHJpY2VfYm94IC5kc2otZGVzYyBzcGFuIHtcbiAgICBtYXJnaW4tdG9wOiA2cHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGNvbG9yOiAjQTFBMkE5O1xuICB9XG4gIC5nd2Rfc3VuaW5nICNkaXNfcHJpY2VfYm94IHtcbiAgICBsaW5lLWhlaWdodDogMzJweDtcbiAgfVxuICAjZGlzX3ByaWNlX2JveDpob3ZlciB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG4gICNkaXNfcHJpY2VfYm94IC5kaXMtc3AxIHtcbiAgICBjb2xvcjogIzY2NjtcbiAgICBmb250LXNpemU6IDEycHg7XG4gIH1cbiAgI2Rpc19wcmljZV9ib3ggLmRpcy1zcDIge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBjb2xvcjogI0U0MzkzQztcbiAgICB2ZXJ0aWNhbC1hbGlnbjogLTJweDtcbiAgfVxuICAjZGlzX3ByaWNlX2JveCAuZGlzLXNwMiBlbSB7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICB9XG4gICNkaXNfcHJpY2VfYm94IC5kaXMtc3AzIHtcbiAgICBjb2xvcjogIzY2NjtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuICB9XG4gICNkaXNfcHJpY2VfYm94IC5kaXMtc3AzOmhvdmVyIHtcbiAgICBjb2xvcjogICNFNDM5M0M7XG4gIH1cbiAgI2Rpc19wcmljZV9ib3ggLmRpcy1zcDM6aG92ZXIgLmRpcy1kZXRhaWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG4gIC5kaXMtZGV0YWlsIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICB6LWluZGV4OiA5OTk5O1xuICAgIGJhY2tncm91bmQ6ICNGRUZGRjc7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0U1RTVFNTtcbiAgICB0b3A6IDIwcHg7XG4gICAgcGFkZGluZzogM3B4IDEwcHggOHB4IDEwcHg7XG4gICAgd2lkdGg6IDE5MnB4O1xuICAgIGxlZnQ6IDBweDtcbiAgfVxuICAuaXN4ZGxqIC5kaXMtZGV0YWlsIHtcbiAgICBwYWRkaW5nOiA2cHggMTBweCAxMnB4IDEwcHg7XG4gICAgbWluLXdpZHRoOiAxMTFweDtcbiAgICB3aWR0aDogMTExcHg7XG4gIH1cbiAgLmlzeGRsaiAuZGlzLWRldGFpbCAuZHNqLWRlc2Mge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmRpcy1kZXRhaWwgc3BhbiB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIGNvbG9yOiAjNjY2O1xuICB9XG4gIC5kaXMtZGV0YWlsOmJlZm9yZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogIiI7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIGJvcmRlci13aWR0aDogMHB4IDVweCA1cHg7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNjMGMwYzA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLTVweDtcbiAgICBsZWZ0OiAyNHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgfVxuICAuZGlzLWRldGFpbDphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogIiI7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIGJvcmRlci13aWR0aDogMCA1cHggNXB4O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjRkVGRkY3O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC00cHg7XG4gICAgbGVmdDogMTRweDtcbiAgfVxuICAuaXRlbUluZm8td3JhcCAuc3VtbWFyeS1wcmljZS13cmFwIGRpdi5zdW1tYXJ5LWluZm8ge1xuICAgIHJpZ2h0OiAwcHg7XG4gICAgdG9wOiAxMHB4O1xuICB9XG4gIC5pdGVtSW5mby13cmFwIC5zdW1tYXJ5LXByaWNlLXdyYXAgZGl2LnN1bW1hcnktaW5mbyAuaXRlbSB7XG4gICAgcGFkZGluZzogMHB4O1xuICB9XG48L3N0eWxlPlxuPC9hPid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDc1KSxyPW4oMTMpLHM9ZnVuY3Rpb24odCl7dmFyIHI9ZS5kdmFsLnJlcGxhY2UoIiMiLCIiKSxzPXZvaWQgMDsoZS5zaXRlLmluZGV4T2YoIjM2MGJ1eSIpPi0xfHwiem9sIj09ZS5zaXRlfHwiZG91YmFuIj09ZS5zaXRlKSYmKHM9ITApO3ZhciBsPWUuc2VydmVyKyIvYnJ3ZXh0L3NldHRpbmc/ZnJvbT0iK2EoZS5mcm9tX2RldmljZSkrIiZidHlwZT0iKyhlLmJ0eXBlP2UuYnR5cGU6IiIpLGM9Imh0dHBzOi8vd3d3LiIrZS5leHROYW1lKyIuY29tL2Jyd2V4dC9zdWdnZXN0P3JlZmVyPSIrZW5jb2RlVVJJQ29tcG9uZW50KGRvY3VtZW50LmxvY2F0aW9uLmhyZWYpKyImZnJvbV9kZXZpY2U9IithKGUuZnJvbV9kZXZpY2UpKyImYnR5cGU9IisoZS5idHlwZT9lLmJ0eXBlOiIiKSxwPW4oMTQ0KTtpKCJib2R5IikuYXBwZW5kKG8uY29tcGlsZShwKSh7ZG9tTmFtZTpyLHNfdXJsOmwsZl91cmw6YyxzaG93QWQ6cyxmb2xkOnR9KSksIjEiIT09dCYmaSgiYm9keSIpLmNzcygicGFkZGluZy10b3AiLCIzNnB4IikuYWRkQ2xhc3MoImd3ZF91bmZvbGQiKX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD1yLmdldCgicGVybWFuZW50Iik7cyh0LnRvcF9mb2xkKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7big1NikuYXV0b0ZpeFdpZHRoKCl9LDFlMyl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGlkPSJ7e2RvbU5hbWV9fSIgc3R5bGU9ImRpc3BsYXk6YmxvY2sgIWltcG9ydGFudDt6LWluZGV4Ojk5OTk5OTk5OTkgIWltcG9ydGFudDsiPlxuICA8ZGl2IGlkPSJnd2RhbmdfbWFpbiIgY2xhc3M9Imd3ZGFuZy1tYWluIiBzdHlsZT0iZGlzcGxheToge3tpZiBmb2xkID09PSBcJzFcJ319IG5vbmUge3tlbHNlfX0gYmxvY2sge3svaWZ9fTsiPlxuICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6IiBjbGFzcz0iZ3dkLXRvcGJhci1sb2dvIj48ZW0gY2xhc3M9Imd3ZF9iZyI+PC9lbT48L2E+XG4gICAgPGRpdiBjbGFzcz0iZ3dkLXRvcGJhci1sZWZ0Ij5cbiAgICAgIDxkaXYgaWQ9ImFtYXpvbl9jb21wYXJlIiBjbGFzcz0iZ3dkYW5nLXRhYiI+PC9kaXY+XG4gICAgICA8ZGl2IGlkPSJiMmNfY29tcGFyZSIgY2xhc3M9Imd3ZGFuZy10YWIiPjwvZGl2PlxuICAgICAgPGRpdiBpZD0idGJfY29tcGFyZSIgY2xhc3M9Imd3ZGFuZy10YWIiPjwvZGl2PlxuICAgICAgPGRpdiBpZD0idG1fY29tcGFyZSIgY2xhc3M9Imd3ZGFuZy10YWIiPjwvZGl2PlxuICAgICAgPGRpdiBpZD0iZ3dkYW5nLXRyZW5kIiBjbGFzcz0iZ3dkYW5nLXRhYiI+PC9kaXY+XG4gICAgPC9kaXY+XG4gICAge3sgaWYgc2hvd0FkfX1cbiAgICA8YSBpZD0iZ3dkYW5nLWJhbm5lci1hZCIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmxpbmtoYWl0YW8uY29tL2luZGV4LnBocD9tb2Q9bGhkZWFsJnRyYWNrPTc1Y2JnV1JLUUI1QVk2cmVpbGxNdXV3WF9iNVNCTU9xVG1hZEVfYlE0aVFUMENjT0VtUmRhUUlwZXcmbmV3PWh0dHBzJTNBJTJGJTJGYS5qZC5jb20lMkYmdGFnPWJhbm5lciI+XG4gICAgICAgIDxpbWcgc3JjPSJodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2FkMTExMS9nd2RhbmdfZ28ucG5nIj5cbiAgICA8L2E+XG4gICAge3svaWZ9fVxuICAgIDxkaXYgY2xhc3M9Imd3ZC10b3BiYXItcmlnaHQiPlxuICAgICAgPGRpdiBjbGFzcz0ic2VhcmNoLW1vZCI+PC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPSJmZWVkYmFjay1jbG9zZSIgaWQ9Imd3ZGFuZy1mZWVkLWNsb3NlIj5cbiAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDoiIGNsYXNzPSJnd2RhbmctaWNvbiBmYXZvciIgaWQ9Imd3ZGFuZy1mYXZvciIgdGl0bGU9IuaIkeeahOaUtuiXj+WkuSIgdGFyZ2V0PSJfc2VsZiI+XG4gICAgICAgICAgPGVtIGNsYXNzPSJoYXNDb2xvciBnd2RfYmciPjwvZW0+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImJsa2NvbG9yMSBmYXZvcnRsZSIgdGl0bGU9IuaUtuiXj+W5tuiOt+W+l+mZjeS7t+aPkOmGkiI+5oiR55qE5pS26JeP5aS5PC9zcGFuPlxuICAgICAgICA8L2E+XG4gICAgICAgIDxhIGhyZWY9Int7Zl91cmx9fSIgY2xhc3M9Imd3ZGFuZy1zdWdnZXN0IiBpZD0iZ3dkYW5nLXN1Z2dlc3QiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0i5o+Q5bu66K6u5oiW5ZCQ5qe96YGH5Yiw55qE6Zeu6aKYIj5cbiAgICAgICAgICA8ZW0gY2xhc3M9Imd3ZF9iZyI+PC9lbT5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0iYmxrY29sb3IxIj7lj43ppog8L3NwYW4+XG4gICAgICAgIDwvYT5cbiAgICAgICAgPGEgaHJlZj0ie3tzX3VybH19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IuWKn+iDveiuvue9riIgY2xhc3M9InRvcC1iYXItc2V0dGluZyI+XG4gICAgICAgICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgICAgIDwvYT5cbiAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDoiIHRhcmdldD0iX3NlbGYiIGNsYXNzPSJnd2RfY2xvc2UiIHRpdGxlPSLlhbPpl63otK3nianlhZoiPlxuICAgICAgICAgIDxlbSBjbGFzcz0iZ3dkX2JnIj48L2VtPlxuICAgICAgICA8L2E+ICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJnd2RhbmctbWluaSIgaWQ9Imd3ZGFuZy1taW5pIiBzdHlsZT0iZGlzcGxheToge3tpZiBmb2xkID09PSBcJzFcJ319IGJsb2NrIHt7ZWxzZX19IG5vbmUge3svaWZ9fTsiPlxuICAgIDxkaXYgY2xhc3M9Imd3ZGFuZy1uYXYgbWFpbiIgaWQ9Imd3ZGFuZy1tYWluLW5hdiI+XG4gICAgICA8YSBjbGFzcz0iZ3dkX2xvZ28gZ3dkX2JnIiBocmVmPSJodHRwOi8vd3d3Lmd3ZGFuZy5jb20iIHRhcmdldD0iX2JsYW5rIj48L2E+XG4gICAgICA8YSBjbGFzcz0idW5mb2xkX3BvaW50ZXIgZ3dkX2JnIiBocmVmPSJqYXZhc2NyaXB0OiIgdGl0bGU9IueCueWHu+WxleW8gCIgaWQ9Imd3ZF9mb2xkX3BvaW50ZXIiPjwvYT5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oNzMpLGE9big3NSkscj1uKDEzKSxzPW4oMjIpLGw9ZnVuY3Rpb24oKXt2YXIgdD1yLmdldCgicGVybWFuZW50Iiksbz0iIjsiMSI9PT10LmJvdHRvbV9mb2xkJiYobz0iYi1oaWRkZW4iKTt2YXIgbD1uKDE0NiksYz1lbmNvZGVVUklDb21wb25lbnQoZG9jdW1lbnQubG9jYXRpb24uaHJlZikscD0iaHR0cHM6Ly93d3cuZ3dkYW5nLmNvbS9icndleHQvc3VnZ2VzdD9yZWZlcj0iK2MrIiZmcm9tX2RldmljZT0iK2EoZS5mcm9tX2RldmljZSk7aSgiYm9keSIpLmFwcGVuZChzLmNvbXBpbGUobCkoe2hpZGVtb2Q6byxkZXRhaWxXOmkod2luZG93KS53aWR0aCgpLGZfdXJsOnB9KSksImxlbm92byI9PWUuc2l0ZSYmaSgiI2NvbnRhaW5lcl9idXlncm91cCIpLmxlbmd0aD4wJiYiZml4ZWQiPT1pKCIjY29udGFpbmVyX2J1eWdyb3VwIikuY3NzKCJwb3NpdGlvbiIpJiZpKCIjYmpkX2JvdHRvbV9kZXRhaWwiKS5jc3MoImJvdHRvbSIsIjgwcHgiKX0sYz1mdW5jdGlvbigpe3ZhciB0PXIuZ2V0KCJwZXJtYW5lbnQiKTtpKCIjZ3dkYW5nLXRyZW5kIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7aSgiI2d3ZGFuZy10cmVuZC1kZXRhaWwiKS5zaG93KCksaShkb2N1bWVudCkudHJpZ2dlcigicmVuZGVyQWdhaW4iKSxpKHRoaXMpLmFkZENsYXNzKCJtc2hvdmVyIil9KSxpKCIjZ3dkYW5nLXRyZW5kLCAjZ3dkYW5nLXRyZW5kLWRldGFpbCIpLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe2koIiNnd2RhbmctdHJlbmQtZGV0YWlsIikuaGlkZSgpLGkodGhpcykucmVtb3ZlQ2xhc3MoIm1zaG92ZXIiKX0pLGkoIi5uYnQtY2xvc2UtYnRuIikub24oImNsaWNrIixmdW5jdGlvbigpeyIxIiE9PXQuYm90dG9tX2ZvbGQ/KGkoIi5jbG9zZS1tb2R1bGUiKS5hZGRDbGFzcygiYi1oaWRkZW4iKSxpKHRoaXMpLmFkZENsYXNzKCJiLWhpZGRlbiIpLGkoIiNiamRfYm90dG9tX2RldGFpbCIpLmNzcygid2lkdGgiLCI5MnB4IiksdC5ib3R0b21fZm9sZD0iMSIpOihpKCIuY2xvc2UtbW9kdWxlIikucmVtb3ZlQ2xhc3MoImItaGlkZGVuIiksaSh0aGlzKS5yZW1vdmVDbGFzcygiYi1oaWRkZW4iKSxpKCIjYmpkX2JvdHRvbV9kZXRhaWwiKS5jc3MoIndpZHRoIiwiYXV0byIpLHQuYm90dG9tX2ZvbGQ9IjAiKSxvLnNldExvY2FsKCJib3R0b21fZm9sZCIsdC5ib3R0b21fZm9sZCksby5zZXR0aW5ncygic2V0X3BfZm9sZCIsInBfZm9sZCIsdC5ib3R0b21fZm9sZCl9KX07dC5leHBvcnRzLmluaXQyPWZ1bmN0aW9uKHQpe2UuSUU2JiYiY2NiIj09ZS5zaXRlfHwobCgpLG4oMTQ3KS5pbml0KCksYygpKX19KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9ImJqZF9ib3R0b21fZGV0YWlsIiBjbGFzcz0ie3toaWRlbW9kfX0iPlxuICA8YSAgaWQ9ImJqZF9sb2dvIiA+XG4gICAgPHNwYW4gY2xhc3M9Imd3ZF9iZyI+PC9zcGFuPlxuICA8L2E+XG4gIDxkaXYgY2xhc3M9ImxlZnQtY29tcGFyZSBjbG9zZS1tb2R1bGUge3toaWRlbW9kfX0iPlxuICAgIDxzcGFuIGNsYXNzPSJjb20tbG93cHJpIj5cbiAgICAgIDxlbSBjbGFzcz0iZ3dkX2JnIj48L2VtPlxuICAgIDwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz0iY29tLXpkbSI+XG4gICAgICA8ZW0gY2xhc3M9Imd3ZF9iZyI+PC9lbT5cbiAgICA8L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9ImNvbS1oeW0iPlxuICAgICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgPC9zcGFuPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz0ibmJ0LWFkaW5mbyBjbG9zZS1tb2R1bGUge3toaWRlbW9kfX0iPjwvZGl2PlxuICA8ZGl2IGNsYXNzPSJtYWluLWNvbXBhcmUgY2xvc2UtbW9kdWxlIHt7aGlkZW1vZH19Ij5cbiAgICA8c3BhbiBjbGFzcz0iZ3dkX2JnIG1iYXItdHVybnBhZ2UgdGxlZnQiPjwvc3Bhbj5cbiAgICA8ZGl2IGNsYXNzPSJjb21wYXJlLWJveCI+XG4gICAgICA8dWwgY2xhc3M9ImNvbXBhcmUtbGlzdCI+XG4gICAgICAgIFxuICAgICAgPC91bD5cbiAgICA8L2Rpdj5cbiAgICA8c3BhbiBjbGFzcz0iZ3dkX2JnIG1iYXItdHVybnBhZ2UgdHJpZ2h0Ij48L3NwYW4+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPSJyaWdodC1pbmZvIGNsb3NlLW1vZHVsZSB7e2hpZGVtb2R9fSI+XG4gICAgPGRpdiBjbGFzcz0icHJpY2UtdHJlbmQtYnRuIGJ0bS10YWIiIGlkPSJnd2RhbmctdHJlbmQiPlxuICAgICAgPGRpdiBjbGFzcz0idHJlbmQtYm94LWRldiI+XG4gICAgICAgIDxlbSBjbGFzcz0iZ3dkX2JnIj48L2VtPlxuICAgICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIFxuICAgICAgPGRpdiBpZD0iZ3dkYW5nLXRyZW5kLWRldGFpbCIgY2xhc3M9Imd3ZC10cmVuZC1kZXRhaWwgZ3dkLWJ0bi1kZXRhaWwiIHN0eWxlPSJ3aWR0aDp7e2RldGFpbFd9fXB4OyIgPlxuICAgICAgICA8ZGl2IGNsYXNzPSJwYW5lbC13cmFwIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJjaGFydCIgaWQ9Imd3ZGFuZy1wcmktdHJlbmQtY2hhcnQiPlxuICAgICAgICAgICAgPGRpdiBpZD0iYmlnX3Rvb2x0aXBfdG9wIiBjbGFzcz0iYmlnX3Rvb2x0aXBfYm94Ij48L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgaWQ9ImJhcl90cmVuZF9sZWdlbmRfYnRuIiBjbGFzcz0ibGVnZW5kLWJ0bi1ib3giPlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icHJpY2UtdHJlbmQtc3AgcHQtc3AxICIgZGF0YS1pZD0iZGF5czE4MCI+XG4gICAgICAgICAgICAgICAgPGVtPjwvZW0+XG4gICAgICAgICAgICAgICAgPHNwYW4+6aG16Z2i5Lu3PC9zcGFuPlxuICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyZXZpZXctdHJlbmQtc3AiIGRhdGEtaWQ9InBsb3RTcGVjaWFsIj5cbiAgICAgICAgICAgICAgICA8ZW0+PC9lbT5cbiAgICAgICAgICAgICAgICA8c3Bhbj7lh5HljZXliLDmiYvku7c8L3NwYW4+XG4gICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InNlYXJjaC1tb2QiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9ImJqZC1oaXN0b3J5LWJ0biByaW5mby1idG4iIGlkPSJnd2RfaGlzdG9yeSI+XG4gICAgICA8c3BhbiBjbGFzcz0iZ3dkX2JnIj48L3NwYW4+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0iYmpkLWZhdm9yLWJ0biByaW5mby1idG4iIGlkPSJnd2RhbmctZmF2b3IiPlxuICAgICAgPHNwYW4gY2xhc3M9Imd3ZF9iZyI+PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxhIGhyZWY9Int7Zl91cmx9fSIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSLlj43ppogiIGNsYXNzPSJiamQtZmVlZGJhY2stYnRuIHJpbmZvLWJ0biIgaWQ9Imd3ZGFuZy1mZWVkYmFjayI+XG4gICAgICA8c3BhbiBjbGFzcz0iZ3dkX2JnIj48L3NwYW4+XG4gICAgPC9hPlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz0ibmJ0LWNsb3NlLWJ0biB7e2hpZGVtb2R9fSI+XG4gICAgPHNwYW4gY2xhc3M9Imd3ZF9iZyI+PC9zcGFuPlxuICA8L2Rpdj5cbiAgPGRpdiA+PC9kaXY+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMjIpLGE9big3NSkscj1mdW5jdGlvbigpe3ZhciB0PXZvaWQgMDtlKCIjYmpkX2xvZ28iKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtlKCIjbmJ0X3NldHRpbmciKS5zaG93KCl9KSxlKCIjYmpkX2xvZ28iKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXt0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKCIjbmJ0X3NldHRpbmciKS5oaWRlKCl9LDIwMCl9KSxlKCIjbmJ0X3NldHRpbmciKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodCl9KSxlKCIjbmJ0X3NldHRpbmciKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtlKCIjbmJ0X3NldHRpbmciKS5oaWRlKCl9KSxlKCIjbmJ0X3NldHRpbmcgLnNldHRpbmctaXRlbSIpLm9uKCJtb3VzZWVudGVyIixmdW5jdGlvbigpe2UodGhpcykuYWRkQ2xhc3MoInNldHRpbmdfaG92ZXIiKX0pLGUoIiNuYnRfc2V0dGluZyAuc2V0dGluZy1pdGVtIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7ZSh0aGlzKS5yZW1vdmVDbGFzcygic2V0dGluZ19ob3ZlciIpfSl9LHM9ZnVuY3Rpb24oKXt2YXIgdD1kb2N1bWVudC5sb2NhdGlvbi5ocmVmLHM9aS5idHlwZT9pLmJ0eXBlOiIiO2lmKCFpLmFsaVNpdGUpe3ZhciBsPW4oMTQ4KTtlKCIjYmpkX2JvdHRvbV9kZXRhaWwiKS5hcHBlbmQoby5jb21waWxlKGwpKHttYWluc2V0Omkuc2VydmVyKyIvYnJ3ZXh0L3NldHRpbmc/ZnJvbT0iK2EoaS5mcm9tX2RldmljZSkrIiZidHlwZT0iK3MsZmVlZGJhY2s6aS5jX3NlcnZlcisiL2Jyd2V4dC9zdWdnZXN0P3JlZmVyPSIrZW5jb2RlVVJJQ29tcG9uZW50KHQpKyImZnJvbV9kZXZpY2U9IitpLmZyb21fZGV2aWNlKyImYnR5cGU9IitzLGhlbHA6aS5jX3NlcnZlcisiL2FwcC9leHRlbnNpb24/cGFnZT1xdWVzdGlvbiIsd2VicGFnZTppLmNfc2VydmVyKyIvIn0pKSxyKCl9fTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpe3MoKX19KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9Im5idF9zZXR0aW5nIj4gXG4gIDxhIGNsYXNzPSJzZXR0aW5nLWl0ZW0gbWFpbi1zZXR0aW5nIiBocmVmPSJ7e21haW5zZXR9fSIgdGFyZ2V0PSJfYmxhbmsiPlxuICAgIDxlbSBjbGFzcz0iZ3dkX2JnIj48L2VtPlxuICAgIDxzcGFuIGNsYXNzPSJibGtjb2xvcjQiPuWKn+iDveiuvue9rjwvc3Bhbj5cbiAgPC9hPlxuICA8YSBjbGFzcz0ic2V0dGluZy1pdGVtIG5idC1mZWVkYmFjayIgaHJlZj0ie3tmZWVkYmFja319IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgPHNwYW4gY2xhc3M9ImJsa2NvbG9yNCI+5oSP6KeB5Y+N6aaIPC9zcGFuPlxuICA8L2E+XG4gIDxhIGNsYXNzPSJzZXR0aW5nLWl0ZW0gbmJ0LWhlbHAiIGhyZWY9Int7aGVscH19IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgPHNwYW4gY2xhc3M9ImJsa2NvbG9yNCI+5L2/55So5biu5YqpPC9zcGFuPlxuICA8L2E+XG4gIDxhIGNsYXNzPSJzZXR0aW5nLWl0ZW0gbmJ0LXdlYnBhZ2UiIGhyZWY9Int7d2VicGFnZX19IiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgPGVtIGNsYXNzPSJnd2RfYmciPjwvZW0+XG4gICAgPHNwYW4gY2xhc3M9ImJsa2NvbG9yNCI+6LSt54mp5YWa6aaW6aG1PC9zcGFuPlxuICA8L2E+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsaSl7InVzZSBzdHJpY3QiO3ZhciBvPW4oMjIpLGE9bigxMykscj1uKDI0KSxzPW4oMTUwKSxsPW4oNDcpLGM9big0MCkscD0obigyMyksbigyNSkpLGQ9big3MyksaD12b2lkIDAsdT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg+MD9kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg6ZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCxtPXZvaWQgMCxmPXsicHJpLXQxIjoi5Lu35qC85LiK5raoIiwicHJpLXQwIjoi5Lu35qC85bmz56izIiwicHJpLXQtMSI6IuS7t+agvOS4i+mZjSIsInByaS10LTIiOiLljoblj7LmnIDkvY4ifSxnPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10WzBdLnRpbWUsbj10WzBdLnByaWNlLGk9MCxvPXZvaWQgMCxhPTA7YTx0Lmxlbmd0aDthKyspe3ZhciByPU1hdGguYWJzKHRbYV0udGltZS1lKS84NjQwMDt0W2FdLnRpbWUyPW5ldyBEYXRlKDFlMyp0W2FdLnRpbWUpLHI8MTA/dFthXS5wcmljZTxuJiYobj10W2FdLnByaWNlLGk9YSk6KG89aSx0W2ldLnNob3dDaXJjbGU9ITAsaT1hLG49dFthXS5wcmljZSxlPXRbYV0udGltZSl9bysxPGkmJih0W2ldLnNob3dDaXJjbGU9ITApfSx3PWZ1bmN0aW9uKHQpe3ZhciBuPWxvY2F0aW9uLmhvc3QsaT12b2lkIDA7aWYobi5pbmRleE9mKCJ0YW9iYW8iKT09PS0xJiZuLmluZGV4T2YoInRtYWxsIik9PT0tMSl7aWYoIXQuc3RvcmV8fCF0LnN0b3JlWzBdLm5hbWUpcmV0dXJuIHQ7aT10LnN0b3JlWzBdLm5hbWUsdC5zdG9yZT1udWxsfWZvcih2YXIgbz1lLmRwLnByaWNlLGE9ZC5nZXRUaW1lTnVtYmVyKChuZXcgRGF0ZSkuZ2V0VGltZSgpLTE1NDY1NmU1LCI1Iikscj1kLmdldFRpbWVOdW1iZXIoKG5ldyBEYXRlKS5nZXRUaW1lKCksIjUiKSxzPVtdLGw9MDtsPDE4MDtsKyspcy5wdXNoKG8pO2E9bmV3IERhdGUoYSkuZ2V0VGltZSgpO3ZhciBjPSLmt5jlrp0iO24uaW5kZXhPZigidG1hbGwiKT4tMSYmKGM9IuWkqeeMqyIpLGM9aXx8Yzt2YXIgcD17YWxsX2xpbmU6cyxhbGxfbGluZV9iZWdpbl90aW1lOmEsZmlyc3RfcHJpY2U6byxjdXJyZW50X3ByaWNlOm8saGlnaGVzdDpvLGxhc3RfcHJpY2U6byxsb3dlc3Q6byxsb3dlc3RfZGF0ZTpuZXcgRGF0ZShyKS5nZXRUaW1lKCksbmFtZTpjLHByaWNlX3JhbmdlOm8rIi0iK28scHJpY2Vfc3RhdHVzOjB9O3JldHVybiB0LnByaWNlX3N0YXR1cz0wLHQuc3RvcmU9W3BdLHQudGFvYmFvTm9UcmVuZD0hMCx0fSx4PWZ1bmN0aW9uKHQpe3ZhciBuPWxvY2F0aW9uLmhyZWY7aWYoInRhb2Jhby1qdSI9PT1lLnNpdGUpe3ZhciBpPW4ubWF0Y2goL2l0ZW1faWQ9KFxkKykvKVsxXTtuPSJodHRwczovL2RldGFpbC50bWFsbC5jb20vaXRlbS5odG0/aWQ9IitpfXZhciBvPWVuY29kZVVSSUNvbXBvbmVudChuKSxhPWUuZHAucHJpY2U7YT1wYXJzZUZsb2F0KGEpLGE/KG0mJihhPWUuZHAub2xkUHJpY2UpLGE9cGFyc2VJbnQocGFyc2VGbG9hdCgxMDAqYSkudG9GaXhlZCgyKSksYT1hLnRvRml4ZWQoMikpOmE9IiIsci5nZXQoZS5zZXJ2ZXIrIi9leHRlbnNpb24vcHJpY2VfdG93YXJkcz91cmw9IitvKyImcHJpY2U9IithKyImdmVyPTEiLCEwKS5kb25lKGZ1bmN0aW9uKG4pe3RyeXtpZihuLmlzX2JhbiYmbi5hY3Rpb24mJiJyZWRpcmVjdCI9PT1uLmFjdGlvbi5tZXRob2QmJm4uYWN0aW9uLnRvKXJldHVybiB2b2lkIGsobi5hY3Rpb24udG8pO2lmKGUuYnJvd3Nlci5tc2llJiYobi5wcm9tbz1udWxsKSxuLm5vcHV6emxlX3Byb21vJiZuLm5vcHV6emxlX3Byb21vLmxlbmd0aD4wJiZnKG4ubm9wdXp6bGVfcHJvbW8pLG4uc3RvcmUmJm4uc3RvcmVbMV0mJiLliLDmiYvku7ciPT09bi5zdG9yZVsxXS5uYW1lJiZuLnByb21vP24uc3RvcmVbMV0ubmFtZT0i5YeR5Y2V5Yiw5omL5Lu3IjpuLnN0b3JlJiYobi5zdG9yZS5sZW5ndGg9MSksaCYmbiYmbi5zdG9yZSYmKG4uc3RvcmVbMF0uY3VycmVuY3k9aCksbi5zdG9yZSYmMCE9PW4uc3RvcmVbMF0uYWxsX2xpbmUubGVuZ3RoKXQobik7ZWxzZXt2YXIgaT1lLnNpdGUsbz1sLmdldFNpdGVJZChpKTtjLmluaXQobyxmdW5jdGlvbihpKXtpJiZpPjAmJihlLmRwLm9sZFByaWNlPWksZS5kcC5wcmljZT1pKSxuPXcobiksdChuKX0pfX1jYXRjaChhKXt0KG4pfX0pLmZhaWwoZnVuY3Rpb24odCl7fSl9LGI9ZnVuY3Rpb24odCl7ImFtYXpvbiI9PT1lLnNpdGUmJiJ3d3cuYW1hem9uLmNuIiE9bG9jYXRpb24uaG9zdD8obT0hMCxoPSJVU0QiLCJ3d3cuYW1hem9uLmNvLmpwIj09bG9jYXRpb24uaG9zdCYmKGg9IkpQWSIpLFsid3d3LmFtYXpvbi5mciIsInd3dy5hbWF6b24uZGUiLCJ3d3cuYW1hem9uLmVzIiwid3d3LmFtYXpvbi5ubCIsInd3dy5hbWF6b24uaXQiXS5pbmRleE9mKGxvY2F0aW9uLmhvc3QpPi0xJiYoaD0iRVVSIiksInd3dy5hbWF6b24uY2EiPT1sb2NhdGlvbi5ob3N0JiYoaD0iQ0FEIiksInd3dy5hbWF6b24uY28udWsiPT1sb2NhdGlvbi5ob3N0JiYoaD0iR0JQIikseCh0KSk6InRtYWxsIj09PWUuc2l0ZXx8InRhb2Jhby05NTA5NSI9PT1lLnNpdGV8fCJhaS10YW9iYW8iPT09ZS5zaXRlfHwidGFvYmFvIj09PWUuc2l0ZT94KHQpOiJhbGlleHByZXNzIj09PWUuc2l0ZT9uKDE1OCkuZ2V0VHJlbmREYXRhKGZ1bmN0aW9uKGUpe2UmJnQoZSl9KTp4KHQpfSxfPWZ1bmN0aW9uKHQpe2lmKHQuc3RvcmUmJiEodC5zdG9yZVswXS5hbGxfbGluZS5sZW5ndGg8Mikpe3ZhciBlPXUtMzIxLGE9dC5wcmljZV9zdGF0dXM7YT0icHJpLXQiK2E7dmFyIHI9ZlthXSxzPSc8c3BhbiBjbGFzcz0iYnRuLXRhYi1zcCI+XG4gICAgICA8ZW0gY2xhc3M9Imd3ZF9iZyAnK2ErJyI+PC9lbT5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0YWItc3AxIGJsa2NvbG9yMSI+JytyKyc8L3NwYW4+XG4gICAgPC9zcGFuPlxuICAgIDxkaXYgaWQ9Imd3ZGFuZy10cmVuZC1kZXRhaWwiIGNsYXNzPSJnd2RhbmctdHJlbmQtZGV0YWlsIHRvcC1iYXItZGV0YWlsIj5cbiAgICAgIDxkaXYgaWQ9Imd3ZGFuZy1wcmktdHJlbmQtY2hhcnQiIHN0eWxlPSJ3aWR0aDonK2UrJ3B4O2hlaWdodDoyNjBweDsiIGNsYXNzPSJjaGFydCI+XG4gICAgICAgIDxkaXYgaWQ9ImJpZ190b29sdGlwX3RvcCIgY2xhc3M9ImJpZ190b29sdGlwX2JveCI+PC9kaXY+XG4gICAgICAgIDxkaXYgaWQ9ImJhcl90cmVuZF9sZWdlbmRfYnRuIiBjbGFzcz0ibGVnZW5kLWJ0bi1ib3giPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZS10cmVuZC1zcCBwdC1zcDEgIiBkYXRhLWlkPSJkYXlzMTgwIj5cbiAgICAgICAgICAgIDxlbT48L2VtPlxuICAgICAgICAgICAgPHNwYW4+6aG16Z2i5Lu3PC9zcGFuPlxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0icmV2aWV3LXRyZW5kLXNwIiBkYXRhLWlkPSJwbG90U3BlY2lhbCI+XG4gICAgICAgICAgICA8ZW0+PC9lbT5cbiAgICAgICAgICAgIDxzcGFuPuWHkeWNleWIsOaJi+S7tzwvc3Bhbj5cbiAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgJztpKCIjZ3dkYW5nLXRyZW5kIikuYXBwZW5kKG8uY29tcGlsZShzKSgpKS5zaG93KCksbig1NikuYXV0b0ZpeFdpZHRoKCl9fSx2PWZ1bmN0aW9uKHQpe2lmKHQuc3RvcmUmJiEodC5zdG9yZVswXS5hbGxfbGluZS5sZW5ndGg8Mikpe3ZhciBlPXUtMzIxLG49dC5wcmljZV9zdGF0dXM7bj0icHJpLXQiK247dmFyIG89ZltuXTtpKCIjZ3dkYW5nLXRyZW5kIC50cmVuZC1ib3gtZGV2IHNwYW4iKS50ZXh0KG8pLmFkZENsYXNzKG4pLGkoIiNnd2RhbmctdHJlbmQgLnRyZW5kLWJveC1kZXYgZW0iKS5hZGRDbGFzcyhuKSxpKCIjZ3dkYW5nLXByaS10cmVuZC1jaGFydCIpLmNzcygid2lkdGgiLGUrInB4IiksaSgiI2d3ZGFuZy10cmVuZCIpLnNob3coKX19LHk9ZnVuY3Rpb24odCl7dmFyIG49IiIsYT0ic2V0dGluZy1iZyIscj10LnByaWNlX3N0YXR1cztyPSJwcmktdCIrcjt2YXIgcz1mW3JdOyghdC5zdG9yZXx8dC5zdG9yZVswXS5hbGxfbGluZS5sZW5ndGg8MikmJihuPSJuby1wcmljZSIscz0i5pqC5peg5Lu35qC86LWw5Yq/IixyPSIiLGE9IiIpLCJhbWF6b24iIT1lLnNpdGUmJiI2cG0iIT1lLnNpdGV8fChhPSJodC1iZyIpO3ZhciBsPSc8ZGl2IGNsYXNzPSJtaW5pYmFyLWJ0bi1ib3ggJytuKyciPlxuICAgICAgICA8ZW0gY2xhc3M9IicrYSsiIHByaS1oaXN0b3J5LWljb24gIityKyciPjwvZW0+XG4gICAgICAgIDxzcGFuIGNsYXNzPSInK3IrJyI+JytzKyI8L3NwYW4+XG4gICAgICA8L2Rpdj4iOyghdC5zdG9yZXx8dC5zdG9yZVswXS5hbGxfbGluZS5sZW5ndGg8MikmJihpKCIjbWluaV9wcmljZV9oaXN0b3J5IikuYWRkQ2xhc3MoIm5vX3ByaWNlIikub2ZmKCksaSgiI21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWwiKS5yZW1vdmUoKSxpKCIjaHRfbWluaXRyZW5kX2RldGFpbCIpLnJlbW92ZSgpKSxpKCIjbWluaV9wcmljZV9oaXN0b3J5IikuYXBwZW5kKG8uY29tcGlsZShsKSgpKS5zaG93KCl9LGs9ZnVuY3Rpb24odCl7dmFyIGU9YS5nZXQoInBlcm1hbmVudCIpLnN0eWxlOyJ0b3AiPT09ZT9qKHQpOiJib3R0b20iPT09ZSYmeih0KSxDKHQpfSx6PWZ1bmN0aW9uKHQpe3ZhciBlPXUtMzIxLGE9bigxNjUpLHI9JzxzcGFuIGNsYXNzPSJibGtjb2xvcjEiPuiuv+mXruW8guW4uDwvc3Bhbj4nO2koIiNnd2RhbmctdHJlbmQiKS5hcHBlbmQoaShyKSksaSgiLnRyZW5kLWJveC1kZXYiKS5yZW1vdmUoKSxpKCIjZ3dkYW5nLXByaS10cmVuZC1jaGFydCIpLmNzcygid2lkdGgiLGUrInB4IiksaSgiI2d3ZGFuZy10cmVuZC1kZXRhaWwiKS5lbXB0eSgpLmFwcGVuZChvLmNvbXBpbGUoYSkoe3VybDp0fSkpLGkoIiNnd2RhbmctdHJlbmQiKS5zaG93KCl9LGo9ZnVuY3Rpb24odCl7dmFyIGU9bigxNjYpLGE9JzxzcGFuIGNsYXNzPSJibGtjb2xvcjEiPuiuv+mXruW8guW4uDwvc3Bhbj4nO2koIiNnd2RhbmctdHJlbmQiKS5hcHBlbmQoaShhKSksaSgiI2d3ZGFuZy10cmVuZCIpLmFwcGVuZChvLmNvbXBpbGUoZSkoe3VybDp0fSkpLnNob3coKSxpKCIjZ3dkYW5nLXRyZW5kIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKHQpe2koIiNnd2RhbmctdHJlbmQiKS5yZW1vdmVDbGFzcygidGFiLWhvdmVyIil9KX0sQz1mdW5jdGlvbih0KXt2YXIgZT1uKDE2NyksYT0nPHNwYW4gY2xhc3M9ImJsa2NvbG9yMSI+6K6/6Zeu5byC5bi4PC9zcGFuPic7aSgiI21pbmlfcHJpY2VfaGlzdG9yeSIpLmFwcGVuZChpKGEpKSxpKCIjbWluaV9wcmljZV9oaXN0b3J5IikuYXBwZW5kKG8uY29tcGlsZShlKSh7dXJsOnR9KSkuc2hvdygpfSxTPWZ1bmN0aW9uKHQpe2lmKCJhbWF6b24iIT1lLnNpdGUmJiI2cG0iIT1lLnNpdGUpe3ZhciBhPSExOyIxIiE9PWUuc2hvd19hcHB8fGUuZm9yYmlkQ291cG9ufHwoYT0hMCksKGUuSUU3fHxlLklFOHx8ZS5JRTl8fGUuSUUxMHx8ZS5JRTExKSYmKGE9ITEpLHQucHJvbW8mJnQucHJvbW8ubGVuZ3RoPjAmJihhPSExKTt2YXIgcj1uKDE2OCk7aSgiI21pbmlfcHJpY2VfaGlzdG9yeSIpLmFwcGVuZChvLmNvbXBpbGUocikoe3Nob3dhcHA6YX0pKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aSgiI21pbmlfcHJpY2VfaGlzdG9yeSIpLmlzKCI6dmlzaWJsZSIpfHxpKCIjbWluaV9wcmljZV9oaXN0b3J5Iikuc2hvdygpfSwxMDApfX0sUD1mdW5jdGlvbih0KXt2YXIgZT1hLmdldCgicGVybWFuZW50Iikuc3R5bGU7InRvcCI9PT1lP18odCk6ImJvdHRvbSI9PT1lJiZ2KHQpLHkodCksIXQuc3RvcmV8fHQuc3RvcmVbMF0uYWxsX2xpbmUubGVuZ3RoPDJ8fChTKHQpLGkoIiNnd2RhbmctdHJlbmQiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24odCl7c2V0VGltZW91dChmdW5jdGlvbigpe2Zvcih2YXIgZT1pKHQudGFyZ2V0KS5wYXJlbnRzKCksbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1pKGVbbl0pLmF0dHIoImlkIik7aWYoImZhdm9yX2JveCI9PT1vKXJldHVybn1pKCIjZ3dkYW5nLXRyZW5kLWRldGFpbCIpLmhpZGUoKSxpKCIjZ3dkYW5nLXRyZW5kIikucmVtb3ZlQ2xhc3MoInRhYi1ob3ZlciIpfSwxNTApfSkpfSxUPWZ1bmN0aW9uKHQpe3ZhciBpPSImeWVuOyIsbz1lLmxvZ3NpdGUsYT1wLmdldE1vbmV5SW5mbyhvKTthJiYoaT1hWzBdKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7big4NCkuaW5pdCgiI2d3ZGFuZy10cmVuZC1kZXRhaWwiLGksdCl9LDQwMCl9LEE9ZnVuY3Rpb24odCl7aWYodC5wcmljZV9zdGF0dXM9PT0tMSYmdC5zdG9yZS5sZW5ndGg+MCl7dmFyIGU9dC5zdG9yZVswXS5sYXN0X3ByaWNlLzEwMCxuPXQuc3RvcmVbMF0ubG93ZXN0O2U9PT1uJiYodC5wcmljZV9zdGF0dXM9LTIpfXJldHVybiB0fTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpe2IoZnVuY3Rpb24odCl7cmV0dXJuInN0ZWFtcG93ZXJlZCI9PT1lLnNpdGU/dm9pZCBuKDE2OSkuaW5pdCh0KToodD1BKHQpLFAodCksVCh0KSx2b2lkKCF0LnN0b3JlfHx0LnN0b3JlWzBdLmFsbF9saW5lLmxlbmd0aDwyfHwocy5pbml0KHQsImRwUGFnZSIsITEse3RvcDohMSxtaWRkbGU6ITEsYm90dG9tOiExLGJhaWR1OiExfSksdC5wcm9tbyYmdC5wcm9tby5sZW5ndGg+MCYmbigxMTMpLmluaXQodC5wcm9tbyx0Lm5vcHV6emxlX3Byb21vLHQuc3RvcmUpKSkpfSl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyxhKXsidXNlIHN0cmljdCI7aT1mdW5jdGlvbigpe3ZhciB0PW5ldyBEYXRlLGk9dm9pZCAwLHI9bigxNTIpLHM9bigyMyksbD1uKDE1MyksYz1uKDQpLHA9bigyMiksZD1uKDE0KSxoPW4oMTIpLHU9big3MyksbT1uKDI1KSxmPSIjYmlnZ3JhcGhfIitvLmZyb21fZGV2aWNlLGc9ODY0ZTUsdz0hMSx4PXZvaWQgMCxiPXZvaWQgMCxfPXZvaWQgMCx2PXZvaWQgMCx5PXZvaWQgMCxrPXt9LHo9e30saj12b2lkIDAsQz17fSxTPXt9LFA9dm9pZCAwO2EuU1ZHUmVuZGVyZXIucHJvdG90eXBlLnN5bWJvbHMucmVjdD1mdW5jdGlvbih0LGUsbixpKXtyZXR1cm5bIk0iLHQtMixlLCJMIix0KzksZSwiTCIsdCs5LGUrNSwiTCIsdC0yLGUrNSwiWiJdfSxhLlNWR1JlbmRlcmVyLnByb3RvdHlwZS5zeW1ib2xzLnNtYWxsUmVjdD1mdW5jdGlvbih0LGUsbixpKXtyZXR1cm5bIk0iLHQtMixlLCJMIix0KzksZSwiWiJdfSxhLndyYXAoYS5Ub29sdGlwLnByb3RvdHlwZSwiaGlkZSIsZnVuY3Rpb24odCl7dCYmdC5hcHBseSYmdC5hcHBseSh0aGlzKSx0aGlzLmNoYXJ0LnRvb2x0aXAub3B0aW9ucy5vbkhpZGUmJnRoaXMuY2hhcnQudG9vbHRpcC5vcHRpb25zLm9uSGlkZS5hcHBseSYmdGhpcy5jaGFydC50b29sdGlwLm9wdGlvbnMub25IaWRlLmFwcGx5KHRoaXMpOwp9KTt2YXIgVD17Zm9sZGVkOiJzbWFsbFJlY3QiLGV4dGVuZGVkOiJyZWN0In07KG8uSUU3fHxvLklFOCkmJihULmZvbGRlZD0iY2lyY2xlIixULmV4dGVuZGVkPSJjaXJjbGUiKTt2YXIgQT0icGxvdEFsbCIsTj0hMSxJPWZ1bmN0aW9uKCl7dmFyIHQ9W10sZT17aW5MaXN0OmZ1bmN0aW9uKGUpe3JldHVybiB0LmluZGV4T2YoZSk+LTF9LGFkZDpmdW5jdGlvbihlKXt0LmluZGV4T2YoZSk+LTF8fHQucHVzaChlKX0scmVtb3ZlOmZ1bmN0aW9uKGUpe3ZhciBuPXQuaW5kZXhPZihlKTtuPi0xJiZ0LnNwbGljZShuLDEpfX07cmV0dXJuIGV9KCksQj1mdW5jdGlvbigpe3ZhciB0PXt9O3RbIuivhOiuuuaVsCJdPSIjY2E2MGE2Ijt2YXIgZT1bIiM1QUNGRkIiLCIjZWI0NmViIiwiI2ZmYWQwNiIsIiMyMWMxZGIiLCIjYjg4YWU2IiwiI2IzNzAzNiIsIiNiOWRiMGYiLCIjZmZkOTFjIl0sbj0wO3JldHVybiBmdW5jdGlvbihpKXtyZXR1cm4gdFtpXT90W2ldOm48ZS5sZW5ndGg/KHRbaV09ZVtuKytdLHRbaV0pOih0W2ldPSIjIitwYXJzZUludCgyNTYqTWF0aC5yYW5kb20oKSoyNTYqMjU2KS50b1N0cmluZygxNiksdFtpXSl9fSgpLHE9ZnVuY3Rpb24oKXt2YXIgdD0hMTtyZXR1cm4gZnVuY3Rpb24oKXt0fHwodD0hMCxkLmxvZygidHJlbmQtcXJjb2RlLXNob3ciKSxoKCJ0cmVuZC1xcmNvZGUtc2hvdyIpKX19KCksTz1mdW5jdGlvbih0KXtyZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeSh0KSl9LEU9MCxMPSExLEQ9dm9pZCAwLEY9dm9pZCAwLE09dm9pZCAwLFI9dm9pZCAwLCQ9dm9pZCAwO0U9bigxNTQpO3ZhciBIPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBvPU0uc3RvcmUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLm5hbWU9PT10fSlbMF07aWYodm9pZCAwPT1vKXJldHVybiBlO3ZhciBhPW9bUl07aWYoIWEpcmV0dXJuIGU7aWYoIW8uYWxsX2VxdWFsX3Nob3J0JiYic2hvcnRfZGF5X2xpbmUiIT09UiYmaSl7dmFyIHI9dm9pZCAwLHM9dm9pZCAwO3N3aXRjaChSKXtjYXNlImFsbF9saW5lIjpyPW8uYWxsX2xpbmVfYmVnaW5fdGltZTticmVhaztjYXNlImhhbGZfeWVhcl9saW5lIjpyPW8uaGFsZl95ZWFyX2xpbmVfdGltZTticmVhaztjYXNlIm1vbnRoX2xpbmUiOnI9by5tb250aF9saW5lX3RpbWV9cmV0dXJuIHI9bmV3IERhdGUoci0yODhlNSkscj1uZXcgRGF0ZShyLmdldFllYXIoKSsxOTAwLHIuZ2V0TW9udGgoKSxyLmdldERhdGUoKSkscz1pLXIuZ2V0VGltZSgpLGFbcGFyc2VJbnQocy9nKV19dmFyIGw9cGFyc2VJbnQoYS5sZW5ndGgqbi0xKTtsPDAmJihsKz0xKTt2YXIgYz12b2lkIDA7Yz1sPj0xP1thW2wtMV0sYVtsXSxhW2wrMV1dOlthW2xdLGFbbCsxXV0sYz1jLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwIT09dH0pO3ZhciBwPWMubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmFicyh0LWUpfSksZD1wLmluZGV4T2YoTWF0aC5taW4uYXBwbHkobnVsbCxwKSk7cmV0dXJuIGNbZF19LFc9e3g6MCx5OjB9O2Euc2V0T3B0aW9ucyh7Z2xvYmFsOnt0aW1lem9uZU9mZnNldDo4fX0pO3ZhciBVPXtjaGFydDp7cmVuZGVyVG86InBsb3RBcmVhXyIrby5mcm9tX2RldmljZSx0eXBlOiJsaW5lIixhbmltYXRpb246ITEsbWFyZ2luUmlnaHQ6MjkwLG1hcmdpbkxlZnQ6NzAsZXZlbnRzOntsb2FkOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5zZXJpZXNbMF0sbj10aGlzLnhBeGlzWzBdLm1heC01Kmc7ZS5vcHRpb25zLnBvaW50U3RhcnQ+biYmKG49ZS5vcHRpb25zLnBvaW50U3RhcnQpO3ZhciBpPXRoaXMuc2VyaWVzO2kmJmlbMV0mJiLlh5HljZXliLDmiYvku7ciPT09aVsxXS5uYW1lJiYoXz1pWzFdKSwkPXRoaXMucGxvdFdpZHRoO3ZhciBvPWlbMF0uZGF0YSxhPTA7c3dpdGNoKEEpe2Nhc2UicGxvdFllYXIiOmE9MTgwO2JyZWFrO2Nhc2UicGxvdE1vbnRoIjphPTMwO2JyZWFrO2Nhc2UicGxvdDVEYXkiOmE9NX0icGxvdEFsbCI9PT1BfHxOfHx0aGlzLnhBeGlzWzBdLnVwZGF0ZSh7bWluOkYtYSpnLG1heDpGfSk7dmFyIHI9aS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQudmlzaWJsZSYmIm1heCIhPT10Lm5hbWUmJiJtaW4iIT09dC5uYW1lfSk7aWYoMCE9PXIubGVuZ3RoKXt2YXIgcz1yLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5vcHRpb25zLnBvaW50U3RhcnR9KS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHR9KSxsPU1hdGgubWluLmFwcGx5KG51bGwscyk7InBsb3RBbGwiPT09QXx8Tnx8KGw9Ri1hKmcpO2Zvcih2YXIgYz0wO2M8aS5sZW5ndGg7YysrKWlmKGlbY10uZGF0YS5sZW5ndGgpe289aVtjXS5kYXRhO2JyZWFrfXZhciBwPW9bby5sZW5ndGgtMV07dGhpcy54QXhpc1swXS51cGRhdGUoe21pbjpsLG1heDpwP3AueDp0LmdldFRpbWUoKX0pO3ZhciBkPXZvaWQgMCxoPXZvaWQgMDtkPU1hdGguZmxvb3IodGhpcy55QXhpc1swXS5kYXRhTWluKSxoPU1hdGguY2VpbCh0aGlzLnlBeGlzWzBdLmRhdGFNYXgpO3ZhciB1PU1hdGgucG93KDEwLGQudG9TdHJpbmcoKS5sZW5ndGgtMiksbT12b2lkIDA7dGhpcy55QXhpc1swXS5kYXRhTWF4PDE/KGQ9dGhpcy55QXhpc1swXS5kYXRhTWluLGg9dGhpcy55QXhpc1swXS5kYXRhTWF4LG09KGgtZCkvMik6dGhpcy55QXhpc1swXS5kYXRhTWluPT09dGhpcy55QXhpc1swXS5kYXRhTWF4PyhkPU1hdGguZmxvb3IoZC91KSp1LGg9MipkLGQ9MCxtPXBhcnNlSW50KChoLWQpLzIpKTooZD1NYXRoLmZsb29yKGQvdSkqdSxoPU1hdGguY2VpbChoL3UpKnUsbT1wYXJzZUludCgoaC1kKS82KSk7dmFyIGY9TWF0aC5wb3coMTAsbS50b1N0cmluZygpLmxlbmd0aC0xKTttPU1hdGguY2VpbChtL2YpKmYsdGhpcy55QXhpc1swXS51cGRhdGUoe21pbjpkLG1heDpoLHRpY2tJbnRlcnZhbDptfHwxfSl9fX19LGNyZWRpdHM6e2VuYWJsZWQ6ITF9LHRpdGxlOnt0ZXh0Om51bGwsc3R5bGU6e2ZvbnRXZWlnaHQ6ImJvbGQiLGZvbnRGYW1pbHk6Ik1pY3Jvc29mdCBZYUhlaSIsZm9udFNpemU6MTZ9fSx4QXhpczp7b2Zmc2V0OjAsdHlwZToiZGF0ZXRpbWUiLGRhdGVUaW1lTGFiZWxGb3JtYXRzOnttaW51dGU6IiVtLyVkIixob3VyOiIlbS8lZCIsZGF5OiIlbS8lZCIsd2VlazoiJW0vJWQiLG1vbnRoOiIleS8lbSJ9LGNyb3NzaGFpcjp7ZGFzaFN0eWxlOiJTaG9ydERhc2giLHNuYXA6ITEsekluZGV4Ojk5OSxjb2xvcjoiIzQ0NCJ9LG1pbm9yR3JpZExpbmVDb2xvcjoiI2RmZGZkZiIsbGFiZWxzOntyb3RhdGlvbjowLHk6MzAsc3R5bGU6e2ZvbnRTaXplOiIxMnB4Iixmb250RmFtaWx5OiJIZWx2ZXRpY2EiLGNvbG9yOiIjOTY5ODk5In0sYWxpZ246ImNlbnRlciJ9LGdyaWRMaW5lQ29sb3I6IiNlNmU5ZWIiLGxpbmVDb2xvcjoiI2U2ZTllYiIsZ3JpZExpbmVXaWR0aDoxLHRpY2tMZW5ndGg6MCxtaW5UaWNrSW50ZXJ2YWw6ZyxzdGFydE9uVGljazohMSx0aWNrUG9zaXRpb25lcjpmdW5jdGlvbigpe3ZhciB0PVtdLGU9dGhpcy5taW4sbj10aGlzLm1heCxpPW5ldyBEYXRlKGUpLG89MCxhPXZvaWQgMCxyPTE7aWYobi1lPjMwMCpnKXt2YXIgcz1uZXcgRGF0ZSgxOTAwK2kuZ2V0WWVhcigpLGkuZ2V0TW9udGgoKSsxLDIpO289cy5nZXRUaW1lKCk7Zm9yKHZhciBsPSQvKChuLWUpLygzMCpnKSk7cipsPDEwMDspcisrO2E9Im5tb250aCJ9ZWxzZSBpZihuLWU+NjQqZyl7dmFyIHM9bmV3IERhdGUoMTkwMCtpLmdldFllYXIoKSxpLmdldE1vbnRoKCkrMSwyKTtvPXMuZ2V0VGltZSgpLGE9Im1vbnRoIn1lbHNlIGlmKG4tZT4xMCpnKW89ZSxhPSJkYXkiO2Vsc2V7dmFyIHM9bmV3IERhdGUoMTkwMCtpLmdldFllYXIoKSxpLmdldE1vbnRoKCksaS5nZXREYXRlKCkrMSk7bz1zLmdldFRpbWUoKSxhPSJob3VyIn1mb3IoO28tNTRlNjw9bjspc3dpdGNoKHQucHVzaChvLTU0ZTYpLGEpe2Nhc2UibW9udGgiOnZhciBzPW5ldyBEYXRlKG8pLGM9bmV3IERhdGUoMTkwMCtzLmdldFllYXIoKSxzLmdldE1vbnRoKCkrMSwyKTtvPWMuZ2V0VGltZSgpO2JyZWFrO2Nhc2UiZGF5IjpvKz01Kmc7YnJlYWs7Y2FzZSJob3VyIjpvKz1nO2JyZWFrO2Nhc2Uibm1vbnRoIjpzPW5ldyBEYXRlKG8pLGM9bmV3IERhdGUoMTkwMCtzLmdldFllYXIoKSxzLmdldE1vbnRoKCkrciwyKSxvPWMuZ2V0VGltZSgpfWlmKE4pe2Zvcih2YXIgcD0wO3RbcF08dGhpcy5taW47KXArKzt0PVt0W3BdLHRbdC5sZW5ndGgtMV1dfXN3aXRjaChhKXtjYXNlIm1vbnRoIjpjYXNlIm5tb250aCI6dC5pbmZvPXt1bml0TmFtZToibW9udGgiLGhpZ2hlclJhbmtzOnt9fTticmVhaztkZWZhdWx0OnQuaW5mbz17dW5pdE5hbWU6ImRheSIsaGlnaGVyUmFua3M6e319fXJldHVybiB0fX0seUF4aXM6e29mZnNldDowLGxhYmVsczp7YWxpZ246ImxlZnQiLHN0eWxlOntmb250U2l6ZToiMTJweCIsZm9udEZhbWlseToiSGVsdmV0aWNhIixjb2xvcjoiIzk2OTg5OSJ9LGZvcm1hdHRlcjpmdW5jdGlvbigpe3ZhciB0PXZvaWQgMDtyZXR1cm4gdD0hd3x8dGhpcy52YWx1ZTx4P2EubnVtYmVyRm9ybWF0KHRoaXMudmFsdWUsMik6YS5udW1iZXJGb3JtYXQodGhpcy52YWx1ZStiLDIpLHQ9dC5yZXBsYWNlKCIsIiwiIiksdD1OdW1iZXIodCk+OTk5OT9OdW1iZXIodCk6cGFyc2VJbnQodCl9fSxhbGlnbjoiaGlnaCIsZ3JpZExpbmVDb2xvcjoiI2U2ZTllYiIsdGl0bGU6e3RleHQ6bnVsbCxyb3RhdGlvbjowLHk6LTIwLHg6LTEzLGFsaWduOiJoaWdoIixvZmZzZXQ6MCxzdHlsZTp7Zm9udEZhbWlseToiTWljcm9zb2Z0IFlhSGVpIixmb250U2l6ZToxMixjb2xvcjoiIzk2OTg5OSJ9fX0sbGVnZW5kOntlbmFibGVkOiExfSxwbG90T3B0aW9uczp7c2VyaWVzOnt0dXJib1RocmVzaG9sZDowLHN0YXRlczp7aG92ZXI6e2VuYWJsZWQ6ITAsaGFsbzp7c2l6ZTowfX19LG1hcmtlcjp7ZW5hYmxlZDohMX0sZGF0YUdyb3VwaW5nOntlbmFibGVkOiExfSxhbmltYXRpb246ITF9LGxpbmU6e3N0YXRlczp7aG92ZXI6e2VuYWJsZWQ6ITAsbGluZVdpZHRoOjF9fX19LHRvb2x0aXA6e3NoYWRvdzohMSxzaGFyZWQ6ITAsdmFsdWVTdWZmaXg6IuWFgyIsaGlkZURlbGF5OjAsc2hhcGU6InNxdWFyZSIsZm9sbG93UG9pbnRlcjohMSxkYXRlVGltZUxhYmVsRm9ybWF0czp7ZGF5OiIlWS8lbS8lZSIsbWludXRlOiIlWS8lbS8lZSIsc2Vjb25kOiIlWS8lbS8lZSIsaG91cjoiJVkvJW0vJWUgJUg6JU0ifSx1c2VIVE1MOiEwLHBvc2l0aW9uZXI6ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuLnBsb3RYK3Q+dGhpcy5jaGFydC5wbG90V2lkdGgrMTI/e3g6bi5wbG90WC10K3RoaXMuY2hhcnQucGxvdExlZnQseTp0aGlzLmNoYXJ0LnBsb3RIZWlnaHQvMi1lLzIrNDV9Ont4Om4ucGxvdFgrdGhpcy5jaGFydC5wbG90TGVmdCx5OnRoaXMuY2hhcnQucGxvdEhlaWdodC8yLWUvMis0NX19LG9uSGlkZTpmdW5jdGlvbigpe3J0KCJoaWRlIil9LGZvcm1hdHRlcjpmdW5jdGlvbigpe3ZhciB0PXt9O3QueD10aGlzLng7dmFyIGU9bmV3IERhdGUodGhpcy54LTI4OGU1KSxuPWUuZ2V0RnVsbFllYXIoKSxpPWUuZ2V0TW9udGgoKSsxLG89ZS5nZXREYXRlKCkscj1lLmdldEhvdXJzKCkscz12b2lkIDA7aTwxMCYmKGk9IjAiK2kpLG88MTAmJihvPSIwIitvKTt2YXIgbD1uKyIvIitpKyIvIitvKyhMPyIgIityKyI6MDAiOiIiKTt0LnRpbWU9bC5yZXBsYWNlKC9cLy9nLCIuIik7dmFyIGM9IiIscD10aGlzLnBvaW50cy5zb3J0KGZ1bmN0aW9uKHQsZSl7dmFyIG49SChlLnNlcmllcy5uYW1lLGUueSwoZS5wb2ludC5pbmRleCsxKS9lLnNlcmllcy5kYXRhLmxlbmd0aCxlLngtMjg4ZTUpLUgodC5zZXJpZXMubmFtZSx0LnksKHQucG9pbnQuaW5kZXgrMSkvdC5zZXJpZXMuZGF0YS5sZW5ndGgsZS54LTI4OGU1KTtyZXR1cm4gbn0pLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4ibWF4IiE9PXQuc2VyaWVzLm5hbWUmJiJtaW4iIT09dC5zZXJpZXMubmFtZX0pO2lmKDA9PT1wLmxlbmd0aClyZXR1cm4hMTtpZihwLmZvckVhY2goZnVuY3Rpb24oZSxuKXt2YXIgaT1lLnBvaW50LnNlcmllcy5uYW1lLG89SChpLGUucG9pbnQueSwoZS5wb2ludC5pbmRleCsxKS9lLnBvaW50LnNlcmllcy5kYXRhLmxlbmd0aCxlLnBvaW50LngtMjg4ZTUpO289YS5udW1iZXJGb3JtYXQobywyKSwiLiI9PT1vW28ubGVuZ3RoLTFdJiYobys9IjAwIiksIumhtemdouS7tyI9PWk/dC5wYWdlUHJpY2U9by5yZXBsYWNlKC8sL2csIiIpOiLlh5HljZXliLDmiYvku7ciPT1pJiYodC5hZGRwcm89by5yZXBsYWNlKC8sL2csIiIpKSwi5YeR5Y2V5Yiw5omL5Lu3Ij09PWkmJmUueT09PXBbMF0ueSYmZS55PT09TnVtYmVyKHQucGFnZVByaWNlKT9jKz0iIjoi5YeR5Y2V5Yiw5omL5Lu3Ij09PWkmJihzPSEwKX0pLHMpe3ZhciBkPWtbKHRoaXMucG9pbnRzWzBdLngtNjg0ZTUpLnRvU3RyaW5nKCldLGg9ZCYmZC5wcm9tb3Rpb258fCIiLG09ZCYmZC5jb3Vwb24mJmQuY291cG9uLnJlcGxhY2UoIumihuWIuDoiLCIiKSxmPSIiO2lmKG0paWYobS5tYXRjaCgvXGQrLVxkKy8pKXt2YXIgZz1tLnNwbGl0KCItIik7Zis9IuWIuDombmJzcDvmu6EiK2dbMF0rIuWHjyIrZ1sxXSsiICJ9ZWxzZSBmKz0i5Yi4OiZuYnNwOyIrbSsiICI7aCYmKGYrPSLkv4M6Jm5ic3A7IitoKSx0LnByb21vMT1mfWlmKFApe3ZhciB3PXUuZ2V0VGltZU51bWJlcigobmV3IERhdGUpLmdldFRpbWUoKSwiNSIpO2w9PT13P3J0KG51bGwsdCk6cnQoImhpZGUiKX1lbHNlIHJ0KG51bGwsdCl9LGJhY2tncm91bmRDb2xvcjoicmdiYSgyNTUsMjU1LDI1NSwwLjk0KSIsYm9yZGVyQ29sb3I6IiNkNWQ1ZDUiLGJvcmRlcldpZHRoOjEsc3R5bGU6e3BhZGRpbmc6MH19LHNlcmllczpbXX07KG8uSUU3fHxvLklFOCkmJihVLnRvb2x0aXAuc3R5bGU9e3dpZHRoOiI0MDBweCJ9KTt2YXIgWT1mdW5jdGlvbih0KXtyZXR1cm4hIXQubGVuZ3RoJiYoMT09PXQubGVuZ3RoP3RbMF0uYWxsX2xpbmVfYmVnaW5fdGltZTp0LnJlZHVjZShmdW5jdGlvbih0LGUpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdD9NYXRoLm1pbih0LGUuYWxsX2xpbmVfYmVnaW5fdGltZSk6TWF0aC5taW4odC5hbGxfbGluZV9iZWdpbl90aW1lLGUuYWxsX2xpbmVfYmVnaW5fdGltZSl9KSl9LEc9e3Bsb3RBbGw6W10scGxvdFllYXI6W10scGxvdE1vbnRoOltdLHBsb3Q1RGF5OltdLHBsb3RTcGVjaWFsOltdLGRheXMxODA6W119LFg9ZnVuY3Rpb24odCl7VS54QXhpcy5taW5UaWNrSW50ZXJ2YWw9dH0sSj1mdW5jdGlvbihlLG4sbyxyKXt2b2lkIDA9PT1uJiYobj0hMSk7dmFyIHM9ZTtOPW4sUyYmU1tlXT8oYygiI21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWxfYnRuIikuYWRkQ2xhc3MoIm5vLXJldmlldyIpLGMoIi5kaXNjb3VudC1wcmljZS1yZSIpLmhpZGUoKSxjKCIjYmFyX3RyZW5kX2xlZ2VuZF9idG4iKS5hZGRDbGFzcygibm8tcmV2aWV3IikpOlMmJihjKCIjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9idG4iKS5yZW1vdmVDbGFzcygibm8tcmV2aWV3IiksYygiLmRpc2NvdW50LXByaWNlLXJlIikuc2hvdygpLGMoIiNiYXJfdHJlbmRfbGVnZW5kX2J0biIpLnJlbW92ZUNsYXNzKCJuby1yZXZpZXciKSksImNlbnRlciI9PT1lJiYoZT0icGxvdEFsbCIpLCJkYXlzMTgwIiE9PWUmJmV0KGUpLG8uc2VyaWVzPUdbZV0sImRheXMxODAiPT09ZSYmKGU9InBsb3RBbGwiKSxjKCIuZmxvYXRCdXR0b25zPmEiKS5yZW1vdmVDbGFzcygiYWN0aXZlUGxvdCIpLGMoIi5mbG9hdEJ1dHRvbnM+IyIrZSkuYWRkQ2xhc3MoImFjdGl2ZVBsb3QiKTt2YXIgbD1HW3NdO2lmKCJwbG90NURheSI9PT1lPyhYKGcpLEw9ITAsUj0ic2hvcnRfZGF5X2xpbmUiKTpMPSExLCJwbG90TW9udGgiPT09ZSYmKFgoNSpnKSxSPSJtb250aF9saW5lIiksInBsb3RBbGwiPT09ZSl7ciYmKG8uY2hhcnQubWFyZ2luQm90dG9tPTI4KTt2YXIgcD1NYXRoLm1heC5hcHBseShudWxsLGwubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmRhdGEubGVuZ3RofSkpO1gocD4zMD8zMCpnOnA+NT81Kmc6ZyksUj0iYWxsX2xpbmUiLChEWzBdLmFsbF9lcXVhbF9zaG9ydHx8RFswXS5hbGxfbGluZS5sZW5ndGg8NSYmMT09RC5sZW5ndGgpJiYoUj0ic2hvcnRfZGF5X2xpbmUiLEw9ITAsRFswXS5hbGxfbGluZS5sZW5ndGg8NSYmMT09RC5sZW5ndGgmJihvLnNlcmllc1swXS5wb2ludFN0YXJ0PXQuZ2V0VGltZSgpKzI4OGU1LShEWzBdLmFsbF9saW5lLmxlbmd0aC0xKSpnKSl9InBsb3RZZWFyIj09PWUmJihYKDMwKmcpLFI9ImhhbGZfeWVhcl9saW5lIiksbnx8KEE9ZSksaT1uZXcgYS5DaGFydChvKX0sWj1mdW5jdGlvbih0KXtjKCIuZmxvYXRCdXR0b25zPiIrdCkucmVtb3ZlQ2xhc3MoImJqZC1oaWRkZW4iKX0sVj1mdW5jdGlvbigpe2MoIi5mbG9hdEJ1dHRvbnMiKS5vbigiY2xpY2siLCJhIixmdW5jdGlvbih0KXtKKHQudGFyZ2V0LmlkLCExLHUuZGVlcENvcHkoVSkpfSl9LEs9ZnVuY3Rpb24oKXt2YXIgdD12b2lkIDA7YygiI2Jhcl90cmVuZF9sZWdlbmRfYnRuIikub24oImNsaWNrIixmdW5jdGlvbihlKXt2YXIgbj1jKGUudGFyZ2V0KS5hdHRyKCJkYXRhLWlkIik7bnx8KG49YyhlLnRhcmdldCkucGFyZW50KCkuYXR0cigiZGF0YS1pZCIpKSwicGxvdFNwZWNpYWwiPT09biYmKHQ/KF8uc2hvdygpLHQ9ITEsYygiI2Jhcl90cmVuZF9sZWdlbmRfYnRuIikucmVtb3ZlQ2xhc3MoImhpZGVzZXJpcmVzIikpOih0PSEwLF8uaGlkZSgpLGMoIiNiYXJfdHJlbmRfbGVnZW5kX2J0biIpLmFkZENsYXNzKCJoaWRlc2VyaXJlcyIpKSl9KX0sUT1mdW5jdGlvbigpe3ZhciB0PXZvaWQgMDtjKCIjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9idG4iKS5vbigiY2xpY2siLGZ1bmN0aW9uKGUpe3ZhciBuPWMoZS50YXJnZXQpLmF0dHIoImRhdGEtaWQiKTtufHwobj1jKGUudGFyZ2V0KS5wYXJlbnQoKS5hdHRyKCJkYXRhLWlkIikpLCJwbG90U3BlY2lhbCI9PT1uJiYodD8oXy5zaG93KCksdD0hMSxjKCIjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9idG4iKS5yZW1vdmVDbGFzcygiaGlkZXNlcmlyZXMiKSk6KHQ9ITAsXy5oaWRlKCksYygiI21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWxfYnRuIikuYWRkQ2xhc3MoImhpZGVzZXJpcmVzIikpKX0pfSx0dD1mdW5jdGlvbih0KXtyZXR1cm57eTp0LG1hcmtlcjp7ZW5hYmxlZDohMX19fSxldD1mdW5jdGlvbih0KXt2YXIgZT12b2lkIDAsaT1DW3QrIjAiXTsibnVtYmVyIj09dHlwZW9mIGkubG93ZXN0RGF0ZSYmKGkubG93ZXN0RGF0ZT11LmdldFRpbWVOdW1iZXIoaS5sb3dlc3REYXRlKSk7dmFyIG89Q1t0KyIxIl07byYmKG8uUGxvd2VzdDxpLlBsb3dlc3QmJihlPSEwKSwibnVtYmVyIj09dHlwZW9mIG8ubG93ZXN0RGF0ZSYmKG8ubG93ZXN0RGF0ZT11LmdldFRpbWVOdW1iZXIoby5sb3dlc3REYXRlKSkpLHkmJihpLm5vd3ByaWNlPWkubm93cHJpY2U/eVswXStpLm5vd3ByaWNlOmkubm93cHJpY2UsaS5QaGlnaGVzdD1pLlBoaWdoZXN0P3lbMF0raS5QaGlnaGVzdDppLlBoaWdoZXN0LGkuUGxvd2VzdD1pLlBsb3dlc3Q/eVswXStpLlBsb3dlc3Q6aS5QbG93ZXN0KTt2YXIgYT1uKDE1NSk7YygiLmJhclRyZW5kSW5mb0JveCIpLnJlbW92ZSgpLGMoIiNnd2RhbmctcHJpLXRyZW5kLWNoYXJ0IikuYXBwZW5kKHAuY29tcGlsZShhKSh7ZDE6aSxkMjpvLHNob3djb3VkYW46ZX0pKX0sbnQ9ZnVuY3Rpb24odCxlKXt2YXIgbj1lLnN0b3JlW3RdO2l0KCJwbG90QWxsIix0LG4uYWxsX2xpbmUsbi5hbGxfZXF1YWxfc2hvcnQsbi5hbGxfbGluZV9iZWdpbl90aW1lLGUucHJvbW8pLG4uaGFsZl95ZWFyX2xpbmUmJm4uaGFsZl95ZWFyX2xpbmUubGVuZ3RoPjAmJml0KCJwbG90WWVhciIsdCxuLmhhbGZfeWVhcl9saW5lLG4uYWxsX2VxdWFsX3Nob3J0LG4uaGFsZl95ZWFyX2xpbmVfdGltZSxlLnByb21vKSxuLm1vbnRoX2xpbmUmJm4ubW9udGhfbGluZS5sZW5ndGg+MCYmaXQoInBsb3RNb250aCIsdCxuLm1vbnRoX2xpbmUsbi5hbGxfZXF1YWxfc2hvcnQsbi5tb250aF9saW5lX3RpbWUsZS5wcm9tbyk7dmFyIGk9bi5hbGxfbGluZS5sZW5ndGg7aWYoaT4xODApe2k9bi5hbGxfbGluZS5sZW5ndGg7dmFyIG89bi5hbGxfbGluZS5zbGljZShpLTE4MCksYT1uLmFsbF9saW5lX2JlZ2luX3RpbWUrODY0ZTUqKGktMTgwKTtpdCgiZGF5czE4MCIsdCxvLG4uYWxsX2VxdWFsX3Nob3J0LGEsZS5wcm9tbyl9ZWxzZSBpdCgiZGF5czE4MCIsdCxuLmFsbF9saW5lLG4uYWxsX2VxdWFsX3Nob3J0LG4uYWxsX2xpbmVfYmVnaW5fdGltZSxlLnByb21vKX0saXQ9ZnVuY3Rpb24odCxlLG4saSxvLGEpe3QrPWUudG9TdHJpbmcoKSxDW3RdPXt9O3ZhciByPXZvaWQgMCxzPXZvaWQgMCxsPXZvaWQgMCxjPXZvaWQgMCxwPXZvaWQgMCxkPXZvaWQgMDtyPU1hdGgubWluLmFwcGx5KE1hdGgsbikscz1NYXRoLm1heC5hcHBseShNYXRoLG4pO3ZhciBoPW4ubGFzdEluZGV4T2YociksdT1oLG09ODY0ZTU7aWYoaSYmKG09MzZlNSksbD1vK20qaCwxPT1lKXtmb3IodmFyIGY9dTtmPjA7Zi0tKWlmKG5bZl09PT1uW3VdKXt2YXIgZz0obyttKmYtMjg4ZTUpLnRvU3RyaW5nKCk7aWYoTnVtYmVyKHpbZ10mJnpbZ10ucHJpY2UpPT1yKXtsPU51bWJlcihnKSsyODhlNTticmVha319Zm9yKHZhciB3PTA7dzxhLmxlbmd0aDt3KyspMWUzKmFbd10udGltZT09PWwtMjg4ZTUmJihjPWFbd10ubXNnLnByb21vdGlvbixkPWFbd10ubXNnLmNvdXBvbiYmYVt3XS5tc2cuY291cG9uLnJlcGxhY2UoIumihuWIuDoiLCIiKSxwPShhW3ddLm9yaV9wcmljZS8xMDApLnRvRml4ZWQoMikpfWlmKENbdF0ubG93ZXN0RGF0ZT1sLENbdF0uUGxvd2VzdD1OdW1iZXIocikudG9GaXhlZCgyKSxDW3RdLlBoaWdoZXN0PU51bWJlcihzKS50b0ZpeGVkKDIpLENbdF0uUGhpZ2hlc3Q9PT1DW3RdLlBsb3dlc3QmJihDW3RdLm5vd3ByaWNlPUNbdF0uUGxvd2VzdCksY3x8ZCl7dmFyIGc9IiI7aWYoZys9IumhtemdouS7tyIrcCsiJm5ic3A7Jm5ic3A7IixkKWlmKGQubWF0Y2goL1xkKy1cZCsvKSl7dmFyIHg9ZC5zcGxpdCgiLSIpO2crPSLliLg6IOa7oSIreFswXSsi5YePIit4WzFdKyImbmJzcDsifWVsc2UgZys9IuWIuDogIitkKyIgIjtjJiYoZz1nKyLkv4M6ICIrYy5yZXBsYWNlKC/vvIwvZywiLCIpKSxDW3RdLmxvd2VzdFByb21vPWcsQ1t0XS5sb3dlc3RQcm9tb1BwcmljZT1wfX0sb3Q9e30sYXQ9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXZvaWQgMDsi6aG16Z2i5Lu3Ij09PXQubmFtZSYmZSYmKGk9ITApO2Zvcih2YXIgbz17ZW5hYmxlZDohMCxib3JkZXJDb2xvcjoiI2YyZjJmMiIsYm9yZGVyV2lkdGg6MSxwYWRkaW5nOjMsYmFja2dyb3VuZENvbG9yOiJyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNykiLHNoYWRvdzohMSxib3JkZXJSYWRpdXM6MixzdHlsZTp7Zm9udFdlaWdodDoibm9ybWFsIixmb250RmFtaWx5OiJIZWx2ZXRpY2EiLGZvbnRTaXplOiIxM3B4In0seTotMyxmb3JtYXR0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4iwqUiK3RoaXMueS50b1N0cmluZygpLnJlcGxhY2UoIiwiLCIiKX19LGE9dC5kYXRhLHI9MCxzPTAsbD1hWzBdLnl8fDk5OTk5OTksYz1hWzBdLnl8fDAscD0hMCxkPTA7ZDxhLmxlbmd0aDtkKyspe2lmKDAhPWQmJmQhPWEubGVuZ3RoLTEmJmFbZF0ueSYmKHA9ITEpLGkpZm9yKHZhciBoPTA7aDxlLmxlbmd0aDtoKyspdC5wb2ludFN0YXJ0K3QucG9pbnRJbnRlcnZhbCpkLTY4NGU1PT09MWUzKmVbaF0udGltZSYmZVtoXS5zaG93Q2lyY2xlJiYoYVtkXS5tYXJrZXI9e2VuYWJsZWQ6ITAsZmlsbENvbG9yOiIjZmZmIixsaW5lQ29sb3I6IiM1QUNGRkIiLHJhZGl1czoyLjUsbGluZVdpZHRoOjEsc3ltYm9sOiJjaXJjbGUifSk7YVtkXS55JiZhW2RdLnk+PWMmJihjPWFbZF0ueSxzPWQpLGFbZF0ueSYmYVtkXS55PD1sJiYobD1hW2RdLnkscj1kKX1pZigi6aG16Z2i5Lu3Ij09PXQubmFtZSYmKG90W25dPWFbcl0ueSkscCYmIuWHkeWNleWIsOaJi+S7tyI9PT10Lm5hbWUmJlMpcmV0dXJuIHZvaWQoU1tuXT0hMCk7aWYoKGFbci0xXSYmbnVsbCE9PWFbci0xXS55fHxhW3IrMV0mJm51bGwhPT1hW3IrMV0ueSkmJigi5YeR5Y2V5Yiw5omL5Lu3IiE9PXQubmFtZXx8b3Rbbl0hPT1hW3JdLnkpKXtpZihzPT09cilvLmNvbG9yPSIjM0ZDMEYwIjtlbHNle28uY29sb3I9IiNFNDM5M0MiLCLpobXpnaLku7ciPT09dC5uYW1lJiYoYVtzXS5tYXJrZXI9e2VuYWJsZWQ6ITAsZmlsbENvbG9yOiJyZ2JhKDIyOCw1Nyw2MCwxKSIsbGluZUNvbG9yOiJyZ2JhKDIyOCw1Nyw2MCwwLjMyMzMpIixyYWRpdXM6Mi41LGxpbmVXaWR0aDo0LHN5bWJvbDoiY2lyY2xlIn0pO3ZhciB1PUpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkobykpO3UuY29sb3I9IiMzNUJENjgiO3ZhciBtPSJyZ2JhKDUzLDE4OSwxMDQsMSkiLGY9InJnYmEoNTMsMTg5LDEwNCwwLjMyMzMpIjsi5YeR5Y2V5Yiw5omL5Lu3Ij09PXQubmFtZSYmKHUuY29sb3I9IiNGRkMwNkQiLG09InJnYmEoMjU1LDE2NiwwLDEpIixmPSJyZ2JhKDI1NSwxNjYsMCwwLjMyMzMpIiksYVtyXS5tYXJrZXI9e2VuYWJsZWQ6ITAsZmlsbENvbG9yOm0sbGluZUNvbG9yOmYscmFkaXVzOjIuNSxsaW5lV2lkdGg6NCxzeW1ib2w6ImNpcmNsZSJ9fVAmJihhW2EubGVuZ3RoLTFdLm1hcmtlcj17ZW5hYmxlZDohMCxmaWxsQ29sb3I6IiM1QUNGRkIiLHJhZGl1czoyLjUsbGluZVdpZHRoOjAsc3ltYm9sOiJjaXJjbGUifSl9fSxydD1mdW5jdGlvbih0LGUpe2lmKHQpcmV0dXJuIHZvaWQgYyh2KS5oaWRlKCk7aWYoYyh2KS5zaG93KCksZS5hZGRwcm89PT1lLnBhZ2VQcmljZSYmKGUuYWRkcHJvPW51bGwpLGopZm9yKHZhciBpPTA7aTxqLmxlbmd0aDtpKyspaWYoZS54LTY4NGU1PT09MWUzKmpbaV0udGltZSl7dmFyIG89IiI7aWYoaltpXS5tc2cuY291cG9uKXt2YXIgYT1qW2ldLm1zZy5jb3Vwb247aWYoYS5tYXRjaCgvXGQrLVxkKy8pKXt2YXIgcj1hLnNwbGl0KCItIik7bys9IuWIuDombmJzcDvmu6EiK3JbMF0rIuWHjyIrclsxXSsiICJ9ZWxzZSBvKz0i5Yi4OiZuYnNwOyIrYSsiICJ9altpXS5tc2cucHJvbW90aW9uJiYobz1vKyLkv4M6Jm5ic3A7IitqW2ldLm1zZy5wcm9tb3Rpb24rIiAgIiksZS5kaXJlY3Rwcm89KGpbaV0ucHJpY2UvMTAwKS50b0ZpeGVkKDIpLGUucHJvbW8yPW8sZS5wYWdlUHJpY2U9KGpbaV0ub3JpX3ByaWNlLzEwMCkudG9GaXhlZCgyKX12YXIgbD1uKDE1Nik7IiNiaWdfdG9vbHRpcCIhPT12JiYobD1uKDE1NykpO3ZhciBkPSIiO2lmKGUuZGlyZWN0cHJvJiYoZCs9ImRpcmVjdHBybyAiKSxlLmFkZHBybyYmKGQrPSJhZGRwcm8gIiksZS5hZGRwcm98fGUuZGlyZWN0cHJvP2ModikuYWRkQ2xhc3MoImJpZ2hlaWdodCIpOmModikucmVtb3ZlQ2xhc3MoImJpZ2hlaWdodCIpLHkpe3ZhciBoPXMoZS5wYWdlUHJpY2UseVsyXSk7ZS5wYWdlUHJpY2U9eVswXStlLnBhZ2VQcmljZSsoIijCpSIraCsiKSIpfWVsc2UgZS5wYWdlUHJpY2U9IsKlIitlLnBhZ2VQcmljZTtjKHYpLmVtcHR5KCkuYXBwZW5kKHAuY29tcGlsZShsKSh7ZGF0YTplLGRvbWNsYXNzOmR9KSl9LHN0PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZSBpbiB0KWlmKHRbZV0ubGVuZ3RoJiZ0W2VdLmxlbmd0aD4xJiYi5YeR5Y2V5Yiw5omL5Lu3Ij09PXRbZV1bMV0ubmFtZSlmb3IodmFyIG49dFtlXVswXS5kYXRhLmxlbmd0aCxpPTI7aTxuO2krKyl7dmFyIG89dFtlXVswXS5kYXRhLGE9dFtlXVsxXS5kYXRhO29baV0ueSE9PWFbaV0ueXx8b1tpLTFdLnkhPT1hW2ktMV0ueXx8b1tpLTJdLnkhPT1hW2ktMl0ueSYmbnVsbCE9PWFbaS0yXS55fHwoYVtpLTFdLnk9bnVsbCl9fTtyZXR1cm4gZT17aW5pdDpmdW5jdGlvbih0KXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPD0xfHx2b2lkIDA9PT1hcmd1bWVudHNbMV0/ImRwUGFnZSI6YXJndW1lbnRzWzFdLG49IShhcmd1bWVudHMubGVuZ3RoPD0yfHx2b2lkIDA9PT1hcmd1bWVudHNbMl0pJiZhcmd1bWVudHNbMl07IShhcmd1bWVudHMubGVuZ3RoPD0zfHx2b2lkIDA9PT1hcmd1bWVudHNbM10pJiZhcmd1bWVudHNbM107aWYoRT0wLHk9bS5nZXRNb25leUluZm8oby5sb2dzaXRlKSx0LnRhb2Jhb05vVHJlbmQmJihQPSEwKSwhdC5zdG9yZXx8IXQuc3RvcmVbMF18fDAhPT10LnN0b3JlWzBdLmFsbF9saW5lLmxlbmd0aCl7YygiYm9keSIpLmFwcGVuZCgnPGRpdiBpZD0iYmlnZ3JhcGhfJytvLmZyb21fZGV2aWNlKyciIHN0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7bGVmdDogLTEwMDAwMDBweDsgdG9wOiAtMTAwMDAwcHg7YmFja2dyb3VuZDogd2hpdGU7b3ZlcmZsb3c6IGhpZGRlbiI+PC9kaXY+JyksYyhmKS5hcHBlbmQocC5jb21waWxlKHIpKHtleHRCcmFuZDpvLmV4dEJyYW5kLGZyb21fZGV2aWNlOm8uZnJvbV9kZXZpY2Usc19zZXJ2ZXI6by5zX3NlcnZlcn0pKTt2YXIgYT0iIjtWKCksbiYmYyhuKS5hcHBlbmQoYyhmKSksYygiIyIrby5leHROYW1lKyItdHJlbmQiKS5ob3ZlcihmdW5jdGlvbigpe3Y9IiNiaWdfdG9vbHRpcF90b3AiLFUuY2hhcnQubWFyZ2luUmlnaHQ9MzAsVS5jaGFydC5tYXJnaW5Cb3R0b209MjMsVS5jaGFydC5tYXJnaW5Ub3A9NCxVLnhBeGlzLmxhYmVscy55PTIyLHkmJihVLnlBeGlzLnRpdGxlLnRleHQ9eVsxXSxVLnlBeGlzLnRpdGxlLnk9MTc2KTt2YXIgdD1wYXJzZUludChDLnBsb3RBbGwwLlBoaWdoZXN0KS50b1N0cmluZygpLmxlbmd0aDtpZihVLmNoYXJ0Lm1hcmdpbkxlZnQ9MzgrcGFyc2VJbnQoNi44KnQpLFUueUF4aXMubGFiZWxzLng9LSg5K3BhcnNlSW50KDYuOCp0KSksVS55QXhpcy50aXRsZS54PS0oOStwYXJzZUludCg2LjgqdCktMjQpLGMoZikuY3NzKHtsZWZ0OjAsdG9wOjAsYm90dG9tOjAscmlnaHQ6MH0pLCJ0cmVuZCIhPT1hKXt2YXIgZT1jKCIjIitvLmV4dE5hbWUrIi1wcmktdHJlbmQtY2hhcnQiKTtlLmFwcGVuZChjKGYpKSxhPSJ0cmVuZCIsYygiLmZsb2F0QnV0dG9ucyIpLnNob3coKSxjKCIjYmpkLXFyY29kZS10cmVuZCIpLnNob3coKSxjKCIjYmpkLXFyY29kZS10cmVuZCIpLmxlbmd0aCYmcSgpLGMoZikuY3NzKHt2aXNpYmlsaXR5OiJoaWRkZW4ifSksd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgdD1jKCIuZmxvYXRCdXR0b25zIikud2lkdGgoKTtjKCIjYmFyX3RyZW5kX2xlZ2VuZF9idG4iKS5jc3MoInJpZ2h0Iix0KzUwKyJweCIpLEooQSwhMSx1LmRlZXBDb3B5KFUpKTt2YXIgZT1jKCIjIitvLmV4dE5hbWUrIi1wcmktdHJlbmQtY2hhcnQiKS53aWR0aCgpO2kuc2V0U2l6ZShlLDE4MiksJD1pLnBsb3RXaWR0aCxpLmF4ZXNbMF0udXBkYXRlKFUueEF4aXMpLGMoZikuY3NzKHt2aXNpYmlsaXR5OiJ2aXNpYmxlIn0pLEsoKX0sMCl9fSk7dmFyIHM9ZnVuY3Rpb24oZSl7dj0iI2JpZ190b29sdGlwIjt2YXIgbj1DLmRheXMxODAwLHI9dm9pZCAwLHM9dm9pZCAwLGw9dm9pZCAwO2lmKHQuc3RvcmVbMV0mJiLlh5HljZXliLDmiYvku7ciPT09dC5zdG9yZVsxXS5uYW1lJiYocj1DLmRheXMxODAxLGw9ci5sb3dlc3REYXRlLGw9dS5nZXRUaW1lTnVtYmVyKGwpKSxzPW4ubG93ZXN0RGF0ZSxvLmFsaVNpdGUmJnQubG93ZXN0VGltZSYmKHM9bmV3IERhdGUodC5sb3dlc3RUaW1lKS5nZXRUaW1lKCkpLHMtPTI4OGU1LHM9dS5nZXRUaW1lTnVtYmVyKHMpLG4ubm93cHJpY2U/KGMoIi50cmVuZC1tYXgtbWluLXByaWNlIC50LW5vdy1wcmkgLm5vdy1wLXNwMiIpLnRleHQobi5ub3dwcmljZSksYygiLnRyZW5kLW1heC1taW4tcHJpY2UgLnQtbm93LXByaSIpLnNob3coKSxjKCIudHJlbmQtbWF4LW1pbi1wcmljZSAudC1tYXgtcHJpIikuaGlkZSgpLGMoIi50cmVuZC1tYXgtbWluLXByaWNlIC50LW1pbi1wcmkiKS5oaWRlKCkpOihjKCIudHJlbmQtbWF4LW1pbi1wcmljZSAudC1tYXgtcHJpIC5tYXgtcC1zcDIiKS50ZXh0KG4uUGhpZ2hlc3QpLGMoIi50cmVuZC1tYXgtbWluLXByaWNlIC50LW1pbi1wcmkgLm1pbi1wLXNwMiIpLnRleHQobi5QbG93ZXN0KSksYygiLnRyZW5kLW1heC1taW4tcHJpY2UgLnQtbWluLWRhdGUiKS50ZXh0KHMpLHQuc3RvcmVbMV0mJiLlh5HljZXliLDmiYvku7ciPT09dC5zdG9yZVsxXS5uYW1lJiZyLlBsb3dlc3Q8bi5QbG93ZXN0JiYoYygiLnRyZW5kLWRzai1wcmljZSAubWluLXAtc3AyIikudGV4dChyLlBsb3dlc3QpLGMoIi50cmVuZC1kc2otcHJpY2UgLnQtbWluLWRhdGUiKS50ZXh0KGwpLGMoIi50cmVuZC1kc2otcHJvbW8gLmRzai1wcm8tdHh0IikuaHRtbChyLmxvd2VzdFByb21vKSxjKCIudHJlbmQtZHNqLXByaWNlIC5kc2otbWF4IC5tYXgtcC1zcDIiKS50ZXh0KG4uUGhpZ2hlc3QpLGMoIi50cmVuZC1kc2otcHJpY2UiKS5hZGRDbGFzcygiX3Nob3ciKSxjKCIudHJlbmQtZHNqLXByb21vIikuYWRkQ2xhc3MoIl9zaG93IiksYygiI21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWwiKS5hZGRDbGFzcygiX2Rzal9zaG93IiksYygiI2JpZ190b29sdGlwIikuYWRkQ2xhc3MoImJpZ2hlaWdodDIiKSkseSYmKGMoIiNtaW5pX3ByaWNlX2hpc3RvcnkgLmh0LW1tLW1heCIpLnRleHQoeVswXStuLlBoaWdoZXN0KSxjKCIjbWluaV9wcmljZV9oaXN0b3J5IC5odC1tbS1taW4iKS50ZXh0KHlbMF0rbi5QbG93ZXN0KSxjKCIjYmlnX3Rvb2x0aXAiKS5hZGRDbGFzcygiaHRfdGlwIikpLFUudGl0bGUueD0wLFUuY2hhcnQubWFyZ2luUmlnaHQ9MTYsVS5jaGFydC5tYXJnaW5Ub3A9NSxVLnlBeGlzLnRpdGxlLnRleHQ9bnVsbCxVLnhBeGlzLmxhYmVscy55PTIwLFUueUF4aXMudGl0bGUueT0tMjYseSl7VS5jaGFydC5tYXJnaW5Ub3A9NDt2YXIgcD1wYXJzZUludChuLlBoaWdoZXN0KS50b1N0cmluZygpLmxlbmd0aDtVLmNoYXJ0Lm1hcmdpblJpZ2h0PTIsVS5jaGFydC5tYXJnaW5MZWZ0PU1hdGguY2VpbCg2LjgqcCsxMSksVS5jaGFydC5tYXJnaW5Cb3R0b209MjQsVS55QXhpcy5sYWJlbHMueD0tTWF0aC5jZWlsKDYuOCpwKzExKSxVLnlBeGlzLnRpdGxlLng9LShNYXRoLmNlaWwoNi44KnArMTEpLTI0KSxVLnlBeGlzLnRpdGxlLnRleHQ9eVsxXSxVLnlBeGlzLnRpdGxlLnk9MTYyfWVsc2V7dmFyIHA9cGFyc2VJbnQobi5QaGlnaGVzdCkudG9TdHJpbmcoKS5sZW5ndGg7VS5jaGFydC5tYXJnaW5MZWZ0PTMwK3BhcnNlSW50KDYuOCpwKSxVLnlBeGlzLmxhYmVscy54PS0xNC1wYXJzZUludCg2LjgqcCl9YygiLmZsb2F0QnV0dG9ucyIpLmhpZGUoKSxjKCIjYmpkLXFyY29kZS10cmVuZCIpLmhpZGUoKSxjKCIjZGV0YWlsUHJvbW90aW9uIikuY3NzKHt6SW5kZXg6MH0pLGMoZikuY3NzKHtsZWZ0OjAsdG9wOjAsYm90dG9tOjAscmlnaHQ6MH0pLCJidG4iIT09YSYmKGMoZSkuYXBwZW5kKGMoZikpLFEoKSxhPSJidG4iLGMoZikuY3NzKHt2aXNpYmlsaXR5OiJoaWRkZW4ifSksd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXtFPTAsSigiZGF5czE4MCIsITAsdS5kZWVwQ29weShVKSwhMCk7dmFyIHQ9YygiI2JkZXh0X21pbmlfdHJlbmRib3giKS53aWR0aCgpLGU9MTg2O3R8fCh0PTQ2MCksImFtYXpvbiIhPW8uc2l0ZSYmIjZwbSIhPW8uc2l0ZXx8KHQ9NDAyLGU9MTcyKSx0JiZ0PjAmJmkuc2V0U2l6ZSh0LGUsITEpLGMoZikuY3NzKHt2aXNpYmlsaXR5OiJ2aXNpYmxlIn0pfSwyNSkpfTtjKCIjbWluaV9wcmljZV9oaXN0b3J5IikuaG92ZXIoZnVuY3Rpb24oKXt2YXIgdD0iI21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWxfY2hhcnQiOyJhbWF6b24iIT1vLnNpdGUmJiI2cG0iIT1vLnNpdGV8fCh0PSIjbWluaV9odF9kZXRhaWxfY2hhcnQiKSxzKHQpfSksYygiI21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWwiKS5tb3VzZWxlYXZlKGZ1bmN0aW9uKCl7YygiI2RldGFpbFByb21vdGlvbiIpLmNzcyh7ekluZGV4OjE1fSl9KSxjKCIjZ3dkLXRyZW5kIikuaG92ZXIoZnVuY3Rpb24oKXsiZ3dkIiE9PWEmJihVLmNoYXJ0Lm1hcmdpblJpZ2h0PTYwLFUuY2hhcnQubWFyZ2luQm90dG9tPTIzLFUuY2hhcnQubWFyZ2luVG9wPTQsVS54QXhpcy5sYWJlbHMueT0yMixjKGYpLmNzcyh7bGVmdDowLHRvcDowLGJvdHRvbTowLHJpZ2h0OjB9KSxjKCIjZ3dkLXRyZW5kLWNoYXJ0IikuYXBwZW5kKGMoZikpLGE9Imd3ZCIsYyhmKS5jc3Moe3Zpc2liaWxpdHk6ImhpZGRlbiJ9KSx3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbigpe0ooQSwhMSx1LmRlZXBDb3B5KFUpKSxpLnJlZmxvdygpLGMoZikuY3NzKHt2aXNpYmlsaXR5OiJ2aXNpYmxlIn0pLGMoIiNnd2QtdHJlbmQtY2hhcnQiKS5zaG93KCksSygpfSwwKSxjKCIuZmxvYXRCdXR0b25zIikuc2hvdygpLGMoIiNiamQtcXJjb2RlLXRyZW5kIikuc2hvdygpLGMoIiNiamQtcXJjb2RlLXRyZW5kIikubGVuZ3RoJiZxKCksYygiI2JqZC1xcmNvZGUtdHJlbmQiKS5jc3MoImJvdHRvbSIsIjlweCIpKX0pLGMoIiNwbG90QXJlYV8iK28uZnJvbV9kZXZpY2UpLmNzcyh7bWF4V2lkdGg6ZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aC0yODArInB4In0pLGMoIiNwbG90QXJlYV8iK28uZnJvbV9kZXZpY2UpLm1vdXNlbW92ZShmdW5jdGlvbih0KXtXLng9dC5wYWdlWCxXLnk9dC5wYWdlWX0pLGMoIiNwbG90QXJlYV8iK28uZnJvbV9kZXZpY2UpLmNsaWNrKGZ1bmN0aW9uKCl7cmV0dXJuITF9KSx0JiYhZnVuY3Rpb24oKXtpZihEPXQuc3RvcmUsbnQoMCx0KSx0LnN0b3JlWzFdJiYi5YeR5Y2V5Yiw5omL5Lu3Ij09PXQuc3RvcmVbMV0ubmFtZSYmdC5wcm9tbyl7Zm9yKHZhciBuPTA7bjx0LnByb21vLmxlbmd0aDtuKyspa1soMWUzKnQucHJvbW9bbl0udGltZSkudG9TdHJpbmcoKV09dC5wcm9tb1tuXS5tc2cselsoMWUzKnQucHJvbW9bbl0udGltZSkudG9TdHJpbmcoKV09e3ByaWNlOnQucHJvbW9bbl0ucHJpY2UsaW5mbzp0LnByb21vW25dLm1zZy5wcm9tb3Rpb259O250KDEsdCksYygiLmRpc2NvdW50LXByaWNlLXJlIikuc2hvdygpfWVsc2UgUz1udWxsLGMoIiNiYXJfdHJlbmRfbGVnZW5kX2J0biIpLmFkZENsYXNzKCJuby1yZXZpZXciKSxjKCIjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9idG4iKS5hZGRDbGFzcygibm8tcmV2aWV3Iik7TT10O3ZhciBpPU1hdGgubWluKHQuc3RvcmVbMF0mJnQuc3RvcmVbMF0uYWxsX2xpbmVfYmVnaW5fdGltZSxZKEQpKSxvPXQubm93X2RheTtGPXQubm93X2RheTt2YXIgYT1be3Bsb3Q6InBsb3RBbGwiLHN0YXJ0OiJhbGxfbGluZV9iZWdpbl90aW1lIixtaW5EYXk6LjEsZGF0YToiYWxsX2xpbmUifSx7cGxvdDoicGxvdE1vbnRoIixzdGFydDoibW9udGhfbGluZV90aW1lIixtaW5EYXk6MzAsZGF0YToibW9udGhfbGluZSJ9LHtwbG90OiJwbG90WWVhciIsc3RhcnQ6ImhhbGZfeWVhcl9saW5lX3RpbWUiLG1pbkRheTouMSxkYXRhOiJoYWxmX3llYXJfbGluZSJ9LHtwbG90OiJkYXlzMTgwIixzdGFydDoiYWxsX2xpbmVfYmVnaW5fdGltZSIsbWluRGF5Oi4xLGRhdGE6ImFsbF9saW5lIn1dO1ooIiNwbG90QWxsIiksRFswXS5uYW1lPSLpobXpnaLku7ciO3ZhciByPTE4OyJ6aGlkZW1haSI9PT1lJiYocj0xKSwicHJpY2VIaXN0b3J5Ij09PWUmJihyPTIwKTtmb3IodmFyIHM9cGFyc2VJbnQoKG8taSkvZyksbj0wO248TWF0aC5taW4oRC5sZW5ndGgscik7bisrKWlmKDAhPT1EW25dLmFsbF9saW5lLmxlbmd0aCl7aWYoRFtuXS5hbGxfZXF1YWxfc2hvcnQmJjEhPT1ELmxlbmd0aCl7RFtuXS5hbGxfbGluZT1bXTtmb3IodmFyIHA9MDtwPERbbl0uc2hvcnRfZGF5X2xpbmUubGVuZ3RoO3ArPTI0KURbbl0uYWxsX2xpbmUucHVzaChEW25dLnNob3J0X2RheV9saW5lW3BdKTtEW25dLmFsbF9saW5lX2JlZ2luX3RpbWU9dC5ub3dfZGF5LTUqZyxEW25dLmFsbF9lcXVhbF9zaG9ydD0hMX1mb3IodmFyIGQ9MDtkPGEubGVuZ3RoO2QrKyl7dmFyIHA9YVtkXTtpZihsKG8pLWwoaSk+PXAubWluRGF5Kmcpe2lmKCFEW25dW3AuZGF0YV0pY29udGludWU7InNob3J0X2RheV9saW5lX2JlZ2luX3RpbWUiIT09cC5zdGFydCYmKERbbl1bcC5zdGFydF09bChEW25dW3Auc3RhcnRdKSksRFtuXS5hbGxfZXF1YWxfc2hvcnQmJiJhbGxfbGluZV9iZWdpbl90aW1lIj09PXAuc3RhcnQmJihEW25dW3Auc3RhcnRdPURbbl0uc2hvcnRfZGF5X2xpbmVfYmVnaW5fdGltZSksWigiIyIrcC5wbG90KTt2YXIgaD17Y29sb3I6QihEW25dLm5hbWUpLG5hbWU6RFtuXS5uYW1lLHBvaW50U3RhcnQ6RFtuXVtwLnN0YXJ0XSxwb2ludEludGVydmFsOmcsbGVnZW5kSW5kZXg6MSxjb25uZWN0TnVsbHM6ITEsbGluZVdpZHRoOjEsekluZGV4OjUwMC01MDAqbi0xLG1hcmtlcjp7c3ltYm9sOlQuZXh0ZW5kZWQsc3RhdGVzOntob3Zlcjp7ZW5hYmxlZDohMX19fSxzdGF0ZXM6e2hvdmVyOntlbmFibGVkOiExLGhhbG86e3NpemU6MH19fSxkYXRhOkRbbl1bcC5kYXRhXX07aWYoIuWHkeWNleWIsOaJi+S7tyI9PT1EW25dLm5hbWUmJihoLmNvbG9yPSIjRkZDMDZEIiksUCYmKGguZGFzaFN0eWxlPSJEYXNoIiksInBsb3Q1RGF5Ij09PXAucGxvdCYmKGgucG9pbnRJbnRlcnZhbD0zNmU1LGgucG9pbnRJbnRlcnZhbCpoLmRhdGEubGVuZ3RoK2gucG9pbnRTdGFydD5GJiYoRj1oLnBvaW50SW50ZXJ2YWwqaC5kYXRhLmxlbmd0aCtoLnBvaW50U3RhcnQpKSwicGxvdEFsbCI9PT1wLnBsb3QmJmguZGF0YS5sZW5ndGg8MzAmJihoLnBvaW50SW50ZXJ2YWw9ZyxYKGcpKSwoInBsb3RBbGwiPT09cC5wbG90fHwiZGF5czE4MCI9PT1wLnBsb3QpJiZEW25dLmFsbF9lcXVhbF9zaG9ydClpZigwPT09biloLnBvaW50SW50ZXJ2YWw9MzZlNTtlbHNle3ZhciB1PW5ldyBEYXRlKGgucG9pbnRTdGFydCksbT1uZXcgRGF0ZSh1LmdldFllYXIoKSsxOTAwLHUuZ2V0TW9udGgoKSx1LmdldERhdGUoKSw4KTtoLnBvaW50U3RhcnQ9bS5nZXRUaW1lKCksaC5wb2ludEludGVydmFsPWc7Zm9yKHZhciBmPVtdLHc9MDt3PGguZGF0YS5sZW5ndGg7dys9MjQpZi5wdXNoKGguZGF0YVt3XSk7aC5kYXRhPWZ9Zm9yKGguYWRkUG9pbnRUaW1lcz0xO2guZGF0YSYmaC5kYXRhLmxlbmd0aDwxMDAmJiJwbG90QWxsIiE9PXAucGxvdDspe2Zvcih2YXIgeD1bXSxiPTA7YjxoLmRhdGEubGVuZ3RoJiYoeC5wdXNoKGguZGF0YVtiXSksYisxIT09aC5kYXRhLmxlbmd0aCk7YisrKXgucHVzaChoLmRhdGFbYl0pO2guZGF0YT14LGgucG9pbnRJbnRlcnZhbD1oLnBvaW50SW50ZXJ2YWwvMixoLmFkZFBvaW50VGltZXM9MipoLmFkZFBvaW50VGltZXN9aC5kYXRhPWguZGF0YT9oLmRhdGEubWFwKHR0KTpudWxsLG51bGwhPWguZGF0YSYmR1twLnBsb3RdLnB1c2goaCl9fX1pZigxPT09Ry5wbG90QWxsLmxlbmd0aCl7dmFyIF89Ry5wbG90QWxsWzBdO2ZvcihfLmRhdGE9Xy5kYXRhLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC55fSk7Xy5kYXRhLmxlbmd0aDwxMDA7KXtmb3IodmFyIHg9W10sZD0wO2Q8Xy5kYXRhLmxlbmd0aCYmKHgucHVzaChfLmRhdGFbZF0pLGQrMSE9PV8uZGF0YS5sZW5ndGgpO2QrKyl4LnB1c2goXy5kYXRhW2RdKTtfLmRhdGE9eCxfLnBvaW50SW50ZXJ2YWw9Xy5wb2ludEludGVydmFsLzJ9Xy5kYXRhPV8uZGF0YS5tYXAoZnVuY3Rpb24odCl7cmV0dXJue3k6dCxtYXJrZXI6e2VuYWJsZWQ6ITF9fX0pfXN0KEcpLERbMF0uYWxsX2VxdWFsX3Nob3J0PyhzKyssYygiI3Bsb3RBbGwiKS5odG1sKCLlhajpg6goIitzKyLlpKkpIikpOmMoIiNwbG90QWxsIikuaHRtbCgi5YWo6YOoIitEWzBdLmFsbF9saW5lLmxlbmd0aCsi5aSpIiksRSYmInpoaWRlbWFpIiE9PWUmJkkuYWRkKCLlvZPliY3llYbln47ljp/lp4vku7fmoLwiKSxJLmFkZChEWzBdLm5hbWUpO3ZhciB2PWZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHQubmFtZX0pO3JldHVybiB0Lm1hcChmdW5jdGlvbih0KXtpZihuLmluZGV4T2YodC5uYW1lKT09PS0xKXJldHVybiB0O3ZhciBpPWUuZmlsdGVyKGZ1bmN0aW9uKGUpe3JldHVybiBlLm5hbWU9PT10Lm5hbWV9KVswXSxvPU8odCk7cmV0dXJuIG8uZGF0YT1pLmRhdGEsby5wb2ludFN0YXJ0PWkucG9pbnRTdGFydCxvLnBvaW50SW50ZXJ2YWw9aS5wb2ludEludGVydmFsLG99KX0seT1mdW5jdGlvbih0KXt2YXIgZT10Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5wb2ludEludGVydmFsfSksbj1NYXRoLm1pbi5hcHBseShudWxsLGUpO3QuZm9yRWFjaChmdW5jdGlvbih0KXtmb3IoO3QucG9pbnRJbnRlcnZhbD5uOyl7Zm9yKHZhciBlPVtdLGk9MDtpPHQuZGF0YS5sZW5ndGgmJihlLnB1c2godC5kYXRhW2ldKSxpKzEhPT10LmRhdGEubGVuZ3RoKTtpKyspe3ZhciBvPXttYXJrZXI6dC5kYXRhW2ldLm1hcmtlcix5Oih0LmRhdGFbaSsxXS55K3QuZGF0YVtpXS55KS8yfTtlLnB1c2gobyl9dC5wb2ludEludGVydmFsPXQucG9pbnRJbnRlcnZhbC8yLHQuZGF0YT1lfX0pfTtbInBsb3RNb250aCIsInBsb3RZZWFyIl0uZm9yRWFjaChmdW5jdGlvbih0KXtpZighYygiIyIrdCkuaGFzQ2xhc3MoImJqZC1oaWRkZW4iKSl7dmFyIGU9Ry5wbG90QWxsLG49R1t0XSxpPXYoZSxuKTtHW3RdPWkseShHW3RdKX19KSx5KEcucGxvdEFsbCk7dmFyIEM9Ry5kYXlzMTgwWzBdJiZHLmRheXMxODBbMF0uZGF0YS5sZW5ndGg7aWYoQyYmQz4xODApZm9yKHZhciBkPTA7ZDxHLmRheXMxODAubGVuZ3RoO2QrKylHLmRheXMxODBbZF0uZGF0YS5zcGxpY2UoMCxDLTE4MCksRy5kYXlzMTgwW2RdLnBvaW50U3RhcnQ9Ry5kYXlzMTgwW2RdLnBvaW50U3RhcnQrRy5kYXlzMTgwW2RdLnBvaW50SW50ZXJ2YWwqKEMtMTgwKTtmb3IodmFyIEEgaW4gRylpZihHW0FdLmxlbmd0aClmb3IodmFyIE49MDtOPEdbQV0ubGVuZ3RoO04rKylhdChHW0FdW05dLHQubm9wdXp6bGVfcHJvbW8sQSksaj10Lm5vcHV6emxlX3Byb21vfSgpLChvLklFN3x8by5JRTh8fG8uSUU5fHxvLklFMTB8fG8uSUUxMSkmJihjKCIjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9jaGFydCIpLmNzcyh7d2lkdGg6IjQ2MHB4In0pLGMoIiNtaW5pX3ByaWNlX2hpc3RvcnlfZGV0YWlsIikuY3NzKHt3aWR0aDoiNTY5cHgifSkpLCFvLklFOSYmIW8uSUUxMHx8InZpcCIhPT1vLnNpdGUmJiJ2aXBzaG9wIiE9PW8uc2l0ZXx8YygiI21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWxfY2hhcnQiKS5jc3Moe3dpZHRoOiIzOTBweCJ9KX19fX0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpfSkuY2FsbChlLG4oMSksbigxNTEpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpOyFmdW5jdGlvbigpe2Z1bmN0aW9uIG8odCxlKXt2YXIgbjt0fHwodD17fSk7Zm9yKG4gaW4gZSl0W25dPWVbbl07cmV0dXJuIHR9ZnVuY3Rpb24gYSgpe3ZhciB0LGUsbj1hcmd1bWVudHMsaT17fSxvPWZ1bmN0aW9uKHQsZSl7dmFyIG4saTsib2JqZWN0IiE9dHlwZW9mIHQmJih0PXt9KTtmb3IoaSBpbiBlKWUuaGFzT3duUHJvcGVydHkoaSkmJihuPWVbaV0sbiYmIm9iamVjdCI9PXR5cGVvZiBuJiYiW29iamVjdCBBcnJheV0iIT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG4pJiYicmVuZGVyVG8iIT09aSYmIm51bWJlciIhPXR5cGVvZiBuLm5vZGVUeXBlP3RbaV09byh0W2ldfHx7fSxuKTp0W2ldPWVbaV0pO3JldHVybiB0fTtmb3IoblswXT09PSEwJiYoaT1uWzFdLG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobiwyKSksZT1uLmxlbmd0aCx0PTA7dDxlO3QrKylpPW8oaSxuW3RdKTtyZXR1cm4gaX1mdW5jdGlvbiByKHQsZSl7cmV0dXJuIHBhcnNlSW50KHQsZXx8MTApfWZ1bmN0aW9uIHModCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0fWZ1bmN0aW9uIGwodCl7cmV0dXJuIHQmJiJvYmplY3QiPT10eXBlb2YgdH1mdW5jdGlvbiBjKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9ZnVuY3Rpb24gcCh0KXtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIHR9ZnVuY3Rpb24gZCh0KXtyZXR1cm4gd3QubG9nKHQpL3d0LkxOMTB9ZnVuY3Rpb24gaCh0KXtyZXR1cm4gd3QucG93KDEwLHQpfWZ1bmN0aW9uIHUodCxlKXtmb3IodmFyIG49dC5sZW5ndGg7bi0tOylpZih0W25dPT09ZSl7dC5zcGxpY2UobiwxKTticmVha319ZnVuY3Rpb24gbSh0KXtyZXR1cm4gdCE9PUgmJm51bGwhPT10fWZ1bmN0aW9uIGYodCxlLG4pe3ZhciBpLG87aWYocyhlKSltKG4pP3Quc2V0QXR0cmlidXRlKGUsbik6dCYmdC5nZXRBdHRyaWJ1dGUmJihvPXQuZ2V0QXR0cmlidXRlKGUpKTtlbHNlIGlmKG0oZSkmJmwoZSkpZm9yKGkgaW4gZSl0LnNldEF0dHJpYnV0ZShpLGVbaV0pO3JldHVybiBvfWZ1bmN0aW9uIGcodCl7cmV0dXJuIGModCk/dDpbdF19ZnVuY3Rpb24gdygpe3ZhciB0LGUsbj1hcmd1bWVudHMsaT1uLmxlbmd0aDtmb3IodD0wO3Q8aTt0KyspaWYoZT1uW3RdLGUhPT1IJiZudWxsIT09ZSlyZXR1cm4gZX1mdW5jdGlvbiB4KHQsZSl7QXQmJiFFdCYmZSYmZS5vcGFjaXR5IT09SCYmKGUuZmlsdGVyPSJhbHBoYShvcGFjaXR5PSIrMTAwKmUub3BhY2l0eSsiKSIpLG8odC5zdHlsZSxlKX1mdW5jdGlvbiBiKHQsZSxuLGksYSl7dmFyIHI9ZnQuY3JlYXRlRWxlbWVudCh0KTtyZXR1cm4gZSYmbyhyLGUpLGEmJngocix7cGFkZGluZzowLGJvcmRlcjpRdCxtYXJnaW46MH0pLG4mJngocixuKSxpJiZpLmFwcGVuZENoaWxkKHIpLHJ9ZnVuY3Rpb24gXyh0LGUpe3ZhciBuPWZ1bmN0aW9uKCl7cmV0dXJuIEh9O3JldHVybiBuLnByb3RvdHlwZT1uZXcgdCxvKG4ucHJvdG90eXBlLGUpLG59ZnVuY3Rpb24gdih0LGUsbixpKXt2YXIgbz1sZS5udW1iZXJGb3JtYXQsYT1HLmxhbmcscz0rdHx8MCxsPWU9PT0tMT8ocy50b1N0cmluZygpLnNwbGl0KCIuIilbMV18fCIiKS5sZW5ndGg6aXNOYU4oZT1rdChlKSk/MjplLGM9dm9pZCAwPT09bj9hLmRlY2ltYWxQb2ludDpuLHA9dm9pZCAwPT09aT9hLnRob3VzYW5kc1NlcDppLGQ9czwwPyItIjoiIixoPVN0cmluZyhyKHM9a3QocykudG9GaXhlZChsKSkpLHU9aC5sZW5ndGg+Mz9oLmxlbmd0aCUzOjA7cmV0dXJuIG8hPT12P28odCxlLG4saSk6ZCsodT9oLnN1YnN0cigwLHUpK3A6IiIpK2guc3Vic3RyKHUpLnJlcGxhY2UoLyhcZHszfSkoPz1cZCkvZywiJDEiK3ApKyhsP2Mra3Qocy1oKS50b0ZpeGVkKGwpLnNsaWNlKDIpOiIiKX1mdW5jdGlvbiB5KHQsZSl7cmV0dXJuIG5ldyBBcnJheSgoZXx8MikrMS1TdHJpbmcodCkubGVuZ3RoKS5qb2luKDApK3R9ZnVuY3Rpb24gayh0LGUsbil7dmFyIGk9dFtlXTt0W2VdPWZ1bmN0aW9uKCl7dmFyIHQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtyZXR1cm4gdC51bnNoaWZ0KGkpLG4uYXBwbHkodGhpcyx0KX19ZnVuY3Rpb24geih0LGUpe3ZhciBuLGk9L2YkLyxvPS9cLihbMC05XSkvLGE9Ry5sYW5nO3JldHVybiBpLnRlc3QodCk/KG49dC5tYXRjaChvKSxuPW4/blsxXTotMSxudWxsIT09ZSYmKGU9dihlLG4sYS5kZWNpbWFsUG9pbnQsdC5pbmRleE9mKCIsIik+LTE/YS50aG91c2FuZHNTZXA6IiIpKSk6ZT1YKHQsZSksZX1mdW5jdGlvbiBqKHQsZSl7Zm9yKHZhciBuLGksbyxhLHIscyxsLGM9InsiLHA9ITEsZD1bXTsobD10LmluZGV4T2YoYykpIT09LTE7KXtpZihuPXQuc2xpY2UoMCxsKSxwKXtmb3IoaT1uLnNwbGl0KCI6Iiksbz1pLnNoaWZ0KCkuc3BsaXQoIi4iKSxyPW8ubGVuZ3RoLHM9ZSxhPTA7YTxyO2ErKylzPXNbb1thXV07aS5sZW5ndGgmJihzPXooaS5qb2luKCI6IikscykpLGQucHVzaChzKX1lbHNlIGQucHVzaChuKTt0PXQuc2xpY2UobCsxKSxwPSFwLGM9cD8ifSI6InsifXJldHVybiBkLnB1c2godCksZC5qb2luKCIiKX1mdW5jdGlvbiBDKHQpe3JldHVybiB3dC5wb3coMTAsYnQod3QubG9nKHQpL3d0LkxOMTApKX1mdW5jdGlvbiBTKHQsZSxuLGkpe3ZhciBvLGE7Zm9yKG49dyhuLDEpLG89dC9uLGV8fChlPVsxLDIsMi41LDUsMTBdLGk9PT0hMSYmKDE9PT1uP2U9WzEsMiw1LDEwXTpuPD0uMSYmKGU9WzEvbl0pKSksYT0wO2E8ZS5sZW5ndGgmJih0PWVbYV0sIShvPD0oZVthXSsoZVthKzFdfHxlW2FdKSkvMikpO2ErKyk7cmV0dXJuIHQqPW59ZnVuY3Rpb24gUCh0LGUpe3ZhciBuLGksbz10Lmxlbmd0aDtmb3IoaT0wO2k8bztpKyspdFtpXS5zc19pPWk7Zm9yKHQuc29ydChmdW5jdGlvbih0LGkpe3JldHVybiBuPWUodCxpKSwwPT09bj90LnNzX2ktaS5zc19pOm59KSxpPTA7aTxvO2krKylkZWxldGUgdFtpXS5zc19pfWZ1bmN0aW9uIFQodCl7Zm9yKHZhciBlPXQubGVuZ3RoLG49dFswXTtlLS07KXRbZV08biYmKG49dFtlXSk7cmV0dXJuIG59ZnVuY3Rpb24gQSh0KXtmb3IodmFyIGU9dC5sZW5ndGgsbj10WzBdO2UtLTspdFtlXT5uJiYobj10W2VdKTtyZXR1cm4gbn1mdW5jdGlvbiBOKHQsZSl7dmFyIG47Zm9yKG4gaW4gdCl0W25dJiZ0W25dIT09ZSYmdFtuXS5kZXN0cm95JiZ0W25dLmRlc3Ryb3koKSxkZWxldGUgdFtuXX1mdW5jdGlvbiBJKHQpe1l8fChZPWIoWXQpKSx0JiZZLmFwcGVuZENoaWxkKHQpLFkuaW5uZXJIVE1MPSIifWZ1bmN0aW9uIEIodCl7cmV0dXJuIHBhcnNlRmxvYXQodC50b1ByZWNpc2lvbigxNCkpfWZ1bmN0aW9uIHEodCxlKXtKPXcodCxlLmFuaW1hdGlvbil9ZnVuY3Rpb24gTygpe3ZhciB0PUcuZ2xvYmFsLnVzZVVUQyxlPXQ/ImdldFVUQyI6ImdldCIsbj10PyJzZXRVVEMiOiJzZXQiO3R0PUcuZ2xvYmFsLkRhdGV8fHdpbmRvdy5EYXRlLG50PTZlNCoodCYmRy5nbG9iYWwudGltZXpvbmVPZmZzZXR8fDApLGV0PXQ/dHQuVVRDOmZ1bmN0aW9uKHQsZSxuLGksbyxhKXtyZXR1cm4gbmV3IHR0KHQsZSx3KG4sMSksdyhpLDApLHcobywwKSx3KGEsMCkpLmdldFRpbWUoKX0saXQ9ZSsiTWludXRlcyIsb3Q9ZSsiSG91cnMiLGF0PWUrIkRheSIscnQ9ZSsiRGF0ZSIsc3Q9ZSsiTW9udGgiLGx0PWUrIkZ1bGxZZWFyIixjdD1uKyJNaW51dGVzIixwdD1uKyJIb3VycyIsZHQ9bisiRGF0ZSIsaHQ9bisiTW9udGgiLHV0PW4rIkZ1bGxZZWFyIn1mdW5jdGlvbiBFKHQpe3JldHVybiBHPWEoITAsRyx0KSxPKCksR31mdW5jdGlvbiBMKCl7cmV0dXJuIEd9ZnVuY3Rpb24gRCgpe31mdW5jdGlvbiBGKHQsZSxuLGkpe3RoaXMuYXhpcz10LHRoaXMucG9zPWUsdGhpcy50eXBlPW58fCIiLHRoaXMuaXNOZXc9ITAsbnx8aXx8dGhpcy5hZGRMYWJlbCgpfWZ1bmN0aW9uIE0oKXt0aGlzLmluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uIFIoKXt0aGlzLmluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZ1bmN0aW9uICQodCxlLG4saSxvKXt2YXIgYT10LmNoYXJ0LmludmVydGVkO3RoaXMuYXhpcz10LHRoaXMuaXNOZWdhdGl2ZT1uLHRoaXMub3B0aW9ucz1lLHRoaXMueD1pLHRoaXMudG90YWw9bnVsbCx0aGlzLnBvaW50cz17fSx0aGlzLnN0YWNrPW8sdGhpcy5hbGlnbk9wdGlvbnM9e2FsaWduOmUuYWxpZ258fChhP24/ImxlZnQiOiJyaWdodCI6ImNlbnRlciIpLHZlcnRpY2FsQWxpZ246ZS52ZXJ0aWNhbEFsaWdufHwoYT8ibWlkZGxlIjpuPyJib3R0b20iOiJ0b3AiKSx5OncoZS55LGE/NDpuPzE0Oi02KSx4OncoZS54LGE/bj8tNjo2OjApfSx0aGlzLnRleHRBbGlnbj1lLnRleHRBbGlnbnx8KGE/bj8icmlnaHQiOiJsZWZ0IjoiY2VudGVyIil9dmFyIEgsVyxVLFksRyxYLEosWixWLEssUSx0dCxldCxudCxpdCxvdCxhdCxydCxzdCxsdCxjdCxwdCxkdCxodCx1dCxtdD1uKDQpLGZ0PWRvY3VtZW50LGd0PXdpbmRvdyx3dD1NYXRoLHh0PXd0LnJvdW5kLGJ0PXd0LmZsb29yLF90PXd0LmNlaWwsdnQ9d3QubWF4LHl0PXd0Lm1pbixrdD13dC5hYnMsenQ9d3QuY29zLGp0PXd0LnNpbixDdD13dC5QSSxTdD0yKkN0LzM2MCxQdD1uYXZpZ2F0b3IudXNlckFnZW50LFR0PWd0Lm9wZXJhLEF0PS9tc2llL2kudGVzdChQdCkmJiFUdCxOdD04PT09ZnQuZG9jdW1lbnRNb2RlLEl0PS9BcHBsZVdlYktpdC8udGVzdChQdCksQnQ9L0ZpcmVmb3gvLnRlc3QoUHQpLHF0PS8oTW9iaWxlfEFuZHJvaWR8V2luZG93cyBQaG9uZSkvLnRlc3QoUHQpLE90PSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsRXQ9ISFmdC5jcmVhdGVFbGVtZW50TlMmJiEhZnQuY3JlYXRlRWxlbWVudE5TKE90LCJzdmciKS5jcmVhdGVTVkdSZWN0LEx0PUJ0JiZwYXJzZUludChQdC5zcGxpdCgiRmlyZWZveC8iKVsxXSwxMCk8NCxEdD0hRXQmJiFBdCYmISFmdC5jcmVhdGVFbGVtZW50KCJjYW52YXMiKS5nZXRDb250ZXh0LEZ0PXt9LE10PTAsUnQ9ZnVuY3Rpb24oKXtyZXR1cm4gSH0sJHQ9W10sSHQ9MCxXdD0iSGlnaGNoYXJ0cyIsVXQ9IjQuMC40IixZdD0iZGl2IixHdD0iYWJzb2x1dGUiLFh0PSJyZWxhdGl2ZSIsSnQ9ImhpZGRlbiIsWnQ9ImhpZ2hjaGFydHMtIixWdD0idmlzaWJsZSIsS3Q9InB4IixRdD0ibm9uZSIsdGU9Ik0iLGVlPSJMIixuZT0vXlswLTldKyQvLGllPSIiLG9lPSJob3ZlciIsYWU9InNlbGVjdCIscmU9InN0cm9rZS13aWR0aCIsc2U9e30sbGU9e307aT1mdW5jdGlvbigpe3JldHVybiBsZX0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpLFg9ZnVuY3Rpb24odCxlLG4pe2lmKCFtKGUpfHxpc05hTihlKSlyZXR1cm4iSW52YWxpZCBkYXRlIjt0PXcodCwiJVktJW0tJWQgJUg6JU06JVMiKTt2YXIgaSxhPW5ldyB0dChlLW50KSxyPWFbb3RdKCkscz1hW2F0XSgpLGw9YVtydF0oKSxjPWFbc3RdKCkscD1hW2x0XSgpLGQ9Ry5sYW5nLGg9ZC53ZWVrZGF5cyx1PW8oe2E6aFtzXS5zdWJzdHIoMCwzKSxBOmhbc10sZDp5KGwpLGU6bCxiOmQuc2hvcnRNb250aHNbY10sQjpkLm1vbnRoc1tjXSxtOnkoYysxKSx5OnAudG9TdHJpbmcoKS5zdWJzdHIoMiwyKSxZOnAsSDp5KHIpLEk6eShyJTEyfHwxMiksbDpyJTEyfHwxMixNOnkoYVtpdF0oKSkscDpyPDEyPyJBTSI6IlBNIixQOnI8MTI/ImFtIjoicG0iLFM6eShhLmdldFNlY29uZHMoKSksTDp5KHh0KGUlMWUzKSwzKX0sbGUuZGF0ZUZvcm1hdHMpO2ZvcihpIGluIHUpZm9yKDt0LmluZGV4T2YoIiUiK2kpIT09LTE7KXQ9dC5yZXBsYWNlKCIlIitpLCJmdW5jdGlvbiI9PXR5cGVvZiB1W2ldP3VbaV0oZSk6dVtpXSk7cmV0dXJuIG4/dC5zdWJzdHIoMCwxKS50b1VwcGVyQ2FzZSgpK3Quc3Vic3RyKDEpOnR9LEs9ZnVuY3Rpb24odCxlKXt2YXIgbj0iSGlnaGNoYXJ0cyBlcnJvciAjIit0KyI6IHd3dy5oaWdoY2hhcnRzLmNvbS9lcnJvcnMvIit0O2lmKGUpdGhyb3cgbjtndC5jb25zb2xlJiZjb25zb2xlLmxvZyhuKX0sVj17bWlsbGlzZWNvbmQ6MSxzZWNvbmQ6MWUzLG1pbnV0ZTo2ZTQsaG91cjozNmU1LGRheTo4NjRlNSx3ZWVrOjYwNDhlNSxtb250aDoyNjc4NGU1LHllYXI6MzE1NTY5NTJlM30sWj17aW5pdDpmdW5jdGlvbih0LGUsbil7ZT1lfHwiIjt2YXIgaSxvLGEscixzLGw9dC5zaGlmdCxjPWUuaW5kZXhPZigiQyIpPi0xLHA9Yz83OjMsZD1lLnNwbGl0KCIgIiksaD1bXS5jb25jYXQobiksdT1mdW5jdGlvbih0KXtmb3IoYT10Lmxlbmd0aDthLS07KXRbYV09PT10ZSYmdC5zcGxpY2UoYSsxLDAsdFthKzFdLHRbYSsyXSx0W2ErMV0sdFthKzJdKX07aWYoYyYmKHUoZCksdShoKSksdC5pc0FyZWEmJihyPWQuc3BsaWNlKGQubGVuZ3RoLTYsNikscz1oLnNwbGljZShoLmxlbmd0aC02LDYpKSxsPD1oLmxlbmd0aC9wJiZkLmxlbmd0aD09PWgubGVuZ3RoKWZvcig7bC0tOyloPVtdLmNvbmNhdChoKS5zcGxpY2UoMCxwKS5jb25jYXQoaCk7aWYodC5zaGlmdD0wLGQubGVuZ3RoKWZvcihpPWgubGVuZ3RoO2QubGVuZ3RoPGk7KW89W10uY29uY2F0KGQpLnNwbGljZShkLmxlbmd0aC1wLHApLGMmJihvW3AtNl09b1twLTJdLG9bcC01XT1vW3AtMV0pLGQ9ZC5jb25jYXQobyk7cmV0dXJuIHImJihkPWQuY29uY2F0KHIpLGg9aC5jb25jYXQocykpLFtkLGhdfSxzdGVwOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBvLGE9W10scj10Lmxlbmd0aDtpZigxPT09bilhPWk7ZWxzZSBpZihyPT09ZS5sZW5ndGgmJm48MSlmb3IoO3ItLTspbz1wYXJzZUZsb2F0KHRbcl0pLGFbcl09aXNOYU4obyk/dFtyXTpuKnBhcnNlRmxvYXQoZVtyXS1vKStvO2Vsc2UgYT1lO3JldHVybiBhfX0sZnVuY3Rpb24odCl7Z3QuSGlnaGNoYXJ0c0FkYXB0ZXI9Z3QuSGlnaGNoYXJ0c0FkYXB0ZXJ8fHQmJntpbml0OmZ1bmN0aW9uKGUpe3ZhciBuPXQuZng7dC5leHRlbmQodC5lYXNpbmcse2Vhc2VPdXRRdWFkOmZ1bmN0aW9uKHQsZSxuLGksbyl7cmV0dXJuLWkqKGUvPW8pKihlLTIpK259fSksdC5lYWNoKFsiY3VyIiwiX2RlZmF1bHQiLCJ3aWR0aCIsImhlaWdodCIsIm9wYWNpdHkiXSxmdW5jdGlvbihlLGkpe3ZhciBvLGE9bi5zdGVwOyJjdXIiPT09aT9hPW4ucHJvdG90eXBlOiJfZGVmYXVsdCI9PT1pJiZ0LlR3ZWVuJiYoYT10LlR3ZWVuLnByb3BIb29rc1tpXSxpPSJzZXQiKSxvPWFbaV0sbyYmKGFbaV09ZnVuY3Rpb24odCl7dmFyIG47aWYodD1lP3Q6dGhpcywiYWxpZ24iIT09dC5wcm9wKXJldHVybiBuPXQuZWxlbSxuLmF0dHI/bi5hdHRyKHQucHJvcCwiY3VyIj09PWk/SDp0Lm5vdyk6by5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0pLGsodC5jc3NIb29rcy5vcGFjaXR5LCJnZXQiLGZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZS5hdHRyP2Uub3BhY2l0eXx8MDp0LmNhbGwodGhpcyxlLG4pfSksdGhpcy5hZGRBbmltU2V0dGVyKCJkIixmdW5jdGlvbih0KXt2YXIgbixpPXQuZWxlbTt0LnN0YXJ0ZWR8fChuPWUuaW5pdChpLGkuZCxpLnRvRCksdC5zdGFydD1uWzBdLHQuZW5kPW5bMV0sdC5zdGFydGVkPSEwKSxpLmF0dHIoImQiLGUuc3RlcCh0LnN0YXJ0LHQuZW5kLHQucG9zLGkudG9EKSl9KSx0aGlzLmVhY2g9QXJyYXkucHJvdG90eXBlLmZvckVhY2g/ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbCh0LGUpfTpmdW5jdGlvbih0LGUpe3ZhciBuLGk9dC5sZW5ndGg7Zm9yKG49MDtuPGk7bisrKWlmKGUuY2FsbCh0W25dLHRbbl0sbix0KT09PSExKXJldHVybiBufSx0LmZuLmhpZ2hjaGFydHM9ZnVuY3Rpb24oKXt2YXIgdCxlLG4saT0iQ2hhcnQiLG89YXJndW1lbnRzO3JldHVybiB0aGlzWzBdJiYocyhvWzBdKSYmKGk9b1swXSxvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG8sMSkpLHQ9b1swXSx0IT09SCYmKHQuY2hhcnQ9dC5jaGFydHx8e30sdC5jaGFydC5yZW5kZXJUbz10aGlzWzBdLG49bmV3IGxlW2ldKHQsb1sxXSksZT10aGlzKSx0PT09SCYmKGU9JHRbZih0aGlzWzBdLCJkYXRhLWhpZ2hjaGFydHMtY2hhcnQiKV0pKSxlfX0sYWRkQW5pbVNldHRlcjpmdW5jdGlvbihlLG4pe3QuVHdlZW4/dC5Ud2Vlbi5wcm9wSG9va3NbZV09e3NldDpufTp0LmZ4LnN0ZXBbZV09bn0sZ2V0U2NyaXB0OnQuZ2V0U2NyaXB0LGluQXJyYXk6dC5pbkFycmF5LGFkYXB0ZXJSdW46ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdChlKVtuXSgpfSxncmVwOnQuZ3JlcCxtYXA6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49W10saT0wLG89dC5sZW5ndGg7aTxvO2krKyluW2ldPWUuY2FsbCh0W2ldLHRbaV0saSx0KTtyZXR1cm4gbn0sb2Zmc2V0OmZ1bmN0aW9uKGUpe3JldHVybiB0KGUpLm9mZnNldCgpfSxhZGRFdmVudDpmdW5jdGlvbihlLG4saSl7dChlKS5iaW5kKG4saSl9LHJlbW92ZUV2ZW50OmZ1bmN0aW9uKGUsbixpKXt2YXIgbz1mdC5yZW1vdmVFdmVudExpc3RlbmVyPyJyZW1vdmVFdmVudExpc3RlbmVyIjoiZGV0YWNoRXZlbnQiO2Z0W29dJiZlJiYhZVtvXSYmKGVbb109ZnVuY3Rpb24oKXt9KSx0KGUpLnVuYmluZChuLGkpfSxmaXJlRXZlbnQ6ZnVuY3Rpb24oZSxuLGksYSl7dmFyIHIscz10LkV2ZW50KG4pLGw9ImRldGFjaGVkIituOyFBdCYmaSYmKGRlbGV0ZSBpLmxheWVyWCxkZWxldGUgaS5sYXllclksZGVsZXRlIGkucmV0dXJuVmFsdWUpLG8ocyxpKSxlW25dJiYoZVtsXT1lW25dLGVbbl09bnVsbCksdC5lYWNoKFsicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iXSxmdW5jdGlvbih0LGUpe3ZhciBuPXNbZV07c1tlXT1mdW5jdGlvbigpe3RyeXtuLmNhbGwocyl9Y2F0Y2godCl7InByZXZlbnREZWZhdWx0Ij09PWUmJihyPSEwKX19fSksdChlKS50cmlnZ2VyKHMpLGVbbF0mJihlW25dPWVbbF0sZVtsXT1udWxsKSwhYXx8cy5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8cnx8YShzKX0sd2FzaE1vdXNlRXZlbnQ6ZnVuY3Rpb24odCl7dmFyIGU9dC5vcmlnaW5hbEV2ZW50fHx0O3JldHVybiBlLnBhZ2VYPT09SCYmKGUucGFnZVg9dC5wYWdlWCxlLnBhZ2VZPXQucGFnZVkpLGV9LGFuaW1hdGU6ZnVuY3Rpb24oZSxuLGkpe3ZhciBvPXQoZSk7ZS5zdHlsZXx8KGUuc3R5bGU9e30pLG4uZCYmKGUudG9EPW4uZCxuLmQ9MSksby5zdG9wKCksbi5vcGFjaXR5IT09SCYmZS5hdHRyJiYobi5vcGFjaXR5Kz0icHgiKSxlLmhhc0FuaW09MSxvLmFuaW1hdGUobixpKX0sc3RvcDpmdW5jdGlvbihlKXtlLmhhc0FuaW0mJnQoZSkuc3RvcCgpfX19KG10KTt2YXIgY2U9Z3QuSGlnaGNoYXJ0c0FkYXB0ZXIscGU9Y2V8fHt9O2NlJiZjZS5pbml0LmNhbGwoY2UsWik7CnZhciBkZT1wZS5hZGFwdGVyUnVuLGhlPXBlLmdldFNjcmlwdCx1ZT1wZS5pbkFycmF5LG1lPXBlLmVhY2gsZmU9cGUuZ3JlcCxnZT1wZS5vZmZzZXQsd2U9cGUubWFwLHhlPXBlLmFkZEV2ZW50LGJlPXBlLnJlbW92ZUV2ZW50LF9lPXBlLmZpcmVFdmVudCx2ZT1wZS53YXNoTW91c2VFdmVudCx5ZT1wZS5hbmltYXRlLGtlPXBlLnN0b3AsemU9e2VuYWJsZWQ6ITAseDowLHk6MTUsc3R5bGU6e2NvbG9yOiIjNjA2MDYwIixjdXJzb3I6ImRlZmF1bHQiLGZvbnRTaXplOiIxMXB4In19O0c9e2NvbG9yczpbIiM3Y2I1ZWMiLCIjNDM0MzQ4IiwiIzkwZWQ3ZCIsIiNmN2EzNWMiLCIjODA4NWU5IiwiI2YxNWM4MCIsIiNlNGQzNTQiLCIjODA4NWU4IiwiIzhkNDY1MyIsIiM5MWU4ZTEiXSxzeW1ib2xzOlsiY2lyY2xlIiwiZGlhbW9uZCIsInNxdWFyZSIsInRyaWFuZ2xlIiwidHJpYW5nbGUtZG93biJdLGxhbmc6e2xvYWRpbmc6IkxvYWRpbmcuLi4iLG1vbnRoczpbIkphbnVhcnkiLCJGZWJydWFyeSIsIk1hcmNoIiwiQXByaWwiLCJNYXkiLCJKdW5lIiwiSnVseSIsIkF1Z3VzdCIsIlNlcHRlbWJlciIsIk9jdG9iZXIiLCJOb3ZlbWJlciIsIkRlY2VtYmVyIl0sc2hvcnRNb250aHM6WyJKYW4iLCJGZWIiLCJNYXIiLCJBcHIiLCJNYXkiLCJKdW4iLCJKdWwiLCJBdWciLCJTZXAiLCJPY3QiLCJOb3YiLCJEZWMiXSx3ZWVrZGF5czpbIlN1bmRheSIsIk1vbmRheSIsIlR1ZXNkYXkiLCJXZWRuZXNkYXkiLCJUaHVyc2RheSIsIkZyaWRheSIsIlNhdHVyZGF5Il0sZGVjaW1hbFBvaW50OiIuIixudW1lcmljU3ltYm9sczpbImsiLCJNIiwiRyIsIlQiLCJQIiwiRSJdLHJlc2V0Wm9vbToiUmVzZXQgem9vbSIscmVzZXRab29tVGl0bGU6IlJlc2V0IHpvb20gbGV2ZWwgMToxIix0aG91c2FuZHNTZXA6IiwifSxnbG9iYWw6e3VzZVVUQzohMCxjYW52YXNUb29sc1VSTDoiaHR0cDovL2NvZGUuaGlnaGNoYXJ0cy5jb20vNC4wLjQvbW9kdWxlcy9jYW52YXMtdG9vbHMuanMiLFZNTFJhZGlhbEdyYWRpZW50VVJMOiJodHRwOi8vY29kZS5oaWdoY2hhcnRzLmNvbS80LjAuNC9nZngvdm1sLXJhZGlhbC1ncmFkaWVudC5wbmcifSxjaGFydDp7Ym9yZGVyQ29sb3I6IiM0NTcyQTciLGJvcmRlclJhZGl1czowLGRlZmF1bHRTZXJpZXNUeXBlOiJsaW5lIixpZ25vcmVIaWRkZW5TZXJpZXM6ITAsc3BhY2luZzpbMTAsMTAsMTUsMTBdLGJhY2tncm91bmRDb2xvcjoiI0ZGRkZGRiIscGxvdEJvcmRlckNvbG9yOiIjQzBDMEMwIixyZXNldFpvb21CdXR0b246e3RoZW1lOnt6SW5kZXg6MjB9LHBvc2l0aW9uOnthbGlnbjoicmlnaHQiLHg6LTEwLHk6MTB9fX0sdGl0bGU6e3RleHQ6IkNoYXJ0IHRpdGxlIixhbGlnbjoiY2VudGVyIixtYXJnaW46MTUsc3R5bGU6e2NvbG9yOiIjMzMzMzMzIixmb250U2l6ZToiMThweCJ9fSxzdWJ0aXRsZTp7dGV4dDoiIixhbGlnbjoiY2VudGVyIixzdHlsZTp7Y29sb3I6IiM1NTU1NTUifX0scGxvdE9wdGlvbnM6e2xpbmU6e2FsbG93UG9pbnRTZWxlY3Q6ITEsc2hvd0NoZWNrYm94OiExLGFuaW1hdGlvbjp7ZHVyYXRpb246MWUzfSxldmVudHM6e30sbGluZVdpZHRoOjIsbWFya2VyOntsaW5lV2lkdGg6MCxyYWRpdXM6NCxsaW5lQ29sb3I6IiNGRkZGRkYiLHN0YXRlczp7aG92ZXI6e2VuYWJsZWQ6ITAsbGluZVdpZHRoUGx1czoxLHJhZGl1c1BsdXM6Mn0sc2VsZWN0OntmaWxsQ29sb3I6IiNGRkZGRkYiLGxpbmVDb2xvcjoiIzAwMDAwMCIsbGluZVdpZHRoOjJ9fX0scG9pbnQ6e2V2ZW50czp7fX0sZGF0YUxhYmVsczphKHplLHthbGlnbjoiY2VudGVyIixlbmFibGVkOiExLGZvcm1hdHRlcjpmdW5jdGlvbigpe3JldHVybiBudWxsPT09dGhpcy55PyIiOnYodGhpcy55LC0xKX0sdmVydGljYWxBbGlnbjoiYm90dG9tIix5OjB9KSxjcm9wVGhyZXNob2xkOjMwMCxwb2ludFJhbmdlOjAsc3RhdGVzOntob3Zlcjp7bGluZVdpZHRoUGx1czoxLG1hcmtlcjp7fSxoYWxvOntzaXplOjEwLG9wYWNpdHk6LjI1fX0sc2VsZWN0OnttYXJrZXI6e319fSxzdGlja3lUcmFja2luZzohMCx0dXJib1RocmVzaG9sZDoxZTN9fSxsYWJlbHM6e3N0eWxlOntwb3NpdGlvbjpHdCxjb2xvcjoiIzNFNTc2RiJ9fSxsZWdlbmQ6e2VuYWJsZWQ6ITAsYWxpZ246ImNlbnRlciIsbGF5b3V0OiJob3Jpem9udGFsIixsYWJlbEZvcm1hdHRlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5hbWV9LGJvcmRlckNvbG9yOiIjOTA5MDkwIixib3JkZXJSYWRpdXM6MCxuYXZpZ2F0aW9uOnthY3RpdmVDb2xvcjoiIzI3NGI2ZCIsaW5hY3RpdmVDb2xvcjoiI0NDQyJ9LHNoYWRvdzohMSxpdGVtU3R5bGU6e2NvbG9yOiIjMzMzMzMzIixmb250U2l6ZToiMTJweCIsZm9udFdlaWdodDoiYm9sZCJ9LGl0ZW1Ib3ZlclN0eWxlOntjb2xvcjoiIzAwMCJ9LGl0ZW1IaWRkZW5TdHlsZTp7Y29sb3I6IiNDQ0MifSxpdGVtQ2hlY2tib3hTdHlsZTp7cG9zaXRpb246R3Qsd2lkdGg6IjEzcHgiLGhlaWdodDoiMTNweCJ9LHN5bWJvbFBhZGRpbmc6NSx2ZXJ0aWNhbEFsaWduOiJib3R0b20iLHg6MCx5OjAsdGl0bGU6e3N0eWxlOntmb250V2VpZ2h0OiJib2xkIn19fSxsb2FkaW5nOntsYWJlbFN0eWxlOntmb250V2VpZ2h0OiJib2xkIixwb3NpdGlvbjpYdCx0b3A6IjQ1JSJ9LHN0eWxlOntwb3NpdGlvbjpHdCxiYWNrZ3JvdW5kQ29sb3I6IndoaXRlIixvcGFjaXR5Oi41LHRleHRBbGlnbjoiY2VudGVyIn19LHRvb2x0aXA6e2VuYWJsZWQ6ITAsYW5pbWF0aW9uOkV0LGJhY2tncm91bmRDb2xvcjoicmdiYSgyNDksIDI0OSwgMjQ5LCAuODUpIixib3JkZXJXaWR0aDoxLGJvcmRlclJhZGl1czozLGRhdGVUaW1lTGFiZWxGb3JtYXRzOnttaWxsaXNlY29uZDoiJUEsICViICVlLCAlSDolTTolUy4lTCIsc2Vjb25kOiIlQSwgJWIgJWUsICVIOiVNOiVTIixtaW51dGU6IiVBLCAlYiAlZSwgJUg6JU0iLGhvdXI6IiVBLCAlYiAlZSwgJUg6JU0iLGRheToiJUEsICViICVlLCAlWSIsd2VlazoiV2VlayBmcm9tICVBLCAlYiAlZSwgJVkiLG1vbnRoOiIlQiAlWSIseWVhcjoiJVkifSxoZWFkZXJGb3JtYXQ6JzxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEwcHgiPntwb2ludC5rZXl9PC9zcGFuPjxici8+Jyxwb2ludEZvcm1hdDonPHNwYW4gc3R5bGU9ImNvbG9yOntzZXJpZXMuY29sb3J9Ij7il488L3NwYW4+IHtzZXJpZXMubmFtZX06IDxiPntwb2ludC55fTwvYj48YnIvPicsc2hhZG93OiEwLHNuYXA6cXQ/MjU6MTAsc3R5bGU6e2NvbG9yOiIjMzMzMzMzIixjdXJzb3I6ImRlZmF1bHQiLGZvbnRTaXplOiIxMnB4IixwYWRkaW5nOiI4cHgiLHdoaXRlU3BhY2U6Im5vd3JhcCJ9fSxjcmVkaXRzOntlbmFibGVkOiEwLHRleHQ6IkhpZ2hjaGFydHMuY29tIixocmVmOiJodHRwOi8vd3d3LmhpZ2hjaGFydHMuY29tIixwb3NpdGlvbjp7YWxpZ246InJpZ2h0Iix4Oi0xMCx2ZXJ0aWNhbEFsaWduOiJib3R0b20iLHk6LTV9LHN0eWxlOntjdXJzb3I6InBvaW50ZXIiLGNvbG9yOiIjOTA5MDkwIixmb250U2l6ZToiOXB4In19fTt2YXIgamU9Ry5wbG90T3B0aW9ucyxDZT1qZS5saW5lO08oKTt2YXIgU2U9L3JnYmFcKFxzKihbMC05XXsxLDN9KVxzKixccyooWzAtOV17MSwzfSlccyosXHMqKFswLTldezEsM30pXHMqLFxzKihbMC05XT8oPzpcLlswLTldKyk/KVxzKlwpLyxQZT0vIyhbYS1mQS1GMC05XXsyfSkoW2EtZkEtRjAtOV17Mn0pKFthLWZBLUYwLTldezJ9KS8sVGU9L3JnYlwoXHMqKFswLTldezEsM30pXHMqLFxzKihbMC05XXsxLDN9KVxzKixccyooWzAtOV17MSwzfSlccypcKS8sQWU9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXt0JiZ0LnN0b3BzP2w9d2UodC5zdG9wcyxmdW5jdGlvbih0KXtyZXR1cm4gQWUodFsxXSl9KToocz1TZS5leGVjKHQpLHM/Yz1bcihzWzFdKSxyKHNbMl0pLHIoc1szXSkscGFyc2VGbG9hdChzWzRdLDEwKV06KHM9UGUuZXhlYyh0KSxzP2M9W3Ioc1sxXSwxNikscihzWzJdLDE2KSxyKHNbM10sMTYpLDFdOihzPVRlLmV4ZWModCkscyYmKGM9W3Ioc1sxXSkscihzWzJdKSxyKHNbM10pLDFdKSkpKX1mdW5jdGlvbiBuKGUpe3ZhciBuO3JldHVybiBsPyhuPWEodCksbi5zdG9wcz1bXS5jb25jYXQobi5zdG9wcyksbWUobCxmdW5jdGlvbih0LGkpe24uc3RvcHNbaV09W24uc3RvcHNbaV1bMF0sdC5nZXQoZSldfSkpOm49YyYmIWlzTmFOKGNbMF0pPyJyZ2IiPT09ZT8icmdiKCIrY1swXSsiLCIrY1sxXSsiLCIrY1syXSsiKSI6ImEiPT09ZT9jWzNdOiJyZ2JhKCIrYy5qb2luKCIsIikrIikiOnQsbn1mdW5jdGlvbiBpKHQpe2lmKGwpbWUobCxmdW5jdGlvbihlKXtlLmJyaWdodGVuKHQpfSk7ZWxzZSBpZihwKHQpJiYwIT09dCl7dmFyIGU7Zm9yKGU9MDtlPDM7ZSsrKWNbZV0rPXIoMjU1KnQpLGNbZV08MCYmKGNbZV09MCksY1tlXT4yNTUmJihjW2VdPTI1NSl9cmV0dXJuIHRoaXN9ZnVuY3Rpb24gbyh0KXtyZXR1cm4gY1szXT10LHRoaXN9dmFyIHMsbCxjPVtdO3JldHVybiBlKHQpLHtnZXQ6bixicmlnaHRlbjppLHJnYmE6YyxzZXRPcGFjaXR5Om99fTtELnByb3RvdHlwZT17b3BhY2l0eToxLHRleHRQcm9wczpbImZvbnRTaXplIiwiZm9udFdlaWdodCIsImZvbnRGYW1pbHkiLCJjb2xvciIsImxpbmVIZWlnaHQiLCJ3aWR0aCIsInRleHREZWNvcmF0aW9uIiwidGV4dFNoYWRvdyIsIkhjVGV4dFN0cm9rZSJdLGluaXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO24uZWxlbWVudD0ic3BhbiI9PT1lP2IoZSk6ZnQuY3JlYXRlRWxlbWVudE5TKE90LGUpLG4ucmVuZGVyZXI9dH0sYW5pbWF0ZTpmdW5jdGlvbih0LGUsbil7dmFyIGk9dyhlLEosITApO3JldHVybiBrZSh0aGlzKSxpPyhpPWEoaSx7fSksbiYmKGkuY29tcGxldGU9bikseWUodGhpcyx0LGkpKToodGhpcy5hdHRyKHQpLG4mJm4oKSksdGhpc30sY29sb3JHcmFkaWVudDpmdW5jdGlvbih0LGUsbil7dmFyIGksbyxyLHMsbCxwLGQsaCx1LGYsZyx3PXRoaXMucmVuZGVyZXIseD1bXTtpZih0LmxpbmVhckdyYWRpZW50P289ImxpbmVhckdyYWRpZW50Ijp0LnJhZGlhbEdyYWRpZW50JiYobz0icmFkaWFsR3JhZGllbnQiKSxvKXtyPXRbb10scz13LmdyYWRpZW50cyxwPXQuc3RvcHMsdT1uLnJhZGlhbFJlZmVyZW5jZSxjKHIpJiYodFtvXT1yPXt4MTpyWzBdLHkxOnJbMV0seDI6clsyXSx5MjpyWzNdLGdyYWRpZW50VW5pdHM6InVzZXJTcGFjZU9uVXNlIn0pLCJyYWRpYWxHcmFkaWVudCI9PT1vJiZ1JiYhbShyLmdyYWRpZW50VW5pdHMpJiYocj1hKHIse2N4OnVbMF0tdVsyXS8yK3IuY3gqdVsyXSxjeTp1WzFdLXVbMl0vMityLmN5KnVbMl0scjpyLnIqdVsyXSxncmFkaWVudFVuaXRzOiJ1c2VyU3BhY2VPblVzZSJ9KSk7Zm9yKGYgaW4gcikiaWQiIT09ZiYmeC5wdXNoKGYscltmXSk7Zm9yKGYgaW4gcCl4LnB1c2gocFtmXSk7eD14LmpvaW4oIiwiKSxzW3hdP2c9c1t4XS5hdHRyKCJpZCIpOihyLmlkPWc9WnQrTXQrKyxzW3hdPWw9dy5jcmVhdGVFbGVtZW50KG8pLmF0dHIocikuYWRkKHcuZGVmcyksbC5zdG9wcz1bXSxtZShwLGZ1bmN0aW9uKHQpe3ZhciBlOzA9PT10WzFdLmluZGV4T2YoInJnYmEiKT8oaT1BZSh0WzFdKSxkPWkuZ2V0KCJyZ2IiKSxoPWkuZ2V0KCJhIikpOihkPXRbMV0saD0xKSxlPXcuY3JlYXRlRWxlbWVudCgic3RvcCIpLmF0dHIoe29mZnNldDp0WzBdLCJzdG9wLWNvbG9yIjpkLCJzdG9wLW9wYWNpdHkiOmh9KS5hZGQobCksbC5zdG9wcy5wdXNoKGUpfSkpLG4uc2V0QXR0cmlidXRlKGUsInVybCgiK3cudXJsKyIjIitnKyIpIil9fSxhdHRyOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxvLGEscj10aGlzLmVsZW1lbnQscz10aGlzO2lmKCJzdHJpbmciPT10eXBlb2YgdCYmZSE9PUgmJihuPXQsdD17fSx0W25dPWUpLCJzdHJpbmciPT10eXBlb2YgdClzPSh0aGlzW3QrIkdldHRlciJdfHx0aGlzLl9kZWZhdWx0R2V0dGVyKS5jYWxsKHRoaXMsdCxyKTtlbHNle2ZvcihuIGluIHQpaT10W25dLGE9ITEsdGhpcy5zeW1ib2xOYW1lJiYvXih4fHl8d2lkdGh8aGVpZ2h0fHJ8c3RhcnR8ZW5kfGlubmVyUnxhbmNob3JYfGFuY2hvclkpLy50ZXN0KG4pJiYob3x8KHRoaXMuc3ltYm9sQXR0cih0KSxvPSEwKSxhPSEwKSwhdGhpcy5yb3RhdGlvbnx8IngiIT09biYmInkiIT09bnx8KHRoaXMuZG9UcmFuc2Zvcm09ITApLGF8fCh0aGlzW24rIlNldHRlciJdfHx0aGlzLl9kZWZhdWx0U2V0dGVyKS5jYWxsKHRoaXMsaSxuLHIpLHRoaXMuc2hhZG93cyYmL14od2lkdGh8aGVpZ2h0fHZpc2liaWxpdHl8eHx5fGR8dHJhbnNmb3JtfGN4fGN5fHIpJC8udGVzdChuKSYmdGhpcy51cGRhdGVTaGFkb3dzKG4saSk7dGhpcy5kb1RyYW5zZm9ybSYmKHRoaXMudXBkYXRlVHJhbnNmb3JtKCksdGhpcy5kb1RyYW5zZm9ybT0hMSl9cmV0dXJuIHN9LHVwZGF0ZVNoYWRvd3M6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcy5zaGFkb3dzLGk9bi5sZW5ndGg7aS0tOyluW2ldLnNldEF0dHJpYnV0ZSh0LCJoZWlnaHQiPT09dD92dChlLShuW2ldLmN1dEhlaWdodHx8MCksMCk6ImQiPT09dD90aGlzLmQ6ZSl9LGFkZENsYXNzOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZWxlbWVudCxuPWYoZSwiY2xhc3MiKXx8IiI7cmV0dXJuIG4uaW5kZXhPZih0KT09PS0xJiZmKGUsImNsYXNzIixuKyIgIit0KSx0aGlzfSxzeW1ib2xBdHRyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7bWUoWyJ4IiwieSIsInIiLCJzdGFydCIsImVuZCIsIndpZHRoIiwiaGVpZ2h0IiwiaW5uZXJSIiwiYW5jaG9yWCIsImFuY2hvclkiXSxmdW5jdGlvbihuKXtlW25dPXcodFtuXSxlW25dKX0pLGUuYXR0cih7ZDplLnJlbmRlcmVyLnN5bWJvbHNbZS5zeW1ib2xOYW1lXShlLngsZS55LGUud2lkdGgsZS5oZWlnaHQsZSl9KX0sY2xpcDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hdHRyKCJjbGlwLXBhdGgiLHQ/InVybCgiK3RoaXMucmVuZGVyZXIudXJsKyIjIit0LmlkKyIpIjpRdCl9LGNyaXNwOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10aGlzLG89e30sYT10LnN0cm9rZVdpZHRofHxpLnN0cm9rZVdpZHRofHwwO249eHQoYSklMi8yLHQueD1idCh0Lnh8fGkueHx8MCkrbix0Lnk9YnQodC55fHxpLnl8fDApK24sdC53aWR0aD1idCgodC53aWR0aHx8aS53aWR0aHx8MCktMipuKSx0LmhlaWdodD1idCgodC5oZWlnaHR8fGkuaGVpZ2h0fHwwKS0yKm4pLHQuc3Ryb2tlV2lkdGg9YTtmb3IoZSBpbiB0KWlbZV0hPT10W2VdJiYoaVtlXT1vW2VdPXRbZV0pO3JldHVybiBvfSxjc3M6ZnVuY3Rpb24odCl7dmFyIGUsbixpLGE9dGhpcyxzPWEuc3R5bGVzLGw9e30sYz1hLmVsZW1lbnQscD0iIixkPSFzO2lmKHQmJnQuY29sb3ImJih0LmZpbGw9dC5jb2xvcikscylmb3IobiBpbiB0KXRbbl0hPT1zW25dJiYobFtuXT10W25dLGQ9ITApO2lmKGQpe2lmKGU9YS50ZXh0V2lkdGg9dCYmdC53aWR0aCYmInRleHQiPT09Yy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpJiZyKHQud2lkdGgpLHMmJih0PW8ocyxsKSksYS5zdHlsZXM9dCxlJiYoRHR8fCFFdCYmYS5yZW5kZXJlci5mb3JFeHBvcnQpJiZkZWxldGUgdC53aWR0aCxBdCYmIUV0KXgoYS5lbGVtZW50LHQpO2Vsc2V7aT1mdW5jdGlvbih0LGUpe3JldHVybiItIitlLnRvTG93ZXJDYXNlKCl9O2ZvcihuIGluIHQpcCs9bi5yZXBsYWNlKC8oW0EtWl0pL2csaSkrIjoiK3Rbbl0rIjsiO2YoYywic3R5bGUiLHApfWUmJmEuYWRkZWQmJmEucmVuZGVyZXIuYnVpbGRUZXh0KGEpfXJldHVybiBhfSxvbjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMsaT1uLmVsZW1lbnQ7cmV0dXJuIFUmJiJjbGljayI9PT10PyhpLm9udG91Y2hzdGFydD1mdW5jdGlvbih0KXtuLnRvdWNoRXZlbnRGaXJlZD10dC5ub3coKSx0LnByZXZlbnREZWZhdWx0KCksZS5jYWxsKGksdCl9LGkub25jbGljaz1mdW5jdGlvbih0KXsoUHQuaW5kZXhPZigiQW5kcm9pZCIpPT09LTF8fHR0Lm5vdygpLShuLnRvdWNoRXZlbnRGaXJlZHx8MCk+MTEwMCkmJmUuY2FsbChpLHQpfSk6aVsib24iK3RdPWUsdGhpc30sc2V0UmFkaWFsUmVmZXJlbmNlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmVsZW1lbnQucmFkaWFsUmVmZXJlbmNlPXQsdGhpc30sdHJhbnNsYXRlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYXR0cih7dHJhbnNsYXRlWDp0LHRyYW5zbGF0ZVk6ZX0pfSxpbnZlcnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiB0LmludmVydGVkPSEwLHQudXBkYXRlVHJhbnNmb3JtKCksdH0sdXBkYXRlVHJhbnNmb3JtOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS50cmFuc2xhdGVYfHwwLGk9ZS50cmFuc2xhdGVZfHwwLG89ZS5zY2FsZVgsYT1lLnNjYWxlWSxyPWUuaW52ZXJ0ZWQscz1lLnJvdGF0aW9uLGw9ZS5lbGVtZW50O3ImJihuKz1lLmF0dHIoIndpZHRoIiksaSs9ZS5hdHRyKCJoZWlnaHQiKSksdD1bInRyYW5zbGF0ZSgiK24rIiwiK2krIikiXSxyP3QucHVzaCgicm90YXRlKDkwKSBzY2FsZSgtMSwxKSIpOnMmJnQucHVzaCgicm90YXRlKCIrcysiICIrKGwuZ2V0QXR0cmlidXRlKCJ4Iil8fDApKyIgIisobC5nZXRBdHRyaWJ1dGUoInkiKXx8MCkrIikiKSwobShvKXx8bShhKSkmJnQucHVzaCgic2NhbGUoIit3KG8sMSkrIiAiK3coYSwxKSsiKSIpLHQubGVuZ3RoJiZsLnNldEF0dHJpYnV0ZSgidHJhbnNmb3JtIix0LmpvaW4oIiAiKSl9LHRvRnJvbnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmVsZW1lbnQ7cmV0dXJuIHQucGFyZW50Tm9kZS5hcHBlbmRDaGlsZCh0KSx0aGlzfSxhbGlnbjpmdW5jdGlvbih0LGUsbil7dmFyIGksbyxhLHIsbCxjPXt9LHA9dGhpcy5yZW5kZXJlcixkPXAuYWxpZ25lZE9iamVjdHM7cmV0dXJuIHQ/KHRoaXMuYWxpZ25PcHRpb25zPXQsdGhpcy5hbGlnbkJ5VHJhbnNsYXRlPWUsbiYmIXMobil8fCh0aGlzLmFsaWduVG89bD1ufHwicmVuZGVyZXIiLHUoZCx0aGlzKSxkLnB1c2godGhpcyksbj1udWxsKSk6KHQ9dGhpcy5hbGlnbk9wdGlvbnMsZT10aGlzLmFsaWduQnlUcmFuc2xhdGUsbD10aGlzLmFsaWduVG8pLG49dyhuLHBbbF0scCksaT10LmFsaWduLG89dC52ZXJ0aWNhbEFsaWduLGE9KG4ueHx8MCkrKHQueHx8MCkscj0obi55fHwwKSsodC55fHwwKSwicmlnaHQiIT09aSYmImNlbnRlciIhPT1pfHwoYSs9KG4ud2lkdGgtKHQud2lkdGh8fDApKS97cmlnaHQ6MSxjZW50ZXI6Mn1baV0pLGNbZT8idHJhbnNsYXRlWCI6IngiXT14dChhKSwiYm90dG9tIiE9PW8mJiJtaWRkbGUiIT09b3x8KHIrPShuLmhlaWdodC0odC5oZWlnaHR8fDApKS8oe2JvdHRvbToxLG1pZGRsZToyfVtvXXx8MSkpLGNbZT8idHJhbnNsYXRlWSI6InkiXT14dChyKSx0aGlzW3RoaXMucGxhY2VkPyJhbmltYXRlIjoiYXR0ciJdKGMpLHRoaXMucGxhY2VkPSEwLHRoaXMuYWxpZ25BdHRyPWMsdGhpc30sZ2V0QkJveDpmdW5jdGlvbigpe3ZhciB0LGUsbixpPXRoaXMsYT1pLmJCb3gscj1pLnJlbmRlcmVyLHM9aS5yb3RhdGlvbixsPWkuZWxlbWVudCxjPWkuc3R5bGVzLHA9cypTdCxkPWkudGV4dFN0cjtpZigoIiI9PT1kfHxuZS50ZXN0KGQpKSYmKG49Im51bS4iK2QudG9TdHJpbmcoKS5sZW5ndGgrKGM/InwiK2MuZm9udFNpemUrInwiK2MuZm9udEZhbWlseToiIikpLG4mJihhPXIuY2FjaGVbbl0pLCFhKXtpZihsLm5hbWVzcGFjZVVSST09PU90fHxyLmZvckV4cG9ydCl7dHJ5e2E9bC5nZXRCQm94P28oe30sbC5nZXRCQm94KCkpOnt3aWR0aDpsLm9mZnNldFdpZHRoLGhlaWdodDpsLm9mZnNldEhlaWdodH19Y2F0Y2goaCl7fSghYXx8YS53aWR0aDwwKSYmKGE9e3dpZHRoOjAsaGVpZ2h0OjB9KX1lbHNlIGE9aS5odG1sR2V0QkJveCgpO3IuaXNTVkcmJih0PWEud2lkdGgsZT1hLmhlaWdodCxBdCYmYyYmIjExcHgiPT09Yy5mb250U2l6ZSYmIjE2LjkiPT09ZS50b1ByZWNpc2lvbigzKSYmKGEuaGVpZ2h0PWU9MTQpLHMmJihhLndpZHRoPWt0KGUqanQocCkpK2t0KHQqenQocCkpLGEuaGVpZ2h0PWt0KGUqenQocCkpK2t0KHQqanQocCkpKSksaS5iQm94PWEsbiYmKHIuY2FjaGVbbl09YSl9cmV0dXJuIGF9LHNob3c6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnRoaXMuZWxlbWVudC5uYW1lc3BhY2VVUkk9PT1PdD90aGlzLmVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCJ2aXNpYmlsaXR5Iik6dGhpcy5hdHRyKHt2aXNpYmlsaXR5OnQ/ImluaGVyaXQiOlZ0fSksdGhpc30saGlkZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmF0dHIoe3Zpc2liaWxpdHk6SnR9KX0sZmFkZU91dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2UuYW5pbWF0ZSh7b3BhY2l0eTowfSx7ZHVyYXRpb246dHx8MTUwLGNvbXBsZXRlOmZ1bmN0aW9uKCl7ZS5hdHRyKHt5Oi05OTk5fSl9fSl9LGFkZDpmdW5jdGlvbih0KXt2YXIgZSxuLGksbyxhLHM9dGhpcy5yZW5kZXJlcixsPXR8fHMsYz1sLmVsZW1lbnR8fHMuYm94LHA9dGhpcy5lbGVtZW50LGQ9dGhpcy56SW5kZXg7aWYodCYmKHRoaXMucGFyZW50R3JvdXA9dCksdGhpcy5wYXJlbnRJbnZlcnRlZD10JiZ0LmludmVydGVkLHZvaWQgMCE9PXRoaXMudGV4dFN0ciYmcy5idWlsZFRleHQodGhpcyksZCYmKGwuaGFuZGxlWj0hMCxkPXIoZCkpLGwuaGFuZGxlWilmb3IoZT1jLmNoaWxkTm9kZXMsbz0wO288ZS5sZW5ndGg7bysrKWlmKG49ZVtvXSxpPWYobiwiekluZGV4IiksbiE9PXAmJihyKGkpPmR8fCFtKGQpJiZtKGkpKSl7Yy5pbnNlcnRCZWZvcmUocCxuKSxhPSEwO2JyZWFrfXJldHVybiBhfHxjLmFwcGVuZENoaWxkKHApLHRoaXMuYWRkZWQ9ITAsdGhpcy5vbkFkZCYmdGhpcy5vbkFkZCgpLHRoaXN9LHNhZmVSZW1vdmVDaGlsZDpmdW5jdGlvbih0KXt2YXIgZT10LnBhcmVudE5vZGU7ZSYmZS5yZW1vdmVDaGlsZCh0KX0sZGVzdHJveTpmdW5jdGlvbigpe3ZhciB0LGUsbixpPXRoaXMsbz1pLmVsZW1lbnR8fHt9LGE9aS5zaGFkb3dzLHI9aS5yZW5kZXJlci5pc1NWRyYmIlNQQU4iPT09by5ub2RlTmFtZSYmaS5wYXJlbnRHcm91cDtpZihvLm9uY2xpY2s9by5vbm1vdXNlb3V0PW8ub25tb3VzZW92ZXI9by5vbm1vdXNlbW92ZT1vLnBvaW50PW51bGwsa2UoaSksaS5jbGlwUGF0aCYmKGkuY2xpcFBhdGg9aS5jbGlwUGF0aC5kZXN0cm95KCkpLGkuc3RvcHMpe2ZvcihuPTA7bjxpLnN0b3BzLmxlbmd0aDtuKyspaS5zdG9wc1tuXT1pLnN0b3BzW25dLmRlc3Ryb3koKTtpLnN0b3BzPW51bGx9Zm9yKGkuc2FmZVJlbW92ZUNoaWxkKG8pLGEmJm1lKGEsZnVuY3Rpb24odCl7aS5zYWZlUmVtb3ZlQ2hpbGQodCl9KTtyJiZyLmRpdiYmMD09PXIuZGl2LmNoaWxkTm9kZXMubGVuZ3RoOyl0PXIucGFyZW50R3JvdXAsaS5zYWZlUmVtb3ZlQ2hpbGQoci5kaXYpLGRlbGV0ZSByLmRpdixyPXQ7aS5hbGlnblRvJiZ1KGkucmVuZGVyZXIuYWxpZ25lZE9iamVjdHMsaSk7Zm9yKGUgaW4gaSlkZWxldGUgaVtlXTtyZXR1cm4gbnVsbH0sc2hhZG93OmZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvLGEscixzLGwsYz1bXSxwPXRoaXMuZWxlbWVudDtpZih0KXtmb3Iocj13KHQud2lkdGgsMykscz0odC5vcGFjaXR5fHwuMTUpL3IsbD10aGlzLnBhcmVudEludmVydGVkPyIoLTEsLTEpIjoiKCIrdyh0Lm9mZnNldFgsMSkrIiwgIit3KHQub2Zmc2V0WSwxKSsiKSIsaT0xO2k8PXI7aSsrKW89cC5jbG9uZU5vZGUoMCksYT0yKnIrMS0yKmksZihvLHtpc1NoYWRvdzoidHJ1ZSIsc3Ryb2tlOnQuY29sb3J8fCJibGFjayIsInN0cm9rZS1vcGFjaXR5IjpzKmksInN0cm9rZS13aWR0aCI6YSx0cmFuc2Zvcm06InRyYW5zbGF0ZSIrbCxmaWxsOlF0fSksbiYmKGYobywiaGVpZ2h0Iix2dChmKG8sImhlaWdodCIpLWEsMCkpLG8uY3V0SGVpZ2h0PWEpLGU/ZS5lbGVtZW50LmFwcGVuZENoaWxkKG8pOnAucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobyxwKSxjLnB1c2gobyk7dGhpcy5zaGFkb3dzPWN9cmV0dXJuIHRoaXN9LHhHZXR0ZXI6ZnVuY3Rpb24odCl7cmV0dXJuImNpcmNsZSI9PT10aGlzLmVsZW1lbnQubm9kZU5hbWUmJih0PXt4OiJjeCIseToiY3kifVt0XXx8dCksdGhpcy5fZGVmYXVsdEdldHRlcih0KX0sX2RlZmF1bHRHZXR0ZXI6ZnVuY3Rpb24odCl7dmFyIGU9dyh0aGlzW3RdLHRoaXMuZWxlbWVudD90aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKHQpOm51bGwsMCk7cmV0dXJuL15bXC0wLTlcLl0rJC8udGVzdChlKSYmKGU9cGFyc2VGbG9hdChlKSksZX0sZFNldHRlcjpmdW5jdGlvbih0LGUsbil7dCYmdC5qb2luJiYodD10LmpvaW4oIiAiKSksLyhOYU58IHsyfXxeJCkvLnRlc3QodCkmJih0PSJNIDAgMCIpLG4uc2V0QXR0cmlidXRlKGUsdCksdGhpc1tlXT10fSxkYXNoc3R5bGVTZXR0ZXI6ZnVuY3Rpb24odCl7dmFyIGU7aWYodD10JiZ0LnRvTG93ZXJDYXNlKCkpe2Zvcih0PXQucmVwbGFjZSgic2hvcnRkYXNoZG90ZG90IiwiMywxLDEsMSwxLDEsIikucmVwbGFjZSgic2hvcnRkYXNoZG90IiwiMywxLDEsMSIpLnJlcGxhY2UoInNob3J0ZG90IiwiMSwxLCIpLnJlcGxhY2UoInNob3J0ZGFzaCIsIjMsMSwiKS5yZXBsYWNlKCJsb25nZGFzaCIsIjgsMywiKS5yZXBsYWNlKC9kb3QvZywiMSwzLCIpLnJlcGxhY2UoImRhc2giLCI0LDMsIikucmVwbGFjZSgvLCQvLCIiKS5zcGxpdCgiLCIpLGU9dC5sZW5ndGg7ZS0tOyl0W2VdPXIodFtlXSkqdGhpc1sic3Ryb2tlLXdpZHRoIl07dD10LmpvaW4oIiwiKS5yZXBsYWNlKCJOYU4iLCJub25lIiksdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZSgic3Ryb2tlLWRhc2hhcnJheSIsdCl9fSxhbGlnblNldHRlcjpmdW5jdGlvbih0KXt0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKCJ0ZXh0LWFuY2hvciIse2xlZnQ6InN0YXJ0IixjZW50ZXI6Im1pZGRsZSIscmlnaHQ6ImVuZCJ9W3RdKX0sb3BhY2l0eVNldHRlcjpmdW5jdGlvbih0LGUsbil7dGhpc1tlXT10LG4uc2V0QXR0cmlidXRlKGUsdCl9LHRpdGxlU2V0dGVyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZWxlbWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgidGl0bGUiKVswXTtlfHwoZT1mdC5jcmVhdGVFbGVtZW50TlMoT3QsInRpdGxlIiksdGhpcy5lbGVtZW50LmFwcGVuZENoaWxkKGUpKSxlLnRleHRDb250ZW50PXcodCwiIikucmVwbGFjZSgvPFtePl0qPi9nLCIiKX0sdGV4dFNldHRlcjpmdW5jdGlvbih0KXt0IT09dGhpcy50ZXh0U3RyJiYoZGVsZXRlIHRoaXMuYkJveCx0aGlzLnRleHRTdHI9dCx0aGlzLmFkZGVkJiZ0aGlzLnJlbmRlcmVyLmJ1aWxkVGV4dCh0aGlzKSl9LGZpbGxTZXR0ZXI6ZnVuY3Rpb24odCxlLG4peyJzdHJpbmciPT10eXBlb2YgdD9uLnNldEF0dHJpYnV0ZShlLHQpOnQmJnRoaXMuY29sb3JHcmFkaWVudCh0LGUsbil9LHpJbmRleFNldHRlcjpmdW5jdGlvbih0LGUsbil7bi5zZXRBdHRyaWJ1dGUoZSx0KSx0aGlzW2VdPXR9LF9kZWZhdWx0U2V0dGVyOmZ1bmN0aW9uKHQsZSxuKXtuLnNldEF0dHJpYnV0ZShlLHQpfX0sRC5wcm90b3R5cGUueUdldHRlcj1ELnByb3RvdHlwZS54R2V0dGVyLEQucHJvdG90eXBlLnRyYW5zbGF0ZVhTZXR0ZXI9RC5wcm90b3R5cGUudHJhbnNsYXRlWVNldHRlcj1ELnByb3RvdHlwZS5yb3RhdGlvblNldHRlcj1ELnByb3RvdHlwZS52ZXJ0aWNhbEFsaWduU2V0dGVyPUQucHJvdG90eXBlLnNjYWxlWFNldHRlcj1ELnByb3RvdHlwZS5zY2FsZVlTZXR0ZXI9ZnVuY3Rpb24odCxlKXt0aGlzW2VdPXQsdGhpcy5kb1RyYW5zZm9ybT0hMH0sRC5wcm90b3R5cGVbInN0cm9rZS13aWR0aFNldHRlciJdPUQucHJvdG90eXBlLnN0cm9rZVNldHRlcj1mdW5jdGlvbih0LGUsbil7dGhpc1tlXT10LHRoaXMuc3Ryb2tlJiZ0aGlzWyJzdHJva2Utd2lkdGgiXT8odGhpcy5zdHJva2VXaWR0aD10aGlzWyJzdHJva2Utd2lkdGgiXSxELnByb3RvdHlwZS5maWxsU2V0dGVyLmNhbGwodGhpcyx0aGlzLnN0cm9rZSwic3Ryb2tlIixuKSxuLnNldEF0dHJpYnV0ZSgic3Ryb2tlLXdpZHRoIix0aGlzWyJzdHJva2Utd2lkdGgiXSksdGhpcy5oYXNTdHJva2U9ITApOiJzdHJva2Utd2lkdGgiPT09ZSYmMD09PXQmJnRoaXMuaGFzU3Ryb2tlJiYobi5yZW1vdmVBdHRyaWJ1dGUoInN0cm9rZSIpLHRoaXMuaGFzU3Ryb2tlPSExKX07dmFyIE5lPWZ1bmN0aW9uKCl7dGhpcy5pbml0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX07TmUucHJvdG90eXBlPXtFbGVtZW50OkQsaW5pdDpmdW5jdGlvbih0LGUsbixpLG8pe3ZhciBhLHIscyxsPXRoaXMsYz1sb2NhdGlvbjthPWwuY3JlYXRlRWxlbWVudCgic3ZnIikuYXR0cih7dmVyc2lvbjoiMS4xIn0pLmNzcyh0aGlzLmdldFN0eWxlKGkpKSxyPWEuZWxlbWVudCx0LmFwcGVuZENoaWxkKHIpLHQuaW5uZXJIVE1MLmluZGV4T2YoInhtbG5zIik9PT0tMSYmZihyLCJ4bWxucyIsT3QpLGwuaXNTVkc9ITAsbC5ib3g9cixsLmJveFdyYXBwZXI9YSxsLmFsaWduZWRPYmplY3RzPVtdLGwudXJsPShCdHx8SXQpJiZmdC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiYmFzZSIpLmxlbmd0aD9jLmhyZWYucmVwbGFjZSgvIy4qPyQvLCIiKS5yZXBsYWNlKC8oW1woJ1wpXSkvZywiXFwkMSIpLnJlcGxhY2UoLyAvZywiJTIwIik6IiIscz10aGlzLmNyZWF0ZUVsZW1lbnQoImRlc2MiKS5hZGQoKSxzLmVsZW1lbnQuYXBwZW5kQ2hpbGQoZnQuY3JlYXRlVGV4dE5vZGUoIkNyZWF0ZWQgd2l0aCAiK1d0KyIgIitVdCkpLGwuZGVmcz10aGlzLmNyZWF0ZUVsZW1lbnQoImRlZnMiKS5hZGQoKSxsLmZvckV4cG9ydD1vLGwuZ3JhZGllbnRzPXt9LGwuY2FjaGU9e30sbC5zZXRTaXplKGUsbiwhMSk7dmFyIHAsZDtCdCYmdC5nZXRCb3VuZGluZ0NsaWVudFJlY3QmJihsLnN1YlBpeGVsRml4PXA9ZnVuY3Rpb24oKXt4KHQse2xlZnQ6MCx0b3A6MH0pLGQ9dC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSx4KHQse2xlZnQ6X3QoZC5sZWZ0KS1kLmxlZnQrS3QsdG9wOl90KGQudG9wKS1kLnRvcCtLdH0pfSxwKCkseGUoZ3QsInJlc2l6ZSIscCkpfSxnZXRTdHlsZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zdHlsZT1vKHtmb250RmFtaWx5OiciTHVjaWRhIEdyYW5kZSIsICJMdWNpZGEgU2FucyBVbmljb2RlIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZicsZm9udFNpemU6IjEycHgifSx0KX0saXNIaWRkZW46ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5ib3hXcmFwcGVyLmdldEJCb3goKS53aWR0aH0sZGVzdHJveTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmRlZnM7cmV0dXJuIHQuYm94PW51bGwsdC5ib3hXcmFwcGVyPXQuYm94V3JhcHBlci5kZXN0cm95KCksTih0LmdyYWRpZW50c3x8e30pLHQuZ3JhZGllbnRzPW51bGwsZSYmKHQuZGVmcz1lLmRlc3Ryb3koKSksdC5zdWJQaXhlbEZpeCYmYmUoZ3QsInJlc2l6ZSIsdC5zdWJQaXhlbEZpeCksdC5hbGlnbmVkT2JqZWN0cz1udWxsLG51bGx9LGNyZWF0ZUVsZW1lbnQ6ZnVuY3Rpb24odCl7dmFyIGU9bmV3IHRoaXMuRWxlbWVudDtyZXR1cm4gZS5pbml0KHRoaXMsdCksZX0sZHJhdzpmdW5jdGlvbigpe30sYnVpbGRUZXh0OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuLGksbz10LmVsZW1lbnQsYT10aGlzLHM9YS5mb3JFeHBvcnQsbD13KHQudGV4dFN0ciwiIikudG9TdHJpbmcoKSxjPWwuaW5kZXhPZigiPCIpIT09LTEscD1vLmNoaWxkTm9kZXMsZD1mKG8sIngiKSxoPXQuc3R5bGVzLHU9dC50ZXh0V2lkdGgsbT1oJiZoLmxpbmVIZWlnaHQsZz1oJiZoLkhjVGV4dFN0cm9rZSxiPXAubGVuZ3RoLF89ZnVuY3Rpb24odCl7cmV0dXJuIG0/cihtKTphLmZvbnRNZXRyaWNzKC8ocHh8ZW0pJC8udGVzdCh0JiZ0LnN0eWxlLmZvbnRTaXplKT90LnN0eWxlLmZvbnRTaXplOmgmJmguZm9udFNpemV8fGEuc3R5bGUuZm9udFNpemV8fDEyLHQpLmh9O2ItLTspby5yZW1vdmVDaGlsZChwW2JdKTtyZXR1cm4gY3x8Z3x8bC5pbmRleE9mKCIgIikhPT0tMT8obj0vPC4qc3R5bGU9IihbXiJdKykiLio+LyxpPS88LipocmVmPSIoaHR0cFteIl0rKSIuKj4vLHUmJiF0LmFkZGVkJiZ0aGlzLmJveC5hcHBlbmRDaGlsZChvKSxlPWM/bC5yZXBsYWNlKC88KGJ8c3Ryb25nKT4vZywnPHNwYW4gc3R5bGU9ImZvbnQtd2VpZ2h0OmJvbGQiPicpLnJlcGxhY2UoLzwoaXxlbSk+L2csJzxzcGFuIHN0eWxlPSJmb250LXN0eWxlOml0YWxpYyI+JykucmVwbGFjZSgvPGEvZywiPHNwYW4iKS5yZXBsYWNlKC88XC8oYnxzdHJvbmd8aXxlbXxhKT4vZywiPC9zcGFuPiIpLnNwbGl0KC88YnIuKj8+L2cpOltsXSwiIj09PWVbZS5sZW5ndGgtMV0mJmUucG9wKCksbWUoZSxmdW5jdGlvbihlLHIpe3ZhciBsLGM9MDtlPWUucmVwbGFjZSgvPHNwYW4vZywifHx8PHNwYW4iKS5yZXBsYWNlKC88XC9zcGFuPi9nLCI8L3NwYW4+fHx8IiksbD1lLnNwbGl0KCJ8fHwiKSxtZShsLGZ1bmN0aW9uKGUpe2lmKCIiIT09ZXx8MT09PWwubGVuZ3RoKXt2YXIgcCxtPXt9LGc9ZnQuY3JlYXRlRWxlbWVudE5TKE90LCJ0c3BhbiIpO2lmKG4udGVzdChlKSYmKHA9ZS5tYXRjaChuKVsxXS5yZXBsYWNlKC8oO3wgfF4pY29sb3IoWyA6XSkvLCIkMWZpbGwkMiIpLGYoZywic3R5bGUiLHApKSxpLnRlc3QoZSkmJiFzJiYoZihnLCJvbmNsaWNrIiwnbG9jYXRpb24uaHJlZj0iJytlLm1hdGNoKGkpWzFdKyciJykseChnLHtjdXJzb3I6InBvaW50ZXIifSkpLGU9KGUucmVwbGFjZSgvPCgufFxuKSo/Pi9nLCIiKXx8IiAiKS5yZXBsYWNlKC8mbHQ7L2csIjwiKS5yZXBsYWNlKC8mZ3Q7L2csIj4iKSwiICIhPT1lKXtpZihnLmFwcGVuZENoaWxkKGZ0LmNyZWF0ZVRleHROb2RlKGUpKSxjP20uZHg9MDpyJiZudWxsIT09ZCYmKG0ueD1kKSxmKGcsbSksby5hcHBlbmRDaGlsZChnKSwhYyYmciYmKCFFdCYmcyYmeChnLHtkaXNwbGF5OiJibG9jayJ9KSxmKGcsImR5IixfKGcpKSksdSlmb3IodmFyIHcsYix2LHk9ZS5yZXBsYWNlKC8oW15cXl0pLS9nLCIkMS0gIikuc3BsaXQoIiAiKSxrPWwubGVuZ3RoPjF8fHkubGVuZ3RoPjEmJiJub3dyYXAiIT09aC53aGl0ZVNwYWNlLHo9aC5IY0hlaWdodCxqPVtdLEM9XyhnKSxTPTE7ayYmKHkubGVuZ3RofHxqLmxlbmd0aCk7KWRlbGV0ZSB0LmJCb3gsdj10LmdldEJCb3goKSxiPXYud2lkdGgsIUV0JiZhLmZvckV4cG9ydCYmKGI9YS5tZWFzdXJlU3BhbldpZHRoKGcuZmlyc3RDaGlsZC5kYXRhLHQuc3R5bGVzKSksdz1iPnUsdyYmMSE9PXkubGVuZ3RoPyhnLnJlbW92ZUNoaWxkKGcuZmlyc3RDaGlsZCksai51bnNoaWZ0KHkucG9wKCkpKTooeT1qLGo9W10seS5sZW5ndGgmJihTKysseiYmUypDPno/KHk9WyIuLi4iXSx0LmF0dHIoInRpdGxlIix0LnRleHRTdHIpKTooZz1mdC5jcmVhdGVFbGVtZW50TlMoT3QsInRzcGFuIiksZihnLHtkeTpDLHg6ZH0pLHAmJmYoZywic3R5bGUiLHApLG8uYXBwZW5kQ2hpbGQoZykpKSxiPnUmJih1PWIpKSx5Lmxlbmd0aCYmZy5hcHBlbmRDaGlsZChmdC5jcmVhdGVUZXh0Tm9kZSh5LmpvaW4oIiAiKS5yZXBsYWNlKC8tIC9nLCItIikpKTtjKyt9fX0pfSksdm9pZCAwKTp2b2lkIG8uYXBwZW5kQ2hpbGQoZnQuY3JlYXRlVGV4dE5vZGUobCkpfSxidXR0b246ZnVuY3Rpb24odCxlLG4saSxyLHMsbCxjLHApe3ZhciBkLGgsdSxtLGYsZyx3PXRoaXMubGFiZWwodCxlLG4scCxudWxsLG51bGwsbnVsbCxudWxsLCJidXR0b24iKSx4PTAsYj17eDE6MCx5MTowLHgyOjAseTI6MX07cmV0dXJuIHI9YSh7InN0cm9rZS13aWR0aCI6MSxzdHJva2U6IiNDQ0NDQ0MiLGZpbGw6e2xpbmVhckdyYWRpZW50OmIsc3RvcHM6W1swLCIjRkVGRUZFIl0sWzEsIiNGNkY2RjYiXV19LHI6MixwYWRkaW5nOjUsc3R5bGU6e2NvbG9yOiJibGFjayJ9fSxyKSx1PXIuc3R5bGUsZGVsZXRlIHIuc3R5bGUscz1hKHIse3N0cm9rZToiIzY4QSIsZmlsbDp7bGluZWFyR3JhZGllbnQ6YixzdG9wczpbWzAsIiNGRkYiXSxbMSwiI0FDRiJdXX19LHMpLG09cy5zdHlsZSxkZWxldGUgcy5zdHlsZSxsPWEocix7c3Ryb2tlOiIjNjhBIixmaWxsOntsaW5lYXJHcmFkaWVudDpiLHN0b3BzOltbMCwiIzlCRCJdLFsxLCIjQ0RGIl1dfX0sbCksZj1sLnN0eWxlLGRlbGV0ZSBsLnN0eWxlLGM9YShyLHtzdHlsZTp7Y29sb3I6IiNDQ0MifX0sYyksZz1jLnN0eWxlLGRlbGV0ZSBjLnN0eWxlLHhlKHcuZWxlbWVudCxBdD8ibW91c2VvdmVyIjoibW91c2VlbnRlciIsZnVuY3Rpb24oKXszIT09eCYmdy5hdHRyKHMpLmNzcyhtKX0pLHhlKHcuZWxlbWVudCxBdD8ibW91c2VvdXQiOiJtb3VzZWxlYXZlIixmdW5jdGlvbigpezMhPT14JiYoZD1bcixzLGxdW3hdLGg9W3UsbSxmXVt4XSx3LmF0dHIoZCkuY3NzKGgpKX0pLHcuc2V0U3RhdGU9ZnVuY3Rpb24odCl7dy5zdGF0ZT14PXQsdD8yPT09dD93LmF0dHIobCkuY3NzKGYpOjM9PT10JiZ3LmF0dHIoYykuY3NzKGcpOncuYXR0cihyKS5jc3ModSl9LHcub24oImNsaWNrIixmdW5jdGlvbigpezMhPT14JiZpLmNhbGwodyl9KS5hdHRyKHIpLmNzcyhvKHtjdXJzb3I6ImRlZmF1bHQifSx1KSl9LGNyaXNwTGluZTpmdW5jdGlvbih0LGUpe3JldHVybiB0WzFdPT09dFs0XSYmKHRbMV09dFs0XT14dCh0WzFdKS1lJTIvMiksdFsyXT09PXRbNV0mJih0WzJdPXRbNV09eHQodFsyXSkrZSUyLzIpLHR9LHBhdGg6ZnVuY3Rpb24odCl7dmFyIGU9e2ZpbGw6UXR9O3JldHVybiBjKHQpP2UuZD10OmwodCkmJm8oZSx0KSx0aGlzLmNyZWF0ZUVsZW1lbnQoInBhdGgiKS5hdHRyKGUpfSxjaXJjbGU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPWwodCk/dDp7eDp0LHk6ZSxyOm59LG89dGhpcy5jcmVhdGVFbGVtZW50KCJjaXJjbGUiKTtyZXR1cm4gby54U2V0dGVyPWZ1bmN0aW9uKHQpe3RoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoImN4Iix0KX0sby55U2V0dGVyPWZ1bmN0aW9uKHQpe3RoaXMuZWxlbWVudC5zZXRBdHRyaWJ1dGUoImN5Iix0KX0sby5hdHRyKGkpfSxhcmM6ZnVuY3Rpb24odCxlLG4saSxvLGEpe3ZhciByO3JldHVybiBsKHQpJiYoZT10Lnksbj10LnIsaT10LmlubmVyUixvPXQuc3RhcnQsYT10LmVuZCx0PXQueCkscj10aGlzLnN5bWJvbCgiYXJjIix0fHwwLGV8fDAsbnx8MCxufHwwLHtpbm5lclI6aXx8MCxzdGFydDpvfHwwLGVuZDphfHwwfSksci5yPW4scn0scmVjdDpmdW5jdGlvbih0LGUsbixpLG8sYSl7bz1sKHQpP3QucjpvO3ZhciByPXRoaXMuY3JlYXRlRWxlbWVudCgicmVjdCIpLHM9bCh0KT90OnQ9PT1IP3t9Ont4OnQseTplLHdpZHRoOnZ0KG4sMCksaGVpZ2h0OnZ0KGksMCl9O3JldHVybiBhIT09SCYmKHMuc3Ryb2tlV2lkdGg9YSxzPXIuY3Jpc3AocykpLG8mJihzLnI9byksci5yU2V0dGVyPWZ1bmN0aW9uKHQpe2YodGhpcy5lbGVtZW50LHtyeDp0LHJ5OnR9KX0sci5hdHRyKHMpfSxzZXRTaXplOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLG89aS5hbGlnbmVkT2JqZWN0cyxhPW8ubGVuZ3RoO2ZvcihpLndpZHRoPXQsaS5oZWlnaHQ9ZSxpLmJveFdyYXBwZXJbdyhuLCEwKT8iYW5pbWF0ZSI6ImF0dHIiXSh7d2lkdGg6dCxoZWlnaHQ6ZX0pO2EtLTspb1thXS5hbGlnbigpfSxnOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY3JlYXRlRWxlbWVudCgiZyIpO3JldHVybiBtKHQpP2UuYXR0cih7ImNsYXNzIjpadCt0fSk6ZX0saW1hZ2U6ZnVuY3Rpb24odCxlLG4saSxhKXt2YXIgcixzPXtwcmVzZXJ2ZUFzcGVjdFJhdGlvOlF0fTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4xJiZvKHMse3g6ZSx5Om4sd2lkdGg6aSxoZWlnaHQ6YX0pLHI9dGhpcy5jcmVhdGVFbGVtZW50KCJpbWFnZSIpLmF0dHIocyksci5lbGVtZW50LnNldEF0dHJpYnV0ZU5TP3IuZWxlbWVudC5zZXRBdHRyaWJ1dGVOUygiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIsImhyZWYiLHQpOnIuZWxlbWVudC5zZXRBdHRyaWJ1dGUoImhjLXN2Zy1ocmVmIix0KSxyfSxzeW1ib2w6ZnVuY3Rpb24odCxlLG4saSxhLHIpe3ZhciBzLGwsYyxwLGQsaD10aGlzLnN5bWJvbHNbdF0sdT1oJiZoKHh0KGUpLHh0KG4pLGksYSxyKSxtPS9edXJsXCgoLio/KVwpJC87cmV0dXJuIHU/KHM9dGhpcy5wYXRoKHUpLG8ocyx7c3ltYm9sTmFtZTp0LHg6ZSx5Om4sd2lkdGg6aSxoZWlnaHQ6YX0pLHImJm8ocyxyKSk6bS50ZXN0KHQpJiYoZD1mdW5jdGlvbih0LGUpe3QuZWxlbWVudCYmKHQuYXR0cih7d2lkdGg6ZVswXSxoZWlnaHQ6ZVsxXX0pLHQuYWxpZ25CeVRyYW5zbGF0ZXx8dC50cmFuc2xhdGUoeHQoKGktZVswXSkvMikseHQoKGEtZVsxXSkvMikpKX0sYz10Lm1hdGNoKG0pWzFdLHA9RnRbY118fHImJnIud2lkdGgmJnIuaGVpZ2h0JiZbci53aWR0aCxyLmhlaWdodF0scz10aGlzLmltYWdlKGMpLmF0dHIoe3g6ZSx5Om59KSxzLmlzSW1nPSEwLHA/ZChzLHApOihzLmF0dHIoe3dpZHRoOjAsaGVpZ2h0OjB9KSxsPWIoImltZyIse29ubG9hZDpmdW5jdGlvbigpe2QocyxGdFtjXT1bdGhpcy53aWR0aCx0aGlzLmhlaWdodF0pfSxzcmM6Y30pKSksc30sc3ltYm9sczp7Y2lyY2xlOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBvPS4xNjYqbjtyZXR1cm5bdGUsdCtuLzIsZSwiQyIsdCtuK28sZSx0K24rbyxlK2ksdCtuLzIsZStpLCJDIix0LW8sZStpLHQtbyxlLHQrbi8yLGUsIloiXX0sc3F1YXJlOmZ1bmN0aW9uKHQsZSxuLGkpe3JldHVyblt0ZSx0LGUsZWUsdCtuLGUsdCtuLGUraSx0LGUraSwiWiJdfSx0cmlhbmdsZTpmdW5jdGlvbih0LGUsbixpKXtyZXR1cm5bdGUsdCtuLzIsZSxlZSx0K24sZStpLHQsZStpLCJaIl19LCJ0cmlhbmdsZS1kb3duIjpmdW5jdGlvbih0LGUsbixpKXtyZXR1cm5bdGUsdCxlLGVlLHQrbixlLHQrbi8yLGUraSwiWiJdfSxkaWFtb25kOmZ1bmN0aW9uKHQsZSxuLGkpe3JldHVyblt0ZSx0K24vMixlLGVlLHQrbixlK2kvMix0K24vMixlK2ksdCxlK2kvMiwiWiJdfSxhcmM6ZnVuY3Rpb24odCxlLG4saSxvKXt2YXIgYT1vLnN0YXJ0LHI9by5yfHxufHxpLHM9by5lbmQtLjAwMSxsPW8uaW5uZXJSLGM9by5vcGVuLHA9enQoYSksZD1qdChhKSxoPXp0KHMpLHU9anQocyksbT1vLmVuZC1hPEN0PzA6MTtyZXR1cm5bdGUsdCtyKnAsZStyKmQsIkEiLHIsciwwLG0sMSx0K3IqaCxlK3IqdSxjP3RlOmVlLHQrbCpoLGUrbCp1LCJBIixsLGwsMCxtLDAsdCtsKnAsZStsKmQsYz8iIjoiWiJdfSxjYWxsb3V0OmZ1bmN0aW9uKHQsZSxuLGksbyl7dmFyIGEscj02LHM9NixsPXl0KG8mJm8ucnx8MCxuLGkpLGM9bCtzLHA9byYmby5hbmNob3JYLGQ9byYmby5hbmNob3JZLGg9eHQoby5zdHJva2VXaWR0aHx8MCklMi8yO3JldHVybiB0Kz1oLGUrPWgsYT1bIk0iLHQrbCxlLCJMIix0K24tbCxlLCJDIix0K24sZSx0K24sZSx0K24sZStsLCJMIix0K24sZStpLWwsIkMiLHQrbixlK2ksdCtuLGUraSx0K24tbCxlK2ksIkwiLHQrbCxlK2ksIkMiLHQsZStpLHQsZStpLHQsZStpLWwsIkwiLHQsZStsLCJDIix0LGUsdCxlLHQrbCxlXSxwJiZwPm4mJmQ+ZStjJiZkPGUraS1jP2Euc3BsaWNlKDEzLDMsIkwiLHQrbixkLXMsdCtuK3IsZCx0K24sZCtzLHQrbixlK2ktbCk6cCYmcDwwJiZkPmUrYyYmZDxlK2ktYz9hLnNwbGljZSgzMywzLCJMIix0LGQrcyx0LXIsZCx0LGQtcyx0LGUrbCk6ZCYmZD5pJiZwPnQrYyYmcDx0K24tYz9hLnNwbGljZSgyMywzLCJMIixwK3MsZStpLHAsZStpK3IscC1zLGUraSx0K2wsZStpKTpkJiZkPDAmJnA+dCtjJiZwPHQrbi1jJiZhLnNwbGljZSgzLDMsIkwiLHAtcyxlLHAsZS1yLHArcyxlLG4tbCxlKSxhfX0sY2xpcFJlY3Q6ZnVuY3Rpb24odCxlLG4saSl7dmFyIG8sYT1adCtNdCsrLHI9dGhpcy5jcmVhdGVFbGVtZW50KCJjbGlwUGF0aCIpLmF0dHIoe2lkOmF9KS5hZGQodGhpcy5kZWZzKTtyZXR1cm4gbz10aGlzLnJlY3QodCxlLG4saSwwKS5hZGQociksby5pZD1hLG8uY2xpcFBhdGg9cixvfSx0ZXh0OmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBvLGE9dGhpcyxyPUR0fHwhRXQmJmEuZm9yRXhwb3J0LHM9e307cmV0dXJuIGkmJiFhLmZvckV4cG9ydD9hLmh0bWwodCxlLG4pOihzLng9TWF0aC5yb3VuZChlfHwwKSxuJiYocy55PU1hdGgucm91bmQobikpLCh0fHwwPT09dCkmJihzLnRleHQ9dCksbz1hLmNyZWF0ZUVsZW1lbnQoInRleHQiKS5hdHRyKHMpLHImJm8uY3NzKHtwb3NpdGlvbjpHdH0pLGl8fChvLnhTZXR0ZXI9ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8sYT1uLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJ0c3BhbiIpLHI9bi5nZXRBdHRyaWJ1dGUoZSk7Zm9yKG89MDtvPGEubGVuZ3RoO28rKylpPWFbb10saS5nZXRBdHRyaWJ1dGUoZSk9PT1yJiZpLnNldEF0dHJpYnV0ZShlLHQpO24uc2V0QXR0cmlidXRlKGUsdCl9KSxvKX0sZm9udE1ldHJpY3M6ZnVuY3Rpb24odCxlKXt0PXR8fHRoaXMuc3R5bGUuZm9udFNpemUsZSYmZ3QuZ2V0Q29tcHV0ZWRTdHlsZSYmKGU9ZS5lbGVtZW50fHxlLHQ9Z3QuZ2V0Q29tcHV0ZWRTdHlsZShlLCIiKS5mb250U2l6ZSksdD0vcHgvLnRlc3QodCk/cih0KTovZW0vLnRlc3QodCk/MTIqcGFyc2VGbG9hdCh0KToxMjt2YXIgbj10PDI0P3QrNDp4dCgxLjIqdCksaT14dCguOCpuKTtyZXR1cm57aDpuLGI6aSxmOnR9fSxsYWJlbDpmdW5jdGlvbih0LGUsbixpLHIscyxsLGMscCl7ZnVuY3Rpb24gZCgpe3ZhciB0LGUsbj1qLmVsZW1lbnQuc3R5bGU7Zz0odm9pZCAwPT09d3x8dm9pZCAwPT09eHx8ei5zdHlsZXMudGV4dEFsaWduKSYmai50ZXh0U3RyJiZqLmdldEJCb3goKSx6LndpZHRoPSh3fHxnLndpZHRofHwwKSsyKlMrUCx6LmhlaWdodD0oeHx8Zy5oZWlnaHR8fDApKzIqUyx2PVMray5mb250TWV0cmljcyhuJiZuLmZvbnRTaXplLGopLmIseSYmKGZ8fCh0PXh0KC1DKlMpLGU9Yz8tdjowLHouYm94PWY9aT9rLnN5bWJvbChpLHQsZSx6LndpZHRoLHouaGVpZ2h0LEEpOmsucmVjdCh0LGUsei53aWR0aCx6LmhlaWdodCwwLEFbcmVdKSxmLmF0dHIoImZpbGwiLFF0KS5hZGQoeikpLGYuaXNJbWd8fGYuYXR0cihvKHt3aWR0aDp4dCh6LndpZHRoKSxoZWlnaHQ6eHQoei5oZWlnaHQpfSxBKSksQT1udWxsKX1mdW5jdGlvbiBoKCl7dmFyIHQsZT16LnN0eWxlcyxuPWUmJmUudGV4dEFsaWduLGk9UCtTKigxLUMpO3Q9Yz8wOnYsbSh3KSYmZyYmKCJjZW50ZXIiPT09bnx8InJpZ2h0Ij09PW4pJiYoaSs9e2NlbnRlcjouNSxyaWdodDoxfVtuXSoody1nLndpZHRoKSksaT09PWoueCYmdD09PWoueXx8KGouYXR0cigieCIsaSksdCE9PUgmJmouYXR0cigieSIsdCkpLGoueD1pLGoueT10fWZ1bmN0aW9uIHUodCxlKXtmP2YuYXR0cih0LGUpOkFbdF09ZX12YXIgZixnLHcseCxiLF8sdix5LGs9dGhpcyx6PWsuZyhwKSxqPWsudGV4dCgiIiwwLDAsbCkuYXR0cih7ekluZGV4OjF9KSxDPTAsUz0zLFA9MCxUPTAsQT17fTt6Lm9uQWRkPWZ1bmN0aW9uKCl7ai5hZGQoeiksei5hdHRyKHt0ZXh0OnR8fDA9PT10P3Q6IiIseDplLHk6bn0pLGYmJm0ocikmJnouYXR0cih7YW5jaG9yWDpyLGFuY2hvclk6c30pfSx6LndpZHRoU2V0dGVyPWZ1bmN0aW9uKHQpe3c9dH0sei5oZWlnaHRTZXR0ZXI9ZnVuY3Rpb24odCl7eD10fSx6LnBhZGRpbmdTZXR0ZXI9ZnVuY3Rpb24odCl7bSh0KSYmdCE9PVMmJihTPXQsaCgpKX0sei5wYWRkaW5nTGVmdFNldHRlcj1mdW5jdGlvbih0KXttKHQpJiZ0IT09UCYmKFA9dCxoKCkpfSx6LmFsaWduU2V0dGVyPWZ1bmN0aW9uKHQpe0M9e2xlZnQ6MCxjZW50ZXI6LjUscmlnaHQ6MX1bdF19LHoudGV4dFNldHRlcj1mdW5jdGlvbih0KXt0IT09SCYmai50ZXh0U2V0dGVyKHQpLGQoKSxoKCl9LHpbInN0cm9rZS13aWR0aFNldHRlciJdPWZ1bmN0aW9uKHQsZSl7dCYmKHk9ITApLFQ9dCUyLzIsdShlLHQpfSx6LnN0cm9rZVNldHRlcj16LmZpbGxTZXR0ZXI9ei5yU2V0dGVyPWZ1bmN0aW9uKHQsZSl7ImZpbGwiPT09ZSYmdCYmKHk9ITApLHUoZSx0KX0sei5hbmNob3JYU2V0dGVyPWZ1bmN0aW9uKHQsZSl7cj10LHUoZSx0K1QtYil9LHouYW5jaG9yWVNldHRlcj1mdW5jdGlvbih0LGUpe3M9dCx1KGUsdC1fKX0sei54U2V0dGVyPWZ1bmN0aW9uKHQpe3oueD10LEMmJih0LT1DKigod3x8Zy53aWR0aCkrUykpLGI9eHQodCksei5hdHRyKCJ0cmFuc2xhdGVYIixiKX0sei55U2V0dGVyPWZ1bmN0aW9uKHQpe189ei55PXh0KHQpLHouYXR0cigidHJhbnNsYXRlWSIsXyl9O3ZhciBOPXouY3NzO3JldHVybiBvKHose2NzczpmdW5jdGlvbih0KXtpZih0KXt2YXIgZT17fTt0PWEodCksbWUoei50ZXh0UHJvcHMsZnVuY3Rpb24obil7dFtuXSE9PUgmJihlW25dPXRbbl0sZGVsZXRlIHRbbl0pfSksai5jc3MoZSl9cmV0dXJuIE4uY2FsbCh6LHQpfSxnZXRCQm94OmZ1bmN0aW9uKCl7cmV0dXJue3dpZHRoOmcud2lkdGgrMipTLGhlaWdodDpnLmhlaWdodCsyKlMseDpnLngtUyx5OmcueS1TfX0sc2hhZG93OmZ1bmN0aW9uKHQpe3JldHVybiBmJiZmLnNoYWRvdyh0KSx6fSxkZXN0cm95OmZ1bmN0aW9uKCl7YmUoei5lbGVtZW50LCJtb3VzZWVudGVyIiksYmUoei5lbGVtZW50LCJtb3VzZWxlYXZlIiksaiYmKGo9ai5kZXN0cm95KCkpLGYmJihmPWYuZGVzdHJveSgpKSxELnByb3RvdHlwZS5kZXN0cm95LmNhbGwoeiksej1rPWQ9aD11PW51bGx9fSl9fSxXPU5lLG8oRC5wcm90b3R5cGUse2h0bWxDc3M6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuZWxlbWVudCxpPXQmJiJTUEFOIj09PW4udGFnTmFtZSYmdC53aWR0aDtyZXR1cm4gaSYmKGRlbGV0ZSB0LndpZHRoLGUudGV4dFdpZHRoPWksZS51cGRhdGVUcmFuc2Zvcm0oKSksZS5zdHlsZXM9byhlLnN0eWxlcyx0KSx4KGUuZWxlbWVudCx0KSxlfSxodG1sR2V0QkJveDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmVsZW1lbnQsbj10LmJCb3g7cmV0dXJuIG58fCgidGV4dCI9PT1lLm5vZGVOYW1lJiYoZS5zdHlsZS5wb3NpdGlvbj1HdCksbj10LmJCb3g9e3g6ZS5vZmZzZXRMZWZ0LHk6ZS5vZmZzZXRUb3Asd2lkdGg6ZS5vZmZzZXRXaWR0aCxoZWlnaHQ6ZS5vZmZzZXRIZWlnaHR9KSxufSxodG1sVXBkYXRlVHJhbnNmb3JtOmZ1bmN0aW9uKCl7aWYoIXRoaXMuYWRkZWQpcmV0dXJuIHZvaWQodGhpcy5hbGlnbk9uQWRkPSEwKTt2YXIgdD10aGlzLGU9dC5yZW5kZXJlcixuPXQuZWxlbWVudCxpPXQudHJhbnNsYXRlWHx8MCxvPXQudHJhbnNsYXRlWXx8MCxhPXQueHx8MCxzPXQueXx8MCxsPXQudGV4dEFsaWdufHwibGVmdCIsYz17bGVmdDowLGNlbnRlcjouNSxyaWdodDoxfVtsXSxwPXQuc2hhZG93cztpZih4KG4se21hcmdpbkxlZnQ6aSxtYXJnaW5Ub3A6b30pLHAmJm1lKHAsZnVuY3Rpb24odCl7eCh0LHttYXJnaW5MZWZ0OmkrMSxtYXJnaW5Ub3A6bysxfSl9KSx0LmludmVydGVkJiZtZShuLmNoaWxkTm9kZXMsZnVuY3Rpb24odCl7ZS5pbnZlcnRDaGlsZCh0LG4pfSksIlNQQU4iPT09bi50YWdOYW1lKXt2YXIgZCxoLHU9dC5yb3RhdGlvbixmPXIodC50ZXh0V2lkdGgpLGc9W3UsbCxuLmlubmVySFRNTCx0LnRleHRXaWR0aF0uam9pbigiLCIpO2chPT10LmNUVCYmKGg9ZS5mb250TWV0cmljcyhuLnN0eWxlLmZvbnRTaXplKS5iLG0odSkmJnQuc2V0U3BhblJvdGF0aW9uKHUsYyxoKSxkPXcodC5lbGVtV2lkdGgsbi5vZmZzZXRXaWR0aCksZD5mJiYvWyBcLV0vLnRlc3Qobi50ZXh0Q29udGVudHx8bi5pbm5lclRleHQpJiYoeChuLHt3aWR0aDpmK0t0LGRpc3BsYXk6ImJsb2NrIix3aGl0ZVNwYWNlOiJub3JtYWwifSksZD1mKSx0LmdldFNwYW5Db3JyZWN0aW9uKGQsaCxjLHUsbCkpLHgobix7bGVmdDphKyh0LnhDb3JyfHwwKStLdCx0b3A6cysodC55Q29ycnx8MCkrS3R9KSxJdCYmKGg9bi5vZmZzZXRIZWlnaHQpLHQuY1RUPWd9fSxzZXRTcGFuUm90YXRpb246ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXt9LG89QXQ/Ii1tcy10cmFuc2Zvcm0iOkl0PyItd2Via2l0LXRyYW5zZm9ybSI6QnQ/Ik1velRyYW5zZm9ybSI6VHQ/Ii1vLXRyYW5zZm9ybSI6IiI7aVtvXT1pLnRyYW5zZm9ybT0icm90YXRlKCIrdCsiZGVnKSIsaVtvKyhCdD8iT3JpZ2luIjoiLW9yaWdpbiIpXT1pLnRyYW5zZm9ybU9yaWdpbj0xMDAqZSsiJSAiK24rInB4Iix4KHRoaXMuZWxlbWVudCxpKX0sZ2V0U3BhbkNvcnJlY3Rpb246ZnVuY3Rpb24odCxlLG4pe3RoaXMueENvcnI9LXQqbix0aGlzLnlDb3JyPS1lfX0pLG8oTmUucHJvdG90eXBlLHtodG1sOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLmNyZWF0ZUVsZW1lbnQoInNwYW4iKSxhPWkuZWxlbWVudCxyPWkucmVuZGVyZXI7cmV0dXJuIGkudGV4dFNldHRlcj1mdW5jdGlvbih0KXt0IT09YS5pbm5lckhUTUwmJmRlbGV0ZSB0aGlzLmJCb3gsYS5pbm5lckhUTUw9dGhpcy50ZXh0U3RyPXR9LGkueFNldHRlcj1pLnlTZXR0ZXI9aS5hbGlnblNldHRlcj1pLnJvdGF0aW9uU2V0dGVyPWZ1bmN0aW9uKHQsZSl7ImFsaWduIj09PWUmJihlPSJ0ZXh0QWxpZ24iKSxpW2VdPXQsaS5odG1sVXBkYXRlVHJhbnNmb3JtKCl9LGkuYXR0cih7dGV4dDp0LHg6eHQoZSkseTp4dChuKX0pLmNzcyh7cG9zaXRpb246R3Qsd2hpdGVTcGFjZToibm93cmFwIixmb250RmFtaWx5OnRoaXMuc3R5bGUuZm9udEZhbWlseSxmb250U2l6ZTp0aGlzLnN0eWxlLmZvbnRTaXplfSksaS5jc3M9aS5odG1sQ3NzLHIuaXNTVkcmJihpLmFkZD1mdW5jdGlvbih0KXt2YXIgZSxuLHM9ci5ib3gucGFyZW50Tm9kZSxsPVtdO2lmKHRoaXMucGFyZW50R3JvdXA9dCx0KXtpZihlPXQuZGl2LCFlKXtmb3Iobj10O247KWwucHVzaChuKSxuPW4ucGFyZW50R3JvdXA7bWUobC5yZXZlcnNlKCksZnVuY3Rpb24odCl7dmFyIG47ZT10LmRpdj10LmRpdnx8YihZdCx7Y2xhc3NOYW1lOmYodC5lbGVtZW50LCJjbGFzcyIpfSx7cG9zaXRpb246R3QsbGVmdDoodC50cmFuc2xhdGVYfHwwKStLdCx0b3A6KHQudHJhbnNsYXRlWXx8MCkrS3R9LGV8fHMpLG49ZS5zdHlsZSxvKHQse3RyYW5zbGF0ZVhTZXR0ZXI6ZnVuY3Rpb24oZSxpKXtuLmxlZnQ9ZStLdCx0W2ldPWUsdC5kb1RyYW5zZm9ybT0hMH0sdHJhbnNsYXRlWVNldHRlcjpmdW5jdGlvbihlLGkpe24udG9wPWUrS3QsdFtpXT1lLHQuZG9UcmFuc2Zvcm09ITB9LHZpc2liaWxpdHlTZXR0ZXI6ZnVuY3Rpb24odCxlKXtuW2VdPXR9fSl9KX19ZWxzZSBlPXM7cmV0dXJuIGUuYXBwZW5kQ2hpbGQoYSksaS5hZGRlZD0hMCxpLmFsaWduT25BZGQmJmkuaHRtbFVwZGF0ZVRyYW5zZm9ybSgpLGl9KSxpfX0pO3ZhciBJZSxCZTtpZighRXQmJiFEdCl7QmU9e2luaXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9WyI8IixlLCcgZmlsbGVkPSJmIiBzdHJva2VkPSJmIiddLG89WyJwb3NpdGlvbjogIixHdCwiOyJdLGE9ZT09PVl0Oygic2hhcGUiPT09ZXx8YSkmJm8ucHVzaCgibGVmdDowO3RvcDowO3dpZHRoOjFweDtoZWlnaHQ6MXB4OyIpLG8ucHVzaCgidmlzaWJpbGl0eTogIixhP0p0OlZ0KSxpLnB1c2goJyBzdHlsZT0iJyxvLmpvaW4oIiIpLCciLz4nKSxlJiYoaT1hfHwic3BhbiI9PT1lfHwiaW1nIj09PWU/aS5qb2luKCIiKTp0LnByZXBWTUwoaSksbi5lbGVtZW50PWIoaSkpLG4ucmVuZGVyZXI9dH0sYWRkOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLnJlbmRlcmVyLGk9ZS5lbGVtZW50LG89bi5ib3gsYT10JiZ0LmludmVydGVkLHI9dD90LmVsZW1lbnR8fHQ6bztyZXR1cm4gYSYmbi5pbnZlcnRDaGlsZChpLHIpLHIuYXBwZW5kQ2hpbGQoaSksZS5hZGRlZD0hMCxlLmFsaWduT25BZGQmJiFlLmRlZmVyVXBkYXRlVHJhbnNmb3JtJiZlLnVwZGF0ZVRyYW5zZm9ybSgpLGUub25BZGQmJmUub25BZGQoKSxlfSx1cGRhdGVUcmFuc2Zvcm06RC5wcm90b3R5cGUuaHRtbFVwZGF0ZVRyYW5zZm9ybSxzZXRTcGFuUm90YXRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnJvdGF0aW9uLGU9enQodCpTdCksbj1qdCh0KlN0KTt4KHRoaXMuZWxlbWVudCx7ZmlsdGVyOnQ/WyJwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuTWF0cml4KE0xMT0iLGUsIiwgTTEyPSIsLW4sIiwgTTIxPSIsbiwiLCBNMjI9IixlLCIsIHNpemluZ01ldGhvZD0nYXV0byBleHBhbmQnKSJdLmpvaW4oIiIpOlF0fSl9LGdldFNwYW5Db3JyZWN0aW9uOmZ1bmN0aW9uKHQsZSxuLGksbyl7dmFyIGEscj1pP3p0KGkqU3QpOjEscz1pP2p0KGkqU3QpOjAsbD13KHRoaXMuZWxlbUhlaWdodCx0aGlzLmVsZW1lbnQub2Zmc2V0SGVpZ2h0KSxjPW8mJiJsZWZ0IiE9PW87dGhpcy54Q29ycj1yPDAmJi10LHRoaXMueUNvcnI9czwwJiYtbCxhPXIqczwwLHRoaXMueENvcnIrPXMqZSooYT8xLW46biksdGhpcy55Q29yci09ciplKihpP2E/bjoxLW46MSksYyYmKHRoaXMueENvcnItPXQqbioocjwwPy0xOjEpLGkmJih0aGlzLnlDb3JyLT1sKm4qKHM8MD8tMToxKSkseCh0aGlzLmVsZW1lbnQse3RleHRBbGlnbjpvfSkpfSxwYXRoVG9WTUw6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoLG49W107ZS0tOylwKHRbZV0pP25bZV09eHQoMTAqdFtlXSktNToiWiI9PT10W2VdP25bZV09IngiOihuW2VdPXRbZV0sIXQuaXNBcmN8fCJ3YSIhPT10W2VdJiYiYXQiIT09dFtlXXx8KG5bZSs1XT09PW5bZSs3XSYmKG5bZSs3XSs9dFtlKzddPnRbZSs1XT8xOi0xKSxuW2UrNl09PT1uW2UrOF0mJihuW2UrOF0rPXRbZSs4XT50W2UrNl0/MTotMSkpKTtyZXR1cm4gbi5qb2luKCIgIil8fCJ4In0sY2xpcDpmdW5jdGlvbih0KXt2YXIgZSxuLGk9dGhpcztyZXR1cm4gdD8oZT10Lm1lbWJlcnMsdShlLGkpLGUucHVzaChpKSxpLmRlc3Ryb3lDbGlwPWZ1bmN0aW9uKCl7dShlLGkpfSxuPXQuZ2V0Q1NTKGkpKTooaS5kZXN0cm95Q2xpcCYmaS5kZXN0cm95Q2xpcCgpLG49e2NsaXA6TnQ/ImluaGVyaXQiOiJyZWN0KGF1dG8pIn0pLGkuY3NzKG4pfSxjc3M6RC5wcm90b3R5cGUuaHRtbENzcyxzYWZlUmVtb3ZlQ2hpbGQ6ZnVuY3Rpb24odCl7dC5wYXJlbnROb2RlJiZJKHQpfSxkZXN0cm95OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGVzdHJveUNsaXAmJnRoaXMuZGVzdHJveUNsaXAoKSxELnByb3RvdHlwZS5kZXN0cm95LmFwcGx5KHRoaXMpfSxvbjpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmVsZW1lbnRbIm9uIit0XT1mdW5jdGlvbigpe3ZhciB0PWd0LmV2ZW50O3QudGFyZ2V0PXQuc3JjRWxlbWVudCxlKHQpfSx0aGlzfSxjdXRPZmZQYXRoOmZ1bmN0aW9uKHQsZSl7dmFyIG47cmV0dXJuIHQ9dC5zcGxpdCgvWyAsXS8pLG49dC5sZW5ndGgsOSE9PW4mJjExIT09bnx8KHRbbi00XT10W24tMl09cih0W24tMl0pLTEwKmUpLHQuam9pbigiICIpfSxzaGFkb3c6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8sYSxzLGwsYyxwLGQ9W10saD10aGlzLmVsZW1lbnQsdT10aGlzLnJlbmRlcmVyLG09aC5zdHlsZSxmPWgucGF0aDtpZihmJiYic3RyaW5nIiE9dHlwZW9mIGYudmFsdWUmJihmPSJ4IiksbD1mLHQpe2ZvcihjPXcodC53aWR0aCwzKSxwPSh0Lm9wYWNpdHl8fC4xNSkvYyxpPTE7aTw9MztpKyspcz0yKmMrMS0yKmksbiYmKGw9dGhpcy5jdXRPZmZQYXRoKGYudmFsdWUscysuNSkpLGE9Wyc8c2hhcGUgaXNTaGFkb3c9InRydWUiIHN0cm9rZXdlaWdodD0iJyxzLCciIGZpbGxlZD0iZmFsc2UiIHBhdGg9IicsbCwnIiBjb29yZHNpemU9IjEwIDEwIiBzdHlsZT0iJyxoLnN0eWxlLmNzc1RleHQsJyIgLz4nXSxvPWIodS5wcmVwVk1MKGEpLG51bGwse2xlZnQ6cihtLmxlZnQpK3codC5vZmZzZXRYLDEpLHRvcDpyKG0udG9wKSt3KHQub2Zmc2V0WSwxKX0pLG4mJihvLmN1dE9mZj1zKzEpLGE9Wyc8c3Ryb2tlIGNvbG9yPSInLHQuY29sb3J8fCJibGFjayIsJyIgb3BhY2l0eT0iJyxwKmksJyIvPiddLGIodS5wcmVwVk1MKGEpLG51bGwsbnVsbCxvKSxlP2UuZWxlbWVudC5hcHBlbmRDaGlsZChvKTpoLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKG8saCksZC5wdXNoKG8pO3RoaXMuc2hhZG93cz1kfXJldHVybiB0aGlzfSx1cGRhdGVTaGFkb3dzOlJ0LHNldEF0dHI6ZnVuY3Rpb24odCxlKXtOdD90aGlzLmVsZW1lbnRbdF09ZTp0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKHQsZSl9LGNsYXNzU2V0dGVyOmZ1bmN0aW9uKHQpe3RoaXMuZWxlbWVudC5jbGFzc05hbWU9dH0sZGFzaHN0eWxlU2V0dGVyOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzdHJva2UiKVswXXx8Yih0aGlzLnJlbmRlcmVyLnByZXBWTUwoWyI8c3Ryb2tlLz4iXSksbnVsbCxudWxsLG4pO2lbZV09dHx8InNvbGlkIix0aGlzW2VdPXR9LGRTZXR0ZXI6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG89dGhpcy5zaGFkb3dzO2lmKHQ9dHx8W10sdGhpcy5kPXQuam9pbiYmdC5qb2luKCIgIiksbi5wYXRoPXQ9dGhpcy5wYXRoVG9WTUwodCksbylmb3IoaT1vLmxlbmd0aDtpLS07KW9baV0ucGF0aD1vW2ldLmN1dE9mZj90aGlzLmN1dE9mZlBhdGgodCxvW2ldLmN1dE9mZik6dDt0aGlzLnNldEF0dHIoZSx0KX0sZmlsbFNldHRlcjpmdW5jdGlvbih0LGUsbil7dmFyIGk9bi5ub2RlTmFtZTsiU1BBTiI9PT1pP24uc3R5bGUuY29sb3I9dDoiSU1HIiE9PWkmJihuLmZpbGxlZD10IT09UXQsdGhpcy5zZXRBdHRyKCJmaWxsY29sb3IiLHRoaXMucmVuZGVyZXIuY29sb3IodCxuLGUsdGhpcykpKX0sb3BhY2l0eVNldHRlcjpSdCxyb3RhdGlvblNldHRlcjpmdW5jdGlvbih0LGUsbil7dmFyIGk9bi5zdHlsZTt0aGlzW2VdPWlbZV09dCxpLmxlZnQ9LXh0KGp0KHQqU3QpKzEpK0t0LGkudG9wPXh0KHp0KHQqU3QpKStLdH0sc3Ryb2tlU2V0dGVyOmZ1bmN0aW9uKHQsZSxuKXt0aGlzLnNldEF0dHIoInN0cm9rZWNvbG9yIix0aGlzLnJlbmRlcmVyLmNvbG9yKHQsbixlKSl9LCJzdHJva2Utd2lkdGhTZXR0ZXIiOmZ1bmN0aW9uKHQsZSxuKXtuLnN0cm9rZWQ9ISF0LHRoaXNbZV09dCxwKHQpJiYodCs9S3QpLHRoaXMuc2V0QXR0cigic3Ryb2tld2VpZ2h0Iix0KX0sdGl0bGVTZXR0ZXI6ZnVuY3Rpb24odCxlKXt0aGlzLnNldEF0dHIoZSx0KX0sdmlzaWJpbGl0eVNldHRlcjpmdW5jdGlvbih0LGUsbil7ImluaGVyaXQiPT09dCYmKHQ9VnQpLHRoaXMuc2hhZG93cyYmbWUodGhpcy5zaGFkb3dzLGZ1bmN0aW9uKG4pe24uc3R5bGVbZV09dH0pLCJESVYiPT09bi5ub2RlTmFtZSYmKHQ9dD09PUp0PyItOTk5ZW0iOjAsTnR8fChuLnN0eWxlW2VdPXQ/VnQ6SnQpLGU9InRvcCIpLG4uc3R5bGVbZV09dH0seFNldHRlcjpmdW5jdGlvbih0LGUsbil7dGhpc1tlXT10LCJ4Ij09PWU/ZT0ibGVmdCI6InkiPT09ZSYmKGU9InRvcCIpLHRoaXMudXBkYXRlQ2xpcHBpbmc/KHRoaXNbZV09dCx0aGlzLnVwZGF0ZUNsaXBwaW5nKCkpOm4uc3R5bGVbZV09dH0sekluZGV4U2V0dGVyOmZ1bmN0aW9uKHQsZSxuKXtuLnN0eWxlW2VdPXR9fSxsZS5WTUxFbGVtZW50PUJlPV8oRCxCZSksQmUucHJvdG90eXBlLnlTZXR0ZXI9QmUucHJvdG90eXBlLndpZHRoU2V0dGVyPUJlLnByb3RvdHlwZS5oZWlnaHRTZXR0ZXI9QmUucHJvdG90eXBlLnhTZXR0ZXI7dmFyIHFlPXtFbGVtZW50OkJlLGlzSUU4OlB0LmluZGV4T2YoIk1TSUUgOC4wIik+LTEsaW5pdDpmdW5jdGlvbih0LGUsbixpKXt2YXIgYSxyLHMsbD10aGlzO2lmKGwuYWxpZ25lZE9iamVjdHM9W10sYT1sLmNyZWF0ZUVsZW1lbnQoWXQpLmNzcyhvKHRoaXMuZ2V0U3R5bGUoaSkse3Bvc2l0aW9uOlh0fSkpLHI9YS5lbGVtZW50LHQuYXBwZW5kQ2hpbGQoYS5lbGVtZW50KSxsLmlzVk1MPSEwLGwuYm94PXIsbC5ib3hXcmFwcGVyPWEsbC5jYWNoZT17fSxsLnNldFNpemUoZSxuLCExKSwhZnQubmFtZXNwYWNlcy5oY3Ype2Z0Lm5hbWVzcGFjZXMuYWRkKCJoY3YiLCJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbCIpLHM9ImhjdlxcOmZpbGwsIGhjdlxcOnBhdGgsIGhjdlxcOnNoYXBlLCBoY3ZcXDpzdHJva2V7IGJlaGF2aW9yOnVybCgjZGVmYXVsdCNWTUwpOyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH0gIjt0cnl7ZnQuY3JlYXRlU3R5bGVTaGVldCgpLmNzc1RleHQ9c31jYXRjaChjKXtmdC5zdHlsZVNoZWV0c1swXS5jc3NUZXh0Kz1zfX19LGlzSGlkZGVuOmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuYm94Lm9mZnNldFdpZHRofSxjbGlwUmVjdDpmdW5jdGlvbih0LGUsbixpKXt2YXIgYT10aGlzLmNyZWF0ZUVsZW1lbnQoKSxyPWwodCk7cmV0dXJuIG8oYSx7bWVtYmVyczpbXSxsZWZ0OihyP3QueDp0KSsxLHRvcDoocj90Lnk6ZSkrMSx3aWR0aDoocj90LndpZHRoOm4pLTEsaGVpZ2h0OihyP3QuaGVpZ2h0OmkpLTEsZ2V0Q1NTOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZWxlbWVudCxuPWUubm9kZU5hbWUsaT0ic2hhcGUiPT09bixhPXQuaW52ZXJ0ZWQscj10aGlzLHM9ci50b3AtKGk/ZS5vZmZzZXRUb3A6MCksbD1yLmxlZnQsYz1sK3Iud2lkdGgscD1zK3IuaGVpZ2h0LGQ9e2NsaXA6InJlY3QoIit4dChhP2w6cykrInB4LCIreHQoYT9wOmMpKyJweCwiK3h0KGE/YzpwKSsicHgsIit4dChhP3M6bCkrInB4KSIKfTtyZXR1cm4hYSYmTnQmJiJESVYiPT09biYmbyhkLHt3aWR0aDpjK0t0LGhlaWdodDpwK0t0fSksZH0sdXBkYXRlQ2xpcHBpbmc6ZnVuY3Rpb24oKXttZShhLm1lbWJlcnMsZnVuY3Rpb24odCl7dC5lbGVtZW50JiZ0LmNzcyhhLmdldENTUyh0KSl9KX19KX0sY29sb3I6ZnVuY3Rpb24odCxlLG4saSl7dmFyIG8sYSxyLHM9dGhpcyxsPS9ecmdiYS8sYz1RdDtpZih0JiZ0LmxpbmVhckdyYWRpZW50P3I9ImdyYWRpZW50Ijp0JiZ0LnJhZGlhbEdyYWRpZW50JiYocj0icGF0dGVybiIpLHIpe3ZhciBwLGQsaCx1LG0sZixnLHcseCxfLHYseSxrPXQubGluZWFyR3JhZGllbnR8fHQucmFkaWFsR3JhZGllbnQsej0iIixqPXQuc3RvcHMsQz1bXSxTPWZ1bmN0aW9uKCl7YT1bJzxmaWxsIGNvbG9ycz0iJytDLmpvaW4oIiwiKSsnIiBvcGFjaXR5PSInLHcsJyIgbzpvcGFjaXR5Mj0iJyxnLCciIHR5cGU9IicsciwnIiAnLHosJ2ZvY3VzPSIxMDAlIiBtZXRob2Q9ImFueSIgLz4nXSxiKHMucHJlcFZNTChhKSxudWxsLG51bGwsZSl9O2lmKHY9alswXSx5PWpbai5sZW5ndGgtMV0sdlswXT4wJiZqLnVuc2hpZnQoWzAsdlsxXV0pLHlbMF08MSYmai5wdXNoKFsxLHlbMV1dKSxtZShqLGZ1bmN0aW9uKHQsZSl7bC50ZXN0KHRbMV0pPyhvPUFlKHRbMV0pLHA9by5nZXQoInJnYiIpLGQ9by5nZXQoImEiKSk6KHA9dFsxXSxkPTEpLEMucHVzaCgxMDAqdFswXSsiJSAiK3ApLGU/KHc9ZCx4PXApOihnPWQsXz1wKX0pLCJmaWxsIj09PW4paWYoImdyYWRpZW50Ij09PXIpaD1rLngxfHxrWzBdfHwwLHU9ay55MXx8a1sxXXx8MCxtPWsueDJ8fGtbMl18fDAsZj1rLnkyfHxrWzNdfHwwLHo9J2FuZ2xlPSInKyg5MC0xODAqd3QuYXRhbigoZi11KS8obS1oKSkvQ3QpKyciJyxTKCk7ZWxzZXt2YXIgUCxUPWsucixBPTIqVCxOPTIqVCxJPWsuY3gsQj1rLmN5LHE9ZS5yYWRpYWxSZWZlcmVuY2UsTz1mdW5jdGlvbigpe3EmJihQPWkuZ2V0QkJveCgpLEkrPShxWzBdLVAueCkvUC53aWR0aC0uNSxCKz0ocVsxXS1QLnkpL1AuaGVpZ2h0LS41LEEqPXFbMl0vUC53aWR0aCxOKj1xWzJdL1AuaGVpZ2h0KSx6PSdzcmM9IicrRy5nbG9iYWwuVk1MUmFkaWFsR3JhZGllbnRVUkwrJyIgc2l6ZT0iJytBKyIsIitOKyciIG9yaWdpbj0iMC41LDAuNSIgcG9zaXRpb249IicrSSsiLCIrQisnIiBjb2xvcjI9IicrXysnIiAnLFMoKX07aS5hZGRlZD9PKCk6aS5vbkFkZD1PLGM9eH1lbHNlIGM9cH1lbHNlIGlmKGwudGVzdCh0KSYmIklNRyIhPT1lLnRhZ05hbWUpbz1BZSh0KSxhPVsiPCIsbiwnIG9wYWNpdHk9Iicsby5nZXQoImEiKSwnIi8+J10sYih0aGlzLnByZXBWTUwoYSksbnVsbCxudWxsLGUpLGM9by5nZXQoInJnYiIpO2Vsc2V7dmFyIEU9ZS5nZXRFbGVtZW50c0J5VGFnTmFtZShuKTtFLmxlbmd0aCYmKEVbMF0ub3BhY2l0eT0xLEVbMF0udHlwZT0ic29saWQiKSxjPXR9cmV0dXJuIGN9LHByZXBWTUw6ZnVuY3Rpb24odCl7dmFyIGU9ImRpc3BsYXk6aW5saW5lLWJsb2NrO2JlaGF2aW9yOnVybCgjZGVmYXVsdCNWTUwpOyIsbj10aGlzLmlzSUU4O3JldHVybiB0PXQuam9pbigiIiksbj8odD10LnJlcGxhY2UoIi8+IiwnIHhtbG5zPSJ1cm46c2NoZW1hcy1taWNyb3NvZnQtY29tOnZtbCIgLz4nKSx0PXQuaW5kZXhPZignc3R5bGU9IicpPT09LTE/dC5yZXBsYWNlKCIvPiIsJyBzdHlsZT0iJytlKyciIC8+Jyk6dC5yZXBsYWNlKCdzdHlsZT0iJywnc3R5bGU9IicrZSkpOnQ9dC5yZXBsYWNlKCI8IiwiPGhjdjoiKSx0fSx0ZXh0Ok5lLnByb3RvdHlwZS5odG1sLHBhdGg6ZnVuY3Rpb24odCl7dmFyIGU9e2Nvb3Jkc2l6ZToiMTAgMTAifTtyZXR1cm4gYyh0KT9lLmQ9dDpsKHQpJiZvKGUsdCksdGhpcy5jcmVhdGVFbGVtZW50KCJzaGFwZSIpLmF0dHIoZSl9LGNpcmNsZTpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcy5zeW1ib2woImNpcmNsZSIpO3JldHVybiBsKHQpJiYobj10LnIsZT10LnksdD10LngpLGkuaXNDaXJjbGU9ITAsaS5yPW4saS5hdHRyKHt4OnQseTplfSl9LGc6ZnVuY3Rpb24odCl7dmFyIGUsbjtyZXR1cm4gdCYmKG49e2NsYXNzTmFtZTpadCt0LCJjbGFzcyI6WnQrdH0pLGU9dGhpcy5jcmVhdGVFbGVtZW50KFl0KS5hdHRyKG4pfSxpbWFnZTpmdW5jdGlvbih0LGUsbixpLG8pe3ZhciBhPXRoaXMuY3JlYXRlRWxlbWVudCgiaW1nIikuYXR0cih7c3JjOnR9KTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4xJiZhLmF0dHIoe3g6ZSx5Om4sd2lkdGg6aSxoZWlnaHQ6b30pLGF9LGNyZWF0ZUVsZW1lbnQ6ZnVuY3Rpb24odCl7cmV0dXJuInJlY3QiPT09dD90aGlzLnN5bWJvbCh0KTpOZS5wcm90b3R5cGUuY3JlYXRlRWxlbWVudC5jYWxsKHRoaXMsdCl9LGludmVydENoaWxkOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPWUuc3R5bGUsbz0iSU1HIj09PXQudGFnTmFtZSYmdC5zdHlsZTt4KHQse2ZsaXA6IngiLGxlZnQ6cihpLndpZHRoKS0obz9yKG8udG9wKToxKSx0b3A6cihpLmhlaWdodCktKG8/cihvLmxlZnQpOjEpLHJvdGF0aW9uOi05MH0pLG1lKHQuY2hpbGROb2RlcyxmdW5jdGlvbihlKXtuLmludmVydENoaWxkKGUsdCl9KX0sc3ltYm9sczp7YXJjOmZ1bmN0aW9uKHQsZSxuLGksbyl7dmFyIGEscj1vLnN0YXJ0LHM9by5lbmQsbD1vLnJ8fG58fGksYz1vLmlubmVyUixwPXp0KHIpLGQ9anQociksaD16dChzKSx1PWp0KHMpO3JldHVybiBzLXI9PT0wP1sieCJdOihhPVsid2EiLHQtbCxlLWwsdCtsLGUrbCx0K2wqcCxlK2wqZCx0K2wqaCxlK2wqdV0sby5vcGVuJiYhYyYmYS5wdXNoKCJlIix0ZSx0LGUpLGEucHVzaCgiYXQiLHQtYyxlLWMsdCtjLGUrYyx0K2MqaCxlK2MqdSx0K2MqcCxlK2MqZCwieCIsImUiKSxhLmlzQXJjPSEwLGEpfSxjaXJjbGU6ZnVuY3Rpb24odCxlLG4saSxvKXtyZXR1cm4gbyYmKG49aT0yKm8uciksbyYmby5pc0NpcmNsZSYmKHQtPW4vMixlLT1pLzIpLFsid2EiLHQsZSx0K24sZStpLHQrbixlK2kvMix0K24sZStpLzIsImUiXX0scmVjdDpmdW5jdGlvbih0LGUsbixpLG8pe3JldHVybiBOZS5wcm90b3R5cGUuc3ltYm9sc1ttKG8pJiZvLnI/ImNhbGxvdXQiOiJzcXVhcmUiXS5jYWxsKDAsdCxlLG4saSxvKX19fTtsZS5WTUxSZW5kZXJlcj1JZT1mdW5jdGlvbigpe3RoaXMuaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LEllLnByb3RvdHlwZT1hKE5lLnByb3RvdHlwZSxxZSksVz1JZX1OZS5wcm90b3R5cGUubWVhc3VyZVNwYW5XaWR0aD1mdW5jdGlvbih0LGUpe3ZhciBuLGk9ZnQuY3JlYXRlRWxlbWVudCgic3BhbiIpLG89ZnQuY3JlYXRlVGV4dE5vZGUodCk7cmV0dXJuIGkuYXBwZW5kQ2hpbGQobykseChpLGUpLHRoaXMuYm94LmFwcGVuZENoaWxkKGkpLG49aS5vZmZzZXRXaWR0aCxJKGkpLG59O3ZhciBPZSxFZTtEdCYmKGxlLkNhblZHUmVuZGVyZXI9T2U9ZnVuY3Rpb24oKXtPdD0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCJ9LE9lLnByb3RvdHlwZS5zeW1ib2xzPXt9LEVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3ZhciB0LG49ZS5sZW5ndGg7Zm9yKHQ9MDt0PG47dCsrKWVbdF0oKTtlPVtdfXZhciBlPVtdO3JldHVybntwdXNoOmZ1bmN0aW9uKG4saSl7MD09PWUubGVuZ3RoJiZoZShpLHQpLGUucHVzaChuKX19fSgpLFc9T2UpLEYucHJvdG90eXBlPXthZGRMYWJlbDpmdW5jdGlvbigpe3ZhciB0LGUsbixpLGE9dGhpcyxyPWEuYXhpcyxzPXIub3B0aW9ucyxsPXIuY2hhcnQsYz1yLmhvcml6LGQ9ci5jYXRlZ29yaWVzLHU9ci5uYW1lcyxmPWEucG9zLGc9cy5sYWJlbHMseD1nLnJvdGF0aW9uLGI9ci50aWNrUG9zaXRpb25zLF89YyYmZCYmIWcuc3RlcCYmIWcuc3RhZ2dlckxpbmVzJiYhZy5yb3RhdGlvbiYmbC5wbG90V2lkdGgvYi5sZW5ndGh8fCFjJiYobC5tYXJnaW5bM118fC4zMypsLmNoYXJ0V2lkdGgpLHY9Zj09PWJbMF0seT1mPT09YltiLmxlbmd0aC0xXSxrPWQ/dyhkW2ZdLHVbZl0sZik6Zix6PWEubGFiZWwsaj1iLmluZm87ci5pc0RhdGV0aW1lQXhpcyYmaiYmKGk9cy5kYXRlVGltZUxhYmVsRm9ybWF0c1tqLmhpZ2hlclJhbmtzW2ZdfHxqLnVuaXROYW1lXSksYS5pc0ZpcnN0PXYsYS5pc0xhc3Q9eSx0PXIubGFiZWxGb3JtYXR0ZXIuY2FsbCh7YXhpczpyLGNoYXJ0OmwsaXNGaXJzdDp2LGlzTGFzdDp5LGRhdGVUaW1lTGFiZWxGb3JtYXQ6aSx2YWx1ZTpyLmlzTG9nP0IoaChrKSk6a30pLGU9XyYme3dpZHRoOnZ0KDEseHQoXy0yKihnLnBhZGRpbmd8fDEwKSkpK0t0fSxtKHopP3omJnouYXR0cih7dGV4dDp0fSkuY3NzKGUpOihuPXthbGlnbjpyLmxhYmVsQWxpZ259LHAoeCkmJihuLnJvdGF0aW9uPXgpLF8mJmcuZWxsaXBzaXMmJihlLkhjSGVpZ2h0PXIubGVuL2IubGVuZ3RoKSxhLmxhYmVsPXo9bSh0KSYmZy5lbmFibGVkP2wucmVuZGVyZXIudGV4dCh0LDAsMCxnLnVzZUhUTUwpLmF0dHIobikuY3NzKG8oZSxnLnN0eWxlKSkuYWRkKHIubGFiZWxHcm91cCk6bnVsbCxyLnRpY2tCYXNlbGluZT1sLnJlbmRlcmVyLmZvbnRNZXRyaWNzKGcuc3R5bGUuZm9udFNpemUseikuYix4JiYyPT09ci5zaWRlJiYoci50aWNrQmFzZWxpbmUqPXp0KHgqU3QpKSksYS55T2Zmc2V0PXo/dyhnLnksci50aWNrQmFzZWxpbmUrKDI9PT1yLnNpZGU/ODotKHouZ2V0QkJveCgpLmhlaWdodC8yKSkpOjB9LGdldExhYmVsU2l6ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMubGFiZWwsZT10aGlzLmF4aXM7cmV0dXJuIHQ/dC5nZXRCQm94KClbZS5ob3Jpej8iaGVpZ2h0Ijoid2lkdGgiXTowfSxnZXRMYWJlbFNpZGVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5sYWJlbC5nZXRCQm94KCksZT10aGlzLmF4aXMsbj1lLmhvcml6LGk9ZS5vcHRpb25zLG89aS5sYWJlbHMsYT1uP3Qud2lkdGg6dC5oZWlnaHQscj1uP28ueC1hKntsZWZ0OjAsY2VudGVyOi41LHJpZ2h0OjF9W2UubGFiZWxBbGlnbl06MCxzPW4/YStyOmE7cmV0dXJuW3Isc119LGhhbmRsZU92ZXJmbG93OmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxvLGEscixzPSEwLGw9dGhpcy5heGlzLGM9dGhpcy5pc0ZpcnN0LHA9dGhpcy5pc0xhc3QsZD1sLmhvcml6LGg9ZD9lLng6ZS55LHU9bC5yZXZlcnNlZCxtPWwudGlja1Bvc2l0aW9ucyxmPXRoaXMuZ2V0TGFiZWxTaWRlcygpLGc9ZlswXSx3PWZbMV0seD10aGlzLmxhYmVsLmxpbmUsYj14fHwwLF89bC5sYWJlbEVkZ2Usdj1sLmp1c3RpZnlMYWJlbHMmJihjfHxwKTtpZihfW2JdPT09SHx8aCtnPl9bYl0/X1tiXT1oK3c6dnx8KHM9ITEpLHYpe3I9bC5qdXN0aWZ5VG9QbG90LG49cj9sLnBvczowLGk9cj9uK2wubGVuOmwuY2hhcnQuY2hhcnRXaWR0aDtkbyB0Kz1jPzE6LTEsbz1sLnRpY2tzW21bdF1dO3doaWxlKG1bdF0mJighb3x8IW8ubGFiZWx8fG8ubGFiZWwubGluZSE9PXgpKTthPW8mJm8ubGFiZWwueHkmJm8ubGFiZWwueHkueCtvLmdldExhYmVsU2lkZXMoKVtjPzA6MV0sYyYmIXV8fHAmJnU/aCtnPG4mJihoPW4tZyxvJiZoK3c+YSYmKHM9ITEpKTpoK3c+aSYmKGg9aS13LG8mJmgrZzxhJiYocz0hMSkpLGUueD1ofXJldHVybiBzfSxnZXRQb3NpdGlvbjpmdW5jdGlvbih0LGUsbixpKXt2YXIgbz10aGlzLmF4aXMsYT1vLmNoYXJ0LHI9aSYmYS5vbGRDaGFydEhlaWdodHx8YS5jaGFydEhlaWdodDtyZXR1cm57eDp0P28udHJhbnNsYXRlKGUrbixudWxsLG51bGwsaSkrby50cmFuc0I6by5sZWZ0K28ub2Zmc2V0KyhvLm9wcG9zaXRlPyhpJiZhLm9sZENoYXJ0V2lkdGh8fGEuY2hhcnRXaWR0aCktby5yaWdodC1vLmxlZnQ6MCkseTp0P3Itby5ib3R0b20rby5vZmZzZXQtKG8ub3Bwb3NpdGU/by5oZWlnaHQ6MCk6ci1vLnRyYW5zbGF0ZShlK24sbnVsbCxudWxsLGkpLW8udHJhbnNCfX0sZ2V0TGFiZWxQb3NpdGlvbjpmdW5jdGlvbih0LGUsbixpLG8sYSxyLHMpe3ZhciBsPXRoaXMuYXhpcyxjPWwudHJhbnNBLHA9bC5yZXZlcnNlZCxkPWwuc3RhZ2dlckxpbmVzO3JldHVybiB0PXQrby54LShhJiZpP2EqYyoocD8tMToxKTowKSxlPWUrdGhpcy55T2Zmc2V0LShhJiYhaT9hKmMqKHA/MTotMSk6MCksZCYmKG4ubGluZT1yLyhzfHwxKSVkLGUrPW4ubGluZSoobC5sYWJlbE9mZnNldC9kKSkse3g6dCx5OmV9fSxnZXRNYXJrUGF0aDpmdW5jdGlvbih0LGUsbixpLG8sYSl7cmV0dXJuIGEuY3Jpc3BMaW5lKFt0ZSx0LGUsZWUsdCsobz8wOi1uKSxlKyhvP246MCldLGkpfSxyZW5kZXI6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8sYSxyPXRoaXMscz1yLmF4aXMsbD1zLm9wdGlvbnMsYz1zLmNoYXJ0LHA9Yy5yZW5kZXJlcixkPXMuaG9yaXosaD1yLnR5cGUsdT1yLmxhYmVsLG09ci5wb3MsZj1sLmxhYmVscyxnPXIuZ3JpZExpbmUseD1oP2grIkdyaWQiOiJncmlkIixiPWg/aCsiVGljayI6InRpY2siLF89bFt4KyJMaW5lV2lkdGgiXSx2PWxbeCsiTGluZUNvbG9yIl0seT1sW3grIkxpbmVEYXNoU3R5bGUiXSxrPWxbYisiTGVuZ3RoIl0sej1sW2IrIldpZHRoIl18fDAsaj1sW2IrIkNvbG9yIl0sQz1sW2IrIlBvc2l0aW9uIl0sUz1yLm1hcmssUD1mLnN0ZXAsVD0hMCxBPXMudGlja21hcmtPZmZzZXQsTj1yLmdldFBvc2l0aW9uKGQsbSxBLGUpLEk9Ti54LEI9Ti55LHE9ZCYmST09PXMucG9zK3MubGVufHwhZCYmQj09PXMucG9zPy0xOjE7bj13KG4sMSksdGhpcy5pc0FjdGl2ZT0hMCxfJiYoaT1zLmdldFBsb3RMaW5lUGF0aChtK0EsXypxLGUsITApLGc9PT1IJiYoYT17c3Ryb2tlOnYsInN0cm9rZS13aWR0aCI6X30seSYmKGEuZGFzaHN0eWxlPXkpLGh8fChhLnpJbmRleD0xKSxlJiYoYS5vcGFjaXR5PTApLHIuZ3JpZExpbmU9Zz1fP3AucGF0aChpKS5hdHRyKGEpLmFkZChzLmdyaWRHcm91cCk6bnVsbCksIWUmJmcmJmkmJmdbci5pc05ldz8iYXR0ciI6ImFuaW1hdGUiXSh7ZDppLG9wYWNpdHk6bn0pKSx6JiZrJiYoImluc2lkZSI9PT1DJiYoaz0taykscy5vcHBvc2l0ZSYmKGs9LWspLG89ci5nZXRNYXJrUGF0aChJLEIsayx6KnEsZCxwKSxTP1MuYW5pbWF0ZSh7ZDpvLG9wYWNpdHk6bn0pOnIubWFyaz1wLnBhdGgobykuYXR0cih7c3Ryb2tlOmosInN0cm9rZS13aWR0aCI6eixvcGFjaXR5Om59KS5hZGQocy5heGlzR3JvdXApKSx1JiYhaXNOYU4oSSkmJih1Lnh5PU49ci5nZXRMYWJlbFBvc2l0aW9uKEksQix1LGQsZixBLHQsUCksci5pc0ZpcnN0JiYhci5pc0xhc3QmJiF3KGwuc2hvd0ZpcnN0TGFiZWwsMSl8fHIuaXNMYXN0JiYhci5pc0ZpcnN0JiYhdyhsLnNob3dMYXN0TGFiZWwsMSk/VD0hMTpzLmlzUmFkaWFsfHxmLnN0ZXB8fGYucm90YXRpb258fGV8fDA9PT1ufHwoVD1yLmhhbmRsZU92ZXJmbG93KHQsTikpLFAmJnQlUCYmKFQ9ITEpLFQmJiFpc05hTihOLnkpPyhOLm9wYWNpdHk9bix1W3IuaXNOZXc/ImF0dHIiOiJhbmltYXRlIl0oTiksci5pc05ldz0hMSk6dS5hdHRyKCJ5IiwtOTk5OSkpfSxkZXN0cm95OmZ1bmN0aW9uKCl7Tih0aGlzLHRoaXMuYXhpcyl9fSxsZS5QbG90TGluZU9yQmFuZD1mdW5jdGlvbih0LGUpe3RoaXMuYXhpcz10LGUmJih0aGlzLm9wdGlvbnM9ZSx0aGlzLmlkPWUuaWQpfSxsZS5QbG90TGluZU9yQmFuZC5wcm90b3R5cGU9e3JlbmRlcjpmdW5jdGlvbigpe3ZhciB0LGUsbixpLG8scixzPXRoaXMsbD1zLmF4aXMsYz1sLmhvcml6LHA9KGwucG9pbnRSYW5nZXx8MCkvMixoPXMub3B0aW9ucyx1PWgubGFiZWwsZj1zLmxhYmVsLGc9aC53aWR0aCx3PWgudG8seD1oLmZyb20sYj1tKHgpJiZtKHcpLF89aC52YWx1ZSx2PWguZGFzaFN0eWxlLHk9cy5zdmdFbGVtLGs9W10sej1oLmNvbG9yLGo9aC56SW5kZXgsQz1oLmV2ZW50cyxTPXt9LFA9bC5jaGFydC5yZW5kZXJlcjtpZihsLmlzTG9nJiYoeD1kKHgpLHc9ZCh3KSxfPWQoXykpLGcpaz1sLmdldFBsb3RMaW5lUGF0aChfLGcpLFM9e3N0cm9rZTp6LCJzdHJva2Utd2lkdGgiOmd9LHYmJihTLmRhc2hzdHlsZT12KTtlbHNle2lmKCFiKXJldHVybjt4PXZ0KHgsbC5taW4tcCksdz15dCh3LGwubWF4K3ApLGs9bC5nZXRQbG90QmFuZFBhdGgoeCx3LGgpLHomJihTLmZpbGw9eiksaC5ib3JkZXJXaWR0aCYmKFMuc3Ryb2tlPWguYm9yZGVyQ29sb3IsU1sic3Ryb2tlLXdpZHRoIl09aC5ib3JkZXJXaWR0aCl9aWYobShqKSYmKFMuekluZGV4PWopLHkpaz95LmFuaW1hdGUoe2Q6a30sbnVsbCx5Lm9uR2V0UGF0aCk6KHkuaGlkZSgpLHkub25HZXRQYXRoPWZ1bmN0aW9uKCl7eS5zaG93KCl9LGYmJihzLmxhYmVsPWY9Zi5kZXN0cm95KCkpKTtlbHNlIGlmKGsmJmsubGVuZ3RoJiYocy5zdmdFbGVtPXk9UC5wYXRoKGspLmF0dHIoUykuYWRkKCksQykpe3Q9ZnVuY3Rpb24odCl7eS5vbih0LGZ1bmN0aW9uKGUpe0NbdF0uYXBwbHkocyxbZV0pfSl9O2ZvcihlIGluIEMpdChlKX1yZXR1cm4gdSYmbSh1LnRleHQpJiZrJiZrLmxlbmd0aCYmbC53aWR0aD4wJiZsLmhlaWdodD4wPyh1PWEoe2FsaWduOmMmJmImJiJjZW50ZXIiLHg6Yz8hYiYmNDoxMCx2ZXJ0aWNhbEFsaWduOiFjJiZiJiYibWlkZGxlIix5OmM/Yj8xNjoxMDpiPzY6LTQscm90YXRpb246YyYmIWImJjkwfSx1KSxmfHwoUz17YWxpZ246dS50ZXh0QWxpZ258fHUuYWxpZ24scm90YXRpb246dS5yb3RhdGlvbn0sbShqKSYmKFMuekluZGV4PWopLHMubGFiZWw9Zj1QLnRleHQodS50ZXh0LDAsMCx1LnVzZUhUTUwpLmF0dHIoUykuY3NzKHUuc3R5bGUpLmFkZCgpKSxuPVtrWzFdLGtbNF0sYj9rWzZdOmtbMV1dLGk9W2tbMl0sa1s1XSxiP2tbN106a1syXV0sbz1UKG4pLHI9VChpKSxmLmFsaWduKHUsITEse3g6byx5OnIsd2lkdGg6QShuKS1vLGhlaWdodDpBKGkpLXJ9KSxmLnNob3coKSk6ZiYmZi5oaWRlKCksc30sZGVzdHJveTpmdW5jdGlvbigpe3UodGhpcy5heGlzLnBsb3RMaW5lc0FuZEJhbmRzLHRoaXMpLGRlbGV0ZSB0aGlzLmF4aXMsTih0aGlzKX19LFE9e2dldFBsb3RCYW5kUGF0aDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0UGxvdExpbmVQYXRoKGUpLGk9dGhpcy5nZXRQbG90TGluZVBhdGgodCk7cmV0dXJuIGkmJm4/aS5wdXNoKG5bNF0sbls1XSxuWzFdLG5bMl0pOmk9bnVsbCxpfSxhZGRQbG90QmFuZDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hZGRQbG90QmFuZE9yTGluZSh0LCJwbG90QmFuZHMiKX0sYWRkUGxvdExpbmU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYWRkUGxvdEJhbmRPckxpbmUodCwicGxvdExpbmVzIil9LGFkZFBsb3RCYW5kT3JMaW5lOmZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IGxlLlBsb3RMaW5lT3JCYW5kKHRoaXMsdCkucmVuZGVyKCksaT10aGlzLnVzZXJPcHRpb25zO3JldHVybiBuJiYoZSYmKGlbZV09aVtlXXx8W10saVtlXS5wdXNoKHQpKSx0aGlzLnBsb3RMaW5lc0FuZEJhbmRzLnB1c2gobikpLG59LHJlbW92ZVBsb3RCYW5kT3JMaW5lOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLnBsb3RMaW5lc0FuZEJhbmRzLG49dGhpcy5vcHRpb25zLGk9dGhpcy51c2VyT3B0aW9ucyxvPWUubGVuZ3RoO28tLTspZVtvXS5pZD09PXQmJmVbb10uZGVzdHJveSgpO21lKFtuLnBsb3RMaW5lc3x8W10saS5wbG90TGluZXN8fFtdLG4ucGxvdEJhbmRzfHxbXSxpLnBsb3RCYW5kc3x8W11dLGZ1bmN0aW9uKGUpe2ZvcihvPWUubGVuZ3RoO28tLTspZVtvXS5pZD09PXQmJnUoZSxlW29dKX0pfX0sTS5wcm90b3R5cGU9e2RlZmF1bHRPcHRpb25zOntkYXRlVGltZUxhYmVsRm9ybWF0czp7bWlsbGlzZWNvbmQ6IiVIOiVNOiVTLiVMIixzZWNvbmQ6IiVIOiVNOiVTIixtaW51dGU6IiVIOiVNIixob3VyOiIlSDolTSIsZGF5OiIlZS4gJWIiLHdlZWs6IiVlLiAlYiIsbW9udGg6IiViICcleSIseWVhcjoiJVkifSxlbmRPblRpY2s6ITEsZ3JpZExpbmVDb2xvcjoiI0MwQzBDMCIsbGFiZWxzOnplLGxpbmVDb2xvcjoiI0MwRDBFMCIsbGluZVdpZHRoOjEsbWluUGFkZGluZzouMDEsbWF4UGFkZGluZzouMDEsbWlub3JHcmlkTGluZUNvbG9yOiIjRTBFMEUwIixtaW5vckdyaWRMaW5lV2lkdGg6MSxtaW5vclRpY2tDb2xvcjoiI0EwQTBBMCIsbWlub3JUaWNrTGVuZ3RoOjIsbWlub3JUaWNrUG9zaXRpb246Im91dHNpZGUiLHN0YXJ0T2ZXZWVrOjEsc3RhcnRPblRpY2s6ITEsdGlja0NvbG9yOiIjQzBEMEUwIix0aWNrTGVuZ3RoOjEwLHRpY2ttYXJrUGxhY2VtZW50OiJiZXR3ZWVuIix0aWNrUGl4ZWxJbnRlcnZhbDoxMDAsdGlja1Bvc2l0aW9uOiJvdXRzaWRlIix0aWNrV2lkdGg6MSx0aXRsZTp7YWxpZ246Im1pZGRsZSIsc3R5bGU6e2NvbG9yOiIjNzA3MDcwIn19LHR5cGU6ImxpbmVhciJ9LGRlZmF1bHRZQXhpc09wdGlvbnM6e2VuZE9uVGljazohMCxncmlkTGluZVdpZHRoOjEsdGlja1BpeGVsSW50ZXJ2YWw6NzIsc2hvd0xhc3RMYWJlbDohMCxsYWJlbHM6e3g6LTgseTozfSxsaW5lV2lkdGg6MCxtYXhQYWRkaW5nOi4wNSxtaW5QYWRkaW5nOi4wNSxzdGFydE9uVGljazohMCx0aWNrV2lkdGg6MCx0aXRsZTp7cm90YXRpb246MjcwLHRleHQ6IlZhbHVlcyJ9LHN0YWNrTGFiZWxzOntlbmFibGVkOiExLGZvcm1hdHRlcjpmdW5jdGlvbigpe3JldHVybiB2KHRoaXMudG90YWwsLTEpfSxzdHlsZTp6ZS5zdHlsZX19LGRlZmF1bHRMZWZ0QXhpc09wdGlvbnM6e2xhYmVsczp7eDotMTUseTpudWxsfSx0aXRsZTp7cm90YXRpb246MjcwfX0sZGVmYXVsdFJpZ2h0QXhpc09wdGlvbnM6e2xhYmVsczp7eDoxNSx5Om51bGx9LHRpdGxlOntyb3RhdGlvbjo5MH19LGRlZmF1bHRCb3R0b21BeGlzT3B0aW9uczp7bGFiZWxzOnt4OjAseTpudWxsfSx0aXRsZTp7cm90YXRpb246MH19LGRlZmF1bHRUb3BBeGlzT3B0aW9uczp7bGFiZWxzOnt4OjAseTotMTV9LHRpdGxlOntyb3RhdGlvbjowfX0saW5pdDpmdW5jdGlvbih0LGUpe3ZhciBuPWUuaXNYLGk9dGhpcztpLmhvcml6PXQuaW52ZXJ0ZWQ/IW46bixpLmlzWEF4aXM9bixpLmNvbGw9bj8ieEF4aXMiOiJ5QXhpcyIsaS5vcHBvc2l0ZT1lLm9wcG9zaXRlLGkuc2lkZT1lLnNpZGV8fChpLmhvcml6P2kub3Bwb3NpdGU/MDoyOmkub3Bwb3NpdGU/MTozKSxpLnNldE9wdGlvbnMoZSk7dmFyIG89dGhpcy5vcHRpb25zLGE9by50eXBlLHI9ImRhdGV0aW1lIj09PWE7aS5sYWJlbEZvcm1hdHRlcj1vLmxhYmVscy5mb3JtYXR0ZXJ8fGkuZGVmYXVsdExhYmVsRm9ybWF0dGVyLGkudXNlck9wdGlvbnM9ZSxpLm1pblBpeGVsUGFkZGluZz0wLGkuY2hhcnQ9dCxpLnJldmVyc2VkPW8ucmV2ZXJzZWQsaS56b29tRW5hYmxlZD1vLnpvb21FbmFibGVkIT09ITEsaS5jYXRlZ29yaWVzPW8uY2F0ZWdvcmllc3x8ImNhdGVnb3J5Ij09PWEsaS5uYW1lcz1bXSxpLmlzTG9nPSJsb2dhcml0aG1pYyI9PT1hLGkuaXNEYXRldGltZUF4aXM9cixpLmlzTGlua2VkPW0oby5saW5rZWRUbyksaS50aWNrbWFya09mZnNldD1pLmNhdGVnb3JpZXMmJiJiZXR3ZWVuIj09PW8udGlja21hcmtQbGFjZW1lbnQmJjE9PT13KG8udGlja0ludGVydmFsLDEpPy41OjAsaS50aWNrcz17fSxpLmxhYmVsRWRnZT1bXSxpLm1pbm9yVGlja3M9e30saS5wbG90TGluZXNBbmRCYW5kcz1bXSxpLmFsdGVybmF0ZUJhbmRzPXt9LGkubGVuPTAsaS5taW5SYW5nZT1pLnVzZXJNaW5SYW5nZT1vLm1pblJhbmdlfHxvLm1heFpvb20saS5yYW5nZT1vLnJhbmdlLGkub2Zmc2V0PW8ub2Zmc2V0fHwwLGkuc3RhY2tzPXt9LGkub2xkU3RhY2tzPXt9LGkubWF4PW51bGwsaS5taW49bnVsbCxpLmNyb3NzaGFpcj13KG8uY3Jvc3NoYWlyLGcodC5vcHRpb25zLnRvb2x0aXAuY3Jvc3NoYWlycylbbj8wOjFdLCExKTt2YXIgcyxsPWkub3B0aW9ucy5ldmVudHM7dWUoaSx0LmF4ZXMpPT09LTEmJihuJiYhdGhpcy5pc0NvbG9yQXhpcz90LmF4ZXMuc3BsaWNlKHQueEF4aXMubGVuZ3RoLDAsaSk6dC5heGVzLnB1c2goaSksdFtpLmNvbGxdLnB1c2goaSkpLGkuc2VyaWVzPWkuc2VyaWVzfHxbXSx0LmludmVydGVkJiZuJiZpLnJldmVyc2VkPT09SCYmKGkucmV2ZXJzZWQ9ITApLGkucmVtb3ZlUGxvdEJhbmQ9aS5yZW1vdmVQbG90QmFuZE9yTGluZSxpLnJlbW92ZVBsb3RMaW5lPWkucmVtb3ZlUGxvdEJhbmRPckxpbmU7Zm9yKHMgaW4gbCl4ZShpLHMsbFtzXSk7aS5pc0xvZyYmKGkudmFsMmxpbj1kLGkubGluMnZhbD1oKX0sc2V0T3B0aW9uczpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbnM9YSh0aGlzLmRlZmF1bHRPcHRpb25zLHRoaXMuaXNYQXhpcz97fTp0aGlzLmRlZmF1bHRZQXhpc09wdGlvbnMsW3RoaXMuZGVmYXVsdFRvcEF4aXNPcHRpb25zLHRoaXMuZGVmYXVsdFJpZ2h0QXhpc09wdGlvbnMsdGhpcy5kZWZhdWx0Qm90dG9tQXhpc09wdGlvbnMsdGhpcy5kZWZhdWx0TGVmdEF4aXNPcHRpb25zXVt0aGlzLnNpZGVdLGEoR1t0aGlzLmNvbGxdLHQpKX0sZGVmYXVsdExhYmVsRm9ybWF0dGVyOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXMuYXhpcyxpPXRoaXMudmFsdWUsbz1uLmNhdGVnb3JpZXMsYT10aGlzLmRhdGVUaW1lTGFiZWxGb3JtYXQscj1HLmxhbmcubnVtZXJpY1N5bWJvbHMscz1yJiZyLmxlbmd0aCxsPW4ub3B0aW9ucy5sYWJlbHMuZm9ybWF0LGM9bi5pc0xvZz9pOm4udGlja0ludGVydmFsO2lmKGwpZT1qKGwsdGhpcyk7ZWxzZSBpZihvKWU9aTtlbHNlIGlmKGEpZT1YKGEsaSk7ZWxzZSBpZihzJiZjPj0xZTMpZm9yKDtzLS0mJmU9PT1IOyl0PU1hdGgucG93KDFlMyxzKzEpLGM+PXQmJm51bGwhPT1yW3NdJiYoZT12KGkvdCwtMSkrcltzXSk7cmV0dXJuIGU9PT1IJiYoZT1rdChpKT49MWU0P3YoaSwwKTp2KGksLTEsSCwiIikpLGV9LGdldFNlcmllc0V4dHJlbWVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY2hhcnQ7dC5oYXNWaXNpYmxlU2VyaWVzPSExLHQuZGF0YU1pbj10LmRhdGFNYXg9dC5pZ25vcmVNaW5QYWRkaW5nPXQuaWdub3JlTWF4UGFkZGluZz1udWxsLHQuYnVpbGRTdGFja3MmJnQuYnVpbGRTdGFja3MoKSxtZSh0LnNlcmllcyxmdW5jdGlvbihuKXtpZihuLnZpc2libGV8fCFlLm9wdGlvbnMuY2hhcnQuaWdub3JlSGlkZGVuU2VyaWVzKXt2YXIgaSxvLGEscj1uLm9wdGlvbnMscz1yLnRocmVzaG9sZDt0Lmhhc1Zpc2libGVTZXJpZXM9ITAsdC5pc0xvZyYmczw9MCYmKHM9bnVsbCksdC5pc1hBeGlzPyhpPW4ueERhdGEsaS5sZW5ndGgmJih0LmRhdGFNaW49eXQodyh0LmRhdGFNaW4saVswXSksVChpKSksdC5kYXRhTWF4PXZ0KHcodC5kYXRhTWF4LGlbMF0pLEEoaSkpKSk6KG4uZ2V0RXh0cmVtZXMoKSxhPW4uZGF0YU1heCxvPW4uZGF0YU1pbixtKG8pJiZtKGEpJiYodC5kYXRhTWluPXl0KHcodC5kYXRhTWluLG8pLG8pLHQuZGF0YU1heD12dCh3KHQuZGF0YU1heCxhKSxhKSksbShzKSYmKHQuZGF0YU1pbj49cz8odC5kYXRhTWluPXMsdC5pZ25vcmVNaW5QYWRkaW5nPSEwKTp0LmRhdGFNYXg8cyYmKHQuZGF0YU1heD1zLHQuaWdub3JlTWF4UGFkZGluZz0hMCkpKX19KX0sdHJhbnNsYXRlOmZ1bmN0aW9uKHQsZSxuLGksbyxhKXt2YXIgcixzPXRoaXMsbD0xLGM9MCxkPWk/cy5vbGRUcmFuc0E6cy50cmFuc0EsaD1pP3Mub2xkTWluOnMubWluLHU9cy5taW5QaXhlbFBhZGRpbmcsbT0ocy5vcHRpb25zLm9yZGluYWx8fHMuaXNMb2cmJm8pJiZzLmxpbjJ2YWw7cmV0dXJuIGR8fChkPXMudHJhbnNBKSxuJiYobCo9LTEsYz1zLmxlbikscy5yZXZlcnNlZCYmKGwqPS0xLGMtPWwqKHMuc2VjdG9yfHxzLmxlbikpLGU/KHQ9dCpsK2MsdC09dSxyPXQvZCtoLG0mJihyPXMubGluMnZhbChyKSkpOihtJiYodD1zLnZhbDJsaW4odCkpLCJiZXR3ZWVuIj09PWEmJihhPS41KSxyPWwqKHQtaCkqZCtjK2wqdSsocChhKT9kKmEqcy5wb2ludFJhbmdlOjApKSxyfSx0b1BpeGVsczpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnRyYW5zbGF0ZSh0LCExLCF0aGlzLmhvcml6LG51bGwsITApKyhlPzA6dGhpcy5wb3MpfSx0b1ZhbHVlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudHJhbnNsYXRlKHQtKGU/MDp0aGlzLnBvcyksITAsIXRoaXMuaG9yaXosbnVsbCwhMCl9LGdldFBsb3RMaW5lUGF0aDpmdW5jdGlvbih0LGUsbixpLG8pe3ZhciBhLHIscyxsLGMscD10aGlzLGQ9cC5jaGFydCxoPXAubGVmdCx1PXAudG9wLG09biYmZC5vbGRDaGFydEhlaWdodHx8ZC5jaGFydEhlaWdodCxmPW4mJmQub2xkQ2hhcnRXaWR0aHx8ZC5jaGFydFdpZHRoLGc9cC50cmFuc0I7cmV0dXJuIG89dyhvLHAudHJhbnNsYXRlKHQsbnVsbCxudWxsLG4pKSxhPXM9eHQobytnKSxyPWw9eHQobS1vLWcpLGlzTmFOKG8pP2M9ITA6cC5ob3Jpej8ocj11LGw9bS1wLmJvdHRvbSwoYTxofHxhPmgrcC53aWR0aCkmJihjPSEwKSk6KGE9aCxzPWYtcC5yaWdodCwocjx1fHxyPnUrcC5oZWlnaHQpJiYoYz0hMCkpLGMmJiFpP251bGw6ZC5yZW5kZXJlci5jcmlzcExpbmUoW3RlLGEscixlZSxzLGxdLGV8fDEpfSxnZXRMaW5lYXJUaWNrUG9zaXRpb25zOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvLGE9QihidChlL3QpKnQpLHI9QihfdChuL3QpKnQpLHM9W107aWYoZT09PW4mJnAoZSkpcmV0dXJuW2VdO2ZvcihpPWE7aTw9ciYmKHMucHVzaChpKSxpPUIoaSt0KSxpIT09byk7KW89aTtyZXR1cm4gc30sZ2V0TWlub3JUaWNrUG9zaXRpb25zOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGk9dGhpcyxvPWkub3B0aW9ucyxhPWkudGlja1Bvc2l0aW9ucyxyPWkubWlub3JUaWNrSW50ZXJ2YWwscz1bXTtpZihpLmlzTG9nKWZvcihuPWEubGVuZ3RoLGU9MTtlPG47ZSsrKXM9cy5jb25jYXQoaS5nZXRMb2dUaWNrUG9zaXRpb25zKHIsYVtlLTFdLGFbZV0sITApKTtlbHNlIGlmKGkuaXNEYXRldGltZUF4aXMmJiJhdXRvIj09PW8ubWlub3JUaWNrSW50ZXJ2YWwpcz1zLmNvbmNhdChpLmdldFRpbWVUaWNrcyhpLm5vcm1hbGl6ZVRpbWVUaWNrSW50ZXJ2YWwociksaS5taW4saS5tYXgsby5zdGFydE9mV2VlaykpLHNbMF08aS5taW4mJnMuc2hpZnQoKTtlbHNlIGZvcih0PWkubWluKyhhWzBdLWkubWluKSVyO3Q8PWkubWF4O3QrPXIpcy5wdXNoKHQpO3JldHVybiBzfSxhZGp1c3RGb3JNaW5SYW5nZTpmdW5jdGlvbigpe3ZhciB0LGUsbixpLG8sYSxyLHMsbD10aGlzLGM9bC5vcHRpb25zLHA9bC5taW4sZD1sLm1heCxoPWwuZGF0YU1heC1sLmRhdGFNaW4+PWwubWluUmFuZ2U7aWYobC5pc1hBeGlzJiZsLm1pblJhbmdlPT09SCYmIWwuaXNMb2cmJihtKGMubWluKXx8bShjLm1heCk/bC5taW5SYW5nZT1udWxsOihtZShsLnNlcmllcyxmdW5jdGlvbih0KXtmb3Iobz10LnhEYXRhLGE9dC54SW5jcmVtZW50PzE6by5sZW5ndGgtMSxuPWE7bj4wO24tLSlpPW9bbl0tb1tuLTFdLChlPT09SHx8aTxlKSYmKGU9aSl9KSxsLm1pblJhbmdlPXl0KDUqZSxsLmRhdGFNYXgtbC5kYXRhTWluKSkpLGQtcDxsLm1pblJhbmdlKXt2YXIgdT1sLm1pblJhbmdlO3Q9KHUtZCtwKS8yLHI9W3AtdCx3KGMubWluLHAtdCldLGgmJihyWzJdPWwuZGF0YU1pbikscD1BKHIpLHM9W3ArdSx3KGMubWF4LHArdSldLGgmJihzWzJdPWwuZGF0YU1heCksZD1UKHMpLGQtcDx1JiYoclswXT1kLXUsclsxXT13KGMubWluLGQtdSkscD1BKHIpKX1sLm1pbj1wLGwubWF4PWR9LHNldEF4aXNUcmFuc2xhdGlvbjpmdW5jdGlvbih0KXt2YXIgZSxuLGk9dGhpcyxvPWkubWF4LWkubWluLGE9aS5heGlzUG9pbnRSYW5nZXx8MCxyPTAsbD0wLGM9aS5saW5rZWRQYXJlbnQscD0hIWkuY2F0ZWdvcmllcyxkPWkudHJhbnNBOyhpLmlzWEF4aXN8fHB8fGEpJiYoYz8ocj1jLm1pblBvaW50T2Zmc2V0LGw9Yy5wb2ludFJhbmdlUGFkZGluZyk6bWUoaS5zZXJpZXMsZnVuY3Rpb24odCl7dmFyIG49cD8xOmkuaXNYQXhpcz90LnBvaW50UmFuZ2U6aS5heGlzUG9pbnRSYW5nZXx8MCxjPXQub3B0aW9ucy5wb2ludFBsYWNlbWVudCxkPXQuY2xvc2VzdFBvaW50UmFuZ2U7bj5vJiYobj0wKSxhPXZ0KGEsbikscj12dChyLHMoYyk/MDpuLzIpLGw9dnQobCwib24iPT09Yz8wOm4pLCF0Lm5vU2hhcmVkVG9vbHRpcCYmbShkKSYmKGU9bShlKT95dChlLGQpOmQpfSksbj1pLm9yZGluYWxTbG9wZSYmZT9pLm9yZGluYWxTbG9wZS9lOjEsaS5taW5Qb2ludE9mZnNldD1yKj1uLGkucG9pbnRSYW5nZVBhZGRpbmc9bCo9bixpLnBvaW50UmFuZ2U9eXQoYSxvKSxpLmNsb3Nlc3RQb2ludFJhbmdlPWUpLHQmJihpLm9sZFRyYW5zQT1kKSxpLnRyYW5zbGF0aW9uU2xvcGU9aS50cmFuc0E9ZD1pLmxlbi8obytsfHwxKSxpLnRyYW5zQj1pLmhvcml6P2kubGVmdDppLmJvdHRvbSxpLm1pblBpeGVsUGFkZGluZz1kKnJ9LHNldFRpY2tQb3NpdGlvbnM6ZnVuY3Rpb24odCl7dmFyIGUsbixpLG8sYT10aGlzLHI9YS5jaGFydCxzPWEub3B0aW9ucyxsPXMuc3RhcnRPblRpY2ssYz1zLmVuZE9uVGljayxoPWEuaXNMb2csdT1hLmlzRGF0ZXRpbWVBeGlzLGY9YS5pc1hBeGlzLGc9YS5pc0xpbmtlZCx4PWEub3B0aW9ucy50aWNrUG9zaXRpb25lcixiPXMubWF4UGFkZGluZyxfPXMubWluUGFkZGluZyx2PXMudGlja0ludGVydmFsLHk9cy5taW5UaWNrSW50ZXJ2YWwsaz1zLnRpY2tQaXhlbEludGVydmFsLHo9YS5jYXRlZ29yaWVzO2lmKGc/KGEubGlua2VkUGFyZW50PXJbYS5jb2xsXVtzLmxpbmtlZFRvXSxuPWEubGlua2VkUGFyZW50LmdldEV4dHJlbWVzKCksYS5taW49dyhuLm1pbixuLmRhdGFNaW4pLGEubWF4PXcobi5tYXgsbi5kYXRhTWF4KSxzLnR5cGUhPT1hLmxpbmtlZFBhcmVudC5vcHRpb25zLnR5cGUmJksoMTEsMSkpOihhLm1pbj13KGEudXNlck1pbixzLm1pbixhLmRhdGFNaW4pLGEubWF4PXcoYS51c2VyTWF4LHMubWF4LGEuZGF0YU1heCkpLGgmJighdCYmeXQoYS5taW4sdyhhLmRhdGFNaW4sYS5taW4pKTw9MCYmSygxMCwxKSxhLm1pbj1CKGQoYS5taW4pKSxhLm1heD1CKGQoYS5tYXgpKSksYS5yYW5nZSYmbShhLm1heCkmJihhLnVzZXJNaW49YS5taW49dnQoYS5taW4sYS5tYXgtYS5yYW5nZSksYS51c2VyTWF4PWEubWF4LGEucmFuZ2U9bnVsbCksYS5iZWZvcmVQYWRkaW5nJiZhLmJlZm9yZVBhZGRpbmcoKSxhLmFkanVzdEZvck1pblJhbmdlKCksenx8YS5heGlzUG9pbnRSYW5nZXx8YS51c2VQZXJjZW50YWdlfHxnfHwhbShhLm1pbil8fCFtKGEubWF4KXx8KGU9YS5tYXgtYS5taW4sZSYmKG0ocy5taW4pfHxtKGEudXNlck1pbil8fCFffHwhKGEuZGF0YU1pbjwwKSYmYS5pZ25vcmVNaW5QYWRkaW5nfHwoYS5taW4tPWUqXyksbShzLm1heCl8fG0oYS51c2VyTWF4KXx8IWJ8fCEoYS5kYXRhTWF4PjApJiZhLmlnbm9yZU1heFBhZGRpbmd8fChhLm1heCs9ZSpiKSkpLHAocy5mbG9vcikmJihhLm1pbj12dChhLm1pbixzLmZsb29yKSkscChzLmNlaWxpbmcpJiYoYS5tYXg9eXQoYS5tYXgscy5jZWlsaW5nKSksYS5taW49PT1hLm1heHx8dm9pZCAwPT09YS5taW58fHZvaWQgMD09PWEubWF4P2EudGlja0ludGVydmFsPTE6ZyYmIXYmJms9PT1hLmxpbmtlZFBhcmVudC5vcHRpb25zLnRpY2tQaXhlbEludGVydmFsP2EudGlja0ludGVydmFsPWEubGlua2VkUGFyZW50LnRpY2tJbnRlcnZhbDooYS50aWNrSW50ZXJ2YWw9dyh2LHo/MTooYS5tYXgtYS5taW4pKmsvdnQoYS5sZW4saykpLCFtKHYpJiZhLmxlbjxrJiYhdGhpcy5pc1JhZGlhbCYmIXRoaXMuaXNMb2cmJiF6JiZsJiZjJiYobz0hMCxhLnRpY2tJbnRlcnZhbC89NCkpLGYmJiF0JiZtZShhLnNlcmllcyxmdW5jdGlvbih0KXt0LnByb2Nlc3NEYXRhKGEubWluIT09YS5vbGRNaW58fGEubWF4IT09YS5vbGRNYXgpfSksYS5zZXRBeGlzVHJhbnNsYXRpb24oITApLGEuYmVmb3JlU2V0VGlja1Bvc2l0aW9ucyYmYS5iZWZvcmVTZXRUaWNrUG9zaXRpb25zKCksYS5wb3N0UHJvY2Vzc1RpY2tJbnRlcnZhbCYmKGEudGlja0ludGVydmFsPWEucG9zdFByb2Nlc3NUaWNrSW50ZXJ2YWwoYS50aWNrSW50ZXJ2YWwpKSxhLnBvaW50UmFuZ2UmJihhLnRpY2tJbnRlcnZhbD12dChhLnBvaW50UmFuZ2UsYS50aWNrSW50ZXJ2YWwpKSwhdiYmYS50aWNrSW50ZXJ2YWw8eSYmKGEudGlja0ludGVydmFsPXkpLHV8fGh8fHZ8fChhLnRpY2tJbnRlcnZhbD1TKGEudGlja0ludGVydmFsLG51bGwsQyhhLnRpY2tJbnRlcnZhbCksdyhzLmFsbG93RGVjaW1hbHMsIShhLnRpY2tJbnRlcnZhbD4xJiZhLnRpY2tJbnRlcnZhbDw1JiZhLm1heD4xZTMmJmEubWF4PDk5OTkpKSkpLGEubWlub3JUaWNrSW50ZXJ2YWw9ImF1dG8iPT09cy5taW5vclRpY2tJbnRlcnZhbCYmYS50aWNrSW50ZXJ2YWw/YS50aWNrSW50ZXJ2YWwvNTpzLm1pbm9yVGlja0ludGVydmFsLGEudGlja1Bvc2l0aW9ucz1pPXMudGlja1Bvc2l0aW9ucz9bXS5jb25jYXQocy50aWNrUG9zaXRpb25zKTp4JiZ4LmFwcGx5KGEsW2EubWluLGEubWF4XSksaXx8KCFhLm9yZGluYWxQb3NpdGlvbnMmJihhLm1heC1hLm1pbikvYS50aWNrSW50ZXJ2YWw+dnQoMiphLmxlbiwyMDApJiZLKDE5LCEwKSxpPXU/YS5nZXRUaW1lVGlja3MoYS5ub3JtYWxpemVUaW1lVGlja0ludGVydmFsKGEudGlja0ludGVydmFsLHMudW5pdHMpLGEubWluLGEubWF4LHMuc3RhcnRPZldlZWssYS5vcmRpbmFsUG9zaXRpb25zLGEuY2xvc2VzdFBvaW50UmFuZ2UsITApOmg/YS5nZXRMb2dUaWNrUG9zaXRpb25zKGEudGlja0ludGVydmFsLGEubWluLGEubWF4KTphLmdldExpbmVhclRpY2tQb3NpdGlvbnMoYS50aWNrSW50ZXJ2YWwsYS5taW4sYS5tYXgpLG8mJmkuc3BsaWNlKDEsaS5sZW5ndGgtMiksYS50aWNrUG9zaXRpb25zPWkpLCFnKXt2YXIgaixQPWlbMF0sVD1pW2kubGVuZ3RoLTFdLEE9YS5taW5Qb2ludE9mZnNldHx8MDtsP2EubWluPVA6YS5taW4tQT5QJiZpLnNoaWZ0KCksYz9hLm1heD1UOmEubWF4K0E8VCYmaS5wb3AoKSwwPT09aS5sZW5ndGgmJm0oUCkmJmkucHVzaCgoVCtQKS8yKSwxPT09aS5sZW5ndGgmJihqPWt0KGEubWF4KT4xZTEzPzE6LjAwMSxhLm1pbi09aixhLm1heCs9ail9fSxzZXRNYXhUaWNrczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY2hhcnQsZT10Lm1heFRpY2tzfHx7fSxuPXRoaXMudGlja1Bvc2l0aW9ucyxpPXRoaXMuX21heFRpY2tzS2V5PVt0aGlzLmNvbGwsdGhpcy5wb3MsdGhpcy5sZW5dLmpvaW4oIi0iKTshdGhpcy5pc0xpbmtlZCYmIXRoaXMuaXNEYXRldGltZUF4aXMmJm4mJm4ubGVuZ3RoPihlW2ldfHwwKSYmdGhpcy5vcHRpb25zLmFsaWduVGlja3MhPT0hMSYmKGVbaV09bi5sZW5ndGgpLHQubWF4VGlja3M9ZX0sYWRqdXN0VGlja0Ftb3VudDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNoYXJ0LG49dC5fbWF4VGlja3NLZXksaT10LnRpY2tQb3NpdGlvbnMsbz1lLm1heFRpY2tzO2lmKG8mJm9bbl0mJiF0LmlzRGF0ZXRpbWVBeGlzJiYhdC5jYXRlZ29yaWVzJiYhdC5pc0xpbmtlZCYmdC5vcHRpb25zLmFsaWduVGlja3MhPT0hMSYmdGhpcy5taW4hPT1IKXt2YXIgYSxyPXQudGlja0Ftb3VudCxzPWkubGVuZ3RoO2lmKHQudGlja0Ftb3VudD1hPW9bbl0sczxhKXtmb3IoO2kubGVuZ3RoPGE7KWkucHVzaChCKGlbaS5sZW5ndGgtMV0rdC50aWNrSW50ZXJ2YWwpKTt0LnRyYW5zQSo9KHMtMSkvKGEtMSksdC5tYXg9aVtpLmxlbmd0aC0xXX1tKHIpJiZhIT09ciYmKHQuaXNEaXJ0eT0hMCl9fSxzZXRTY2FsZTpmdW5jdGlvbigpe3ZhciB0LGUsbixpLG89dGhpcyxhPW8uc3RhY2tzO2lmKG8ub2xkTWluPW8ubWluLG8ub2xkTWF4PW8ubWF4LG8ub2xkQXhpc0xlbmd0aD1vLmxlbixvLnNldEF4aXNTaXplKCksaT1vLmxlbiE9PW8ub2xkQXhpc0xlbmd0aCxtZShvLnNlcmllcyxmdW5jdGlvbih0KXsodC5pc0RpcnR5RGF0YXx8dC5pc0RpcnR5fHx0LnhBeGlzLmlzRGlydHkpJiYobj0hMCl9KSxpfHxufHxvLmlzTGlua2VkfHxvLmZvcmNlUmVkcmF3fHxvLnVzZXJNaW4hPT1vLm9sZFVzZXJNaW58fG8udXNlck1heCE9PW8ub2xkVXNlck1heCl7aWYoIW8uaXNYQXhpcylmb3IodCBpbiBhKWZvcihlIGluIGFbdF0pYVt0XVtlXS50b3RhbD1udWxsLGFbdF1bZV0uY3VtPTA7by5mb3JjZVJlZHJhdz0hMSxvLmdldFNlcmllc0V4dHJlbWVzKCksby5zZXRUaWNrUG9zaXRpb25zKCksby5vbGRVc2VyTWluPW8udXNlck1pbixvLm9sZFVzZXJNYXg9by51c2VyTWF4LG8uaXNEaXJ0eXx8KG8uaXNEaXJ0eT1pfHxvLm1pbiE9PW8ub2xkTWlufHxvLm1heCE9PW8ub2xkTWF4KX1lbHNlIGlmKCFvLmlzWEF4aXMpe28ub2xkU3RhY2tzJiYoYT1vLnN0YWNrcz1vLm9sZFN0YWNrcyk7Zm9yKHQgaW4gYSlmb3IoZSBpbiBhW3RdKWFbdF1bZV0uY3VtPWFbdF1bZV0udG90YWx9by5zZXRNYXhUaWNrcygpfSxzZXRFeHRyZW1lczpmdW5jdGlvbih0LGUsbixpLGEpe3ZhciByPXRoaXMscz1yLmNoYXJ0O249dyhuLCEwKSxhPW8oYSx7bWluOnQsbWF4OmV9KSxfZShyLCJzZXRFeHRyZW1lcyIsYSxmdW5jdGlvbigpe3IudXNlck1pbj10LHIudXNlck1heD1lLHIuZXZlbnRBcmdzPWEsci5pc0RpcnR5RXh0cmVtZXM9ITAsbiYmcy5yZWRyYXcoaSl9KX0sem9vbTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZGF0YU1pbixpPXRoaXMuZGF0YU1heCxvPXRoaXMub3B0aW9ucztyZXR1cm4gdGhpcy5hbGxvd1pvb21PdXRzaWRlfHwobShuKSYmdDw9eXQobix3KG8ubWluLG4pKSYmKHQ9SCksbShpKSYmZT49dnQoaSx3KG8ubWF4LGkpKSYmKGU9SCkpLHRoaXMuZGlzcGxheUJ0bj10IT09SHx8ZSE9PUgsdGhpcy5zZXRFeHRyZW1lcyh0LGUsITEsSCx7dHJpZ2dlcjoiem9vbSJ9KSwhMH0sc2V0QXhpc1NpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNoYXJ0LGU9dGhpcy5vcHRpb25zLG49ZS5vZmZzZXRMZWZ0fHwwLGk9ZS5vZmZzZXRSaWdodHx8MCxvPXRoaXMuaG9yaXosYT13KGUud2lkdGgsdC5wbG90V2lkdGgtbitpKSxyPXcoZS5oZWlnaHQsdC5wbG90SGVpZ2h0KSxzPXcoZS50b3AsdC5wbG90VG9wKSxsPXcoZS5sZWZ0LHQucGxvdExlZnQrbiksYz0vJSQvO2MudGVzdChyKSYmKHI9cGFyc2VJbnQociwxMCkvMTAwKnQucGxvdEhlaWdodCksYy50ZXN0KHMpJiYocz1wYXJzZUludChzLDEwKS8xMDAqdC5wbG90SGVpZ2h0K3QucGxvdFRvcCksdGhpcy5sZWZ0PWwsdGhpcy50b3A9cyx0aGlzLndpZHRoPWEsdGhpcy5oZWlnaHQ9cix0aGlzLmJvdHRvbT10LmNoYXJ0SGVpZ2h0LXItcyx0aGlzLnJpZ2h0PXQuY2hhcnRXaWR0aC1hLWwsdGhpcy5sZW49dnQobz9hOnIsMCksdGhpcy5wb3M9bz9sOnN9LGdldEV4dHJlbWVzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuaXNMb2c7cmV0dXJue21pbjplP0IoaCh0Lm1pbikpOnQubWluLG1heDplP0IoaCh0Lm1heCkpOnQubWF4LGRhdGFNaW46dC5kYXRhTWluLGRhdGFNYXg6dC5kYXRhTWF4LHVzZXJNaW46dC51c2VyTWluLHVzZXJNYXg6dC51c2VyTWF4fX0sZ2V0VGhyZXNob2xkOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmlzTG9nLGk9bj9oKGUubWluKTplLm1pbixvPW4/aChlLm1heCk6ZS5tYXg7cmV0dXJuIGk+dHx8bnVsbD09PXQ/dD1pOm88dCYmKHQ9byksZS50cmFuc2xhdGUodCwwLDEsMCwxKX0sYXV0b0xhYmVsQWxpZ246ZnVuY3Rpb24odCl7dmFyIGUsbj0odyh0LDApLTkwKnRoaXMuc2lkZSs3MjApJTM2MDtyZXR1cm4gZT1uPjE1JiZuPDE2NT8icmlnaHQiOm4+MTk1JiZuPDM0NT8ibGVmdCI6ImNlbnRlciJ9LGdldE9mZnNldDpmdW5jdGlvbigpe3ZhciB0LGUsbixpLG8sYSxyLHMsbCxjLHAsZCxoLHUsZixnPXRoaXMseD1nLmNoYXJ0LGI9eC5yZW5kZXJlcixfPWcub3B0aW9ucyx2PWcudGlja1Bvc2l0aW9ucyx5PWcudGlja3Msaz1nLmhvcml6LHo9Zy5zaWRlLGo9eC5pbnZlcnRlZD9bMSwwLDMsMl1bel06eixDPTAsUz0wLFA9Xy50aXRsZSxUPV8ubGFiZWxzLEE9MCxOPXguYXhpc09mZnNldCxJPXguY2xpcE9mZnNldCxCPVstMSwxLDEsLTFdW3pdLHE9MSxPPXcoVC5tYXhTdGFnZ2VyTGluZXMsNSk7aWYoZy5oYXNEYXRhPXQ9Zy5oYXNWaXNpYmxlU2VyaWVzfHxtKGcubWluKSYmbShnLm1heCkmJiEhdixnLnNob3dBeGlzPWU9dHx8dyhfLnNob3dFbXB0eSwhMCksZy5zdGFnZ2VyTGluZXM9Zy5ob3JpeiYmVC5zdGFnZ2VyTGluZXMsZy5heGlzR3JvdXB8fChnLmdyaWRHcm91cD1iLmcoImdyaWQiKS5hdHRyKHt6SW5kZXg6Xy5ncmlkWkluZGV4fHwxfSkuYWRkKCksZy5heGlzR3JvdXA9Yi5nKCJheGlzIikuYXR0cih7ekluZGV4Ol8uekluZGV4fHwyfSkuYWRkKCksZy5sYWJlbEdyb3VwPWIuZygiYXhpcy1sYWJlbHMiKS5hdHRyKHt6SW5kZXg6VC56SW5kZXh8fDd9KS5hZGRDbGFzcyhadCtnLmNvbGwudG9Mb3dlckNhc2UoKSsiLWxhYmVscyIpLmFkZCgpKSx0fHxnLmlzTGlua2VkKXtpZihnLmxhYmVsQWxpZ249dyhULmFsaWdufHxnLmF1dG9MYWJlbEFsaWduKFQucm90YXRpb24pKSxtZSh2LGZ1bmN0aW9uKHQpe3lbdF0/eVt0XS5hZGRMYWJlbCgpOnlbdF09bmV3IEYoZyx0KX0pLGcuaG9yaXomJiFnLnN0YWdnZXJMaW5lcyYmTyYmIVQucm90YXRpb24pe2ZvcihyPWcucmV2ZXJzZWQ/W10uY29uY2F0KHYpLnJldmVyc2UoKTp2O3E8Tzspe2ZvcihzPVtdLGw9ITEsYT0wO2E8ci5sZW5ndGg7YSsrKWM9clthXSxwPXlbY10ubGFiZWwmJnlbY10ubGFiZWwuZ2V0QkJveCgpLGg9cD9wLndpZHRoOjAsdT1hJXEsaCYmKGQ9Zy50cmFuc2xhdGUoYyksc1t1XSE9PUgmJmQ8c1t1XSYmKGw9ITApLHNbdV09ZCtoKTtpZighbClicmVhaztxKyt9cT4xJiYoZy5zdGFnZ2VyTGluZXM9cSl9bWUodixmdW5jdGlvbih0KXswIT09eiYmMiE9PXomJnsxOiJsZWZ0IiwzOiJyaWdodCJ9W3pdIT09Zy5sYWJlbEFsaWdufHwoQT12dCh5W3RdLmdldExhYmVsU2l6ZSgpLEEpKX0pLGcuc3RhZ2dlckxpbmVzJiYoQSo9Zy5zdGFnZ2VyTGluZXMsZy5sYWJlbE9mZnNldD1BKX1lbHNlIGZvcihvIGluIHkpeVtvXS5kZXN0cm95KCksZGVsZXRlIHlbb107UCYmUC50ZXh0JiZQLmVuYWJsZWQhPT0hMSYmKGcuYXhpc1RpdGxlfHwoZy5heGlzVGl0bGU9Yi50ZXh0KFAudGV4dCwwLDAsUC51c2VIVE1MKS5hdHRyKHt6SW5kZXg6Nyxyb3RhdGlvbjpQLnJvdGF0aW9ufHwwLGFsaWduOlAudGV4dEFsaWdufHx7bG93OiJsZWZ0IixtaWRkbGU6ImNlbnRlciIsaGlnaDoicmlnaHQifVtQLmFsaWduXX0pLmFkZENsYXNzKFp0K3RoaXMuY29sbC50b0xvd2VyQ2FzZSgpKyItdGl0bGUiKS5jc3MoUC5zdHlsZSkuYWRkKGcuYXhpc0dyb3VwKSxnLmF4aXNUaXRsZS5pc05ldz0hMCksZSYmKEM9Zy5heGlzVGl0bGUuZ2V0QkJveCgpW2s/ImhlaWdodCI6IndpZHRoIl0sbj1QLm9mZnNldCxTPW0obik/MDp3KFAubWFyZ2luLGs/NToxMCkpLGcuYXhpc1RpdGxlW2U/InNob3ciOiJoaWRlIl0oKSksZy5vZmZzZXQ9Qip3KF8ub2Zmc2V0LE5bel0pLGY9Mj09PXo/Zy50aWNrQmFzZWxpbmU6MCxpPUErUysoQSYmQiooaz93KFQueSxnLnRpY2tCYXNlbGluZSs4KTpULngpLWYpLGcuYXhpc1RpdGxlTWFyZ2luPXcobixpKSxOW3pdPXZ0KE5bel0sZy5heGlzVGl0bGVNYXJnaW4rQytCKmcub2Zmc2V0LGkpLElbal09dnQoSVtqXSwyKmJ0KF8ubGluZVdpZHRoLzIpKX0sZ2V0TGluZVBhdGg6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jaGFydCxuPXRoaXMub3Bwb3NpdGUsaT10aGlzLm9mZnNldCxvPXRoaXMuaG9yaXosYT10aGlzLmxlZnQrKG4/dGhpcy53aWR0aDowKStpLHI9ZS5jaGFydEhlaWdodC10aGlzLmJvdHRvbS0obj90aGlzLmhlaWdodDowKStpO3JldHVybiBuJiYodCo9LTEpLGUucmVuZGVyZXIuY3Jpc3BMaW5lKFt0ZSxvP3RoaXMubGVmdDphLG8/cjp0aGlzLnRvcCxlZSxvP2UuY2hhcnRXaWR0aC10aGlzLnJpZ2h0OmEsbz9yOmUuY2hhcnRIZWlnaHQtdGhpcy5ib3R0b21dLHQpfSxnZXRUaXRsZVBvc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5ob3JpeixlPXRoaXMubGVmdCxuPXRoaXMudG9wLGk9dGhpcy5sZW4sbz10aGlzLm9wdGlvbnMudGl0bGUsYT10P2U6bixzPXRoaXMub3Bwb3NpdGUsbD10aGlzLm9mZnNldCxjPXIoby5zdHlsZS5mb250U2l6ZXx8MTIpLHA9e2xvdzphKyh0PzA6aSksbWlkZGxlOmEraS8yLGhpZ2g6YSsodD9pOjApfVtvLmFsaWduXSxkPSh0P24rdGhpcy5oZWlnaHQ6ZSkrKHQ/MTotMSkqKHM/LTE6MSkqdGhpcy5heGlzVGl0bGVNYXJnaW4rKDI9PT10aGlzLnNpZGU/YzowKTtyZXR1cm57eDp0P3A6ZCsocz90aGlzLndpZHRoOjApK2wrKG8ueHx8MCkseTp0P2QtKHM/dGhpcy5oZWlnaHQ6MCkrbDpwKyhvLnl8fDApfX0scmVuZGVyOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksbz10aGlzLGE9by5ob3JpeixyPW8ucmV2ZXJzZWQscz1vLmNoYXJ0LGw9cy5yZW5kZXJlcixjPW8ub3B0aW9ucyxwPW8uaXNMb2csZD1vLmlzTGlua2VkLHU9by50aWNrUG9zaXRpb25zLGY9by5heGlzVGl0bGUsZz1vLnRpY2tzLHc9by5taW5vclRpY2tzLHg9by5hbHRlcm5hdGVCYW5kcyxiPWMuc3RhY2tMYWJlbHMsXz1jLmFsdGVybmF0ZUdyaWRDb2xvcix2PW8udGlja21hcmtPZmZzZXQseT1jLmxpbmVXaWR0aCxrPXMuaGFzUmVuZGVyZWQsej1rJiZtKG8ub2xkTWluKSYmIWlzTmFOKG8ub2xkTWluKSxqPW8uaGFzRGF0YSxDPW8uc2hvd0F4aXMsUz1jLmxhYmVscy5vdmVyZmxvdyxQPW8uanVzdGlmeUxhYmVscz1hJiZTIT09ITE7by5sYWJlbEVkZ2UubGVuZ3RoPTAsby5qdXN0aWZ5VG9QbG90PSJqdXN0aWZ5Ij09PVMsbWUoW2csdyx4XSxmdW5jdGlvbih0KXt2YXIgZTtmb3IoZSBpbiB0KXRbZV0uaXNBY3RpdmU9ITF9KSwoanx8ZCkmJihvLm1pbm9yVGlja0ludGVydmFsJiYhby5jYXRlZ29yaWVzJiZtZShvLmdldE1pbm9yVGlja1Bvc2l0aW9ucygpLGZ1bmN0aW9uKHQpe3dbdF18fCh3W3RdPW5ldyBGKG8sdCwibWlub3IiKSkseiYmd1t0XS5pc05ldyYmd1t0XS5yZW5kZXIobnVsbCwhMCksd1t0XS5yZW5kZXIobnVsbCwhMSwxKX0pLHUubGVuZ3RoJiYodD11LnNsaWNlKCksKGEmJnJ8fCFhJiYhcikmJnQucmV2ZXJzZSgpLFAmJih0PXQuc2xpY2UoMSkuY29uY2F0KFt0WzBdXSkpLG1lKHQsZnVuY3Rpb24oZSxuKXtQJiYobj1uPT09dC5sZW5ndGgtMT8wOm4rMSksKCFkfHxlPj1vLm1pbiYmZTw9by5tYXgpJiYoZ1tlXXx8KGdbZV09bmV3IEYobyxlKSkseiYmZ1tlXS5pc05ldyYmZ1tlXS5yZW5kZXIobiwhMCwuMSksZ1tlXS5yZW5kZXIobikpfSksdiYmMD09PW8ubWluJiYoZ1stMV18fChnWy0xXT1uZXcgRihvLCgtMSksbnVsbCwoITApKSksZ1stMV0ucmVuZGVyKC0xKSkpLF8mJm1lKHUsZnVuY3Rpb24odCxlKXtlJTI9PT0wJiZ0PG8ubWF4JiYoeFt0XXx8KHhbdF09bmV3IGxlLlBsb3RMaW5lT3JCYW5kKG8pKSxuPXQrdixpPXVbZSsxXSE9PUg/dVtlKzFdK3Y6by5tYXgseFt0XS5vcHRpb25zPXtmcm9tOnA/aChuKTpuLHRvOnA/aChpKTppLGNvbG9yOl99LHhbdF0ucmVuZGVyKCkseFt0XS5pc0FjdGl2ZT0hMCl9KSxvLl9hZGRlZFBsb3RMQnx8KG1lKChjLnBsb3RMaW5lc3x8W10pLmNvbmNhdChjLnBsb3RCYW5kc3x8W10pLGZ1bmN0aW9uKHQpe28uYWRkUGxvdEJhbmRPckxpbmUodCl9KSxvLl9hZGRlZFBsb3RMQj0hMCkpLG1lKFtnLHcseF0sZnVuY3Rpb24odCl7dmFyIGUsbixpPVtdLG89Sj9KLmR1cmF0aW9ufHw1MDA6MCxhPWZ1bmN0aW9uKCl7Zm9yKG49aS5sZW5ndGg7bi0tOyl0W2lbbl1dJiYhdFtpW25dXS5pc0FjdGl2ZSYmKHRbaVtuXV0uZGVzdHJveSgpLGRlbGV0ZSB0W2lbbl1dKX07Zm9yKGUgaW4gdCl0W2VdLmlzQWN0aXZlfHwodFtlXS5yZW5kZXIoZSwhMSwwKSx0W2VdLmlzQWN0aXZlPSExLGkucHVzaChlKSk7dCE9PXgmJnMuaGFzUmVuZGVyZWQmJm8/byYmc2V0VGltZW91dChhLG8pOmEoKX0pLHkmJihlPW8uZ2V0TGluZVBhdGgoeSksby5heGlzTGluZT9vLmF4aXNMaW5lLmFuaW1hdGUoe2Q6ZX0pOm8uYXhpc0xpbmU9bC5wYXRoKGUpLmF0dHIoe3N0cm9rZTpjLmxpbmVDb2xvciwic3Ryb2tlLXdpZHRoIjp5LHpJbmRleDo3fSkuYWRkKG8uYXhpc0dyb3VwKSxvLmF4aXNMaW5lW0M/InNob3ciOiJoaWRlIl0oKSksZiYmQyYmKGZbZi5pc05ldz8iYXR0ciI6ImFuaW1hdGUiXShvLmdldFRpdGxlUG9zaXRpb24oKSksZi5pc05ldz0hMSksYiYmYi5lbmFibGVkJiZvLnJlbmRlclN0YWNrVG90YWxzKCksby5pc0RpcnR5PSExfSxyZWRyYXc6ZnVuY3Rpb24oKXt0aGlzLnJlbmRlcigpLG1lKHRoaXMucGxvdExpbmVzQW5kQmFuZHMsZnVuY3Rpb24odCl7dC5yZW5kZXIoKX0pLG1lKHRoaXMuc2VyaWVzLGZ1bmN0aW9uKHQpe3QuaXNEaXJ0eT0hMH0pfSxkZXN0cm95OmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10aGlzLG89aS5zdGFja3MsYT1pLnBsb3RMaW5lc0FuZEJhbmRzO3R8fGJlKGkpO2ZvcihlIGluIG8pTihvW2VdKSxvW2VdPW51bGw7Zm9yKG1lKFtpLnRpY2tzLGkubWlub3JUaWNrcyxpLmFsdGVybmF0ZUJhbmRzXSxmdW5jdGlvbih0KXtOKHQpfSksbj1hLmxlbmd0aDtuLS07KWFbbl0uZGVzdHJveSgpO21lKFsic3RhY2tUb3RhbEdyb3VwIiwiYXhpc0xpbmUiLCJheGlzVGl0bGUiLCJheGlzR3JvdXAiLCJjcm9zcyIsImdyaWRHcm91cCIsImxhYmVsR3JvdXAiXSxmdW5jdGlvbih0KXtpW3RdJiYoaVt0XT1pW3RdLmRlc3Ryb3koKSl9KSx0aGlzLmNyb3NzJiZ0aGlzLmNyb3NzLmRlc3Ryb3koKX0sZHJhd0Nyb3NzaGFpcjpmdW5jdGlvbih0LGUpe2lmKHRoaXMuY3Jvc3NoYWlyKXtpZigobShlKXx8IXcodGhpcy5jcm9zc2hhaXIuc25hcCwhMCkpPT09ITEpcmV0dXJuIHZvaWQgdGhpcy5oaWRlQ3Jvc3NoYWlyKCk7dmFyIG4saSxvPXRoaXMuY3Jvc3NoYWlyLGE9by5hbmltYXRpb247aWYodyhvLnNuYXAsITApP20oZSkmJihpPXRoaXMuY2hhcnQuaW52ZXJ0ZWQhPXRoaXMuaG9yaXo/ZS5wbG90WDp0aGlzLmxlbi1lLnBsb3RZKTppPXRoaXMuaG9yaXo/dC5jaGFydFgtdGhpcy5wb3M6dGhpcy5sZW4tdC5jaGFydFkrdGhpcy5wb3Msbj10aGlzLmlzUmFkaWFsP3RoaXMuZ2V0UGxvdExpbmVQYXRoKHRoaXMuaXNYQXhpcz9lLng6dyhlLnN0YWNrWSxlLnkpKTp0aGlzLmdldFBsb3RMaW5lUGF0aChudWxsLG51bGwsbnVsbCxudWxsLGkpLG51bGw9PT1uKXJldHVybiB2b2lkIHRoaXMuaGlkZUNyb3NzaGFpcigpO2lmKHRoaXMuY3Jvc3MpdGhpcy5jcm9zcy5hdHRyKHt2aXNpYmlsaXR5OlZ0fSlbYT8iYW5pbWF0ZSI6ImF0dHIiXSh7ZDpufSxhKTtlbHNle3ZhciByPXsic3Ryb2tlLXdpZHRoIjpvLndpZHRofHwxLHN0cm9rZTpvLmNvbG9yfHwiI0MwQzBDMCIsekluZGV4Om8uekluZGV4fHwyfTtvLmRhc2hTdHlsZSYmKHIuZGFzaHN0eWxlPW8uZGFzaFN0eWxlKSx0aGlzLmNyb3NzPXRoaXMuY2hhcnQucmVuZGVyZXIucGF0aChuKS5hdHRyKHIpLmFkZCgpfX19LGhpZGVDcm9zc2hhaXI6ZnVuY3Rpb24oKXt0aGlzLmNyb3NzJiZ0aGlzLmNyb3NzLmhpZGUoKX19LG8oTS5wcm90b3R5cGUsUSksTS5wcm90b3R5cGUuZ2V0VGltZVRpY2tzPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhLHIscz1bXSxsPXt9LGM9Ry5nbG9iYWwudXNlVVRDLHA9bmV3IHR0KGUtbnQpLGQ9dC51bml0UmFuZ2UsaD10LmNvdW50O2lmKG0oZSkpe2Q+PVYuc2Vjb25kJiYocC5zZXRNaWxsaXNlY29uZHMoMCkscC5zZXRTZWNvbmRzKGQ+PVYubWludXRlPzA6aCpidChwLmdldFNlY29uZHMoKS9oKSkpLGQ+PVYubWludXRlJiZwW2N0XShkPj1WLmhvdXI/MDpoKmJ0KHBbaXRdKCkvaCkpLGQ+PVYuaG91ciYmcFtwdF0oZD49Vi5kYXk/MDpoKmJ0KHBbb3RdKCkvaCkpLGQ+PVYuZGF5JiZwW2R0XShkPj1WLm1vbnRoPzE6aCpidChwW3J0XSgpL2gpKSxkPj1WLm1vbnRoJiYocFtodF0oZD49Vi55ZWFyPzA6aCpidChwW3N0XSgpL2gpKSxyPXBbbHRdKCkpLGQ+PVYueWVhciYmKHItPXIlaCxwW3V0XShyKSksZD09PVYud2VlayYmcFtkdF0ocFtydF0oKS1wW2F0XSgpK3coaSwxKSksYT0xLG50JiYocD1uZXcgdHQocC5nZXRUaW1lKCkrbnQpKSxyPXBbbHRdKCk7Zm9yKHZhciB1PXAuZ2V0VGltZSgpLGY9cFtzdF0oKSxnPXBbcnRdKCkseD0oVi5kYXkrKGM/bnQ6NjAqcC5nZXRUaW1lem9uZU9mZnNldCgpKjFlMykpJVYuZGF5O3U8bjspcy5wdXNoKHUpLGQ9PT1WLnllYXI/dT1ldChyK2EqaCwwKTpkPT09Vi5tb250aD91PWV0KHIsZithKmgpOmN8fGQhPT1WLmRheSYmZCE9PVYud2Vlaz91Kz1kKmg6dT1ldChyLGYsZythKmgqKGQ9PT1WLmRheT8xOjcpKSxhKys7cy5wdXNoKHUpLG1lKGZlKHMsZnVuY3Rpb24odCl7cmV0dXJuIGQ8PVYuaG91ciYmdCVWLmRheT09PXh9KSxmdW5jdGlvbih0KXtsW3RdPSJkYXkifSl9cmV0dXJuIHMuaW5mbz1vKHQse2hpZ2hlclJhbmtzOmwsdG90YWxSYW5nZTpkKmh9KSxzfSxNLnByb3RvdHlwZS5ub3JtYWxpemVUaW1lVGlja0ludGVydmFsPWZ1bmN0aW9uKHQsZSl7dmFyIG4saSxvPWV8fFtbIm1pbGxpc2Vjb25kIixbMSwyLDUsMTAsMjAsMjUsNTAsMTAwLDIwMCw1MDBdXSxbInNlY29uZCIsWzEsMiw1LDEwLDE1LDMwXV0sWyJtaW51dGUiLFsxLDIsNSwxMCwxNSwzMF1dLFsiaG91ciIsWzEsMiwzLDQsNiw4LDEyXV0sWyJkYXkiLFsxLDJdXSxbIndlZWsiLFsxLDJdXSxbIm1vbnRoIixbMSwyLDMsNCw2XV0sWyJ5ZWFyIixudWxsXV0sYT1vW28ubGVuZ3RoLTFdLHI9VlthWzBdXSxzPWFbMV07Zm9yKGk9MDtpPG8ubGVuZ3RoO2krKylpZihhPW9baV0scj1WW2FbMF1dLHM9YVsxXSxvW2krMV0pe3ZhciBsPShyKnNbcy5sZW5ndGgtMV0rVltvW2krMV1bMF1dKS8yO2lmKHQ8PWwpYnJlYWt9cmV0dXJuIHI9PT1WLnllYXImJnQ8NSpyJiYocz1bMSwyLDVdKSxuPVModC9yLHMsInllYXIiPT09YVswXT92dChDKHQvciksMSk6MSkse3VuaXRSYW5nZTpyLGNvdW50Om4sdW5pdE5hbWU6YVswXX19LE0ucHJvdG90eXBlLmdldExvZ1RpY2tQb3NpdGlvbnM9ZnVuY3Rpb24odCxlLG4saSl7dmFyIG89dGhpcyxhPW8ub3B0aW9ucyxyPW8ubGVuLHM9W107aWYoaXx8KG8uX21pbm9yQXV0b0ludGVydmFsPW51bGwpLHQ+PS41KXQ9eHQodCkscz1vLmdldExpbmVhclRpY2tQb3NpdGlvbnModCxlLG4pO2Vsc2UgaWYodD49LjA4KXt2YXIgbCxjLHAsdSxtLGYsZyx4PWJ0KGUpO2ZvcihsPXQ+LjM/WzEsMiw0XTp0Pi4xNT9bMSwyLDQsNiw4XTpbMSwyLDMsNCw1LDYsNyw4LDldLGM9eDtjPG4rMSYmIWc7YysrKWZvcih1PWwubGVuZ3RoLHA9MDtwPHUmJiFnO3ArKyltPWQoaChjKSpsW3BdKSxtPmUmJighaXx8Zjw9bikmJmYhPT1IJiZzLnB1c2goZiksZj5uJiYoZz0hMCksZj1tfWVsc2V7dmFyIGI9aChlKSxfPWgobiksdj1hW2k/Im1pbm9yVGlja0ludGVydmFsIjoidGlja0ludGVydmFsIl0seT0iYXV0byI9PT12P251bGw6dixrPWEudGlja1BpeGVsSW50ZXJ2YWwvKGk/NToxKSx6PWk/ci9vLnRpY2tQb3NpdGlvbnMubGVuZ3RoOnI7dD13KHksby5fbWlub3JBdXRvSW50ZXJ2YWwsKF8tYikqay8oenx8MSkpLHQ9Uyh0LG51bGwsQyh0KSkscz13ZShvLmdldExpbmVhclRpY2tQb3NpdGlvbnModCxiLF8pLGQpLGl8fChvLl9taW5vckF1dG9JbnRlcnZhbD10LzUpfXJldHVybiBpfHwoby50aWNrSW50ZXJ2YWw9dCksc307dmFyIExlPWxlLlRvb2x0aXA9ZnVuY3Rpb24oKXt0aGlzLmluaXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfTtMZS5wcm90b3R5cGU9e2luaXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmJvcmRlcldpZHRoLGk9ZS5zdHlsZSxvPXIoaS5wYWRkaW5nKTt0aGlzLmNoYXJ0PXQsdGhpcy5vcHRpb25zPWUsdGhpcy5jcm9zc2hhaXJzPVtdLHRoaXMubm93PXt4OjAseTowfSx0aGlzLmlzSGlkZGVuPSEwLHRoaXMubGFiZWw9dC5yZW5kZXJlci5sYWJlbCgiIiwwLDAsZS5zaGFwZXx8ImNhbGxvdXQiLG51bGwsbnVsbCxlLnVzZUhUTUwsbnVsbCwidG9vbHRpcCIpLmF0dHIoe3BhZGRpbmc6byxmaWxsOmUuYmFja2dyb3VuZENvbG9yLCJzdHJva2Utd2lkdGgiOm4scjplLmJvcmRlclJhZGl1cyx6SW5kZXg6OH0pLmNzcyhpKS5jc3Moe3BhZGRpbmc6MH0pLmFkZCgpLmF0dHIoe3k6LTk5OTl9KSxEdHx8dGhpcy5sYWJlbC5zaGFkb3coZS5zaGFkb3cpLHRoaXMuc2hhcmVkPWUuc2hhcmVkfSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5sYWJlbCYmKHRoaXMubGFiZWw9dGhpcy5sYWJlbC5kZXN0cm95KCkpLGNsZWFyVGltZW91dCh0aGlzLmhpZGVUaW1lciksY2xlYXJUaW1lb3V0KHRoaXMudG9vbHRpcFRpbWVvdXQpfSxtb3ZlOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhPXRoaXMscj1hLm5vdyxzPWEub3B0aW9ucy5hbmltYXRpb24hPT0hMSYmIWEuaXNIaWRkZW4mJihrdCh0LXIueCk+MXx8a3QoZS1yLnkpPjEpLGw9YS5mb2xsb3dQb2ludGVyfHxhLmxlbj4xO28ocix7eDpzPygyKnIueCt0KS8zOnQseTpzPyhyLnkrZSkvMjplLGFuY2hvclg6bD9IOnM/KDIqci5hbmNob3JYK24pLzM6bixhbmNob3JZOmw/SDpzPyhyLmFuY2hvclkraSkvMjppfSksYS5sYWJlbC5hdHRyKHIpLHMmJihjbGVhclRpbWVvdXQodGhpcy50b29sdGlwVGltZW91dCksdGhpcy50b29sdGlwVGltZW91dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YSYmYS5tb3ZlKHQsZSxuLGkpfSwzMikpfSxoaWRlOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcztjbGVhclRpbWVvdXQodGhpcy5oaWRlVGltZXIpLHRoaXMuaXNIaWRkZW58fChlPXRoaXMuY2hhcnQuaG92ZXJQb2ludHMsdGhpcy5oaWRlVGltZXI9c2V0VGltZW91dChmdW5jdGlvbigpe24ubGFiZWwuZmFkZU91dCgpLG4uaXNIaWRkZW49ITB9LHcodCx0aGlzLm9wdGlvbnMuaGlkZURlbGF5LDUwMCkpLGUmJm1lKGUsZnVuY3Rpb24odCl7dC5zZXRTdGF0ZSgpfSksdGhpcy5jaGFydC5ob3ZlclBvaW50cz1udWxsKX0sZ2V0QW5jaG9yOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxvPXRoaXMuY2hhcnQsYT1vLmludmVydGVkLHI9by5wbG90VG9wLHM9MCxsPTA7cmV0dXJuIHQ9Zyh0KSxuPXRbMF0udG9vbHRpcFBvcyx0aGlzLmZvbGxvd1BvaW50ZXImJmUmJihlLmNoYXJ0WD09PUgmJihlPW8ucG9pbnRlci5ub3JtYWxpemUoZSkpLG49W2UuY2hhcnRYLW8ucGxvdExlZnQsZS5jaGFydFktcl0pLG58fChtZSh0LGZ1bmN0aW9uKHQpe2k9dC5zZXJpZXMueUF4aXMscys9dC5wbG90WCxsKz0odC5wbG90TG93Pyh0LnBsb3RMb3crdC5wbG90SGlnaCkvMjp0LnBsb3RZKSsoIWEmJmk/aS50b3AtcjowKX0pLHMvPXQubGVuZ3RoLGwvPXQubGVuZ3RoLG49W2E/by5wbG90V2lkdGgtbDpzLHRoaXMuc2hhcmVkJiYhYSYmdC5sZW5ndGg+MSYmZT9lLmNoYXJ0WS1yOmE/by5wbG90SGVpZ2h0LXM6bF0pLHdlKG4seHQpfSxnZXRQb3NpdGlvbjpmdW5jdGlvbih0LGUsbil7dmFyIGksbz10aGlzLmNoYXJ0LGE9dGhpcy5kaXN0YW5jZSxyPXt9LHM9WyJ5IixvLmNoYXJ0SGVpZ2h0LGUsbi5wbG90WStvLnBsb3RUb3BdLGw9WyJ4IixvLmNoYXJ0V2lkdGgsdCxuLnBsb3RYK28ucGxvdExlZnRdLGM9bi50dEJlbG93fHxvLmludmVydGVkJiYhbi5uZWdhdGl2ZXx8IW8uaW52ZXJ0ZWQmJm4ubmVnYXRpdmUscD1mdW5jdGlvbih0LGUsbixpKXt2YXIgbz1uPGktYSxzPWkrYStuPGUsbD1pLWEtbixwPWkrYTtpZihjJiZzKXJbdF09cDtlbHNlIGlmKCFjJiZvKXJbdF09bDtlbHNlIGlmKG8pclt0XT1sO2Vsc2V7aWYoIXMpcmV0dXJuITE7clt0XT1wfX0sZD1mdW5jdGlvbih0LGUsbixpKXtyZXR1cm4hKGk8YXx8aT5lLWEpJiZ2b2lkKGk8bi8yP3JbdF09MTppPmUtbi8yP3JbdF09ZS1uLTI6clt0XT1pLW4vMil9LGg9ZnVuY3Rpb24odCl7dmFyIGU9cztzPWwsbD1lLGk9dH0sdT1mdW5jdGlvbigpe3AuYXBwbHkoMCxzKSE9PSExP2QuYXBwbHkoMCxsKSE9PSExfHxpfHwoaCghMCksdSgpKTppP3IueD1yLnk9MDooaCghMCksdSgpKX07cmV0dXJuKG8uaW52ZXJ0ZWR8fHRoaXMubGVuPjEpJiZoKCksdSgpLHJ9LGRlZmF1bHRGb3JtYXR0ZXI6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLnBvaW50c3x8Zyh0aGlzKSxpPW5bMF0uc2VyaWVzO3JldHVybiBlPVt0LnRvb2x0aXBIZWFkZXJGb3JtYXR0ZXIoblswXSldLG1lKG4sZnVuY3Rpb24odCl7aT10LnNlcmllcyxlLnB1c2goaS50b29sdGlwRm9ybWF0dGVyJiZpLnRvb2x0aXBGb3JtYXR0ZXIodCl8fHQucG9pbnQudG9vbHRpcEZvcm1hdHRlcihpLnRvb2x0aXBPcHRpb25zLnBvaW50Rm9ybWF0KSl9KSxlLnB1c2godC5vcHRpb25zLmZvb3RlckZvcm1hdHx8IiIpLGUuam9pbigiIil9LHJlZnJlc2g6ZnVuY3Rpb24odCxlKXt2YXIgbixpLG8sYSxyLHMsbD10aGlzLGM9bC5jaGFydCxwPWwubGFiZWwsZD1sLm9wdGlvbnMsaD17fSx1PVtdLG09ZC5mb3JtYXR0ZXJ8fGwuZGVmYXVsdEZvcm1hdHRlcixmPWMuaG92ZXJQb2ludHMseD1sLnNoYXJlZDtjbGVhclRpbWVvdXQodGhpcy5oaWRlVGltZXIpLGwuZm9sbG93UG9pbnRlcj1nKHQpWzBdLnNlcmllcy50b29sdGlwT3B0aW9ucy5mb2xsb3dQb2ludGVyLApvPWwuZ2V0QW5jaG9yKHQsZSksbj1vWzBdLGk9b1sxXSwheHx8dC5zZXJpZXMmJnQuc2VyaWVzLm5vU2hhcmVkVG9vbHRpcD9oPXQuZ2V0TGFiZWxDb25maWcoKTooYy5ob3ZlclBvaW50cz10LGYmJm1lKGYsZnVuY3Rpb24odCl7dC5zZXRTdGF0ZSgpfSksbWUodCxmdW5jdGlvbih0KXt0LnNldFN0YXRlKG9lKSx1LnB1c2godC5nZXRMYWJlbENvbmZpZygpKX0pLGg9e3g6dFswXS5jYXRlZ29yeSx5OnRbMF0ueX0saC5wb2ludHM9dSx0aGlzLmxlbj11Lmxlbmd0aCx0PXRbMF0pLGE9bS5jYWxsKGgsbCkscz10LnNlcmllcyx0aGlzLmRpc3RhbmNlPXcocy50b29sdGlwT3B0aW9ucy5kaXN0YW5jZSwxNiksYT09PSExP3RoaXMuaGlkZSgpOihsLmlzSGlkZGVuJiYoa2UocCkscC5hdHRyKCJvcGFjaXR5IiwxKS5zaG93KCkpLHAuYXR0cih7dGV4dDphfSkscj1kLmJvcmRlckNvbG9yfHx0LmNvbG9yfHxzLmNvbG9yfHwiIzYwNjA2MCIscC5hdHRyKHtzdHJva2U6cn0pLGwudXBkYXRlUG9zaXRpb24oe3Bsb3RYOm4scGxvdFk6aSxuZWdhdGl2ZTp0Lm5lZ2F0aXZlLHR0QmVsb3c6dC50dEJlbG93fSksdGhpcy5pc0hpZGRlbj0hMSksX2UoYywidG9vbHRpcFJlZnJlc2giLHt0ZXh0OmEseDpuK2MucGxvdExlZnQseTppK2MucGxvdFRvcCxib3JkZXJDb2xvcjpyfSl9LHVwZGF0ZVBvc2l0aW9uOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hhcnQsbj10aGlzLmxhYmVsLGk9KHRoaXMub3B0aW9ucy5wb3NpdGlvbmVyfHx0aGlzLmdldFBvc2l0aW9uKS5jYWxsKHRoaXMsbi53aWR0aCxuLmhlaWdodCx0KTt0aGlzLm1vdmUoeHQoaS54KSx4dChpLnkpLHQucGxvdFgrZS5wbG90TGVmdCx0LnBsb3RZK2UucGxvdFRvcCl9LHRvb2x0aXBIZWFkZXJGb3JtYXR0ZXI6ZnVuY3Rpb24odCl7dmFyIGUsbj10LnNlcmllcyxpPW4udG9vbHRpcE9wdGlvbnMsbz1pLmRhdGVUaW1lTGFiZWxGb3JtYXRzLGE9aS54RGF0ZUZvcm1hdCxyPW4ueEF4aXMscz1yJiYiZGF0ZXRpbWUiPT09ci5vcHRpb25zLnR5cGUmJnAodC5rZXkpLGw9aS5oZWFkZXJGb3JtYXQsYz1yJiZyLmNsb3Nlc3RQb2ludFJhbmdlO2lmKHMmJiFhKXtpZihjKXtmb3IoZSBpbiBWKWlmKFZbZV0+PWN8fFZbZV08PVYuZGF5JiZ0LmtleSVWW2VdPjApe2E9b1tlXTticmVha319ZWxzZSBhPW8uZGF5O2E9YXx8by55ZWFyfXJldHVybiBzJiZhJiYobD1sLnJlcGxhY2UoIntwb2ludC5rZXl9Iiwie3BvaW50LmtleToiK2ErIn0iKSksaihsLHtwb2ludDp0LHNlcmllczpufSl9fTt2YXIgRGU7VT1mdC5kb2N1bWVudEVsZW1lbnQub250b3VjaHN0YXJ0IT09SDt2YXIgRmU9bGUuUG9pbnRlcj1mdW5jdGlvbih0LGUpe3RoaXMuaW5pdCh0LGUpfTtpZihGZS5wcm90b3R5cGU9e2luaXQ6ZnVuY3Rpb24odCxlKXt2YXIgbixpLG89ZS5jaGFydCxhPW8uZXZlbnRzLHI9RHQ/IiI6by56b29tVHlwZSxzPXQuaW52ZXJ0ZWQ7dGhpcy5vcHRpb25zPWUsdGhpcy5jaGFydD10LHRoaXMuem9vbVg9bj0veC8udGVzdChyKSx0aGlzLnpvb21ZPWk9L3kvLnRlc3QociksdGhpcy56b29tSG9yPW4mJiFzfHxpJiZzLHRoaXMuem9vbVZlcnQ9aSYmIXN8fG4mJnMsdGhpcy5oYXNab29tPW58fGksdGhpcy5ydW5DaGFydENsaWNrPWEmJiEhYS5jbGljayx0aGlzLnBpbmNoRG93bj1bXSx0aGlzLmxhc3RWYWxpZFRvdWNoPXt9LGxlLlRvb2x0aXAmJmUudG9vbHRpcC5lbmFibGVkJiYodC50b29sdGlwPW5ldyBMZSh0LGUudG9vbHRpcCksdGhpcy5mb2xsb3dUb3VjaE1vdmU9ZS50b29sdGlwLmZvbGxvd1RvdWNoTW92ZSksdGhpcy5zZXRET01FdmVudHMoKX0sbm9ybWFsaXplOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhO3JldHVybiB0PXR8fHdpbmRvdy5ldmVudCx0PXZlKHQpLHQudGFyZ2V0fHwodC50YXJnZXQ9dC5zcmNFbGVtZW50KSxhPXQudG91Y2hlcz90LnRvdWNoZXMubGVuZ3RoP3QudG91Y2hlcy5pdGVtKDApOnQuY2hhbmdlZFRvdWNoZXNbMF06dCxlfHwodGhpcy5jaGFydFBvc2l0aW9uPWU9Z2UodGhpcy5jaGFydC5jb250YWluZXIpKSxhLnBhZ2VYPT09SD8obj12dCh0LngsdC5jbGllbnRYLWUubGVmdCksaT10LnkpOihuPWEucGFnZVgtZS5sZWZ0LGk9YS5wYWdlWS1lLnRvcCksbyh0LHtjaGFydFg6eHQobiksY2hhcnRZOnh0KGkpfSl9LGdldENvb3JkaW5hdGVzOmZ1bmN0aW9uKHQpe3ZhciBlPXt4QXhpczpbXSx5QXhpczpbXX07cmV0dXJuIG1lKHRoaXMuY2hhcnQuYXhlcyxmdW5jdGlvbihuKXtlW24uaXNYQXhpcz8ieEF4aXMiOiJ5QXhpcyJdLnB1c2goe2F4aXM6bix2YWx1ZTpuLnRvVmFsdWUodFtuLmhvcml6PyJjaGFydFgiOiJjaGFydFkiXSl9KX0pLGV9LGdldEluZGV4OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hhcnQ7cmV0dXJuIGUuaW52ZXJ0ZWQ/ZS5wbG90SGVpZ2h0K2UucGxvdFRvcC10LmNoYXJ0WTp0LmNoYXJ0WC1lLnBsb3RMZWZ0fSxydW5Qb2ludEFjdGlvbnM6ZnVuY3Rpb24odCl7dmFyIGUsbixpLG8sYSxyLHM9dGhpcyxsPXMuY2hhcnQsYz1sLnNlcmllcyxwPWwudG9vbHRpcCxkPWwuaG92ZXJQb2ludCxoPWwuaG92ZXJTZXJpZXMsdT1sLmNoYXJ0V2lkdGgsbT1zLmdldEluZGV4KHQpO2lmKHAmJnMub3B0aW9ucy50b29sdGlwLnNoYXJlZCYmKCFofHwhaC5ub1NoYXJlZFRvb2x0aXApKXtmb3IoaT1bXSxvPWMubGVuZ3RoLGE9MDthPG87YSsrKWNbYV0udmlzaWJsZSYmY1thXS5vcHRpb25zLmVuYWJsZU1vdXNlVHJhY2tpbmchPT0hMSYmIWNbYV0ubm9TaGFyZWRUb29sdGlwJiZjW2FdLnNpbmd1bGFyVG9vbHRpcHMhPT0hMCYmY1thXS50b29sdGlwUG9pbnRzLmxlbmd0aCYmKG49Y1thXS50b29sdGlwUG9pbnRzW21dLG4mJm4uc2VyaWVzJiYobi5fZGlzdD1rdChtLW4uY2xpZW50WCksdT15dCh1LG4uX2Rpc3QpLGkucHVzaChuKSkpO2ZvcihvPWkubGVuZ3RoO28tLTspaVtvXS5fZGlzdD51JiZpLnNwbGljZShvLDEpO2kubGVuZ3RoJiZpWzBdLmNsaWVudFghPT1zLmhvdmVyWCYmKHAucmVmcmVzaChpLHQpLHMuaG92ZXJYPWlbMF0uY2xpZW50WCl9ZT1oJiZoLnRvb2x0aXBPcHRpb25zLmZvbGxvd1BvaW50ZXIsaCYmaC50cmFja2VyJiYhZT8obj1oLnRvb2x0aXBQb2ludHNbbV0sbiYmbiE9PWQmJm4ub25Nb3VzZU92ZXIodCkpOnAmJmUmJiFwLmlzSGlkZGVuJiYocj1wLmdldEFuY2hvcihbe31dLHQpLHAudXBkYXRlUG9zaXRpb24oe3Bsb3RYOnJbMF0scGxvdFk6clsxXX0pKSxwJiYhcy5fb25Eb2N1bWVudE1vdXNlTW92ZSYmKHMuX29uRG9jdW1lbnRNb3VzZU1vdmU9ZnVuY3Rpb24odCl7JHRbRGVdJiYkdFtEZV0ucG9pbnRlci5vbkRvY3VtZW50TW91c2VNb3ZlKHQpfSx4ZShmdCwibW91c2Vtb3ZlIixzLl9vbkRvY3VtZW50TW91c2VNb3ZlKSksbWUobC5heGVzLGZ1bmN0aW9uKGUpe2UuZHJhd0Nyb3NzaGFpcih0LHcobixkKSl9KX0scmVzZXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9bi5jaGFydCxvPWkuaG92ZXJTZXJpZXMsYT1pLmhvdmVyUG9pbnQscj1pLnRvb2x0aXAscz1yJiZyLnNoYXJlZD9pLmhvdmVyUG9pbnRzOmE7dD10JiZyJiZzLHQmJmcocylbMF0ucGxvdFg9PT1IJiYodD0hMSksdD8oci5yZWZyZXNoKHMpLGEmJmEuc2V0U3RhdGUoYS5zdGF0ZSwhMCkpOihhJiZhLm9uTW91c2VPdXQoKSxvJiZvLm9uTW91c2VPdXQoKSxyJiZyLmhpZGUoZSksbi5fb25Eb2N1bWVudE1vdXNlTW92ZSYmKGJlKGZ0LCJtb3VzZW1vdmUiLG4uX29uRG9jdW1lbnRNb3VzZU1vdmUpLG4uX29uRG9jdW1lbnRNb3VzZU1vdmU9bnVsbCksbWUoaS5heGVzLGZ1bmN0aW9uKHQpe3QuaGlkZUNyb3NzaGFpcigpfSksbi5ob3Zlclg9bnVsbCl9LHNjYWxlR3JvdXBzOmZ1bmN0aW9uKHQsZSl7dmFyIG4saT10aGlzLmNoYXJ0O21lKGkuc2VyaWVzLGZ1bmN0aW9uKG8pe249dHx8by5nZXRQbG90Qm94KCksby54QXhpcyYmby54QXhpcy56b29tRW5hYmxlZCYmKG8uZ3JvdXAuYXR0cihuKSxvLm1hcmtlckdyb3VwJiYoby5tYXJrZXJHcm91cC5hdHRyKG4pLG8ubWFya2VyR3JvdXAuY2xpcChlP2kuY2xpcFJlY3Q6bnVsbCkpLG8uZGF0YUxhYmVsc0dyb3VwJiZvLmRhdGFMYWJlbHNHcm91cC5hdHRyKG4pKX0pLGkuY2xpcFJlY3QuYXR0cihlfHxpLmNsaXBCb3gpfSxkcmFnU3RhcnQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jaGFydDtlLm1vdXNlSXNEb3duPXQudHlwZSxlLmNhbmNlbENsaWNrPSExLGUubW91c2VEb3duWD10aGlzLm1vdXNlRG93blg9dC5jaGFydFgsZS5tb3VzZURvd25ZPXRoaXMubW91c2VEb3duWT10LmNoYXJ0WX0sZHJhZzpmdW5jdGlvbih0KXt2YXIgZSxuLGk9dGhpcy5jaGFydCxvPWkub3B0aW9ucy5jaGFydCxhPXQuY2hhcnRYLHI9dC5jaGFydFkscz10aGlzLnpvb21Ib3IsbD10aGlzLnpvb21WZXJ0LGM9aS5wbG90TGVmdCxwPWkucGxvdFRvcCxkPWkucGxvdFdpZHRoLGg9aS5wbG90SGVpZ2h0LHU9dGhpcy5tb3VzZURvd25YLG09dGhpcy5tb3VzZURvd25ZLGY9by5wYW5LZXkmJnRbby5wYW5LZXkrIktleSJdO2E8Yz9hPWM6YT5jK2QmJihhPWMrZCkscjxwP3I9cDpyPnAraCYmKHI9cCtoKSx0aGlzLmhhc0RyYWdnZWQ9TWF0aC5zcXJ0KE1hdGgucG93KHUtYSwyKStNYXRoLnBvdyhtLXIsMikpLHRoaXMuaGFzRHJhZ2dlZD4xMCYmKGU9aS5pc0luc2lkZVBsb3QodS1jLG0tcCksaS5oYXNDYXJ0ZXNpYW5TZXJpZXMmJih0aGlzLnpvb21YfHx0aGlzLnpvb21ZKSYmZSYmIWYmJih0aGlzLnNlbGVjdGlvbk1hcmtlcnx8KHRoaXMuc2VsZWN0aW9uTWFya2VyPWkucmVuZGVyZXIucmVjdChjLHAscz8xOmQsbD8xOmgsMCkuYXR0cih7ZmlsbDpvLnNlbGVjdGlvbk1hcmtlckZpbGx8fCJyZ2JhKDY5LDExNCwxNjcsMC4yNSkiLHpJbmRleDo3fSkuYWRkKCkpKSx0aGlzLnNlbGVjdGlvbk1hcmtlciYmcyYmKG49YS11LHRoaXMuc2VsZWN0aW9uTWFya2VyLmF0dHIoe3dpZHRoOmt0KG4pLHg6KG4+MD8wOm4pK3V9KSksdGhpcy5zZWxlY3Rpb25NYXJrZXImJmwmJihuPXItbSx0aGlzLnNlbGVjdGlvbk1hcmtlci5hdHRyKHtoZWlnaHQ6a3QobikseToobj4wPzA6bikrbX0pKSxlJiYhdGhpcy5zZWxlY3Rpb25NYXJrZXImJm8ucGFubmluZyYmaS5wYW4odCxvLnBhbm5pbmcpKX0sZHJvcDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNoYXJ0LG49dGhpcy5oYXNQaW5jaGVkO2lmKHRoaXMuc2VsZWN0aW9uTWFya2VyKXt2YXIgaSxhPXt4QXhpczpbXSx5QXhpczpbXSxvcmlnaW5hbEV2ZW50OnQub3JpZ2luYWxFdmVudHx8dH0scj10aGlzLnNlbGVjdGlvbk1hcmtlcixzPXIuYXR0cj9yLmF0dHIoIngiKTpyLngsbD1yLmF0dHI/ci5hdHRyKCJ5Iik6ci55LGM9ci5hdHRyP3IuYXR0cigid2lkdGgiKTpyLndpZHRoLHA9ci5hdHRyP3IuYXR0cigiaGVpZ2h0Iik6ci5oZWlnaHQ7KHRoaXMuaGFzRHJhZ2dlZHx8bikmJihtZShlLmF4ZXMsZnVuY3Rpb24oZSl7aWYoZS56b29tRW5hYmxlZCl7dmFyIG49ZS5ob3JpeixvPSJ0b3VjaGVuZCI9PT10LnR5cGU/ZS5taW5QaXhlbFBhZGRpbmc6MCxyPWUudG9WYWx1ZSgobj9zOmwpK28pLGQ9ZS50b1ZhbHVlKChuP3MrYzpsK3ApLW8pO2lzTmFOKHIpfHxpc05hTihkKXx8KGFbZS5jb2xsXS5wdXNoKHtheGlzOmUsbWluOnl0KHIsZCksbWF4OnZ0KHIsZCl9KSxpPSEwKX19KSxpJiZfZShlLCJzZWxlY3Rpb24iLGEsZnVuY3Rpb24odCl7ZS56b29tKG8odCxuP3thbmltYXRpb246ITF9Om51bGwpKX0pKSx0aGlzLnNlbGVjdGlvbk1hcmtlcj10aGlzLnNlbGVjdGlvbk1hcmtlci5kZXN0cm95KCksbiYmdGhpcy5zY2FsZUdyb3VwcygpfWUmJih4KGUuY29udGFpbmVyLHtjdXJzb3I6ZS5fY3Vyc29yfSksZS5jYW5jZWxDbGljaz10aGlzLmhhc0RyYWdnZWQ+MTAsZS5tb3VzZUlzRG93bj10aGlzLmhhc0RyYWdnZWQ9dGhpcy5oYXNQaW5jaGVkPSExLHRoaXMucGluY2hEb3duPVtdKX0sb25Db250YWluZXJNb3VzZURvd246ZnVuY3Rpb24odCl7dD10aGlzLm5vcm1hbGl6ZSh0KSx0LnByZXZlbnREZWZhdWx0JiZ0LnByZXZlbnREZWZhdWx0KCksdGhpcy5kcmFnU3RhcnQodCl9LG9uRG9jdW1lbnRNb3VzZVVwOmZ1bmN0aW9uKHQpeyR0W0RlXSYmJHRbRGVdLnBvaW50ZXIuZHJvcCh0KX0sb25Eb2N1bWVudE1vdXNlTW92ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNoYXJ0LG49dGhpcy5jaGFydFBvc2l0aW9uLGk9ZS5ob3ZlclNlcmllczt0PXRoaXMubm9ybWFsaXplKHQsbiksbiYmaSYmIXRoaXMuaW5DbGFzcyh0LnRhcmdldCwiaGlnaGNoYXJ0cy10cmFja2VyIikmJiFlLmlzSW5zaWRlUGxvdCh0LmNoYXJ0WC1lLnBsb3RMZWZ0LHQuY2hhcnRZLWUucGxvdFRvcCkmJnRoaXMucmVzZXQoKX0sb25Db250YWluZXJNb3VzZUxlYXZlOmZ1bmN0aW9uKCl7dmFyIHQ9JHRbRGVdO3QmJih0LnBvaW50ZXIucmVzZXQoKSx0LnBvaW50ZXIuY2hhcnRQb3NpdGlvbj1udWxsKX0sb25Db250YWluZXJNb3VzZU1vdmU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jaGFydDtEZT1lLmluZGV4LHQ9dGhpcy5ub3JtYWxpemUodCksdC5yZXR1cm5WYWx1ZT0hMSwibW91c2Vkb3duIj09PWUubW91c2VJc0Rvd24mJnRoaXMuZHJhZyh0KSwhdGhpcy5pbkNsYXNzKHQudGFyZ2V0LCJoaWdoY2hhcnRzLXRyYWNrZXIiKSYmIWUuaXNJbnNpZGVQbG90KHQuY2hhcnRYLWUucGxvdExlZnQsdC5jaGFydFktZS5wbG90VG9wKXx8ZS5vcGVuTWVudXx8dGhpcy5ydW5Qb2ludEFjdGlvbnModCl9LGluQ2xhc3M6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG47dDspe2lmKG49Zih0LCJjbGFzcyIpKXtpZihuLmluZGV4T2YoZSkhPT0tMSlyZXR1cm4hMDtpZihuLmluZGV4T2YoWnQrImNvbnRhaW5lciIpIT09LTEpcmV0dXJuITF9dD10LnBhcmVudE5vZGV9fSxvblRyYWNrZXJNb3VzZU91dDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNoYXJ0LmhvdmVyU2VyaWVzLG49dC5yZWxhdGVkVGFyZ2V0fHx0LnRvRWxlbWVudCxpPW4mJm4ucG9pbnQmJm4ucG9pbnQuc2VyaWVzOyFlfHxlLm9wdGlvbnMuc3RpY2t5VHJhY2tpbmd8fHRoaXMuaW5DbGFzcyhuLFp0KyJ0b29sdGlwIil8fGk9PT1lfHxlLm9uTW91c2VPdXQoKX0sb25Db250YWluZXJDbGljazpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmNoYXJ0LG49ZS5ob3ZlclBvaW50LGk9ZS5wbG90TGVmdCxhPWUucGxvdFRvcDt0PXRoaXMubm9ybWFsaXplKHQpLHQuY2FuY2VsQnViYmxlPSEwLGUuY2FuY2VsQ2xpY2t8fChuJiZ0aGlzLmluQ2xhc3ModC50YXJnZXQsWnQrInRyYWNrZXIiKT8oX2Uobi5zZXJpZXMsImNsaWNrIixvKHQse3BvaW50Om59KSksZS5ob3ZlclBvaW50JiZuLmZpcmVQb2ludEV2ZW50KCJjbGljayIsdCkpOihvKHQsdGhpcy5nZXRDb29yZGluYXRlcyh0KSksZS5pc0luc2lkZVBsb3QodC5jaGFydFgtaSx0LmNoYXJ0WS1hKSYmX2UoZSwiY2xpY2siLHQpKSl9LHNldERPTUV2ZW50czpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNoYXJ0LmNvbnRhaW5lcjtlLm9ubW91c2Vkb3duPWZ1bmN0aW9uKGUpe3Qub25Db250YWluZXJNb3VzZURvd24oZSl9LGUub25tb3VzZW1vdmU9ZnVuY3Rpb24oZSl7dC5vbkNvbnRhaW5lck1vdXNlTW92ZShlKX0sZS5vbmNsaWNrPWZ1bmN0aW9uKGUpe3Qub25Db250YWluZXJDbGljayhlKX0seGUoZSwibW91c2VsZWF2ZSIsdC5vbkNvbnRhaW5lck1vdXNlTGVhdmUpLDE9PT1IdCYmeGUoZnQsIm1vdXNldXAiLHQub25Eb2N1bWVudE1vdXNlVXApLFUmJihlLm9udG91Y2hzdGFydD1mdW5jdGlvbihlKXt0Lm9uQ29udGFpbmVyVG91Y2hTdGFydChlKX0sZS5vbnRvdWNobW92ZT1mdW5jdGlvbihlKXt0Lm9uQ29udGFpbmVyVG91Y2hNb3ZlKGUpfSwxPT09SHQmJnhlKGZ0LCJ0b3VjaGVuZCIsdC5vbkRvY3VtZW50VG91Y2hFbmQpKX0sZGVzdHJveTpmdW5jdGlvbigpe3ZhciB0O2JlKHRoaXMuY2hhcnQuY29udGFpbmVyLCJtb3VzZWxlYXZlIix0aGlzLm9uQ29udGFpbmVyTW91c2VMZWF2ZSksSHR8fChiZShmdCwibW91c2V1cCIsdGhpcy5vbkRvY3VtZW50TW91c2VVcCksYmUoZnQsInRvdWNoZW5kIix0aGlzLm9uRG9jdW1lbnRUb3VjaEVuZCkpLGNsZWFySW50ZXJ2YWwodGhpcy50b29sdGlwVGltZW91dCk7Zm9yKHQgaW4gdGhpcyl0aGlzW3RdPW51bGx9fSxvKGxlLlBvaW50ZXIucHJvdG90eXBlLHtwaW5jaFRyYW5zbGF0ZTpmdW5jdGlvbih0LGUsbixpLG8sYSl7KHRoaXMuem9vbUhvcnx8dGhpcy5waW5jaEhvcikmJnRoaXMucGluY2hUcmFuc2xhdGVEaXJlY3Rpb24oITAsdCxlLG4saSxvLGEpLCh0aGlzLnpvb21WZXJ0fHx0aGlzLnBpbmNoVmVydCkmJnRoaXMucGluY2hUcmFuc2xhdGVEaXJlY3Rpb24oITEsdCxlLG4saSxvLGEpfSxwaW5jaFRyYW5zbGF0ZURpcmVjdGlvbjpmdW5jdGlvbih0LGUsbixpLG8sYSxyLHMpe3ZhciBsLGMscCxkLGgsdSxtPXRoaXMuY2hhcnQsZj10PyJ4IjoieSIsZz10PyJYIjoiWSIsdz0iY2hhcnQiK2cseD10PyJ3aWR0aCI6ImhlaWdodCIsYj1tWyJwbG90IisodD8iTGVmdCI6IlRvcCIpXSxfPXN8fDEsdj1tLmludmVydGVkLHk9bS5ib3VuZHNbdD8iaCI6InYiXSxrPTE9PT1lLmxlbmd0aCx6PWVbMF1bd10saj1uWzBdW3ddLEM9IWsmJmVbMV1bd10sUz0hayYmblsxXVt3XSxQPWZ1bmN0aW9uKCl7IWsmJmt0KHotQyk+MjAmJihfPXN8fGt0KGotUykva3Qoei1DKSkscD0oYi1qKS9fK3osbD1tWyJwbG90IisodD8iV2lkdGgiOiJIZWlnaHQiKV0vX307UCgpLGM9cCxjPHkubWluPyhjPXkubWluLGQ9ITApOmMrbD55Lm1heCYmKGM9eS5tYXgtbCxkPSEwKSxkPyhqLT0uOCooai1yW2ZdWzBdKSxrfHwoUy09LjgqKFMtcltmXVsxXSkpLFAoKSk6cltmXT1baixTXSx2fHwoYVtmXT1wLWIsYVt4XT1sKSx1PXY/dD8ic2NhbGVZIjoic2NhbGVYIjoic2NhbGUiK2csaD12PzEvXzpfLG9beF09bCxvW2ZdPWMsaVt1XT1fLGlbInRyYW5zbGF0ZSIrZ109aCpiKyhqLWgqeil9LHBpbmNoOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLmNoYXJ0LGk9ZS5waW5jaERvd24sYT1lLmZvbGxvd1RvdWNoTW92ZSxyPXQudG91Y2hlcyxzPXIubGVuZ3RoLGw9ZS5sYXN0VmFsaWRUb3VjaCxjPWUuaGFzWm9vbSxwPWUuc2VsZWN0aW9uTWFya2VyLGQ9e30saD0xPT09cyYmKGUuaW5DbGFzcyh0LnRhcmdldCxadCsidHJhY2tlciIpJiZuLnJ1blRyYWNrZXJDbGlja3x8ZS5ydW5DaGFydENsaWNrKSx1PXt9OyFjJiYhYXx8aHx8dC5wcmV2ZW50RGVmYXVsdCgpLHdlKHIsZnVuY3Rpb24odCl7cmV0dXJuIGUubm9ybWFsaXplKHQpfSksInRvdWNoc3RhcnQiPT09dC50eXBlPyhtZShyLGZ1bmN0aW9uKHQsZSl7aVtlXT17Y2hhcnRYOnQuY2hhcnRYLGNoYXJ0WTp0LmNoYXJ0WX19KSxsLng9W2lbMF0uY2hhcnRYLGlbMV0mJmlbMV0uY2hhcnRYXSxsLnk9W2lbMF0uY2hhcnRZLGlbMV0mJmlbMV0uY2hhcnRZXSxtZShuLmF4ZXMsZnVuY3Rpb24odCl7aWYodC56b29tRW5hYmxlZCl7dmFyIGU9bi5ib3VuZHNbdC5ob3Jpej8iaCI6InYiXSxpPXQubWluUGl4ZWxQYWRkaW5nLG89dC50b1BpeGVscyh3KHQub3B0aW9ucy5taW4sdC5kYXRhTWluKSksYT10LnRvUGl4ZWxzKHcodC5vcHRpb25zLm1heCx0LmRhdGFNYXgpKSxyPXl0KG8sYSkscz12dChvLGEpO2UubWluPXl0KHQucG9zLHItaSksZS5tYXg9dnQodC5wb3MrdC5sZW4scytpKX19KSxlLnJlcz0hMCk6aS5sZW5ndGgmJihwfHwoZS5zZWxlY3Rpb25NYXJrZXI9cD1vKHtkZXN0cm95OlJ0fSxuLnBsb3RCb3gpKSxlLnBpbmNoVHJhbnNsYXRlKGkscixkLHAsdSxsKSxlLmhhc1BpbmNoZWQ9YyxlLnNjYWxlR3JvdXBzKGQsdSksIWMmJmEmJjE9PT1zP3RoaXMucnVuUG9pbnRBY3Rpb25zKGUubm9ybWFsaXplKHQpKTplLnJlcyYmKGUucmVzPSExLHRoaXMucmVzZXQoITEsMCkpKX0sb25Db250YWluZXJUb3VjaFN0YXJ0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hhcnQ7RGU9ZS5pbmRleCwxPT09dC50b3VjaGVzLmxlbmd0aD8odD10aGlzLm5vcm1hbGl6ZSh0KSxlLmlzSW5zaWRlUGxvdCh0LmNoYXJ0WC1lLnBsb3RMZWZ0LHQuY2hhcnRZLWUucGxvdFRvcCk/KHRoaXMucnVuUG9pbnRBY3Rpb25zKHQpLHRoaXMucGluY2godCkpOnRoaXMucmVzZXQoKSk6Mj09PXQudG91Y2hlcy5sZW5ndGgmJnRoaXMucGluY2godCl9LG9uQ29udGFpbmVyVG91Y2hNb3ZlOmZ1bmN0aW9uKHQpezEhPT10LnRvdWNoZXMubGVuZ3RoJiYyIT09dC50b3VjaGVzLmxlbmd0aHx8dGhpcy5waW5jaCh0KX0sb25Eb2N1bWVudFRvdWNoRW5kOmZ1bmN0aW9uKHQpeyR0W0RlXSYmJHRbRGVdLnBvaW50ZXIuZHJvcCh0KX19KSxndC5Qb2ludGVyRXZlbnR8fGd0Lk1TUG9pbnRlckV2ZW50KXt2YXIgTWU9e30sUmU9ISFndC5Qb2ludGVyRXZlbnQsJGU9ZnVuY3Rpb24oKXt2YXIgdCxlPVtdO2UuaXRlbT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpc1t0XX07Zm9yKHQgaW4gTWUpTWUuaGFzT3duUHJvcGVydHkodCkmJmUucHVzaCh7cGFnZVg6TWVbdF0ucGFnZVgscGFnZVk6TWVbdF0ucGFnZVksdGFyZ2V0Ok1lW3RdLnRhcmdldH0pO3JldHVybiBlfSxIZT1mdW5jdGlvbih0LGUsbixpKXt2YXIgbzt0PXQub3JpZ2luYWxFdmVudHx8dCwidG91Y2giIT09dC5wb2ludGVyVHlwZSYmdC5wb2ludGVyVHlwZSE9PXQuTVNQT0lOVEVSX1RZUEVfVE9VQ0h8fCEkdFtEZV18fChpKHQpLG89JHRbRGVdLnBvaW50ZXIsb1tlXSh7dHlwZTpuLHRhcmdldDp0LmN1cnJlbnRUYXJnZXQscHJldmVudERlZmF1bHQ6UnQsdG91Y2hlczokZSgpfSkpfTtvKEZlLnByb3RvdHlwZSx7b25Db250YWluZXJQb2ludGVyRG93bjpmdW5jdGlvbih0KXtIZSh0LCJvbkNvbnRhaW5lclRvdWNoU3RhcnQiLCJ0b3VjaHN0YXJ0IixmdW5jdGlvbih0KXtNZVt0LnBvaW50ZXJJZF09e3BhZ2VYOnQucGFnZVgscGFnZVk6dC5wYWdlWSx0YXJnZXQ6dC5jdXJyZW50VGFyZ2V0fX0pfSxvbkNvbnRhaW5lclBvaW50ZXJNb3ZlOmZ1bmN0aW9uKHQpe0hlKHQsIm9uQ29udGFpbmVyVG91Y2hNb3ZlIiwidG91Y2htb3ZlIixmdW5jdGlvbih0KXtNZVt0LnBvaW50ZXJJZF09e3BhZ2VYOnQucGFnZVgscGFnZVk6dC5wYWdlWX0sTWVbdC5wb2ludGVySWRdLnRhcmdldHx8KE1lW3QucG9pbnRlcklkXS50YXJnZXQ9dC5jdXJyZW50VGFyZ2V0KX0pfSxvbkRvY3VtZW50UG9pbnRlclVwOmZ1bmN0aW9uKHQpe0hlKHQsIm9uQ29udGFpbmVyVG91Y2hFbmQiLCJ0b3VjaGVuZCIsZnVuY3Rpb24odCl7ZGVsZXRlIE1lW3QucG9pbnRlcklkXX0pfSxiYXRjaE1TRXZlbnRzOmZ1bmN0aW9uKHQpe3QodGhpcy5jaGFydC5jb250YWluZXIsUmU/InBvaW50ZXJkb3duIjoiTVNQb2ludGVyRG93biIsdGhpcy5vbkNvbnRhaW5lclBvaW50ZXJEb3duKSx0KHRoaXMuY2hhcnQuY29udGFpbmVyLFJlPyJwb2ludGVybW92ZSI6Ik1TUG9pbnRlck1vdmUiLHRoaXMub25Db250YWluZXJQb2ludGVyTW92ZSksdChmdCxSZT8icG9pbnRlcnVwIjoiTVNQb2ludGVyVXAiLHRoaXMub25Eb2N1bWVudFBvaW50ZXJVcCl9fSksayhGZS5wcm90b3R5cGUsImluaXQiLGZ1bmN0aW9uKHQsZSxuKXt0LmNhbGwodGhpcyxlLG4pLCh0aGlzLmhhc1pvb218fHRoaXMuZm9sbG93VG91Y2hNb3ZlKSYmeChlLmNvbnRhaW5lcix7Ii1tcy10b3VjaC1hY3Rpb24iOlF0LCJ0b3VjaC1hY3Rpb24iOlF0fSl9KSxrKEZlLnByb3RvdHlwZSwic2V0RE9NRXZlbnRzIixmdW5jdGlvbih0KXt0LmFwcGx5KHRoaXMpLCh0aGlzLmhhc1pvb218fHRoaXMuZm9sbG93VG91Y2hNb3ZlKSYmdGhpcy5iYXRjaE1TRXZlbnRzKHhlKX0pLGsoRmUucHJvdG90eXBlLCJkZXN0cm95IixmdW5jdGlvbih0KXt0aGlzLmJhdGNoTVNFdmVudHMoYmUpLHQuY2FsbCh0aGlzKX0pfXZhciBXZT1sZS5MZWdlbmQ9ZnVuY3Rpb24odCxlKXt0aGlzLmluaXQodCxlKX07V2UucHJvdG90eXBlPXtpbml0OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPWUuaXRlbVN0eWxlLG89dyhlLnBhZGRpbmcsOCkscj1lLml0ZW1NYXJnaW5Ub3B8fDA7dGhpcy5vcHRpb25zPWUsZS5lbmFibGVkJiYobi5pdGVtU3R5bGU9aSxuLml0ZW1IaWRkZW5TdHlsZT1hKGksZS5pdGVtSGlkZGVuU3R5bGUpLG4uaXRlbU1hcmdpblRvcD1yLG4ucGFkZGluZz1vLG4uaW5pdGlhbEl0ZW1YPW8sbi5pbml0aWFsSXRlbVk9by01LG4ubWF4SXRlbVdpZHRoPTAsbi5jaGFydD10LG4uaXRlbUhlaWdodD0wLG4ubGFzdExpbmVIZWlnaHQ9MCxuLnN5bWJvbFdpZHRoPXcoZS5zeW1ib2xXaWR0aCwxNiksbi5wYWdlcz1bXSxuLnJlbmRlcigpLHhlKG4uY2hhcnQsImVuZFJlc2l6ZSIsZnVuY3Rpb24oKXtuLnBvc2l0aW9uQ2hlY2tib3hlcygpfSkpfSxjb2xvcml6ZUl0ZW06ZnVuY3Rpb24odCxlKXt2YXIgbixpLG89dGhpcyxhPW8ub3B0aW9ucyxyPXQubGVnZW5kSXRlbSxzPXQubGVnZW5kTGluZSxsPXQubGVnZW5kU3ltYm9sLGM9by5pdGVtSGlkZGVuU3R5bGUuY29sb3IscD1lP2EuaXRlbVN0eWxlLmNvbG9yOmMsZD1lP3QubGVnZW5kQ29sb3J8fHQuY29sb3J8fCIjQ0NDIjpjLGg9dC5vcHRpb25zJiZ0Lm9wdGlvbnMubWFya2VyLHU9e2ZpbGw6ZH07aWYociYmci5jc3Moe2ZpbGw6cCxjb2xvcjpwfSkscyYmcy5hdHRyKHtzdHJva2U6ZH0pLGwpe2lmKGgmJmwuaXNNYXJrZXIpe3Uuc3Ryb2tlPWQsaD10LmNvbnZlcnRBdHRyaWJzKGgpO2ZvcihuIGluIGgpaT1oW25dLGkhPT1IJiYodVtuXT1pKX1sLmF0dHIodSl9fSxwb3NpdGlvbkl0ZW06ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUub3B0aW9ucyxpPW4uc3ltYm9sUGFkZGluZyxvPSFuLnJ0bCxhPXQuX2xlZ2VuZEl0ZW1Qb3Mscj1hWzBdLHM9YVsxXSxsPXQuY2hlY2tib3g7dC5sZWdlbmRHcm91cCYmdC5sZWdlbmRHcm91cC50cmFuc2xhdGUobz9yOmUubGVnZW5kV2lkdGgtci0yKmktNCxzKSxsJiYobC54PXIsbC55PXMpfSxkZXN0cm95SXRlbTpmdW5jdGlvbih0KXt2YXIgZT10LmNoZWNrYm94O21lKFsibGVnZW5kSXRlbSIsImxlZ2VuZExpbmUiLCJsZWdlbmRTeW1ib2wiLCJsZWdlbmRHcm91cCJdLGZ1bmN0aW9uKGUpe3RbZV0mJih0W2VdPXRbZV0uZGVzdHJveSgpKX0pLGUmJkkodC5jaGVja2JveCl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5ncm91cCxuPXQuYm94O24mJih0LmJveD1uLmRlc3Ryb3koKSksZSYmKHQuZ3JvdXA9ZS5kZXN0cm95KCkpfSxwb3NpdGlvbkNoZWNrYm94ZXM6ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLmdyb3VwLmFsaWduQXR0cixpPXRoaXMuY2xpcEhlaWdodHx8dGhpcy5sZWdlbmRIZWlnaHQ7biYmKGU9bi50cmFuc2xhdGVZLG1lKHRoaXMuYWxsSXRlbXMsZnVuY3Rpb24obyl7dmFyIGEscj1vLmNoZWNrYm94O3ImJihhPWUrci55Kyh0fHwwKSszLHgocix7bGVmdDpuLnRyYW5zbGF0ZVgrby5jaGVja2JveE9mZnNldCtyLngtMjArS3QsdG9wOmErS3QsZGlzcGxheTphPmUtNiYmYTxlK2ktNj8iIjpRdH0pKX0pKX0scmVuZGVyVGl0bGU6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMub3B0aW9ucyxuPXRoaXMucGFkZGluZyxpPWUudGl0bGUsbz0wO2kudGV4dCYmKHRoaXMudGl0bGV8fCh0aGlzLnRpdGxlPXRoaXMuY2hhcnQucmVuZGVyZXIubGFiZWwoaS50ZXh0LG4tMyxuLTQsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLCJsZWdlbmQtdGl0bGUiKS5hdHRyKHt6SW5kZXg6MX0pLmNzcyhpLnN0eWxlKS5hZGQodGhpcy5ncm91cCkpLHQ9dGhpcy50aXRsZS5nZXRCQm94KCksbz10LmhlaWdodCx0aGlzLm9mZnNldFdpZHRoPXQud2lkdGgsdGhpcy5jb250ZW50R3JvdXAuYXR0cih7dHJhbnNsYXRlWTpvfSkpLHRoaXMudGl0bGVIZWlnaHQ9b30scmVuZGVySXRlbTpmdW5jdGlvbih0KXt2YXIgZSxuLGksbz10aGlzLHI9by5jaGFydCxzPXIucmVuZGVyZXIsbD1vLm9wdGlvbnMsYz0iaG9yaXpvbnRhbCI9PT1sLmxheW91dCxwPW8uc3ltYm9sV2lkdGgsZD1sLnN5bWJvbFBhZGRpbmcsaD1vLml0ZW1TdHlsZSx1PW8uaXRlbUhpZGRlblN0eWxlLG09by5wYWRkaW5nLGY9Yz93KGwuaXRlbURpc3RhbmNlLDIwKTowLGc9IWwucnRsLHg9bC53aWR0aCxiPWwuaXRlbU1hcmdpbkJvdHRvbXx8MCxfPW8uaXRlbU1hcmdpblRvcCx2PW8uaW5pdGlhbEl0ZW1YLHk9dC5sZWdlbmRJdGVtLGs9dC5zZXJpZXMmJnQuc2VyaWVzLmRyYXdMZWdlbmRTeW1ib2w/dC5zZXJpZXM6dCx6PWsub3B0aW9ucyxDPW8uY3JlYXRlQ2hlY2tib3hGb3JJdGVtJiZ6JiZ6LnNob3dDaGVja2JveCxTPWwudXNlSFRNTDt5fHwodC5sZWdlbmRHcm91cD1zLmcoImxlZ2VuZC1pdGVtIikuYXR0cih7ekluZGV4OjF9KS5hZGQoby5zY3JvbGxHcm91cCksdC5sZWdlbmRJdGVtPXk9cy50ZXh0KGwubGFiZWxGb3JtYXQ/aihsLmxhYmVsRm9ybWF0LHQpOmwubGFiZWxGb3JtYXR0ZXIuY2FsbCh0KSxnP3ArZDotZCxvLmJhc2VsaW5lfHwwLFMpLmNzcyhhKHQudmlzaWJsZT9oOnUpKS5hdHRyKHthbGlnbjpnPyJsZWZ0IjoicmlnaHQiLHpJbmRleDoyfSkuYWRkKHQubGVnZW5kR3JvdXApLG8uYmFzZWxpbmV8fChvLmJhc2VsaW5lPXMuZm9udE1ldHJpY3MoaC5mb250U2l6ZSx5KS5mKzMrXyx5LmF0dHIoInkiLG8uYmFzZWxpbmUpKSxrLmRyYXdMZWdlbmRTeW1ib2wobyx0KSxvLnNldEl0ZW1FdmVudHMmJm8uc2V0SXRlbUV2ZW50cyh0LHksUyxoLHUpLG8uY29sb3JpemVJdGVtKHQsdC52aXNpYmxlKSxDJiZvLmNyZWF0ZUNoZWNrYm94Rm9ySXRlbSh0KSksbj15LmdldEJCb3goKSxpPXQuY2hlY2tib3hPZmZzZXQ9bC5pdGVtV2lkdGh8fHQubGVnZW5kSXRlbVdpZHRofHxwK2Qrbi53aWR0aCtmKyhDPzIwOjApLG8uaXRlbUhlaWdodD1lPXh0KHQubGVnZW5kSXRlbUhlaWdodHx8bi5oZWlnaHQpLGMmJm8uaXRlbVgtditpPih4fHxyLmNoYXJ0V2lkdGgtMiptLXYtbC54KSYmKG8uaXRlbVg9dixvLml0ZW1ZKz1fK28ubGFzdExpbmVIZWlnaHQrYixvLmxhc3RMaW5lSGVpZ2h0PTApLG8ubWF4SXRlbVdpZHRoPXZ0KG8ubWF4SXRlbVdpZHRoLGkpLG8ubGFzdEl0ZW1ZPV8rby5pdGVtWStiLG8ubGFzdExpbmVIZWlnaHQ9dnQoZSxvLmxhc3RMaW5lSGVpZ2h0KSx0Ll9sZWdlbmRJdGVtUG9zPVtvLml0ZW1YLG8uaXRlbVldLGM/by5pdGVtWCs9aTooby5pdGVtWSs9XytlK2Isby5sYXN0TGluZUhlaWdodD1lKSxvLm9mZnNldFdpZHRoPXh8fHZ0KChjP28uaXRlbVgtdi1mOmkpK20sby5vZmZzZXRXaWR0aCl9LGdldEFsbEl0ZW1zOmZ1bmN0aW9uKCl7dmFyIHQ9W107cmV0dXJuIG1lKHRoaXMuY2hhcnQuc2VyaWVzLGZ1bmN0aW9uKGUpe3ZhciBuPWUub3B0aW9uczt3KG4uc2hvd0luTGVnZW5kLCFtKG4ubGlua2VkVG8pJiZILCEwKSYmKHQ9dC5jb25jYXQoZS5sZWdlbmRJdGVtc3x8KCJwb2ludCI9PT1uLmxlZ2VuZFR5cGU/ZS5kYXRhOmUpKSl9KSx0fSxyZW5kZXI6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxhPXRoaXMscj1hLmNoYXJ0LHM9ci5yZW5kZXJlcixsPWEuZ3JvdXAsYz1hLmJveCxwPWEub3B0aW9ucyxkPWEucGFkZGluZyxoPXAuYm9yZGVyV2lkdGgsdT1wLmJhY2tncm91bmRDb2xvcjthLml0ZW1YPWEuaW5pdGlhbEl0ZW1YLGEuaXRlbVk9YS5pbml0aWFsSXRlbVksYS5vZmZzZXRXaWR0aD0wLGEubGFzdEl0ZW1ZPTAsbHx8KGEuZ3JvdXA9bD1zLmcoImxlZ2VuZCIpLmF0dHIoe3pJbmRleDo3fSkuYWRkKCksYS5jb250ZW50R3JvdXA9cy5nKCkuYXR0cih7ekluZGV4OjF9KS5hZGQobCksYS5zY3JvbGxHcm91cD1zLmcoKS5hZGQoYS5jb250ZW50R3JvdXApKSxhLnJlbmRlclRpdGxlKCksdD1hLmdldEFsbEl0ZW1zKCksUCh0LGZ1bmN0aW9uKHQsZSl7cmV0dXJuKHQub3B0aW9ucyYmdC5vcHRpb25zLmxlZ2VuZEluZGV4fHwwKS0oZS5vcHRpb25zJiZlLm9wdGlvbnMubGVnZW5kSW5kZXh8fDApfSkscC5yZXZlcnNlZCYmdC5yZXZlcnNlKCksYS5hbGxJdGVtcz10LGEuZGlzcGxheT1lPSEhdC5sZW5ndGgsbWUodCxmdW5jdGlvbih0KXthLnJlbmRlckl0ZW0odCl9KSxuPXAud2lkdGh8fGEub2Zmc2V0V2lkdGgsaT1hLmxhc3RJdGVtWSthLmxhc3RMaW5lSGVpZ2h0K2EudGl0bGVIZWlnaHQsaT1hLmhhbmRsZU92ZXJmbG93KGkpLChofHx1KSYmKG4rPWQsaSs9ZCxjP24+MCYmaT4wJiYoY1tjLmlzTmV3PyJhdHRyIjoiYW5pbWF0ZSJdKGMuY3Jpc3Aoe3dpZHRoOm4saGVpZ2h0Oml9KSksYy5pc05ldz0hMSk6KGEuYm94PWM9cy5yZWN0KDAsMCxuLGkscC5ib3JkZXJSYWRpdXMsaHx8MCkuYXR0cih7c3Ryb2tlOnAuYm9yZGVyQ29sb3IsInN0cm9rZS13aWR0aCI6aHx8MCxmaWxsOnV8fFF0fSkuYWRkKGwpLnNoYWRvdyhwLnNoYWRvdyksYy5pc05ldz0hMCksY1tlPyJzaG93IjoiaGlkZSJdKCkpLGEubGVnZW5kV2lkdGg9bixhLmxlZ2VuZEhlaWdodD1pLG1lKHQsZnVuY3Rpb24odCl7YS5wb3NpdGlvbkl0ZW0odCl9KSxlJiZsLmFsaWduKG8oe3dpZHRoOm4saGVpZ2h0Oml9LHApLCEwLCJzcGFjaW5nQm94Iiksci5pc1Jlc2l6aW5nfHx0aGlzLnBvc2l0aW9uQ2hlY2tib3hlcygpfSxoYW5kbGVPdmVyZmxvdzpmdW5jdGlvbih0KXt2YXIgZSxuLGk9dGhpcyxvPXRoaXMuY2hhcnQsYT1vLnJlbmRlcmVyLHI9dGhpcy5vcHRpb25zLHM9ci55LGw9InRvcCI9PT1yLnZlcnRpY2FsQWxpZ24sYz1vLnNwYWNpbmdCb3guaGVpZ2h0KyhsPy1zOnMpLXRoaXMucGFkZGluZyxwPXIubWF4SGVpZ2h0LGQ9dGhpcy5jbGlwUmVjdCxoPXIubmF2aWdhdGlvbix1PXcoaC5hbmltYXRpb24sITApLG09aC5hcnJvd1NpemV8fDEyLGY9dGhpcy5uYXYsZz10aGlzLnBhZ2VzLHg9dGhpcy5hbGxJdGVtcztyZXR1cm4iaG9yaXpvbnRhbCI9PT1yLmxheW91dCYmKGMvPTIpLHAmJihjPXl0KGMscCkpLGcubGVuZ3RoPTAsdD5jJiYhci51c2VIVE1MPyh0aGlzLmNsaXBIZWlnaHQ9ZT12dChjLTIwLXRoaXMudGl0bGVIZWlnaHQtdGhpcy5wYWRkaW5nLDApLHRoaXMuY3VycmVudFBhZ2U9dyh0aGlzLmN1cnJlbnRQYWdlLDEpLHRoaXMuZnVsbEhlaWdodD10LG1lKHgsZnVuY3Rpb24odCxpKXt2YXIgbz10Ll9sZWdlbmRJdGVtUG9zWzFdLGE9eHQodC5sZWdlbmRJdGVtLmdldEJCb3goKS5oZWlnaHQpLHI9Zy5sZW5ndGg7KCFyfHxvLWdbci0xXT5lJiYobnx8bykhPT1nW3ItMV0pJiYoZy5wdXNoKG58fG8pLHIrKyksaT09PXgubGVuZ3RoLTEmJm8rYS1nW3ItMV0+ZSYmZy5wdXNoKG8pLG8hPT1uJiYobj1vKX0pLGR8fChkPWkuY2xpcFJlY3Q9YS5jbGlwUmVjdCgwLHRoaXMucGFkZGluZyw5OTk5LDApLGkuY29udGVudEdyb3VwLmNsaXAoZCkpLGQuYXR0cih7aGVpZ2h0OmV9KSxmfHwodGhpcy5uYXY9Zj1hLmcoKS5hdHRyKHt6SW5kZXg6MX0pLmFkZCh0aGlzLmdyb3VwKSx0aGlzLnVwPWEuc3ltYm9sKCJ0cmlhbmdsZSIsMCwwLG0sbSkub24oImNsaWNrIixmdW5jdGlvbigpe2kuc2Nyb2xsKC0xLHUpfSkuYWRkKGYpLHRoaXMucGFnZXI9YS50ZXh0KCIiLDE1LDEwKS5jc3MoaC5zdHlsZSkuYWRkKGYpLHRoaXMuZG93bj1hLnN5bWJvbCgidHJpYW5nbGUtZG93biIsMCwwLG0sbSkub24oImNsaWNrIixmdW5jdGlvbigpe2kuc2Nyb2xsKDEsdSl9KS5hZGQoZikpLGkuc2Nyb2xsKDApLHQ9Yyk6ZiYmKGQuYXR0cih7aGVpZ2h0Om8uY2hhcnRIZWlnaHR9KSxmLmhpZGUoKSx0aGlzLnNjcm9sbEdyb3VwLmF0dHIoe3RyYW5zbGF0ZVk6MX0pLHRoaXMuY2xpcEhlaWdodD0wKSx0fSxzY3JvbGw6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMucGFnZXMsbz1pLmxlbmd0aCxhPXRoaXMuY3VycmVudFBhZ2UrdCxyPXRoaXMuY2xpcEhlaWdodCxzPXRoaXMub3B0aW9ucy5uYXZpZ2F0aW9uLGw9cy5hY3RpdmVDb2xvcixjPXMuaW5hY3RpdmVDb2xvcixwPXRoaXMucGFnZXIsZD10aGlzLnBhZGRpbmc7YT5vJiYoYT1vKSxhPjAmJihlIT09SCYmcShlLHRoaXMuY2hhcnQpLHRoaXMubmF2LmF0dHIoe3RyYW5zbGF0ZVg6ZCx0cmFuc2xhdGVZOnIrdGhpcy5wYWRkaW5nKzcrdGhpcy50aXRsZUhlaWdodCx2aXNpYmlsaXR5OlZ0fSksdGhpcy51cC5hdHRyKHtmaWxsOjE9PT1hP2M6bH0pLmNzcyh7Y3Vyc29yOjE9PT1hPyJkZWZhdWx0IjoicG9pbnRlciJ9KSxwLmF0dHIoe3RleHQ6YSsiLyIrb30pLHRoaXMuZG93bi5hdHRyKHt4OjE4K3RoaXMucGFnZXIuZ2V0QkJveCgpLndpZHRoLGZpbGw6YT09PW8/YzpsfSkuY3NzKHtjdXJzb3I6YT09PW8/ImRlZmF1bHQiOiJwb2ludGVyIn0pLG49LWlbYS0xXSt0aGlzLmluaXRpYWxJdGVtWSx0aGlzLnNjcm9sbEdyb3VwLmFuaW1hdGUoe3RyYW5zbGF0ZVk6bn0pLHRoaXMuY3VycmVudFBhZ2U9YSx0aGlzLnBvc2l0aW9uQ2hlY2tib3hlcyhuKSl9fTt2YXIgVWU9bGUuTGVnZW5kU3ltYm9sTWl4aW49e2RyYXdSZWN0YW5nbGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10Lm9wdGlvbnMuc3ltYm9sSGVpZ2h0fHwxMjtlLmxlZ2VuZFN5bWJvbD10aGlzLmNoYXJ0LnJlbmRlcmVyLnJlY3QoMCx0LmJhc2VsaW5lLTUtbi8yLHQuc3ltYm9sV2lkdGgsbix0Lm9wdGlvbnMuc3ltYm9sUmFkaXVzfHwwKS5hdHRyKHt6SW5kZXg6M30pLmFkZChlLmxlZ2VuZEdyb3VwKX0sZHJhd0xpbmVNYXJrZXI6ZnVuY3Rpb24odCl7dmFyIGUsbixpLG89dGhpcy5vcHRpb25zLGE9by5tYXJrZXIscj10Lm9wdGlvbnMscz10LnN5bWJvbFdpZHRoLGw9dGhpcy5jaGFydC5yZW5kZXJlcixjPXRoaXMubGVnZW5kR3JvdXAscD10LmJhc2VsaW5lLXh0KC4zKmwuZm9udE1ldHJpY3Moci5pdGVtU3R5bGUuZm9udFNpemUsdGhpcy5sZWdlbmRJdGVtKS5iKTtvLmxpbmVXaWR0aCYmKGk9eyJzdHJva2Utd2lkdGgiOm8ubGluZVdpZHRofSxvLmRhc2hTdHlsZSYmKGkuZGFzaHN0eWxlPW8uZGFzaFN0eWxlKSx0aGlzLmxlZ2VuZExpbmU9bC5wYXRoKFt0ZSwwLHAsZWUscyxwXSkuYXR0cihpKS5hZGQoYykpLGEmJmEuZW5hYmxlZCE9PSExJiYoZT1hLnJhZGl1cyx0aGlzLmxlZ2VuZFN5bWJvbD1uPWwuc3ltYm9sKHRoaXMuc3ltYm9sLHMvMi1lLHAtZSwyKmUsMiplKS5hZGQoYyksbi5pc01hcmtlcj0hMCl9fTsoL1RyaWRlbnRcLzdcLjAvLnRlc3QoUHQpfHxCdCkmJmsoV2UucHJvdG90eXBlLCJwb3NpdGlvbkl0ZW0iLGZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPWZ1bmN0aW9uKCl7ZS5fbGVnZW5kSXRlbVBvcyYmdC5jYWxsKG4sZSl9O2koKSxzZXRUaW1lb3V0KGkpfSksUi5wcm90b3R5cGU9e2luaXQ6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXQuc2VyaWVzO3Quc2VyaWVzPW51bGwsbj1hKEcsdCksbi5zZXJpZXM9dC5zZXJpZXM9aSx0aGlzLnVzZXJPcHRpb25zPXQ7dmFyIG89bi5jaGFydDt0aGlzLm1hcmdpbj10aGlzLnNwbGFzaEFycmF5KCJtYXJnaW4iLG8pLHRoaXMuc3BhY2luZz10aGlzLnNwbGFzaEFycmF5KCJzcGFjaW5nIixvKTt2YXIgcj1vLmV2ZW50czt0aGlzLmJvdW5kcz17aDp7fSx2Ont9fSx0aGlzLmNhbGxiYWNrPWUsdGhpcy5pc1Jlc2l6aW5nPTAsdGhpcy5vcHRpb25zPW4sdGhpcy5heGVzPVtdLHRoaXMuc2VyaWVzPVtdLHRoaXMuaGFzQ2FydGVzaWFuU2VyaWVzPW8uc2hvd0F4ZXM7dmFyIHMsbD10aGlzO2lmKGwuaW5kZXg9JHQubGVuZ3RoLCR0LnB1c2gobCksSHQrKyxvLnJlZmxvdyE9PSExJiZ4ZShsLCJsb2FkIixmdW5jdGlvbigpe2wuaW5pdFJlZmxvdygpfSkscilmb3IocyBpbiByKXhlKGwscyxyW3NdKTtsLnhBeGlzPVtdLGwueUF4aXM9W10sbC5hbmltYXRpb249IUR0JiZ3KG8uYW5pbWF0aW9uLCEwKSxsLnBvaW50Q291bnQ9bC5jb2xvckNvdW50ZXI9bC5zeW1ib2xDb3VudGVyPTAsbC5maXJzdFJlbmRlcigpfSxpbml0U2VyaWVzOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcyxpPW4ub3B0aW9ucy5jaGFydCxvPXQudHlwZXx8aS50eXBlfHxpLmRlZmF1bHRTZXJpZXNUeXBlLGE9c2Vbb107cmV0dXJuIGF8fEsoMTcsITApLGU9bmV3IGEsZS5pbml0KHRoaXMsdCksZX0saXNJbnNpZGVQbG90OmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT1uP2U6dCxvPW4/dDplO3JldHVybiBpPj0wJiZpPD10aGlzLnBsb3RXaWR0aCYmbz49MCYmbzw9dGhpcy5wbG90SGVpZ2h0fSxhZGp1c3RUaWNrQW1vdW50czpmdW5jdGlvbigpe3RoaXMub3B0aW9ucy5jaGFydC5hbGlnblRpY2tzIT09ITEmJm1lKHRoaXMuYXhlcyxmdW5jdGlvbih0KXt0LmFkanVzdFRpY2tBbW91bnQoKX0pLHRoaXMubWF4VGlja3M9bnVsbH0scmVkcmF3OmZ1bmN0aW9uKHQpe3ZhciBlLG4saSxhPXRoaXMscj1hLmF4ZXMscz1hLnNlcmllcyxsPWEucG9pbnRlcixjPWEubGVnZW5kLHA9YS5pc0RpcnR5TGVnZW5kLGQ9YS5oYXNDYXJ0ZXNpYW5TZXJpZXMsaD1hLmlzRGlydHlCb3gsdT1zLmxlbmd0aCxtPXUsZj1hLnJlbmRlcmVyLGc9Zi5pc0hpZGRlbigpLHc9W107Zm9yKHEodCxhKSxnJiZhLmNsb25lUmVuZGVyVG8oKSxhLmxheU91dFRpdGxlcygpO20tLTspaWYoaT1zW21dLGkub3B0aW9ucy5zdGFja2luZyYmKGU9ITAsaS5pc0RpcnR5KSl7bj0hMDticmVha31pZihuKWZvcihtPXU7bS0tOylpPXNbbV0saS5vcHRpb25zLnN0YWNraW5nJiYoaS5pc0RpcnR5PSEwKTttZShzLGZ1bmN0aW9uKHQpe3QuaXNEaXJ0eSYmInBvaW50Ij09PXQub3B0aW9ucy5sZWdlbmRUeXBlJiYocD0hMCl9KSxwJiZjLm9wdGlvbnMuZW5hYmxlZCYmKGMucmVuZGVyKCksYS5pc0RpcnR5TGVnZW5kPSExKSxlJiZhLmdldFN0YWNrcygpLGQmJihhLmlzUmVzaXppbmd8fChhLm1heFRpY2tzPW51bGwsbWUocixmdW5jdGlvbih0KXt0LnNldFNjYWxlKCl9KSksYS5hZGp1c3RUaWNrQW1vdW50cygpKSxhLmdldE1hcmdpbnMoKSxkJiYobWUocixmdW5jdGlvbih0KXt0LmlzRGlydHkmJihoPSEwKX0pLG1lKHIsZnVuY3Rpb24odCl7dC5pc0RpcnR5RXh0cmVtZXMmJih0LmlzRGlydHlFeHRyZW1lcz0hMSx3LnB1c2goZnVuY3Rpb24oKXtfZSh0LCJhZnRlclNldEV4dHJlbWVzIixvKHQuZXZlbnRBcmdzLHQuZ2V0RXh0cmVtZXMoKSkpLGRlbGV0ZSB0LmV2ZW50QXJnc30pKSwoaHx8ZSkmJnQucmVkcmF3KCl9KSksaCYmYS5kcmF3Q2hhcnRCb3goKSxtZShzLGZ1bmN0aW9uKHQpe3QuaXNEaXJ0eSYmdC52aXNpYmxlJiYoIXQuaXNDYXJ0ZXNpYW58fHQueEF4aXMpJiZ0LnJlZHJhdygpfSksbCYmbC5yZXNldCghMCksZi5kcmF3KCksX2UoYSwicmVkcmF3IiksZyYmYS5jbG9uZVJlbmRlclRvKCEwKSxtZSh3LGZ1bmN0aW9uKHQpe3QuY2FsbCgpfSl9LGdldDpmdW5jdGlvbih0KXt2YXIgZSxuLGksbz10aGlzLGE9by5heGVzLHI9by5zZXJpZXM7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKylpZihhW2VdLm9wdGlvbnMuaWQ9PT10KXJldHVybiBhW2VdO2ZvcihlPTA7ZTxyLmxlbmd0aDtlKyspaWYocltlXS5vcHRpb25zLmlkPT09dClyZXR1cm4gcltlXTtmb3IoZT0wO2U8ci5sZW5ndGg7ZSsrKWZvcihpPXJbZV0ucG9pbnRzfHxbXSxuPTA7bjxpLmxlbmd0aDtuKyspaWYoaVtuXS5pZD09PXQpcmV0dXJuIGlbbl07cmV0dXJuIG51bGx9LGdldEF4ZXM6ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcyxpPXRoaXMub3B0aW9ucyxvPWkueEF4aXM9ZyhpLnhBeGlzfHx7fSksYT1pLnlBeGlzPWcoaS55QXhpc3x8e30pO21lKG8sZnVuY3Rpb24odCxlKXt0LmluZGV4PWUsdC5pc1g9ITB9KSxtZShhLGZ1bmN0aW9uKHQsZSl7dC5pbmRleD1lfSksdD1vLmNvbmNhdChhKSxtZSh0LGZ1bmN0aW9uKHQpe2U9bmV3IE0obix0KX0pLG4uYWRqdXN0VGlja0Ftb3VudHMoKX0sZ2V0U2VsZWN0ZWRQb2ludHM6ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gbWUodGhpcy5zZXJpZXMsZnVuY3Rpb24oZSl7dD10LmNvbmNhdChmZShlLnBvaW50c3x8W10sZnVuY3Rpb24odCl7cmV0dXJuIHQuc2VsZWN0ZWR9KSl9KSx0fSxnZXRTZWxlY3RlZFNlcmllczpmdW5jdGlvbigpe3JldHVybiBmZSh0aGlzLnNlcmllcyxmdW5jdGlvbih0KXtyZXR1cm4gdC5zZWxlY3RlZH0pfSxnZXRTdGFja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO21lKHQueUF4aXMsZnVuY3Rpb24odCl7dC5zdGFja3MmJnQuaGFzVmlzaWJsZVNlcmllcyYmKHQub2xkU3RhY2tzPXQuc3RhY2tzKX0pLG1lKHQuc2VyaWVzLGZ1bmN0aW9uKGUpeyFlLm9wdGlvbnMuc3RhY2tpbmd8fGUudmlzaWJsZSE9PSEwJiZ0Lm9wdGlvbnMuY2hhcnQuaWdub3JlSGlkZGVuU2VyaWVzIT09ITF8fChlLnN0YWNrS2V5PWUudHlwZSt3KGUub3B0aW9ucy5zdGFjaywiIikpfSl9LHNldFRpdGxlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvLHI9dGhpcyxzPXIub3B0aW9ucztpPXMudGl0bGU9YShzLnRpdGxlLHQpLG89cy5zdWJ0aXRsZT1hKHMuc3VidGl0bGUsZSksbWUoW1sidGl0bGUiLHQsaV0sWyJzdWJ0aXRsZSIsZSxvXV0sZnVuY3Rpb24odCl7dmFyIGU9dFswXSxuPXJbZV0saT10WzFdLG89dFsyXTtuJiZpJiYocltlXT1uPW4uZGVzdHJveSgpKSxvJiZvLnRleHQmJiFuJiYocltlXT1yLnJlbmRlcmVyLnRleHQoby50ZXh0LDAsMCxvLnVzZUhUTUwpLmF0dHIoe2FsaWduOm8uYWxpZ24sImNsYXNzIjpadCtlLHpJbmRleDpvLnpJbmRleHx8NH0pLmNzcyhvLnN0eWxlKS5hZGQoKSl9KSxyLmxheU91dFRpdGxlcyhuKX0sbGF5T3V0VGl0bGVzOmZ1bmN0aW9uKHQpe3ZhciBlLG49MCxpPXRoaXMudGl0bGUsYT10aGlzLnN1YnRpdGxlLHI9dGhpcy5vcHRpb25zLHM9ci50aXRsZSxsPXIuc3VidGl0bGUsYz10aGlzLnJlbmRlcmVyLHA9dGhpcy5zcGFjaW5nQm94LndpZHRoLTQ0O2kmJihpLmNzcyh7d2lkdGg6KHMud2lkdGh8fHApK0t0fSkuYWxpZ24obyh7eTpjLmZvbnRNZXRyaWNzKHMuc3R5bGUuZm9udFNpemUsaSkuYi0zfSxzKSwhMSwic3BhY2luZ0JveCIpLHMuZmxvYXRpbmd8fHMudmVydGljYWxBbGlnbnx8KG49aS5nZXRCQm94KCkuaGVpZ2h0KSksYSYmKGEuY3NzKHt3aWR0aDoobC53aWR0aHx8cCkrS3R9KS5hbGlnbihvKHt5Om4rKHMubWFyZ2luLTEzKStjLmZvbnRNZXRyaWNzKHMuc3R5bGUuZm9udFNpemUsYSkuYn0sbCksITEsInNwYWNpbmdCb3giKSxsLmZsb2F0aW5nfHxsLnZlcnRpY2FsQWxpZ258fChuPV90KG4rYS5nZXRCQm94KCkuaGVpZ2h0KSkpLGU9dGhpcy50aXRsZU9mZnNldCE9PW4sdGhpcy50aXRsZU9mZnNldD1uLCF0aGlzLmlzRGlydHlCb3gmJmUmJih0aGlzLmlzRGlydHlCb3g9ZSx0aGlzLmhhc1JlbmRlcmVkJiZ3KHQsITApJiZ0aGlzLmlzRGlydHlCb3gmJnRoaXMucmVkcmF3KCkpfSxnZXRDaGFydFNpemU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5vcHRpb25zLmNoYXJ0LG49ZS53aWR0aCxpPWUuaGVpZ2h0LG89dC5yZW5kZXJUb0Nsb25lfHx0LnJlbmRlclRvO20obil8fCh0LmNvbnRhaW5lcldpZHRoPWRlKG8sIndpZHRoIikpLG0oaSl8fCh0LmNvbnRhaW5lckhlaWdodD1kZShvLCJoZWlnaHQiKSksdC5jaGFydFdpZHRoPXZ0KDAsbnx8dC5jb250YWluZXJXaWR0aHx8NjAwKSx0LmNoYXJ0SGVpZ2h0PXZ0KDAsdyhpLHQuY29udGFpbmVySGVpZ2h0PjE5P3QuY29udGFpbmVySGVpZ2h0OjQwMCkpfSxjbG9uZVJlbmRlclRvOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucmVuZGVyVG9DbG9uZSxuPXRoaXMuY29udGFpbmVyO3Q/ZSYmKHRoaXMucmVuZGVyVG8uYXBwZW5kQ2hpbGQobiksSShlKSxkZWxldGUgdGhpcy5yZW5kZXJUb0Nsb25lKToobiYmbi5wYXJlbnROb2RlPT09dGhpcy5yZW5kZXJUbyYmdGhpcy5yZW5kZXJUby5yZW1vdmVDaGlsZChuKSx0aGlzLnJlbmRlclRvQ2xvbmU9ZT10aGlzLnJlbmRlclRvLmNsb25lTm9kZSgwKSx4KGUse3Bvc2l0aW9uOkd0LHRvcDoiLTk5OTlweCIsZGlzcGxheToiYmxvY2sifSksZS5zdHlsZS5zZXRQcm9wZXJ0eSYmZS5zdHlsZS5zZXRQcm9wZXJ0eSgiZGlzcGxheSIsImJsb2NrIiwiaW1wb3J0YW50IiksZnQuYm9keS5hcHBlbmRDaGlsZChlKSxuJiZlLmFwcGVuZENoaWxkKG4pKX0sZ2V0Q29udGFpbmVyOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksYSxsLGM9dGhpcyxwPWMub3B0aW9ucy5jaGFydCxkPSJkYXRhLWhpZ2hjaGFydHMtY2hhcnQiO2MucmVuZGVyVG89aT1wLnJlbmRlclRvLGw9WnQrTXQrKyxzKGkpJiYoYy5yZW5kZXJUbz1pPWZ0LmdldEVsZW1lbnRCeUlkKGkpKSxpfHxLKDEzLCEwKSxhPXIoZihpLGQpKSwhaXNOYU4oYSkmJiR0W2FdJiYkdFthXS5oYXNSZW5kZXJlZCYmJHRbYV0uZGVzdHJveSgpLGYoaSxkLGMuaW5kZXgpLGkuaW5uZXJIVE1MPSIiLHAuc2tpcENsb25lfHxpLm9mZnNldFdpZHRofHxjLmNsb25lUmVuZGVyVG8oKSxjLmdldENoYXJ0U2l6ZSgpLGU9Yy5jaGFydFdpZHRoLG49Yy5jaGFydEhlaWdodCxjLmNvbnRhaW5lcj10PWIoWXQse2NsYXNzTmFtZTpadCsiY29udGFpbmVyIisocC5jbGFzc05hbWU/IiAiK3AuY2xhc3NOYW1lOiIiKSxpZDpsfSxvKHtwb3NpdGlvbjpYdCxvdmVyZmxvdzpKdCx3aWR0aDplK0t0LGhlaWdodDpuK0t0LHRleHRBbGlnbjoibGVmdCIsbGluZUhlaWdodDoibm9ybWFsIix6SW5kZXg6MCwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yIjoicmdiYSgwLDAsMCwwKSJ9LHAuc3R5bGUpLGMucmVuZGVyVG9DbG9uZXx8aSksYy5fY3Vyc29yPXQuc3R5bGUuY3Vyc29yLGMucmVuZGVyZXI9cC5mb3JFeHBvcnQ/bmV3IE5lKHQsZSxuLHAuc3R5bGUsKCEwKSk6bmV3IFcodCxlLG4scC5zdHlsZSksRHQmJmMucmVuZGVyZXIuY3JlYXRlKGMsdCxlLG4pfSxnZXRNYXJnaW5zOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS5zcGFjaW5nLGk9ZS5sZWdlbmQsbz1lLm1hcmdpbixhPWUub3B0aW9ucy5sZWdlbmQscj13KGEubWFyZ2luLDIwKSxzPWEueCxsPWEueSxjPWEuYWxpZ24scD1hLnZlcnRpY2FsQWxpZ24sZD1lLnRpdGxlT2Zmc2V0O2UucmVzZXRNYXJnaW5zKCksdD1lLmF4aXNPZmZzZXQsZCYmIW0ob1swXSkmJihlLnBsb3RUb3A9dnQoZS5wbG90VG9wLGQrZS5vcHRpb25zLnRpdGxlLm1hcmdpbituWzBdKSksaS5kaXNwbGF5JiYhYS5mbG9hdGluZyYmKCJyaWdodCI9PT1jP20ob1sxXSl8fChlLm1hcmdpblJpZ2h0PXZ0KGUubWFyZ2luUmlnaHQsaS5sZWdlbmRXaWR0aC1zK3IrblsxXSkpOiJsZWZ0Ij09PWM/bShvWzNdKXx8KGUucGxvdExlZnQ9dnQoZS5wbG90TGVmdCxpLmxlZ2VuZFdpZHRoK3MrcituWzNdKSk6InRvcCI9PT1wP20ob1swXSl8fChlLnBsb3RUb3A9dnQoZS5wbG90VG9wLGkubGVnZW5kSGVpZ2h0K2wrcituWzBdKSk6ImJvdHRvbSI9PT1wJiYobShvWzJdKXx8KGUubWFyZ2luQm90dG9tPXZ0KGUubWFyZ2luQm90dG9tLGkubGVnZW5kSGVpZ2h0LWwrcituWzJdKSkpKSxlLmV4dHJhQm90dG9tTWFyZ2luJiYoZS5tYXJnaW5Cb3R0b20rPWUuZXh0cmFCb3R0b21NYXJnaW4pLGUuZXh0cmFUb3BNYXJnaW4mJihlLnBsb3RUb3ArPWUuZXh0cmFUb3BNYXJnaW4pLGUuaGFzQ2FydGVzaWFuU2VyaWVzJiZtZShlLmF4ZXMsZnVuY3Rpb24odCl7dC5nZXRPZmZzZXQoKX0pLG0ob1szXSl8fChlLnBsb3RMZWZ0Kz10WzNdKSxtKG9bMF0pfHwoZS5wbG90VG9wKz10WzBdKSxtKG9bMl0pfHwoZS5tYXJnaW5Cb3R0b20rPXRbMl0pLG0ob1sxXSl8fChlLm1hcmdpblJpZ2h0Kz10WzFdKSxlLnNldENoYXJ0U2l6ZSgpfSxyZWZsb3c6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUub3B0aW9ucy5jaGFydCxpPWUucmVuZGVyVG8sbz1uLndpZHRofHxkZShpLCJ3aWR0aCIpLGE9bi5oZWlnaHR8fGRlKGksImhlaWdodCIpLHI9dD90LnRhcmdldDpndCxzPWZ1bmN0aW9uKCl7ZS5jb250YWluZXImJihlLnNldFNpemUobyxhLCExKSxlLmhhc1VzZXJTaXplPW51bGwpfTtlLmhhc1VzZXJTaXplfHwhb3x8IWF8fHIhPT1ndCYmciE9PWZ0fHwobz09PWUuY29udGFpbmVyV2lkdGgmJmE9PT1lLmNvbnRhaW5lckhlaWdodHx8KGNsZWFyVGltZW91dChlLnJlZmxvd1RpbWVvdXQpLHQ/ZS5yZWZsb3dUaW1lb3V0PXNldFRpbWVvdXQocywxMDApOnMoKSksZS5jb250YWluZXJXaWR0aD1vLGUuY29udGFpbmVySGVpZ2h0PWEpfSxpbml0UmVmbG93OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPWZ1bmN0aW9uKGUpe3QucmVmbG93KGUpfTt4ZShndCwicmVzaXplIixlKSx4ZSh0LCJkZXN0cm95IixmdW5jdGlvbigpe2JlKGd0LCJyZXNpemUiLGUpfSl9LHNldFNpemU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8sYSxyPXRoaXM7ci5pc1Jlc2l6aW5nKz0xLGE9ZnVuY3Rpb24oKXtyJiZfZShyLCJlbmRSZXNpemUiLG51bGwsZnVuY3Rpb24oKXtyLmlzUmVzaXppbmctPTF9KX0scShuLHIpLHIub2xkQ2hhcnRIZWlnaHQ9ci5jaGFydEhlaWdodCxyLm9sZENoYXJ0V2lkdGg9ci5jaGFydFdpZHRoLG0odCkmJihyLmNoYXJ0V2lkdGg9aT12dCgwLHh0KHQpKSxyLmhhc1VzZXJTaXplPSEhaSksbShlKSYmKHIuY2hhcnRIZWlnaHQ9bz12dCgwLHh0KGUpKSksKEo/eWU6eCkoci5jb250YWluZXIse3dpZHRoOmkrS3QsaGVpZ2h0Om8rS3R9LEopLHIuc2V0Q2hhcnRTaXplKCEwKSxyLnJlbmRlcmVyLnNldFNpemUoaSxvLG4pLHIubWF4VGlja3M9bnVsbCxtZShyLmF4ZXMsZnVuY3Rpb24odCl7dC5pc0RpcnR5PSEwLHQuc2V0U2NhbGUoKX0pLG1lKHIuc2VyaWVzLGZ1bmN0aW9uKHQpe3QuaXNEaXJ0eT0hMH0pLHIuaXNEaXJ0eUxlZ2VuZD0hMCxyLmlzRGlydHlCb3g9ITAsci5sYXlPdXRUaXRsZXMoKSxyLmdldE1hcmdpbnMoKSxyLnJlZHJhdyhuKSxyLm9sZENoYXJ0SGVpZ2h0PW51bGwsX2UociwicmVzaXplIiksSj09PSExP2EoKTpzZXRUaW1lb3V0KGEsSiYmSi5kdXJhdGlvbnx8NTAwKX0sc2V0Q2hhcnRTaXplOmZ1bmN0aW9uKHQpe3ZhciBlLG4saSxvLGEscixzLGw9dGhpcyxjPWwuaW52ZXJ0ZWQscD1sLnJlbmRlcmVyLGQ9bC5jaGFydFdpZHRoLGg9bC5jaGFydEhlaWdodCx1PWwub3B0aW9ucy5jaGFydCxtPWwuc3BhY2luZyxmPWwuY2xpcE9mZnNldDtsLnBsb3RMZWZ0PWk9eHQobC5wbG90TGVmdCksbC5wbG90VG9wPW89eHQobC5wbG90VG9wKSxsLnBsb3RXaWR0aD1hPXZ0KDAseHQoZC1pLWwubWFyZ2luUmlnaHQpKSxsLnBsb3RIZWlnaHQ9cj12dCgwLHh0KGgtby1sLm1hcmdpbkJvdHRvbSkpLGwucGxvdFNpemVYPWM/cjphLGwucGxvdFNpemVZPWM/YTpyLGwucGxvdEJvcmRlcldpZHRoPXUucGxvdEJvcmRlcldpZHRofHwwLGwuc3BhY2luZ0JveD1wLnNwYWNpbmdCb3g9e3g6bVszXSx5Om1bMF0sd2lkdGg6ZC1tWzNdLW1bMV0saGVpZ2h0OmgtbVswXS1tWzJdfSxsLnBsb3RCb3g9cC5wbG90Qm94PXt4OmkseTpvLHdpZHRoOmEsaGVpZ2h0OnJ9LHM9MipidChsLnBsb3RCb3JkZXJXaWR0aC8yKSxlPV90KHZ0KHMsZlszXSkvMiksbj1fdCh2dChzLGZbMF0pLzIpLGwuY2xpcEJveD17eDplLHk6bix3aWR0aDpidChsLnBsb3RTaXplWC12dChzLGZbMV0pLzItZSksaGVpZ2h0OnZ0KDAsYnQobC5wbG90U2l6ZVktdnQocyxmWzJdKS8yLW4pKX0sdHx8bWUobC5heGVzLGZ1bmN0aW9uKHQpe3Quc2V0QXhpc1NpemUoKSx0LnNldEF4aXNUcmFuc2xhdGlvbigpfSl9LHJlc2V0TWFyZ2luczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LnNwYWNpbmcsbj10Lm1hcmdpbjt0LnBsb3RUb3A9dyhuWzBdLGVbMF0pLHQubWFyZ2luUmlnaHQ9dyhuWzFdLGVbMV0pLHQubWFyZ2luQm90dG9tPXcoblsyXSxlWzJdKSx0LnBsb3RMZWZ0PXcoblszXSxlWzNdKSx0LmF4aXNPZmZzZXQ9WzAsMCwwLDBdLHQuY2xpcE9mZnNldD1bMCwwLDAsMF19LGRyYXdDaGFydEJveDpmdW5jdGlvbigpe3ZhciB0LGUsbj10aGlzLGk9bi5vcHRpb25zLmNoYXJ0LG89bi5yZW5kZXJlcixhPW4uY2hhcnRXaWR0aCxyPW4uY2hhcnRIZWlnaHQscz1uLmNoYXJ0QmFja2dyb3VuZCxsPW4ucGxvdEJhY2tncm91bmQsYz1uLnBsb3RCb3JkZXIscD1uLnBsb3RCR0ltYWdlLGQ9aS5ib3JkZXJXaWR0aHx8MCxoPWkuYmFja2dyb3VuZENvbG9yLHU9aS5wbG90QmFja2dyb3VuZENvbG9yLG09aS5wbG90QmFja2dyb3VuZEltYWdlLGY9aS5wbG90Qm9yZGVyV2lkdGh8fDAsZz1uLnBsb3RMZWZ0LHc9bi5wbG90VG9wLHg9bi5wbG90V2lkdGgsYj1uLnBsb3RIZWlnaHQsXz1uLnBsb3RCb3gsdj1uLmNsaXBSZWN0LHk9bi5jbGlwQm94O3Q9ZCsoaS5zaGFkb3c/ODowKSwoZHx8aCkmJihzP3MuYW5pbWF0ZShzLmNyaXNwKHt3aWR0aDphLXQsaGVpZ2h0OnItdH0pKTooZT17ZmlsbDpofHxRdH0sZCYmKGUuc3Ryb2tlPWkuYm9yZGVyQ29sb3IsZVsic3Ryb2tlLXdpZHRoIl09ZCksbi5jaGFydEJhY2tncm91bmQ9by5yZWN0KHQvMix0LzIsYS10LHItdCxpLmJvcmRlclJhZGl1cyxkKS5hdHRyKGUpLmFkZENsYXNzKFp0KyJiYWNrZ3JvdW5kIikuYWRkKCkuc2hhZG93KGkuc2hhZG93KSkpLHUmJihsP2wuYW5pbWF0ZShfKTpuLnBsb3RCYWNrZ3JvdW5kPW8ucmVjdChnLHcseCxiLDApLmF0dHIoe2ZpbGw6dX0pLmFkZCgpLnNoYWRvdyhpLnBsb3RTaGFkb3cpKSxtJiYocD9wLmFuaW1hdGUoXyk6bi5wbG90QkdJbWFnZT1vLmltYWdlKG0sZyx3LHgsYikuYWRkKCkpLHY/di5hbmltYXRlKHt3aWR0aDp5LndpZHRoLGhlaWdodDp5LmhlaWdodH0pOm4uY2xpcFJlY3Q9by5jbGlwUmVjdCh5KSxmJiYoYz9jLmFuaW1hdGUoYy5jcmlzcCh7eDpnLHk6dyx3aWR0aDp4LGhlaWdodDpiLHN0cm9rZVdpZHRoOi1mfSkpOm4ucGxvdEJvcmRlcj1vLnJlY3QoZyx3LHgsYiwwLC1mKS5hdHRyKHtzdHJva2U6aS5wbG90Qm9yZGVyQ29sb3IsInN0cm9rZS13aWR0aCI6ZixmaWxsOlF0LHpJbmRleDoxfSkuYWRkKCkpLG4uaXNEaXJ0eUJveD0hMX0scHJvcEZyb21TZXJpZXM6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saT10aGlzLG89aS5vcHRpb25zLmNoYXJ0LGE9aS5vcHRpb25zLnNlcmllczttZShbImludmVydGVkIiwiYW5ndWxhciIsInBvbGFyIl0sZnVuY3Rpb24ocil7Zm9yKHQ9c2Vbby50eXBlfHxvLmRlZmF1bHRTZXJpZXNUeXBlXSxuPWlbcl18fG9bcl18fHQmJnQucHJvdG90eXBlW3JdLGU9YSYmYS5sZW5ndGg7IW4mJmUtLTspdD1zZVthW2VdLnR5cGVdLHQmJnQucHJvdG90eXBlW3JdJiYobj0hMCk7aVtyXT1ufSl9LGxpbmtTZXJpZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5zZXJpZXM7bWUoZSxmdW5jdGlvbih0KXt0LmxpbmtlZFNlcmllcy5sZW5ndGg9MH0pLG1lKGUsZnVuY3Rpb24oZSl7dmFyIG49ZS5vcHRpb25zLmxpbmtlZFRvO3MobikmJihuPSI6cHJldmlvdXMiPT09bj90LnNlcmllc1tlLmluZGV4LTFdOnQuZ2V0KG4pLG4mJihuLmxpbmtlZFNlcmllcy5wdXNoKGUpLGUubGlua2VkUGFyZW50PW4pKX0pfSxyZW5kZXJTZXJpZXM6ZnVuY3Rpb24oKXttZSh0aGlzLnNlcmllcyxmdW5jdGlvbih0KXt0LnRyYW5zbGF0ZSgpLHQuc2V0VG9vbHRpcFBvaW50cyYmdC5zZXRUb29sdGlwUG9pbnRzKCksdC5yZW5kZXIoKX0pfSxyZW5kZXJMYWJlbHM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5vcHRpb25zLmxhYmVscztlLml0ZW1zJiZtZShlLml0ZW1zLGZ1bmN0aW9uKG4pe3ZhciBpPW8oZS5zdHlsZSxuLnN0eWxlKSxhPXIoaS5sZWZ0KSt0LnBsb3RMZWZ0LHM9cihpLnRvcCkrdC5wbG90VG9wKzEyO2RlbGV0ZSBpLmxlZnQsZGVsZXRlIGkudG9wLHQucmVuZGVyZXIudGV4dChuLmh0bWwsYSxzKS5hdHRyKHt6SW5kZXg6Mn0pLmNzcyhpKS5hZGQoKX0pfSxyZW5kZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5heGVzLG49dC5yZW5kZXJlcixpPXQub3B0aW9uczt0LnNldFRpdGxlKCksdC5sZWdlbmQ9bmV3IFdlKHQsaS5sZWdlbmQpLHQuZ2V0U3RhY2tzKCksbWUoZSxmdW5jdGlvbih0KXt0LnNldFNjYWxlKCl9KSx0LmdldE1hcmdpbnMoKSx0Lm1heFRpY2tzPW51bGwsbWUoZSxmdW5jdGlvbih0KXt0LnNldFRpY2tQb3NpdGlvbnMoITApLHQuc2V0TWF4VGlja3MoKX0pLHQuYWRqdXN0VGlja0Ftb3VudHMoKSx0LmdldE1hcmdpbnMoKSx0LmRyYXdDaGFydEJveCgpLHQuaGFzQ2FydGVzaWFuU2VyaWVzJiZtZShlLGZ1bmN0aW9uKHQpe3QucmVuZGVyKCl9KSx0LnNlcmllc0dyb3VwfHwodC5zZXJpZXNHcm91cD1uLmcoInNlcmllcy1ncm91cCIpLmF0dHIoe3pJbmRleDozfSkuYWRkKCkpLHQucmVuZGVyU2VyaWVzKCksdC5yZW5kZXJMYWJlbHMoKSx0LnNob3dDcmVkaXRzKGkuY3JlZGl0cyksdC5oYXNSZW5kZXJlZD0hMH0sc2hvd0NyZWRpdHM6ZnVuY3Rpb24odCl7dC5lbmFibGVkJiYhdGhpcy5jcmVkaXRzJiYodGhpcy5jcmVkaXRzPXRoaXMucmVuZGVyZXIudGV4dCh0LnRleHQsMCwwKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7dC5ocmVmJiYobG9jYXRpb24uaHJlZj10LmhyZWYpfSkuYXR0cih7YWxpZ246dC5wb3NpdGlvbi5hbGlnbix6SW5kZXg6OH0pLmNzcyh0LnN0eWxlKS5hZGQoKS5hbGlnbih0LnBvc2l0aW9uKSl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbj1lLmF4ZXMsaT1lLnNlcmllcyxvPWUuY29udGFpbmVyLGE9byYmby5wYXJlbnROb2RlO2ZvcihfZShlLCJkZXN0cm95IiksJHRbZS5pbmRleF09SCxIdC0tLGUucmVuZGVyVG8ucmVtb3ZlQXR0cmlidXRlKCJkYXRhLWhpZ2hjaGFydHMtY2hhcnQiKSxiZShlKSx0PW4ubGVuZ3RoO3QtLTspblt0XT1uW3RdLmRlc3Ryb3koKTtmb3IodD1pLmxlbmd0aDt0LS07KWlbdF09aVt0XS5kZXN0cm95KCk7bWUoWyJ0aXRsZSIsInN1YnRpdGxlIiwiY2hhcnRCYWNrZ3JvdW5kIiwicGxvdEJhY2tncm91bmQiLCJwbG90QkdJbWFnZSIsInBsb3RCb3JkZXIiLCJzZXJpZXNHcm91cCIsImNsaXBSZWN0IiwiY3JlZGl0cyIsInBvaW50ZXIiLCJzY3JvbGxlciIsInJhbmdlU2VsZWN0b3IiLCJsZWdlbmQiLCJyZXNldFpvb21CdXR0b24iLCJ0b29sdGlwIiwicmVuZGVyZXIiXSxmdW5jdGlvbih0KXt2YXIgbj1lW3RdO24mJm4uZGVzdHJveSYmKGVbdF09bi5kZXN0cm95KCkpfSksbyYmKG8uaW5uZXJIVE1MPSIiLGJlKG8pLGEmJkkobykpO2Zvcih0IGluIGUpZGVsZXRlIGVbdF19LGlzUmVhZHlUb1JlbmRlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuISghRXQmJmd0PT1ndC50b3AmJiJjb21wbGV0ZSIhPT1mdC5yZWFkeVN0YXRlfHxEdCYmIWd0LmNhbnZnKXx8KER0P0VlLnB1c2goZnVuY3Rpb24oKXt0LmZpcnN0UmVuZGVyKCl9LHQub3B0aW9ucy5nbG9iYWwuY2FudmFzVG9vbHNVUkwpOmZ0LmF0dGFjaEV2ZW50KCJvbnJlYWR5c3RhdGVjaGFuZ2UiLGZ1bmN0aW9uKCl7ZnQuZGV0YWNoRXZlbnQoIm9ucmVhZHlzdGF0ZWNoYW5nZSIsdC5maXJzdFJlbmRlciksImNvbXBsZXRlIj09PWZ0LnJlYWR5U3RhdGUmJnQuZmlyc3RSZW5kZXIoKX0pLCExKX0sZmlyc3RSZW5kZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5vcHRpb25zLG49dC5jYWxsYmFjazt0LmlzUmVhZHlUb1JlbmRlcigpJiYodC5nZXRDb250YWluZXIoKSxfZSh0LCJpbml0IiksdC5yZXNldE1hcmdpbnMoKSx0LnNldENoYXJ0U2l6ZSgpLHQucHJvcEZyb21TZXJpZXMoKSx0LmdldEF4ZXMoKSxtZShlLnNlcmllc3x8W10sZnVuY3Rpb24oZSl7dC5pbml0U2VyaWVzKGUpfSksdC5saW5rU2VyaWVzKCksX2UodCwiYmVmb3JlUmVuZGVyIiksbGUuUG9pbnRlciYmKHQucG9pbnRlcj1uZXcgRmUodCxlKSksdC5yZW5kZXIoKSx0LnJlbmRlcmVyLmRyYXcoKSxuJiZuLmFwcGx5KHQsW3RdKSxtZSh0LmNhbGxiYWNrcyxmdW5jdGlvbihlKXtlLmFwcGx5KHQsW3RdKX0pLHQuY2xvbmVSZW5kZXJUbyghMCksX2UodCwibG9hZCIpKX0sc3BsYXNoQXJyYXk6ZnVuY3Rpb24odCxlKXt2YXIgbj1lW3RdLGk9bChuKT9uOltuLG4sbixuXTtyZXR1cm5bdyhlW3QrIlRvcCJdLGlbMF0pLHcoZVt0KyJSaWdodCJdLGlbMV0pLHcoZVt0KyJCb3R0b20iXSxpWzJdKSx3KGVbdCsiTGVmdCJdLGlbM10pXX19LFIucHJvdG90eXBlLmNhbGxiYWNrcz1bXTt2YXIgWWU9bGUuQ2VudGVyZWRTZXJpZXNNaXhpbj17Z2V0Q2VudGVyOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXMub3B0aW9ucyxpPXRoaXMuY2hhcnQsbz0yKihuLnNsaWNlZE9mZnNldHx8MCksYT1pLnBsb3RXaWR0aC0yKm8scz1pLnBsb3RIZWlnaHQtMipvLGw9bi5jZW50ZXIsYz1bdyhsWzBdLCI1MCUiKSx3KGxbMV0sIjUwJSIpLG4uc2l6ZXx8IjEwMCUiLG4uaW5uZXJTaXplfHwwXSxwPXl0KGEscyk7cmV0dXJuIHdlKGMsZnVuY3Rpb24obixpKXtyZXR1cm4gZT0vJSQvLnRlc3QobiksdD1pPDJ8fDI9PT1pJiZlLChlP1thLHMscCxwXVtpXSpyKG4pLzEwMDpuKSsodD9vOjApfSl9fSxHZT1mdW5jdGlvbigpe307R2UucHJvdG90eXBlPXtpbml0OmZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvPXRoaXM7cmV0dXJuIG8uc2VyaWVzPXQsCm8uYXBwbHlPcHRpb25zKGUsbiksby5wb2ludEF0dHI9e30sdC5vcHRpb25zLmNvbG9yQnlQb2ludCYmKGk9dC5vcHRpb25zLmNvbG9yc3x8dC5jaGFydC5vcHRpb25zLmNvbG9ycyxvLmNvbG9yPW8uY29sb3J8fGlbdC5jb2xvckNvdW50ZXIrK10sdC5jb2xvckNvdW50ZXI9PT1pLmxlbmd0aCYmKHQuY29sb3JDb3VudGVyPTApKSx0LmNoYXJ0LnBvaW50Q291bnQrKyxvfSxhcHBseU9wdGlvbnM6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9bi5zZXJpZXMsYT1pLm9wdGlvbnMucG9pbnRWYWxLZXl8fGkucG9pbnRWYWxLZXk7cmV0dXJuIHQ9R2UucHJvdG90eXBlLm9wdGlvbnNUb09iamVjdC5jYWxsKHRoaXMsdCksbyhuLHQpLG4ub3B0aW9ucz1uLm9wdGlvbnM/byhuLm9wdGlvbnMsdCk6dCxhJiYobi55PW5bYV0pLG4ueD09PUgmJmkmJihuLng9ZT09PUg/aS5hdXRvSW5jcmVtZW50KCk6ZSksbn0sb3B0aW9uc1RvT2JqZWN0OmZ1bmN0aW9uKHQpe3ZhciBlLG49e30saT10aGlzLnNlcmllcyxvPWkucG9pbnRBcnJheU1hcHx8WyJ5Il0sYT1vLmxlbmd0aCxyPTAscz0wO2lmKCJudW1iZXIiPT10eXBlb2YgdHx8bnVsbD09PXQpbltvWzBdXT10O2Vsc2UgaWYoYyh0KSlmb3IodC5sZW5ndGg+YSYmKGU9dHlwZW9mIHRbMF0sInN0cmluZyI9PT1lP24ubmFtZT10WzBdOiJudW1iZXIiPT09ZSYmKG4ueD10WzBdKSxyKyspO3M8YTspbltvW3MrK11dPXRbcisrXTtlbHNlIm9iamVjdCI9PXR5cGVvZiB0JiYobj10LHQuZGF0YUxhYmVscyYmKGkuX2hhc1BvaW50TGFiZWxzPSEwKSx0Lm1hcmtlciYmKGkuX2hhc1BvaW50TWFya2Vycz0hMCkpO3JldHVybiBufSxkZXN0cm95OmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS5zZXJpZXMsaT1uLmNoYXJ0LG89aS5ob3ZlclBvaW50cztpLnBvaW50Q291bnQtLSxvJiYoZS5zZXRTdGF0ZSgpLHUobyxlKSxvLmxlbmd0aHx8KGkuaG92ZXJQb2ludHM9bnVsbCkpLGU9PT1pLmhvdmVyUG9pbnQmJmUub25Nb3VzZU91dCgpLChlLmdyYXBoaWN8fGUuZGF0YUxhYmVsKSYmKGJlKGUpLGUuZGVzdHJveUVsZW1lbnRzKCkpLGUubGVnZW5kSXRlbSYmaS5sZWdlbmQuZGVzdHJveUl0ZW0oZSk7Zm9yKHQgaW4gZSllW3RdPW51bGx9LGRlc3Ryb3lFbGVtZW50czpmdW5jdGlvbigpe2Zvcih2YXIgdCxlPXRoaXMsbj1bImdyYXBoaWMiLCJkYXRhTGFiZWwiLCJkYXRhTGFiZWxVcHBlciIsImdyb3VwIiwiY29ubmVjdG9yIiwic2hhZG93R3JvdXAiXSxpPTY7aS0tOyl0PW5baV0sZVt0XSYmKGVbdF09ZVt0XS5kZXN0cm95KCkpfSxnZXRMYWJlbENvbmZpZzpmdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJue3g6dC5jYXRlZ29yeSx5OnQueSxrZXk6dC5uYW1lfHx0LmNhdGVnb3J5LHNlcmllczp0LnNlcmllcyxwb2ludDp0LHBlcmNlbnRhZ2U6dC5wZXJjZW50YWdlLHRvdGFsOnQudG90YWx8fHQuc3RhY2tUb3RhbH19LHRvb2x0aXBGb3JtYXR0ZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5zZXJpZXMsbj1lLnRvb2x0aXBPcHRpb25zLGk9dyhuLnZhbHVlRGVjaW1hbHMsIiIpLG89bi52YWx1ZVByZWZpeHx8IiIsYT1uLnZhbHVlU3VmZml4fHwiIjtyZXR1cm4gbWUoZS5wb2ludEFycmF5TWFwfHxbInkiXSxmdW5jdGlvbihlKXtlPSJ7cG9pbnQuIitlLChvfHxhKSYmKHQ9dC5yZXBsYWNlKGUrIn0iLG8rZSsifSIrYSkpLHQ9dC5yZXBsYWNlKGUrIn0iLGUrIjosLiIraSsiZn0iKX0pLGoodCx7cG9pbnQ6dGhpcyxzZXJpZXM6dGhpcy5zZXJpZXN9KX0sZmlyZVBvaW50RXZlbnQ6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMsbz10aGlzLnNlcmllcyxhPW8ub3B0aW9uczsoYS5wb2ludC5ldmVudHNbdF18fGkub3B0aW9ucyYmaS5vcHRpb25zLmV2ZW50cyYmaS5vcHRpb25zLmV2ZW50c1t0XSkmJnRoaXMuaW1wb3J0RXZlbnRzKCksImNsaWNrIj09PXQmJmEuYWxsb3dQb2ludFNlbGVjdCYmKG49ZnVuY3Rpb24odCl7aS5zZWxlY3QobnVsbCx0LmN0cmxLZXl8fHQubWV0YUtleXx8dC5zaGlmdEtleSl9KSxfZSh0aGlzLHQsZSxuKX19O3ZhciBYZT1mdW5jdGlvbigpe307WGUucHJvdG90eXBlPXtpc0NhcnRlc2lhbjohMCx0eXBlOiJsaW5lIixwb2ludENsYXNzOkdlLHNvcnRlZDohMCxyZXF1aXJlU29ydGluZzohMCxwb2ludEF0dHJUb09wdGlvbnM6e3N0cm9rZToibGluZUNvbG9yIiwic3Ryb2tlLXdpZHRoIjoibGluZVdpZHRoIixmaWxsOiJmaWxsQ29sb3IiLHI6InJhZGl1cyJ9LGF4aXNUeXBlczpbInhBeGlzIiwieUF4aXMiXSxjb2xvckNvdW50ZXI6MCxwYXJhbGxlbEFycmF5czpbIngiLCJ5Il0saW5pdDpmdW5jdGlvbih0LGUpe3ZhciBuLGksYT10aGlzLHI9dC5zZXJpZXMscz1mdW5jdGlvbih0LGUpe3JldHVybiB3KHQub3B0aW9ucy5pbmRleCx0Ll9pKS13KGUub3B0aW9ucy5pbmRleCxlLl9pKX07YS5jaGFydD10LGEub3B0aW9ucz1lPWEuc2V0T3B0aW9ucyhlKSxhLmxpbmtlZFNlcmllcz1bXSxhLmJpbmRBeGVzKCksbyhhLHtuYW1lOmUubmFtZSxzdGF0ZTppZSxwb2ludEF0dHI6e30sdmlzaWJsZTplLnZpc2libGUhPT0hMSxzZWxlY3RlZDplLnNlbGVjdGVkPT09ITB9KSxEdCYmKGUuYW5pbWF0aW9uPSExKSxpPWUuZXZlbnRzO2ZvcihuIGluIGkpeGUoYSxuLGlbbl0pOyhpJiZpLmNsaWNrfHxlLnBvaW50JiZlLnBvaW50LmV2ZW50cyYmZS5wb2ludC5ldmVudHMuY2xpY2t8fGUuYWxsb3dQb2ludFNlbGVjdCkmJih0LnJ1blRyYWNrZXJDbGljaz0hMCksYS5nZXRDb2xvcigpLGEuZ2V0U3ltYm9sKCksbWUoYS5wYXJhbGxlbEFycmF5cyxmdW5jdGlvbih0KXthW3QrIkRhdGEiXT1bXX0pLGEuc2V0RGF0YShlLmRhdGEsITEpLGEuaXNDYXJ0ZXNpYW4mJih0Lmhhc0NhcnRlc2lhblNlcmllcz0hMCksci5wdXNoKGEpLGEuX2k9ci5sZW5ndGgtMSxQKHIscyksdGhpcy55QXhpcyYmUCh0aGlzLnlBeGlzLnNlcmllcyxzKSxtZShyLGZ1bmN0aW9uKHQsZSl7dC5pbmRleD1lLHQubmFtZT10Lm5hbWV8fCJTZXJpZXMgIisoZSsxKX0pfSxiaW5kQXhlczpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcyxuPWUub3B0aW9ucyxpPWUuY2hhcnQ7bWUoZS5heGlzVHlwZXN8fFtdLGZ1bmN0aW9uKG8pe21lKGlbb10sZnVuY3Rpb24oaSl7dD1pLm9wdGlvbnMsKG5bb109PT10LmluZGV4fHxuW29dIT09SCYmbltvXT09PXQuaWR8fG5bb109PT1IJiYwPT09dC5pbmRleCkmJihpLnNlcmllcy5wdXNoKGUpLGVbb109aSxpLmlzRGlydHk9ITApfSksZVtvXXx8ZS5vcHRpb25hbEF4aXM9PT1vfHxLKDE4LCEwKX0pfSx1cGRhdGVQYXJhbGxlbEFycmF5czpmdW5jdGlvbih0LGUpe3ZhciBuPXQuc2VyaWVzLGk9YXJndW1lbnRzLG89Im51bWJlciI9PXR5cGVvZiBlP2Z1bmN0aW9uKGkpe3ZhciBvPSJ5Ij09PWkmJm4udG9ZRGF0YT9uLnRvWURhdGEodCk6dFtpXTtuW2krIkRhdGEiXVtlXT1vfTpmdW5jdGlvbih0KXtBcnJheS5wcm90b3R5cGVbZV0uYXBwbHkoblt0KyJEYXRhIl0sQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoaSwyKSl9O21lKG4ucGFyYWxsZWxBcnJheXMsbyl9LGF1dG9JbmNyZW1lbnQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5vcHRpb25zLG49dC54SW5jcmVtZW50O3JldHVybiBuPXcobixlLnBvaW50U3RhcnQsMCksdC5wb2ludEludGVydmFsPXcodC5wb2ludEludGVydmFsLGUucG9pbnRJbnRlcnZhbCwxKSx0LnhJbmNyZW1lbnQ9bit0LnBvaW50SW50ZXJ2YWwsbn0sZ2V0U2VnbWVudHM6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbj0tMSxpPVtdLG89ZS5wb2ludHMsYT1vLmxlbmd0aDtpZihhKWlmKGUub3B0aW9ucy5jb25uZWN0TnVsbHMpe2Zvcih0PWE7dC0tOyludWxsPT09b1t0XS55JiZvLnNwbGljZSh0LDEpO28ubGVuZ3RoJiYoaT1bb10pfWVsc2UgbWUobyxmdW5jdGlvbih0LGUpe251bGw9PT10Lnk/KGU+bisxJiZpLnB1c2goby5zbGljZShuKzEsZSkpLG49ZSk6ZT09PWEtMSYmaS5wdXNoKG8uc2xpY2UobisxLGUrMSkpfSk7ZS5zZWdtZW50cz1pfSxzZXRPcHRpb25zOmZ1bmN0aW9uKHQpe3ZhciBlLG49dGhpcy5jaGFydCxpPW4ub3B0aW9ucyxvPWkucGxvdE9wdGlvbnMscj1uLnVzZXJPcHRpb25zfHx7fSxzPXIucGxvdE9wdGlvbnN8fHt9LGw9b1t0aGlzLnR5cGVdO3JldHVybiB0aGlzLnVzZXJPcHRpb25zPXQsZT1hKGwsby5zZXJpZXMsdCksdGhpcy50b29sdGlwT3B0aW9ucz1hKEcudG9vbHRpcCxHLnBsb3RPcHRpb25zW3RoaXMudHlwZV0udG9vbHRpcCxyLnRvb2x0aXAscy5zZXJpZXMmJnMuc2VyaWVzLnRvb2x0aXAsc1t0aGlzLnR5cGVdJiZzW3RoaXMudHlwZV0udG9vbHRpcCx0LnRvb2x0aXApLG51bGw9PT1sLm1hcmtlciYmZGVsZXRlIGUubWFya2VyLGV9LGdldEN5Y2xpYzpmdW5jdGlvbih0LGUsbil7dmFyIGksbz10aGlzLnVzZXJPcHRpb25zLGE9Il8iK3QrIkluZGV4IixyPXQrIkNvdW50ZXIiO2V8fChtKG9bYV0pP2k9b1thXToob1thXT1pPXRoaXMuY2hhcnRbcl0lbi5sZW5ndGgsdGhpcy5jaGFydFtyXSs9MSksZT1uW2ldKSx0aGlzW3RdPWV9LGdldENvbG9yOmZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmNvbG9yQnlQb2ludHx8dGhpcy5nZXRDeWNsaWMoImNvbG9yIix0aGlzLm9wdGlvbnMuY29sb3J8fGplW3RoaXMudHlwZV0uY29sb3IsdGhpcy5jaGFydC5vcHRpb25zLmNvbG9ycyl9LGdldFN5bWJvbDpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy5tYXJrZXI7dGhpcy5nZXRDeWNsaWMoInN5bWJvbCIsdC5zeW1ib2wsdGhpcy5jaGFydC5vcHRpb25zLnN5bWJvbHMpLC9edXJsLy50ZXN0KHRoaXMuc3ltYm9sKSYmKHQucmFkaXVzPTApfSxkcmF3TGVnZW5kU3ltYm9sOlVlLmRyYXdMaW5lTWFya2VyLHNldERhdGE6ZnVuY3Rpb24odCxlLG4saSl7dmFyIG8sYSxyLGw9dGhpcyxkPWwucG9pbnRzLGg9ZCYmZC5sZW5ndGh8fDAsdT1sLm9wdGlvbnMsbT1sLmNoYXJ0LGY9bnVsbCxnPWwueEF4aXMseD1nJiYhIWcuY2F0ZWdvcmllcyxiPWwudG9vbHRpcFBvaW50cyxfPXUudHVyYm9UaHJlc2hvbGQsdj10aGlzLnhEYXRhLHk9dGhpcy55RGF0YSxrPWwucG9pbnRBcnJheU1hcCx6PWsmJmsubGVuZ3RoO2lmKHQ9dHx8W10sbz10Lmxlbmd0aCxlPXcoZSwhMCksaT09PSExfHwhb3x8aCE9PW98fGwuY3JvcHBlZHx8bC5oYXNHcm91cGVkRGF0YSl7aWYobC54SW5jcmVtZW50PW51bGwsbC5wb2ludFJhbmdlPXg/MTp1LnBvaW50UmFuZ2UsbC5jb2xvckNvdW50ZXI9MCxtZSh0aGlzLnBhcmFsbGVsQXJyYXlzLGZ1bmN0aW9uKHQpe2xbdCsiRGF0YSJdLmxlbmd0aD0wfSksXyYmbz5fKXtmb3IoYT0wO251bGw9PT1mJiZhPG87KWY9dFthXSxhKys7aWYocChmKSl7dmFyIGo9dyh1LnBvaW50U3RhcnQsMCksQz13KHUucG9pbnRJbnRlcnZhbCwxKTtmb3IoYT0wO2E8bzthKyspdlthXT1qLHlbYV09dFthXSxqKz1DO2wueEluY3JlbWVudD1qfWVsc2UgaWYoYyhmKSlpZih6KWZvcihhPTA7YTxvO2ErKylyPXRbYV0sdlthXT1yWzBdLHlbYV09ci5zbGljZSgxLHorMSk7ZWxzZSBmb3IoYT0wO2E8bzthKyspcj10W2FdLHZbYV09clswXSx5W2FdPXJbMV07ZWxzZSBLKDEyKX1lbHNlIGZvcihhPTA7YTxvO2ErKyl0W2FdIT09SCYmKHI9e3NlcmllczpsfSxsLnBvaW50Q2xhc3MucHJvdG90eXBlLmFwcGx5T3B0aW9ucy5hcHBseShyLFt0W2FdXSksbC51cGRhdGVQYXJhbGxlbEFycmF5cyhyLGEpLHgmJnIubmFtZSYmKGcubmFtZXNbci54XT1yLm5hbWUpKTtmb3Iocyh5WzBdKSYmSygxNCwhMCksbC5kYXRhPVtdLGwub3B0aW9ucy5kYXRhPXQsYT1oO2EtLTspZFthXSYmZFthXS5kZXN0cm95JiZkW2FdLmRlc3Ryb3koKTtiJiYoYi5sZW5ndGg9MCksZyYmKGcubWluUmFuZ2U9Zy51c2VyTWluUmFuZ2UpLGwuaXNEaXJ0eT1sLmlzRGlydHlEYXRhPW0uaXNEaXJ0eUJveD0hMCxuPSExfWVsc2UgbWUodCxmdW5jdGlvbih0LGUpe2RbZV0udXBkYXRlKHQsITEsbnVsbCwhMSl9KTtlJiZtLnJlZHJhdyhuKX0scHJvY2Vzc0RhdGE6ZnVuY3Rpb24odCl7dmFyIGUsbixpLG8sYSxyLHMsbCxjPXRoaXMscD1jLnhEYXRhLGQ9Yy55RGF0YSxoPXAubGVuZ3RoLHU9MCxtPWMueEF4aXMsZj1jLm9wdGlvbnMsZz1mLmNyb3BUaHJlc2hvbGQsdz0wLHg9Yy5pc0NhcnRlc2lhbjtpZih4JiYhYy5pc0RpcnR5JiYhbS5pc0RpcnR5JiYhYy55QXhpcy5pc0RpcnR5JiYhdClyZXR1cm4hMTtmb3IobSYmKHI9bS5nZXRFeHRyZW1lcygpLHM9ci5taW4sbD1yLm1heCkseCYmYy5zb3J0ZWQmJighZ3x8aD5nfHxjLmZvcmNlQ3JvcCkmJihwW2gtMV08c3x8cFswXT5sPyhwPVtdLGQ9W10pOihwWzBdPHN8fHBbaC0xXT5sKSYmKGU9dGhpcy5jcm9wRGF0YShjLnhEYXRhLGMueURhdGEscyxsKSxwPWUueERhdGEsZD1lLnlEYXRhLHU9ZS5zdGFydCxuPSEwLHc9cC5sZW5ndGgpKSxhPXAubGVuZ3RoLTE7YT49MDthLS0paT1wW2FdLXBbYS0xXSwhbiYmcFthXT5zJiZwW2FdPGwmJncrKyxpPjAmJihvPT09SHx8aTxvKT9vPWk6aTwwJiZjLnJlcXVpcmVTb3J0aW5nJiZLKDE1KTtjLmNyb3BwZWQ9bixjLmNyb3BTdGFydD11LGMucHJvY2Vzc2VkWERhdGE9cCxjLnByb2Nlc3NlZFlEYXRhPWQsYy5hY3RpdmVQb2ludENvdW50PXcsbnVsbD09PWYucG9pbnRSYW5nZSYmKGMucG9pbnRSYW5nZT1vfHwxKSxjLmNsb3Nlc3RQb2ludFJhbmdlPW99LGNyb3BEYXRhOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBvLGE9dC5sZW5ndGgscj0wLHM9YSxsPXcodGhpcy5jcm9wU2hvdWxkZXIsMSk7Zm9yKG89MDtvPGE7bysrKWlmKHRbb10+PW4pe3I9dnQoMCxvLWwpO2JyZWFrfWZvcig7bzxhO28rKylpZih0W29dPmkpe3M9bytsO2JyZWFrfXJldHVybnt4RGF0YTp0LnNsaWNlKHIscykseURhdGE6ZS5zbGljZShyLHMpLHN0YXJ0OnIsZW5kOnN9fSxnZW5lcmF0ZVBvaW50czpmdW5jdGlvbigpe3ZhciB0LGUsbixpLG89dGhpcyxhPW8ub3B0aW9ucyxyPWEuZGF0YSxzPW8uZGF0YSxsPW8ucHJvY2Vzc2VkWERhdGEsYz1vLnByb2Nlc3NlZFlEYXRhLHA9by5wb2ludENsYXNzLGQ9bC5sZW5ndGgsaD1vLmNyb3BTdGFydHx8MCx1PW8uaGFzR3JvdXBlZERhdGEsbT1bXTtpZighcyYmIXUpe3ZhciBmPVtdO2YubGVuZ3RoPXIubGVuZ3RoLHM9by5kYXRhPWZ9Zm9yKGk9MDtpPGQ7aSsrKWU9aCtpLHU/bVtpXT0obmV3IHApLmluaXQobyxbbFtpXV0uY29uY2F0KGcoY1tpXSkpKTooc1tlXT9uPXNbZV06cltlXSE9PUgmJihzW2VdPW49KG5ldyBwKS5pbml0KG8scltlXSxsW2ldKSksbVtpXT1uKSxtW2ldLmluZGV4PWU7aWYocyYmKGQhPT0odD1zLmxlbmd0aCl8fHUpKWZvcihpPTA7aTx0O2krKylpIT09aHx8dXx8KGkrPWQpLHNbaV0mJihzW2ldLmRlc3Ryb3lFbGVtZW50cygpLHNbaV0ucGxvdFg9SCk7by5kYXRhPXMsby5wb2ludHM9bX0sZ2V0RXh0cmVtZXM6ZnVuY3Rpb24odCl7dmFyIGUsbixpLG8sYSxyLHMsbCxjLHA9dGhpcy54QXhpcyxkPXRoaXMueUF4aXMsaD10aGlzLnByb2Nlc3NlZFhEYXRhLHU9W10sbT0wLGY9cC5nZXRFeHRyZW1lcygpLGc9Zi5taW4seD1mLm1heDtmb3IodD10fHx0aGlzLnN0YWNrZWRZRGF0YXx8dGhpcy5wcm9jZXNzZWRZRGF0YSxlPXQubGVuZ3RoLGw9MDtsPGU7bCsrKWlmKHI9aFtsXSxzPXRbbF0sbj1udWxsIT09cyYmcyE9PUgmJighZC5pc0xvZ3x8cy5sZW5ndGh8fHM+MCksaT10aGlzLmdldEV4dHJlbWVzRnJvbUFsbHx8dGhpcy5jcm9wcGVkfHwoaFtsKzFdfHxyKT49ZyYmKGhbbC0xXXx8cik8PXgsbiYmaSlpZihjPXMubGVuZ3RoKWZvcig7Yy0tOyludWxsIT09c1tjXSYmKHVbbSsrXT1zW2NdKTtlbHNlIHVbbSsrXT1zO3RoaXMuZGF0YU1pbj13KG8sVCh1KSksdGhpcy5kYXRhTWF4PXcoYSxBKHUpKX0sdHJhbnNsYXRlOmZ1bmN0aW9uKCl7dGhpcy5wcm9jZXNzZWRYRGF0YXx8dGhpcy5wcm9jZXNzRGF0YSgpLHRoaXMuZ2VuZXJhdGVQb2ludHMoKTt2YXIgdCxlPXRoaXMsbj1lLm9wdGlvbnMsaT1uLnN0YWNraW5nLG89ZS54QXhpcyxhPW8uY2F0ZWdvcmllcyxyPWUueUF4aXMscz1lLnBvaW50cyxsPXMubGVuZ3RoLGM9ISFlLm1vZGlmeVZhbHVlLGQ9bi5wb2ludFBsYWNlbWVudCxoPSJiZXR3ZWVuIj09PWR8fHAoZCksdT1uLnRocmVzaG9sZDtmb3IodD0wO3Q8bDt0Kyspe3ZhciBmLGcseD1zW3RdLGI9eC54LF89eC55LHY9eC5sb3cseT1pJiZyLnN0YWNrc1soZS5uZWdTdGFja3MmJl88dT8iLSI6IiIpK2Uuc3RhY2tLZXldO3IuaXNMb2cmJl88PTAmJih4Lnk9Xz1udWxsLEsoMTApKSx4LnBsb3RYPW8udHJhbnNsYXRlKGIsMCwwLDAsMSxkLCJmbGFncyI9PT10aGlzLnR5cGUpLGkmJmUudmlzaWJsZSYmeSYmeVtiXSYmKGY9eVtiXSxnPWYucG9pbnRzW2UuaW5kZXgrIiwiK3RdLHY9Z1swXSxfPWdbMV0sMD09PXYmJih2PXcodSxyLm1pbikpLHIuaXNMb2cmJnY8PTAmJih2PW51bGwpLHgudG90YWw9eC5zdGFja1RvdGFsPWYudG90YWwseC5wZXJjZW50YWdlPWYudG90YWwmJngueS9mLnRvdGFsKjEwMCx4LnN0YWNrWT1fLGYuc2V0T2Zmc2V0KGUucG9pbnRYT2Zmc2V0fHwwLGUuYmFyV3x8MCkpLHgueUJvdHRvbT1tKHYpP3IudHJhbnNsYXRlKHYsMCwxLDAsMSk6bnVsbCxjJiYoXz1lLm1vZGlmeVZhbHVlKF8seCkpLHgucGxvdFk9Im51bWJlciI9PXR5cGVvZiBfJiZfIT09MS8wP3IudHJhbnNsYXRlKF8sMCwxLDAsMSk6SCx4LmNsaWVudFg9aD9vLnRyYW5zbGF0ZShiLDAsMCwwLDEpOngucGxvdFgseC5uZWdhdGl2ZT14Lnk8KHV8fDApLHguY2F0ZWdvcnk9YSYmYVt4LnhdIT09SD9hW3gueF06eC54fWUuZ2V0U2VnbWVudHMoKX0sYW5pbWF0ZTpmdW5jdGlvbih0KXt2YXIgZSxuLGksYT10aGlzLHI9YS5jaGFydCxzPXIucmVuZGVyZXIsYz1hLm9wdGlvbnMuYW5pbWF0aW9uLHA9YS5jbGlwQm94fHxyLmNsaXBCb3gsZD1yLmludmVydGVkO2MmJiFsKGMpJiYoYz1qZVthLnR5cGVdLmFuaW1hdGlvbiksaT1bIl9zaGFyZWRDbGlwIixjLmR1cmF0aW9uLGMuZWFzaW5nLHAuaGVpZ2h0XS5qb2luKCIsIiksdD8oZT1yW2ldLG49cltpKyJtIl0sZXx8KHJbaV09ZT1zLmNsaXBSZWN0KG8ocCx7d2lkdGg6MH0pKSxyW2krIm0iXT1uPXMuY2xpcFJlY3QoLTk5LGQ/LXIucGxvdExlZnQ6LXIucGxvdFRvcCw5OSxkP3IuY2hhcnRXaWR0aDpyLmNoYXJ0SGVpZ2h0KSksYS5ncm91cC5jbGlwKGUpLGEubWFya2VyR3JvdXAuY2xpcChuKSxhLnNoYXJlZENsaXBLZXk9aSk6KGU9cltpXSxlJiZlLmFuaW1hdGUoe3dpZHRoOnIucGxvdFNpemVYfSxjKSxyW2krIm0iXSYmcltpKyJtIl0uYW5pbWF0ZSh7d2lkdGg6ci5wbG90U2l6ZVgrOTl9LGMpLGEuYW5pbWF0ZT1udWxsKX0sYWZ0ZXJBbmltYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jaGFydCxlPXRoaXMuc2hhcmVkQ2xpcEtleSxuPXRoaXMuZ3JvdXAsaT10aGlzLmNsaXBCb3g7biYmdGhpcy5vcHRpb25zLmNsaXAhPT0hMSYmKGUmJml8fG4uY2xpcChpP3QucmVuZGVyZXIuY2xpcFJlY3QoaSk6dC5jbGlwUmVjdCksdGhpcy5tYXJrZXJHcm91cC5jbGlwKCkpLF9lKHRoaXMsImFmdGVyQW5pbWF0ZSIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlJiZ0W2VdJiYoaXx8KHRbZV09dFtlXS5kZXN0cm95KCkpLHRbZSsibSJdJiYodFtlKyJtIl09dFtlKyJtIl0uZGVzdHJveSgpKSl9LDEwMCl9LGRyYXdQb2ludHM6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxhLHIscyxsLGMscCxkLGgsdSxtPXRoaXMsZj1tLnBvaW50cyxnPW0uY2hhcnQseD1tLm9wdGlvbnMsYj14Lm1hcmtlcixfPW0ucG9pbnRBdHRyWyIiXSx2PW0ubWFya2VyR3JvdXAseT13KGIuZW5hYmxlZCwhbS5yZXF1aXJlU29ydGluZ3x8bS5hY3RpdmVQb2ludENvdW50PC41Km0ueEF4aXMubGVuL2IucmFkaXVzKTtpZihiLmVuYWJsZWQhPT0hMXx8bS5faGFzUG9pbnRNYXJrZXJzKWZvcihpPWYubGVuZ3RoO2ktLTspYT1mW2ldLGU9YnQoYS5wbG90WCksbj1hLnBsb3RZLGM9YS5ncmFwaGljLHA9YS5tYXJrZXJ8fHt9LGQ9ISFhLm1hcmtlcixoPXkmJnAuZW5hYmxlZD09PUh8fHAuZW5hYmxlZCx1PWcuaXNJbnNpZGVQbG90KHh0KGUpLG4sZy5pbnZlcnRlZCksaCYmbiE9PUgmJiFpc05hTihuKSYmbnVsbCE9PWEueT8odD1hLnBvaW50QXR0clthLnNlbGVjdGVkP2FlOmllXXx8XyxyPXQucixzPXcocC5zeW1ib2wsbS5zeW1ib2wpLGw9MD09PXMuaW5kZXhPZigidXJsIiksYz9jW3U/InNob3ciOiJoaWRlIl0oITApLmFuaW1hdGUobyh7eDplLXIseTpuLXJ9LGMuc3ltYm9sTmFtZT97d2lkdGg6MipyLGhlaWdodDoyKnJ9Ont9KSk6dSYmKHI+MHx8bCkmJihhLmdyYXBoaWM9Yz1nLnJlbmRlcmVyLnN5bWJvbChzLGUtcixuLXIsMipyLDIqcixkP3A6YikuYXR0cih0KS5hZGQodikpKTpjJiYoYS5ncmFwaGljPWMuZGVzdHJveSgpKX0sY29udmVydEF0dHJpYnM6ZnVuY3Rpb24odCxlLG4saSl7dmFyIG8sYSxyPXRoaXMucG9pbnRBdHRyVG9PcHRpb25zLHM9e307dD10fHx7fSxlPWV8fHt9LG49bnx8e30saT1pfHx7fTtmb3IobyBpbiByKWE9cltvXSxzW29dPXcodFthXSxlW29dLG5bb10saVtvXSk7cmV0dXJuIHN9LGdldEF0dHJpYnM6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxhLHIscz10aGlzLGw9cy5vcHRpb25zLGM9amVbcy50eXBlXS5tYXJrZXI/bC5tYXJrZXI6bCxwPWMuc3RhdGVzLGQ9cFtvZV0saD1zLmNvbG9yLHU9e3N0cm9rZTpoLGZpbGw6aH0sZj1zLnBvaW50c3x8W10sZz1bXSx3PXMucG9pbnRBdHRyVG9PcHRpb25zLHg9cy5oYXNQb2ludFNwZWNpZmljT3B0aW9ucyxiPWwubmVnYXRpdmVDb2xvcixfPWMubGluZUNvbG9yLHY9Yy5maWxsQ29sb3IseT1sLnR1cmJvVGhyZXNob2xkO2lmKGwubWFya2VyPyhkLnJhZGl1cz1kLnJhZGl1c3x8Yy5yYWRpdXMrZC5yYWRpdXNQbHVzLGQubGluZVdpZHRoPWQubGluZVdpZHRofHxjLmxpbmVXaWR0aCtkLmxpbmVXaWR0aFBsdXMpOmQuY29sb3I9ZC5jb2xvcnx8QWUoZC5jb2xvcnx8aCkuYnJpZ2h0ZW4oZC5icmlnaHRuZXNzKS5nZXQoKSxnW2llXT1zLmNvbnZlcnRBdHRyaWJzKGMsdSksbWUoW29lLGFlXSxmdW5jdGlvbih0KXtnW3RdPXMuY29udmVydEF0dHJpYnMocFt0XSxnW2llXSl9KSxzLnBvaW50QXR0cj1nLGU9Zi5sZW5ndGgsIXl8fGU8eXx8eClmb3IoO2UtLTspe2lmKG49ZltlXSxjPW4ub3B0aW9ucyYmbi5vcHRpb25zLm1hcmtlcnx8bi5vcHRpb25zLGMmJmMuZW5hYmxlZD09PSExJiYoYy5yYWRpdXM9MCksbi5uZWdhdGl2ZSYmYiYmKG4uY29sb3I9bi5maWxsQ29sb3I9YikseD1sLmNvbG9yQnlQb2ludHx8bi5jb2xvcixuLm9wdGlvbnMpZm9yKHIgaW4gdyltKGNbd1tyXV0pJiYoeD0hMCk7eD8oYz1jfHx7fSxpPVtdLHA9Yy5zdGF0ZXN8fHt9LHQ9cFtvZV09cFtvZV18fHt9LGwubWFya2VyfHwodC5jb2xvcj10LmNvbG9yfHwhbi5vcHRpb25zLmNvbG9yJiZkLmNvbG9yfHxBZShuLmNvbG9yKS5icmlnaHRlbih0LmJyaWdodG5lc3N8fGQuYnJpZ2h0bmVzcykuZ2V0KCkpLGE9e2NvbG9yOm4uY29sb3J9LHZ8fChhLmZpbGxDb2xvcj1uLmNvbG9yKSxffHwoYS5saW5lQ29sb3I9bi5jb2xvciksaVtpZV09cy5jb252ZXJ0QXR0cmlicyhvKGEsYyksZ1tpZV0pLGlbb2VdPXMuY29udmVydEF0dHJpYnMocFtvZV0sZ1tvZV0saVtpZV0pLGlbYWVdPXMuY29udmVydEF0dHJpYnMocFthZV0sZ1thZV0saVtpZV0pKTppPWcsbi5wb2ludEF0dHI9aX19LGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxvLGE9dGhpcyxyPWEuY2hhcnQscz0vQXBwbGVXZWJLaXRcLzUzMy8udGVzdChQdCksbD1hLmRhdGF8fFtdO2ZvcihfZShhLCJkZXN0cm95IiksYmUoYSksbWUoYS5heGlzVHlwZXN8fFtdLGZ1bmN0aW9uKHQpe289YVt0XSxvJiYodShvLnNlcmllcyxhKSxvLmlzRGlydHk9by5mb3JjZVJlZHJhdz0hMCl9KSxhLmxlZ2VuZEl0ZW0mJmEuY2hhcnQubGVnZW5kLmRlc3Ryb3lJdGVtKGEpLGU9bC5sZW5ndGg7ZS0tOyluPWxbZV0sbiYmbi5kZXN0cm95JiZuLmRlc3Ryb3koKTthLnBvaW50cz1udWxsLGNsZWFyVGltZW91dChhLmFuaW1hdGlvblRpbWVvdXQpLG1lKFsiYXJlYSIsImdyYXBoIiwiZGF0YUxhYmVsc0dyb3VwIiwiZ3JvdXAiLCJtYXJrZXJHcm91cCIsInRyYWNrZXIiLCJncmFwaE5lZyIsImFyZWFOZWciLCJwb3NDbGlwIiwibmVnQ2xpcCJdLGZ1bmN0aW9uKGUpe2FbZV0mJih0PXMmJiJncm91cCI9PT1lPyJoaWRlIjoiZGVzdHJveSIsYVtlXVt0XSgpKX0pLHIuaG92ZXJTZXJpZXM9PT1hJiYoci5ob3ZlclNlcmllcz1udWxsKSx1KHIuc2VyaWVzLGEpO2ZvcihpIGluIGEpZGVsZXRlIGFbaV19LGdldFNlZ21lbnRQYXRoOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXSxpPWUub3B0aW9ucy5zdGVwO3JldHVybiBtZSh0LGZ1bmN0aW9uKG8sYSl7dmFyIHIscz1vLnBsb3RYLGw9by5wbG90WTtlLmdldFBvaW50U3BsaW5lP24ucHVzaC5hcHBseShuLGUuZ2V0UG9pbnRTcGxpbmUodCxvLGEpKToobi5wdXNoKGE/ZWU6dGUpLGkmJmEmJihyPXRbYS0xXSwicmlnaHQiPT09aT9uLnB1c2goci5wbG90WCxsKToiY2VudGVyIj09PWk/bi5wdXNoKChyLnBsb3RYK3MpLzIsci5wbG90WSwoci5wbG90WCtzKS8yLGwpOm4ucHVzaChzLHIucGxvdFkpKSxuLnB1c2goby5wbG90WCxvLnBsb3RZKSl9KSxufSxnZXRHcmFwaFBhdGg6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMsbj1bXSxpPVtdO3JldHVybiBtZShlLnNlZ21lbnRzLGZ1bmN0aW9uKG8pe3Q9ZS5nZXRTZWdtZW50UGF0aChvKSxvLmxlbmd0aD4xP249bi5jb25jYXQodCk6aS5wdXNoKG9bMF0pfSksZS5zaW5nbGVQb2ludHM9aSxlLmdyYXBoUGF0aD1uLG59LGRyYXdHcmFwaDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLm9wdGlvbnMsbj1bWyJncmFwaCIsZS5saW5lQ29sb3J8fHRoaXMuY29sb3JdXSxpPWUubGluZVdpZHRoLG89ZS5kYXNoU3R5bGUsYT0ic3F1YXJlIiE9PWUubGluZWNhcCxyPXRoaXMuZ2V0R3JhcGhQYXRoKCkscz1lLm5lZ2F0aXZlQ29sb3I7cyYmbi5wdXNoKFsiZ3JhcGhOZWciLHNdKSxtZShuLGZ1bmN0aW9uKG4scyl7dmFyIGwsYz1uWzBdLHA9dFtjXTtwPyhrZShwKSxwLmFuaW1hdGUoe2Q6cn0pKTppJiZyLmxlbmd0aCYmKGw9e3N0cm9rZTpuWzFdLCJzdHJva2Utd2lkdGgiOmksZmlsbDpRdCx6SW5kZXg6MX0sbz9sLmRhc2hzdHlsZT1vOmEmJihsWyJzdHJva2UtbGluZWNhcCJdPWxbInN0cm9rZS1saW5lam9pbiJdPSJyb3VuZCIpLHRbY109dC5jaGFydC5yZW5kZXJlci5wYXRoKHIpLmF0dHIobCkuYWRkKHQuZ3JvdXApLnNoYWRvdyghcyYmZS5zaGFkb3cpKX0pfSxjbGlwTmVnOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksbyxhPXRoaXMub3B0aW9ucyxyPXRoaXMuY2hhcnQscz1yLnJlbmRlcmVyLGw9YS5uZWdhdGl2ZUNvbG9yfHxhLm5lZ2F0aXZlRmlsbENvbG9yLGM9dGhpcy5ncmFwaCxwPXRoaXMuYXJlYSxkPXRoaXMucG9zQ2xpcCxoPXRoaXMubmVnQ2xpcCx1PXIuY2hhcnRXaWR0aCxtPXIuY2hhcnRIZWlnaHQsZj12dCh1LG0pLGc9dGhpcy55QXhpcztsJiYoY3x8cCkmJih0PXh0KGcudG9QaXhlbHMoYS50aHJlc2hvbGR8fDAsITApKSx0PDAmJihmLT10KSxpPXt4OjAseTowLHdpZHRoOmYsaGVpZ2h0OnR9LG89e3g6MCx5OnQsd2lkdGg6ZixoZWlnaHQ6Zn0sci5pbnZlcnRlZCYmKGkuaGVpZ2h0PW8ueT1yLnBsb3RXaWR0aC10LHMuaXNWTUwmJihpPXt4OnIucGxvdFdpZHRoLXQtci5wbG90TGVmdCx5OjAsd2lkdGg6dSxoZWlnaHQ6bX0sbz17eDp0K3IucGxvdExlZnQtdSx5OjAsd2lkdGg6ci5wbG90TGVmdCt0LGhlaWdodDp1fSkpLGcucmV2ZXJzZWQ/KGU9byxuPWkpOihlPWksbj1vKSxkPyhkLmFuaW1hdGUoZSksaC5hbmltYXRlKG4pKToodGhpcy5wb3NDbGlwPWQ9cy5jbGlwUmVjdChlKSx0aGlzLm5lZ0NsaXA9aD1zLmNsaXBSZWN0KG4pLGMmJnRoaXMuZ3JhcGhOZWcmJihjLmNsaXAoZCksdGhpcy5ncmFwaE5lZy5jbGlwKGgpKSxwJiYocC5jbGlwKGQpLHRoaXMuYXJlYU5lZy5jbGlwKGgpKSkpfSxpbnZlcnRHcm91cHM6ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7dmFyIHQ9e3dpZHRoOmUueUF4aXMubGVuLGhlaWdodDplLnhBeGlzLmxlbn07bWUoWyJncm91cCIsIm1hcmtlckdyb3VwIl0sZnVuY3Rpb24obil7ZVtuXSYmZVtuXS5hdHRyKHQpLmludmVydCgpfSl9dmFyIGU9dGhpcyxuPWUuY2hhcnQ7ZS54QXhpcyYmKHhlKG4sInJlc2l6ZSIsdCkseGUoZSwiZGVzdHJveSIsZnVuY3Rpb24oKXtiZShuLCJyZXNpemUiLHQpfSksdCgpLGUuaW52ZXJ0R3JvdXBzPXQpfSxwbG90R3JvdXA6ZnVuY3Rpb24odCxlLG4saSxvKXt2YXIgYT10aGlzW3RdLHI9IWE7cmV0dXJuIHImJih0aGlzW3RdPWE9dGhpcy5jaGFydC5yZW5kZXJlci5nKGUpLmF0dHIoe3Zpc2liaWxpdHk6bix6SW5kZXg6aXx8LjF9KS5hZGQobykpLGFbcj8iYXR0ciI6ImFuaW1hdGUiXSh0aGlzLmdldFBsb3RCb3goKSksYX0sZ2V0UGxvdEJveDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY2hhcnQsZT10aGlzLnhBeGlzLG49dGhpcy55QXhpcztyZXR1cm4gdC5pbnZlcnRlZCYmKGU9bixuPXRoaXMueEF4aXMpLHt0cmFuc2xhdGVYOmU/ZS5sZWZ0OnQucGxvdExlZnQsdHJhbnNsYXRlWTpuP24udG9wOnQucGxvdFRvcCxzY2FsZVg6MSxzY2FsZVk6MX19LHJlbmRlcjpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcyxuPWUuY2hhcnQsaT1lLm9wdGlvbnMsbz1pLmFuaW1hdGlvbixhPW8mJiEhZS5hbmltYXRlJiZuLnJlbmRlcmVyLmlzU1ZHJiZ3KG8uZHVyYXRpb24sNTAwKXx8MCxyPWUudmlzaWJsZT9WdDpKdCxzPWkuekluZGV4LGw9ZS5oYXNSZW5kZXJlZCxjPW4uc2VyaWVzR3JvdXA7dD1lLnBsb3RHcm91cCgiZ3JvdXAiLCJzZXJpZXMiLHIscyxjKSxlLm1hcmtlckdyb3VwPWUucGxvdEdyb3VwKCJtYXJrZXJHcm91cCIsIm1hcmtlcnMiLHIscyxjKSxhJiZlLmFuaW1hdGUoITApLGUuZ2V0QXR0cmlicygpLHQuaW52ZXJ0ZWQ9ISFlLmlzQ2FydGVzaWFuJiZuLmludmVydGVkLGUuZHJhd0dyYXBoJiYoZS5kcmF3R3JhcGgoKSxlLmNsaXBOZWcoKSksbWUoZS5wb2ludHMsZnVuY3Rpb24odCl7dC5yZWRyYXcmJnQucmVkcmF3KCl9KSxlLmRyYXdEYXRhTGFiZWxzJiZlLmRyYXdEYXRhTGFiZWxzKCksZS52aXNpYmxlJiZlLmRyYXdQb2ludHMoKSxlLmRyYXdUcmFja2VyJiZlLm9wdGlvbnMuZW5hYmxlTW91c2VUcmFja2luZyE9PSExJiZlLmRyYXdUcmFja2VyKCksbi5pbnZlcnRlZCYmZS5pbnZlcnRHcm91cHMoKSxpLmNsaXA9PT0hMXx8ZS5zaGFyZWRDbGlwS2V5fHxsfHx0LmNsaXAobi5jbGlwUmVjdCksYSYmZS5hbmltYXRlKCksbHx8KGE/ZS5hbmltYXRpb25UaW1lb3V0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlLmFmdGVyQW5pbWF0ZSgpfSxhKTplLmFmdGVyQW5pbWF0ZSgpKSxlLmlzRGlydHk9ZS5pc0RpcnR5RGF0YT0hMSxlLmhhc1JlbmRlcmVkPSEwfSxyZWRyYXc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5jaGFydCxuPXQuaXNEaXJ0eURhdGEsaT10Lmdyb3VwLG89dC54QXhpcyxhPXQueUF4aXM7aSYmKGUuaW52ZXJ0ZWQmJmkuYXR0cih7d2lkdGg6ZS5wbG90V2lkdGgsaGVpZ2h0OmUucGxvdEhlaWdodH0pLGkuYW5pbWF0ZSh7dHJhbnNsYXRlWDp3KG8mJm8ubGVmdCxlLnBsb3RMZWZ0KSx0cmFuc2xhdGVZOncoYSYmYS50b3AsZS5wbG90VG9wKX0pKSx0LnRyYW5zbGF0ZSgpLHQuc2V0VG9vbHRpcFBvaW50cyYmdC5zZXRUb29sdGlwUG9pbnRzKCEwKSx0LnJlbmRlcigpLG4mJl9lKHQsInVwZGF0ZWREYXRhIil9fSwkLnByb3RvdHlwZT17ZGVzdHJveTpmdW5jdGlvbigpe04odGhpcyx0aGlzLmF4aXMpfSxyZW5kZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb25zLG49ZS5mb3JtYXQsaT1uP2oobix0aGlzKTplLmZvcm1hdHRlci5jYWxsKHRoaXMpO3RoaXMubGFiZWw/dGhpcy5sYWJlbC5hdHRyKHt0ZXh0OmksdmlzaWJpbGl0eTpKdH0pOnRoaXMubGFiZWw9dGhpcy5heGlzLmNoYXJ0LnJlbmRlcmVyLnRleHQoaSxudWxsLG51bGwsZS51c2VIVE1MKS5jc3MoZS5zdHlsZSkuYXR0cih7YWxpZ246dGhpcy50ZXh0QWxpZ24scm90YXRpb246ZS5yb3RhdGlvbix2aXNpYmlsaXR5Okp0fSkuYWRkKHQpfSxzZXRPZmZzZXQ6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMsbz1pLmF4aXMsYT1vLmNoYXJ0LHI9YS5pbnZlcnRlZCxzPXRoaXMuaXNOZWdhdGl2ZSxsPW8udHJhbnNsYXRlKG8udXNlUGVyY2VudGFnZT8xMDA6dGhpcy50b3RhbCwwLDAsMCwxKSxjPW8udHJhbnNsYXRlKDApLHA9a3QobC1jKSxkPWEueEF4aXNbMF0udHJhbnNsYXRlKHRoaXMueCkrdCxoPWEucGxvdEhlaWdodCx1PXt4OnI/cz9sOmwtcDpkLHk6cj9oLWQtZTpzP2gtbC1wOmgtbCx3aWR0aDpyP3A6ZSxoZWlnaHQ6cj9lOnB9LG09dGhpcy5sYWJlbDttJiYobS5hbGlnbih0aGlzLmFsaWduT3B0aW9ucyxudWxsLHUpLG49bS5hbGlnbkF0dHIsbVt0aGlzLm9wdGlvbnMuY3JvcD09PSExfHxhLmlzSW5zaWRlUGxvdChuLngsbi55KT8ic2hvdyI6ImhpZGUiXSghMCkpfX0sTS5wcm90b3R5cGUuYnVpbGRTdGFja3M9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnNlcmllcyxlPXcodGhpcy5vcHRpb25zLnJldmVyc2VkU3RhY2tzLCEwKSxuPXQubGVuZ3RoO2lmKCF0aGlzLmlzWEF4aXMpe2Zvcih0aGlzLnVzZVBlcmNlbnRhZ2U9ITE7bi0tOyl0W2U/bjp0Lmxlbmd0aC1uLTFdLnNldFN0YWNrZWRQb2ludHMoKTtpZih0aGlzLnVzZVBlcmNlbnRhZ2UpZm9yKG49MDtuPHQubGVuZ3RoO24rKyl0W25dLnNldFBlcmNlbnRTdGFja3MoKX19LE0ucHJvdG90eXBlLnJlbmRlclN0YWNrVG90YWxzPWZ1bmN0aW9uKCl7dmFyIHQsZSxuLGk9dGhpcyxvPWkuY2hhcnQsYT1vLnJlbmRlcmVyLHI9aS5zdGFja3Mscz1pLnN0YWNrVG90YWxHcm91cDtzfHwoaS5zdGFja1RvdGFsR3JvdXA9cz1hLmcoInN0YWNrLWxhYmVscyIpLmF0dHIoe3Zpc2liaWxpdHk6VnQsekluZGV4OjZ9KS5hZGQoKSkscy50cmFuc2xhdGUoby5wbG90TGVmdCxvLnBsb3RUb3ApO2Zvcih0IGluIHIpe2U9clt0XTtmb3IobiBpbiBlKWVbbl0ucmVuZGVyKHMpfX0sWGUucHJvdG90eXBlLnNldFN0YWNrZWRQb2ludHM9ZnVuY3Rpb24oKXtpZih0aGlzLm9wdGlvbnMuc3RhY2tpbmcmJih0aGlzLnZpc2libGU9PT0hMHx8dGhpcy5jaGFydC5vcHRpb25zLmNoYXJ0Lmlnbm9yZUhpZGRlblNlcmllcz09PSExKSl7dmFyIHQsZSxuLGksbyxhLHIscyxsPXRoaXMsYz1sLnByb2Nlc3NlZFhEYXRhLHA9bC5wcm9jZXNzZWRZRGF0YSxkPVtdLGg9cC5sZW5ndGgsdT1sLm9wdGlvbnMsbT11LnRocmVzaG9sZCxmPXUuc3RhY2ssZz11LnN0YWNraW5nLHc9bC5zdGFja0tleSx4PSItIit3LGI9bC5uZWdTdGFja3MsXz1sLnlBeGlzLHY9Xy5zdGFja3MseT1fLm9sZFN0YWNrcztmb3IoYT0wO2E8aDthKyspcj1jW2FdLHM9cFthXSxvPWwuaW5kZXgrIiwiK2EsdD1iJiZzPG0saT10P3g6dyx2W2ldfHwodltpXT17fSksdltpXVtyXXx8KHlbaV0mJnlbaV1bcl0/KHZbaV1bcl09eVtpXVtyXSx2W2ldW3JdLnRvdGFsPW51bGwpOnZbaV1bcl09bmV3ICQoXyxfLm9wdGlvbnMuc3RhY2tMYWJlbHMsdCxyLGYpKSxlPXZbaV1bcl0sZS5wb2ludHNbb109W2UuY3VtfHwwXSwicGVyY2VudCI9PT1nPyhuPXQ/dzp4LGImJnZbbl0mJnZbbl1bcl0/KG49dltuXVtyXSxlLnRvdGFsPW4udG90YWw9dnQobi50b3RhbCxlLnRvdGFsKStrdChzKXx8MCk6ZS50b3RhbD1CKGUudG90YWwrKGt0KHMpfHwwKSkpOmUudG90YWw9QihlLnRvdGFsKyhzfHwwKSksZS5jdW09KGUuY3VtfHwwKSsoc3x8MCksZS5wb2ludHNbb10ucHVzaChlLmN1bSksZFthXT1lLmN1bTsicGVyY2VudCI9PT1nJiYoXy51c2VQZXJjZW50YWdlPSEwKSx0aGlzLnN0YWNrZWRZRGF0YT1kLF8ub2xkU3RhY2tzPXt9fX0sWGUucHJvdG90eXBlLnNldFBlcmNlbnRTdGFja3M9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5zdGFja0tleSxuPXQueUF4aXMuc3RhY2tzLGk9dC5wcm9jZXNzZWRYRGF0YTttZShbZSwiLSIrZV0sZnVuY3Rpb24oZSl7Zm9yKHZhciBvLGEscixzLGw9aS5sZW5ndGg7bC0tOylvPWlbbF0sYT1uW2VdJiZuW2VdW29dLHI9YSYmYS5wb2ludHNbdC5pbmRleCsiLCIrbF0sciYmKHM9YS50b3RhbD8xMDAvYS50b3RhbDowLHJbMF09QihyWzBdKnMpLHJbMV09QihyWzFdKnMpLHQuc3RhY2tlZFlEYXRhW2xdPXJbMV0pfSl9LG8oUi5wcm90b3R5cGUse2FkZFNlcmllczpmdW5jdGlvbih0LGUsbil7dmFyIGksbz10aGlzO3JldHVybiB0JiYoZT13KGUsITApLF9lKG8sImFkZFNlcmllcyIse29wdGlvbnM6dH0sZnVuY3Rpb24oKXtpPW8uaW5pdFNlcmllcyh0KSxvLmlzRGlydHlMZWdlbmQ9ITAsby5saW5rU2VyaWVzKCksZSYmby5yZWRyYXcobil9KSksaX0sYWRkQXhpczpmdW5jdGlvbih0LGUsbixpKXt2YXIgbyxyPWU/InhBeGlzIjoieUF4aXMiLHM9dGhpcy5vcHRpb25zO289bmV3IE0odGhpcyxhKHQse2luZGV4OnRoaXNbcl0ubGVuZ3RoLGlzWDplfSkpLHNbcl09ZyhzW3JdfHx7fSksc1tyXS5wdXNoKHQpLHcobiwhMCkmJnRoaXMucmVkcmF3KGkpfSxzaG93TG9hZGluZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5vcHRpb25zLGk9ZS5sb2FkaW5nRGl2LGE9bi5sb2FkaW5nLHI9ZnVuY3Rpb24oKXtpJiZ4KGkse2xlZnQ6ZS5wbG90TGVmdCtLdCx0b3A6ZS5wbG90VG9wK0t0LHdpZHRoOmUucGxvdFdpZHRoK0t0LGhlaWdodDplLnBsb3RIZWlnaHQrS3R9KX07aXx8KGUubG9hZGluZ0Rpdj1pPWIoWXQse2NsYXNzTmFtZTpadCsibG9hZGluZyJ9LG8oYS5zdHlsZSx7ekluZGV4OjEwLGRpc3BsYXk6UXR9KSxlLmNvbnRhaW5lciksZS5sb2FkaW5nU3Bhbj1iKCJzcGFuIixudWxsLGEubGFiZWxTdHlsZSxpKSx4ZShlLCJyZWRyYXciLHIpKSxlLmxvYWRpbmdTcGFuLmlubmVySFRNTD10fHxuLmxhbmcubG9hZGluZyxlLmxvYWRpbmdTaG93bnx8KHgoaSx7b3BhY2l0eTowLGRpc3BsYXk6IiJ9KSx5ZShpLHtvcGFjaXR5OmEuc3R5bGUub3BhY2l0eX0se2R1cmF0aW9uOmEuc2hvd0R1cmF0aW9ufHwwfSksZS5sb2FkaW5nU2hvd249ITApLHIoKX0saGlkZUxvYWRpbmc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnMsZT10aGlzLmxvYWRpbmdEaXY7ZSYmeWUoZSx7b3BhY2l0eTowfSx7ZHVyYXRpb246dC5sb2FkaW5nLmhpZGVEdXJhdGlvbnx8MTAwLGNvbXBsZXRlOmZ1bmN0aW9uKCl7eChlLHtkaXNwbGF5OlF0fSl9fSksdGhpcy5sb2FkaW5nU2hvd249ITF9fSksbyhHZS5wcm90b3R5cGUse3VwZGF0ZTpmdW5jdGlvbih0LGUsbixpKXtmdW5jdGlvbiBvKCl7ci5hcHBseU9wdGlvbnModCksbCh0KSYmIWModCkmJihyLnJlZHJhdz1mdW5jdGlvbigpe3AmJih0JiZ0Lm1hcmtlciYmdC5tYXJrZXIuc3ltYm9sP3IuZ3JhcGhpYz1wLmRlc3Ryb3koKTpwLmF0dHIoci5wb2ludEF0dHJbci5zdGF0ZXx8IiJdKSksdCYmdC5kYXRhTGFiZWxzJiZyLmRhdGFMYWJlbCYmKHIuZGF0YUxhYmVsPXIuZGF0YUxhYmVsLmRlc3Ryb3koKSksci5yZWRyYXc9bnVsbH0pLGE9ci5pbmRleCxzLnVwZGF0ZVBhcmFsbGVsQXJyYXlzKHIsYSksaC5kYXRhW2FdPXIub3B0aW9ucyxzLmlzRGlydHk9cy5pc0RpcnR5RGF0YT0hMCwhcy5maXhlZEJveCYmcy5oYXNDYXJ0ZXNpYW5TZXJpZXMmJihkLmlzRGlydHlCb3g9ITApLCJwb2ludCI9PT1oLmxlZ2VuZFR5cGUmJmQubGVnZW5kLmRlc3Ryb3lJdGVtKHIpLGUmJmQucmVkcmF3KG4pfXZhciBhLHI9dGhpcyxzPXIuc2VyaWVzLHA9ci5ncmFwaGljLGQ9cy5jaGFydCxoPXMub3B0aW9ucztlPXcoZSwhMCksaT09PSExP28oKTpyLmZpcmVQb2ludEV2ZW50KCJ1cGRhdGUiLHtvcHRpb25zOnR9LG8pfSxyZW1vdmU6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMsbz1pLnNlcmllcyxhPW8ucG9pbnRzLHI9by5jaGFydCxzPW8uZGF0YTtxKGUsciksdD13KHQsITApLGkuZmlyZVBvaW50RXZlbnQoInJlbW92ZSIsbnVsbCxmdW5jdGlvbigpe249dWUoaSxzKSxzLmxlbmd0aD09PWEubGVuZ3RoJiZhLnNwbGljZShuLDEpLHMuc3BsaWNlKG4sMSksby5vcHRpb25zLmRhdGEuc3BsaWNlKG4sMSksby51cGRhdGVQYXJhbGxlbEFycmF5cyhpLCJzcGxpY2UiLG4sMSksaS5kZXN0cm95KCksby5pc0RpcnR5PSEwLG8uaXNEaXJ0eURhdGE9ITAsdCYmci5yZWRyYXcoKX0pfX0pLG8oWGUucHJvdG90eXBlLHthZGRQb2ludDpmdW5jdGlvbih0LGUsbixpKXt2YXIgbyxhLHIscyxsPXRoaXMsYz1sLm9wdGlvbnMscD1sLmRhdGEsZD1sLmdyYXBoLGg9bC5hcmVhLHU9bC5jaGFydCxtPWwueEF4aXMmJmwueEF4aXMubmFtZXMsZj1kJiZkLnNoaWZ0fHwwLGc9Yy5kYXRhLHg9bC54RGF0YTtpZihxKGksdSksbiYmbWUoW2QsaCxsLmdyYXBoTmVnLGwuYXJlYU5lZ10sZnVuY3Rpb24odCl7dCYmKHQuc2hpZnQ9ZisxKX0pLGgmJihoLmlzQXJlYT0hMCksZT13KGUsITApLG89e3NlcmllczpsfSxsLnBvaW50Q2xhc3MucHJvdG90eXBlLmFwcGx5T3B0aW9ucy5hcHBseShvLFt0XSkscj1vLngscz14Lmxlbmd0aCxsLnJlcXVpcmVTb3J0aW5nJiZyPHhbcy0xXSlmb3IoYT0hMDtzJiZ4W3MtMV0+cjspcy0tO2wudXBkYXRlUGFyYWxsZWxBcnJheXMobywic3BsaWNlIixzLDAsMCksbC51cGRhdGVQYXJhbGxlbEFycmF5cyhvLHMpLG0mJm8ubmFtZSYmKG1bcl09by5uYW1lKSxnLnNwbGljZShzLDAsdCksYSYmKGwuZGF0YS5zcGxpY2UocywwLG51bGwpLGwucHJvY2Vzc0RhdGEoKSksInBvaW50Ij09PWMubGVnZW5kVHlwZSYmbC5nZW5lcmF0ZVBvaW50cygpLG4mJihwWzBdJiZwWzBdLnJlbW92ZT9wWzBdLnJlbW92ZSghMSk6KHAuc2hpZnQoKSxsLnVwZGF0ZVBhcmFsbGVsQXJyYXlzKG8sInNoaWZ0IiksZy5zaGlmdCgpKSksbC5pc0RpcnR5PSEwLGwuaXNEaXJ0eURhdGE9ITAsZSYmKGwuZ2V0QXR0cmlicygpLHUucmVkcmF3KCkpfSxyZW1vdmU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLGk9bi5jaGFydDt0PXcodCwhMCksbi5pc1JlbW92aW5nfHwobi5pc1JlbW92aW5nPSEwLF9lKG4sInJlbW92ZSIsbnVsbCxmdW5jdGlvbigpe24uZGVzdHJveSgpLGkuaXNEaXJ0eUxlZ2VuZD1pLmlzRGlydHlCb3g9ITAsaS5saW5rU2VyaWVzKCksdCYmaS5yZWRyYXcoZSl9KSksbi5pc1JlbW92aW5nPSExfSx1cGRhdGU6ZnVuY3Rpb24odCxlKXt2YXIgbixpPXRoaXMscj10aGlzLmNoYXJ0LHM9dGhpcy51c2VyT3B0aW9ucyxsPXRoaXMudHlwZSxjPXNlW2xdLnByb3RvdHlwZSxwPVsiZ3JvdXAiLCJtYXJrZXJHcm91cCIsImRhdGFMYWJlbHNHcm91cCJdO21lKHAsZnVuY3Rpb24odCl7cFt0XT1pW3RdLGRlbGV0ZSBpW3RdfSksdD1hKHMse2FuaW1hdGlvbjohMSxpbmRleDp0aGlzLmluZGV4LHBvaW50U3RhcnQ6dGhpcy54RGF0YVswXX0se2RhdGE6dGhpcy5vcHRpb25zLmRhdGF9LHQpLHRoaXMucmVtb3ZlKCExKTtmb3IobiBpbiBjKWMuaGFzT3duUHJvcGVydHkobikmJih0aGlzW25dPUgpO28odGhpcyxzZVt0LnR5cGV8fGxdLnByb3RvdHlwZSksbWUocCxmdW5jdGlvbih0KXtpW3RdPXBbdF19KSx0aGlzLmluaXQocix0KSxyLmxpbmtTZXJpZXMoKSx3KGUsITApJiZyLnJlZHJhdyghMSl9fSksbyhNLnByb3RvdHlwZSx7dXBkYXRlOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5jaGFydDt0PW4ub3B0aW9uc1t0aGlzLmNvbGxdW3RoaXMub3B0aW9ucy5pbmRleF09YSh0aGlzLnVzZXJPcHRpb25zLHQpLHRoaXMuZGVzdHJveSghMCksdGhpcy5fYWRkZWRQbG90TEI9SCx0aGlzLmluaXQobixvKHQse2V2ZW50czpIfSkpLG4uaXNEaXJ0eUJveD0hMCx3KGUsITApJiZuLnJlZHJhdygpfSxyZW1vdmU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMuY2hhcnQsbj10aGlzLmNvbGwsaT10aGlzLnNlcmllcyxvPWkubGVuZ3RoO28tLTspaVtvXSYmaVtvXS5yZW1vdmUoITEpO3UoZS5heGVzLHRoaXMpLHUoZVtuXSx0aGlzKSxlLm9wdGlvbnNbbl0uc3BsaWNlKHRoaXMub3B0aW9ucy5pbmRleCwxKSxtZShlW25dLGZ1bmN0aW9uKHQsZSl7dC5vcHRpb25zLmluZGV4PWV9KSx0aGlzLmRlc3Ryb3koKSxlLmlzRGlydHlCb3g9ITAsdyh0LCEwKSYmZS5yZWRyYXcoKX0sc2V0VGl0bGU6ZnVuY3Rpb24odCxlKXt0aGlzLnVwZGF0ZSh7dGl0bGU6dH0sZSl9LHNldENhdGVnb3JpZXM6ZnVuY3Rpb24odCxlKXt0aGlzLnVwZGF0ZSh7Y2F0ZWdvcmllczp0fSxlKX19KTt2YXIgSmU9XyhYZSk7c2UubGluZT1KZSxqZS5hcmVhPWEoQ2Use3RocmVzaG9sZDowfSk7dmFyIFplPV8oWGUse3R5cGU6ImFyZWEiLGdldFNlZ21lbnRzOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksbz10aGlzLGE9W10scj1bXSxzPVtdLGw9dGhpcy54QXhpcyxjPXRoaXMueUF4aXMscD1jLnN0YWNrc1t0aGlzLnN0YWNrS2V5XSxkPXt9LGg9dGhpcy5wb2ludHMsdT10aGlzLm9wdGlvbnMuY29ubmVjdE51bGxzO2lmKHRoaXMub3B0aW9ucy5zdGFja2luZyYmIXRoaXMuY3JvcHBlZCl7Zm9yKG49MDtuPGgubGVuZ3RoO24rKylkW2hbbl0ueF09aFtuXTtmb3IoaSBpbiBwKW51bGwhPT1wW2ldLnRvdGFsJiZzLnB1c2goK2kpO3Muc29ydChmdW5jdGlvbih0LGUpe3JldHVybiB0LWV9KSxtZShzLGZ1bmN0aW9uKGkpe3ZhciBhLHM9MDtpZighdXx8ZFtpXSYmbnVsbCE9PWRbaV0ueSlpZihkW2ldKXIucHVzaChkW2ldKTtlbHNle2ZvcihuPW8uaW5kZXg7bjw9Yy5zZXJpZXMubGVuZ3RoO24rKylpZihhPXBbaV0ucG9pbnRzW24rIiwiK2ldKXtzPWFbMV07YnJlYWt9dD1sLnRyYW5zbGF0ZShpKSxlPWMudG9QaXhlbHMocywhMCksci5wdXNoKHt5Om51bGwscGxvdFg6dCxjbGllbnRYOnQscGxvdFk6ZSx5Qm90dG9tOmUsb25Nb3VzZU92ZXI6UnR9KX19KSxyLmxlbmd0aCYmYS5wdXNoKHIpfWVsc2UgWGUucHJvdG90eXBlLmdldFNlZ21lbnRzLmNhbGwodGhpcyksYT10aGlzLnNlZ21lbnRzO3RoaXMuc2VnbWVudHM9YX0sZ2V0U2VnbWVudFBhdGg6ZnVuY3Rpb24odCl7dmFyIGUsbixpPVhlLnByb3RvdHlwZS5nZXRTZWdtZW50UGF0aC5jYWxsKHRoaXMsdCksbz1bXS5jb25jYXQoaSksYT10aGlzLm9wdGlvbnMscj1pLmxlbmd0aCxzPXRoaXMueUF4aXMuZ2V0VGhyZXNob2xkKGEudGhyZXNob2xkKTtpZigzPT09ciYmby5wdXNoKGVlLGlbMV0saVsyXSksYS5zdGFja2luZyYmIXRoaXMuY2xvc2VkU3RhY2tzKWZvcihlPXQubGVuZ3RoLTE7ZT49MDtlLS0pbj13KHRbZV0ueUJvdHRvbSxzKSxlPHQubGVuZ3RoLTEmJmEuc3RlcCYmby5wdXNoKHRbZSsxXS5wbG90WCxuKSxvLnB1c2godFtlXS5wbG90WCxuKTtlbHNlIHRoaXMuY2xvc2VTZWdtZW50KG8sdCxzKTtyZXR1cm4gdGhpcy5hcmVhUGF0aD10aGlzLmFyZWFQYXRoLmNvbmNhdChvKSxpfSxjbG9zZVNlZ21lbnQ6ZnVuY3Rpb24odCxlLG4pe3QucHVzaChlZSxlW2UubGVuZ3RoLTFdLnBsb3RYLG4sZWUsZVswXS5wbG90WCxuKX0sZHJhd0dyYXBoOmZ1bmN0aW9uKCl7dGhpcy5hcmVhUGF0aD1bXSxYZS5wcm90b3R5cGUuZHJhd0dyYXBoLmFwcGx5KHRoaXMpO3ZhciB0PXRoaXMsZT10aGlzLmFyZWFQYXRoLG49dGhpcy5vcHRpb25zLGk9bi5uZWdhdGl2ZUNvbG9yLG89bi5uZWdhdGl2ZUZpbGxDb2xvcixhPVtbImFyZWEiLHRoaXMuY29sb3Isbi5maWxsQ29sb3JdXTsoaXx8bykmJmEucHVzaChbImFyZWFOZWciLGksb10pLG1lKGEsZnVuY3Rpb24oaSl7dmFyIG89aVswXSxhPXRbb107YT9hLmFuaW1hdGUoe2Q6ZX0pOnRbb109dC5jaGFydC5yZW5kZXJlci5wYXRoKGUpLmF0dHIoe2ZpbGw6dyhpWzJdLEFlKGlbMV0pLnNldE9wYWNpdHkodyhuLmZpbGxPcGFjaXR5LC43NSkpLmdldCgpKSx6SW5kZXg6MH0pLmFkZCh0Lmdyb3VwKX0pfSxkcmF3TGVnZW5kU3ltYm9sOlVlLmRyYXdSZWN0YW5nbGV9KTtzZS5hcmVhPVplLGplLnNwbGluZT1hKENlKTt2YXIgVmU9XyhYZSx7dHlwZToic3BsaW5lIixnZXRQb2ludFNwbGluZTpmdW5jdGlvbih0LGUsbil7dmFyIGksbyxhLHIscyxsPTEuNSxjPWwrMSxwPWUucGxvdFgsZD1lLnBsb3RZLGg9dFtuLTFdLHU9dFtuKzFdO2lmKGgmJnUpe3ZhciBtLGY9aC5wbG90WCxnPWgucGxvdFksdz11LnBsb3RYLHg9dS5wbG90WTtpPShsKnArZikvYyxvPShsKmQrZykvYyxhPShsKnArdykvYyxyPShsKmQreCkvYyxtPShyLW8pKihhLXApLyhhLWkpK2QtcixvKz1tLHIrPW0sbz5nJiZvPmQ/KG89dnQoZyxkKSxyPTIqZC1vKTpvPGcmJm88ZCYmKG89eXQoZyxkKSxyPTIqZC1vKSxyPngmJnI+ZD8ocj12dCh4LGQpLG89MipkLXIpOnI8eCYmcjxkJiYocj15dCh4LGQpLG89MipkLXIpLGUucmlnaHRDb250WD1hLGUucmlnaHRDb250WT1yfXJldHVybiBuPyhzPVsiQyIsaC5yaWdodENvbnRYfHxoLnBsb3RYLGgucmlnaHRDb250WXx8aC5wbG90WSxpfHxwLG98fGQscCxkXSxoLnJpZ2h0Q29udFg9aC5yaWdodENvbnRZPW51bGwpOnM9W3RlLHAsZF0sc319KTtzZS5zcGxpbmU9VmUsamUuYXJlYXNwbGluZT1hKGplLmFyZWEpO3ZhciBLZT1aZS5wcm90b3R5cGUsUWU9XyhWZSx7dHlwZToiYXJlYXNwbGluZSIsY2xvc2VkU3RhY2tzOiEwLGdldFNlZ21lbnRQYXRoOktlLmdldFNlZ21lbnRQYXRoLGNsb3NlU2VnbWVudDpLZS5jbG9zZVNlZ21lbnQsZHJhd0dyYXBoOktlLmRyYXdHcmFwaCxkcmF3TGVnZW5kU3ltYm9sOlVlLmRyYXdSZWN0YW5nbGV9KTtzZS5hcmVhc3BsaW5lPVFlLGplLmNvbHVtbj1hKENlLHtib3JkZXJDb2xvcjoiI0ZGRkZGRiIsYm9yZGVyUmFkaXVzOjAsZ3JvdXBQYWRkaW5nOi4yLG1hcmtlcjpudWxsLHBvaW50UGFkZGluZzouMSxtaW5Qb2ludExlbmd0aDowLGNyb3BUaHJlc2hvbGQ6NTAscG9pbnRSYW5nZTpudWxsLHN0YXRlczp7aG92ZXI6e2JyaWdodG5lc3M6LjEsc2hhZG93OiExLGhhbG86ITF9LHNlbGVjdDp7Y29sb3I6IiNDMEMwQzAiLGJvcmRlckNvbG9yOiIjMDAwMDAwIixzaGFkb3c6ITF9fSxkYXRhTGFiZWxzOnthbGlnbjpudWxsLHZlcnRpY2FsQWxpZ246bnVsbCx5Om51bGx9LHN0aWNreVRyYWNraW5nOiExLHRvb2x0aXA6e2Rpc3RhbmNlOjZ9LHRocmVzaG9sZDowfSk7dmFyIHRuPV8oWGUse3R5cGU6ImNvbHVtbiIscG9pbnRBdHRyVG9PcHRpb25zOntzdHJva2U6ImJvcmRlckNvbG9yIixmaWxsOiJjb2xvciIscjoiYm9yZGVyUmFkaXVzIn0sY3JvcFNob3VsZGVyOjAsdHJhY2tlckdyb3VwczpbImdyb3VwIiwiZGF0YUxhYmVsc0dyb3VwIl0sbmVnU3RhY2tzOiEwLGluaXQ6ZnVuY3Rpb24oKXtYZS5wcm90b3R5cGUuaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIHQ9dGhpcyxlPXQuY2hhcnQ7ZS5oYXNSZW5kZXJlZCYmbWUoZS5zZXJpZXMsZnVuY3Rpb24oZSl7ZS50eXBlPT09dC50eXBlJiYoZS5pc0RpcnR5PSEwKX0pfSxnZXRDb2x1bW5NZXRyaWNzOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXMsaT1uLm9wdGlvbnMsbz1uLnhBeGlzLGE9bi55QXhpcyxyPW8ucmV2ZXJzZWQscz17fSxsPTA7aS5ncm91cGluZz09PSExP2w9MTptZShuLmNoYXJ0LnNlcmllcyxmdW5jdGlvbihpKXt2YXIgbz1pLm9wdGlvbnMscj1pLnlBeGlzO2kudHlwZT09PW4udHlwZSYmaS52aXNpYmxlJiZhLmxlbj09PXIubGVuJiZhLnBvcz09PXIucG9zJiYoby5zdGFja2luZz8odD1pLnN0YWNrS2V5LHNbdF09PT1IJiYoc1t0XT1sKyspLGU9c1t0XSk6by5ncm91cGluZyE9PSExJiYoZT1sKyspLGkuY29sdW1uSW5kZXg9ZSl9KTt2YXIgYz15dChrdChvLnRyYW5zQSkqKG8ub3JkaW5hbFNsb3BlfHxpLnBvaW50UmFuZ2V8fG8uY2xvc2VzdFBvaW50UmFuZ2V8fG8udGlja0ludGVydmFsfHwxKSxvLmxlbikscD1jKmkuZ3JvdXBQYWRkaW5nLGQ9Yy0yKnAsaD1kL2wsdT1pLnBvaW50V2lkdGgsZj1tKHUpPyhoLXUpLzI6aCppLnBvaW50UGFkZGluZyxnPXcodSxoLTIqZikseD0ocj9sLShuLmNvbHVtbkluZGV4fHwwKTpuLmNvbHVtbkluZGV4KXx8MCxiPWYrKHAreCpoLWMvMikqKHI/LTE6MSk7cmV0dXJuIG4uY29sdW1uTWV0cmljcz17d2lkdGg6ZyxvZmZzZXQ6Yn19LHRyYW5zbGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNoYXJ0LG49dC5vcHRpb25zLGk9dC5ib3JkZXJXaWR0aD13KG4uYm9yZGVyV2lkdGgsdC5hY3RpdmVQb2ludENvdW50Pi41KnQueEF4aXMubGVuPzA6MSksbz10LnlBeGlzLGE9bi50aHJlc2hvbGQscj10LnRyYW5zbGF0ZWRUaHJlc2hvbGQ9by5nZXRUaHJlc2hvbGQoYSkscz13KG4ubWluUG9pbnRMZW5ndGgsNSksbD10LmdldENvbHVtbk1ldHJpY3MoKSxjPWwud2lkdGgscD10LmJhclc9dnQoYywxKzIqaSksZD10LnBvaW50WE9mZnNldD1sLm9mZnNldCxoPS0oaSUyPy41OjApLHU9aSUyPy41OjE7ZS5yZW5kZXJlci5pc1ZNTCYmZS5pbnZlcnRlZCYmKHUrPTEpLG4ucG9pbnRQYWRkaW5nJiYocD1fdChwKSksWGUucHJvdG90eXBlLnRyYW5zbGF0ZS5hcHBseSh0KSxtZSh0LnBvaW50cyxmdW5jdGlvbihuKXt2YXIgaSxhLGwsbT13KG4ueUJvdHRvbSxyKSxmPXl0KHZ0KC05OTktbSxuLnBsb3RZKSxvLmxlbis5OTkrbSksZz1uLnBsb3RYK2QseD1wLGI9eXQoZixtKSxfPXZ0KGYsbSktYjtrdChfKTxzJiZzJiYoXz1zLGI9eHQoa3QoYi1yKT5zP20tczpyLShvLnRyYW5zbGF0ZShuLnksMCwxLDAsMSk8PXI/czowKSkpLG4uYmFyWD1nLG4ucG9pbnRXaWR0aD1jLG4udG9vbHRpcFBvcz1lLmludmVydGVkP1tvLmxlbi1mLHQueEF4aXMubGVuLWcteC8yXTpbZyt4LzIsZitvLnBvcy1lLnBsb3RUb3BdLGk9eHQoZyt4KStoLGc9eHQoZykraCx4PWktZyxsPWt0KGIpPC41LGE9eHQoYitfKSt1LGI9eHQoYikrdSxfPWEtYixsJiYoYi09MSxfKz0xKSxuLnNoYXBlVHlwZT0icmVjdCIsbi5zaGFwZUFyZ3M9e3g6Zyx5OmIsd2lkdGg6eCxoZWlnaHQ6X319KX0sZ2V0U3ltYm9sOlJ0LGRyYXdMZWdlbmRTeW1ib2w6VWUuZHJhd1JlY3RhbmdsZSxkcmF3R3JhcGg6UnQsZHJhd1BvaW50czpmdW5jdGlvbigpe3ZhciB0LGUsbj10aGlzLGk9dGhpcy5jaGFydCxvPW4ub3B0aW9ucyxyPWkucmVuZGVyZXIscz1vLmFuaW1hdGlvbkxpbWl0fHwyNTA7bWUobi5wb2ludHMsZnVuY3Rpb24obCl7dmFyIGMscD1sLnBsb3RZLGQ9bC5ncmFwaGljO3A9PT1IfHxpc05hTihwKXx8bnVsbD09PWwueT9kJiYobC5ncmFwaGljPWQuZGVzdHJveSgpKToodD1sLnNoYXBlQXJncyxjPW0obi5ib3JkZXJXaWR0aCk/eyJzdHJva2Utd2lkdGgiOm4uYm9yZGVyV2lkdGh9Ont9LGU9bC5wb2ludEF0dHJbbC5zZWxlY3RlZD9hZTppZV18fG4ucG9pbnRBdHRyW2llXSxkPyhrZShkKSxkLmF0dHIoYylbaS5wb2ludENvdW50PHM/ImFuaW1hdGUiOiJhdHRyIl0oYSh0KSkpOmwuZ3JhcGhpYz1kPXJbbC5zaGFwZVR5cGVdKHQpLmF0dHIoZSkuYXR0cihjKS5hZGQobi5ncm91cCkuc2hhZG93KG8uc2hhZG93LG51bGwsby5zdGFja2luZyYmIW8uYm9yZGVyUmFkaXVzKSl9KX0sYW5pbWF0ZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsaT10aGlzLnlBeGlzLG89bi5vcHRpb25zLGE9dGhpcy5jaGFydC5pbnZlcnRlZCxyPXt9O0V0JiYodD8oci5zY2FsZVk9LjAwMSxlPXl0KGkucG9zK2kubGVuLHZ0KGkucG9zLGkudG9QaXhlbHMoby50aHJlc2hvbGQpKSksYT9yLnRyYW5zbGF0ZVg9ZS1pLmxlbjpyLnRyYW5zbGF0ZVk9ZSxuLmdyb3VwLmF0dHIocikpOihyLnNjYWxlWT0xLHJbYT8idHJhbnNsYXRlWCI6InRyYW5zbGF0ZVkiXT1pLnBvcyxuLmdyb3VwLmFuaW1hdGUocixuLm9wdGlvbnMuYW5pbWF0aW9uKSxuLmFuaW1hdGU9bnVsbCkpfSxyZW1vdmU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5jaGFydDtlLmhhc1JlbmRlcmVkJiZtZShlLnNlcmllcyxmdW5jdGlvbihlKXtlLnR5cGU9PT10LnR5cGUmJihlLmlzRGlydHk9ITApfSksWGUucHJvdG90eXBlLnJlbW92ZS5hcHBseSh0LGFyZ3VtZW50cyl9fSk7c2UuY29sdW1uPXRuLGplLmJhcj1hKGplLmNvbHVtbik7dmFyIGVuPV8odG4se3R5cGU6ImJhciIsaW52ZXJ0ZWQ6ITB9KTtzZS5iYXI9ZW4samUuc2NhdHRlcj1hKENlLHtsaW5lV2lkdGg6MCx0b29sdGlwOntoZWFkZXJGb3JtYXQ6JzxzcGFuIHN0eWxlPSJjb2xvcjp7c2VyaWVzLmNvbG9yfSI+4pePPC9zcGFuPiA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxMHB4OyI+IHtzZXJpZXMubmFtZX08L3NwYW4+PGJyLz4nLHBvaW50Rm9ybWF0OiJ4OiA8Yj57cG9pbnQueH08L2I+PGJyLz55OiA8Yj57cG9pbnQueX08L2I+PGJyLz4ifSxzdGlja3lUcmFja2luZzohMX0pO3ZhciBubj1fKFhlLHt0eXBlOiJzY2F0dGVyIixzb3J0ZWQ6ITEscmVxdWlyZVNvcnRpbmc6ITEsbm9TaGFyZWRUb29sdGlwOiEwLHRyYWNrZXJHcm91cHM6WyJtYXJrZXJHcm91cCIsImRhdGFMYWJlbHNHcm91cCJdLHRha2VPcmRpbmFsUG9zaXRpb246ITEsc2luZ3VsYXJUb29sdGlwczohMCxkcmF3R3JhcGg6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMubGluZVdpZHRoJiZYZS5wcm90b3R5cGUuZHJhd0dyYXBoLmNhbGwodGhpcyl9fSk7c2Uuc2NhdHRlcj1ubixqZS5waWU9YShDZSx7Ym9yZGVyQ29sb3I6IiNGRkZGRkYiLGJvcmRlcldpZHRoOjEsY2VudGVyOltudWxsLG51bGxdLGNsaXA6ITEsY29sb3JCeVBvaW50OiEwLGRhdGFMYWJlbHM6e2Rpc3RhbmNlOjMwLGVuYWJsZWQ6ITAsZm9ybWF0dGVyOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucG9pbnQubmFtZX19LGlnbm9yZUhpZGRlblBvaW50OiEwLGxlZ2VuZFR5cGU6InBvaW50IixtYXJrZXI6bnVsbCxzaXplOm51bGwsc2hvd0luTGVnZW5kOiExLHNsaWNlZE9mZnNldDoxMCxzdGF0ZXM6e2hvdmVyOnticmlnaHRuZXNzOi4xLHNoYWRvdzohMX19LHN0aWNreVRyYWNraW5nOiExLHRvb2x0aXA6e2ZvbGxvd1BvaW50ZXI6ITB9fSk7dmFyIG9uPV8oR2Use2luaXQ6ZnVuY3Rpb24oKXtHZS5wcm90b3R5cGUuaW5pdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIHQsZT10aGlzO3JldHVybiBlLnk8MCYmKGUueT1udWxsKSxvKGUse3Zpc2libGU6ZS52aXNpYmxlIT09ITEsbmFtZTp3KGUubmFtZSwiU2xpY2UiKX0pLHQ9ZnVuY3Rpb24odCl7ZS5zbGljZSgic2VsZWN0Ij09PXQudHlwZSl9LHhlKGUsInNlbGVjdCIsdCkseGUoZSwidW5zZWxlY3QiLHQpLGV9LHNldFZpc2libGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuc2VyaWVzLGk9bi5jaGFydDtlLnZpc2libGU9ZS5vcHRpb25zLnZpc2libGU9dD10PT09SD8hZS52aXNpYmxlOnQsbi5vcHRpb25zLmRhdGFbdWUoZSxuLmRhdGEpXT1lLm9wdGlvbnMsbWUoWyJncmFwaGljIiwiZGF0YUxhYmVsIiwiY29ubmVjdG9yIiwic2hhZG93R3JvdXAiXSxmdW5jdGlvbihuKXtlW25dJiZlW25dW3Q/InNob3ciOiJoaWRlIl0oITApfSksZS5sZWdlbmRJdGVtJiZpLmxlZ2VuZC5jb2xvcml6ZUl0ZW0oZSx0KSwhbi5pc0RpcnR5JiZuLm9wdGlvbnMuaWdub3JlSGlkZGVuUG9pbnQmJihuLmlzRGlydHk9ITAsaS5yZWRyYXcoKSl9LHNsaWNlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvPXRoaXMsYT1vLnNlcmllcyxyPWEuY2hhcnQ7cShuLHIpLGU9dyhlLCEwKSxvLnNsaWNlZD1vLm9wdGlvbnMuc2xpY2VkPXQ9bSh0KT90OiFvLnNsaWNlZCxhLm9wdGlvbnMuZGF0YVt1ZShvLGEuZGF0YSldPW8ub3B0aW9ucyxpPXQ/by5zbGljZWRUcmFuc2xhdGlvbjp7dHJhbnNsYXRlWDowLHRyYW5zbGF0ZVk6MH0sby5ncmFwaGljLmFuaW1hdGUoaSksby5zaGFkb3dHcm91cCYmby5zaGFkb3dHcm91cC5hbmltYXRlKGkpfSxoYWxvUGF0aDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnNoYXBlQXJncyxuPXRoaXMuc2VyaWVzLmNoYXJ0O3JldHVybiB0aGlzLnNsaWNlZHx8IXRoaXMudmlzaWJsZT9bXTp0aGlzLnNlcmllcy5jaGFydC5yZW5kZXJlci5zeW1ib2xzLmFyYyhuLnBsb3RMZWZ0K2UueCxuLnBsb3RUb3ArZS55LGUucit0LGUucit0LHtpbm5lclI6dGhpcy5zaGFwZUFyZ3MucixzdGFydDplLnN0YXJ0LGVuZDplLmVuZH0pfX0pLGFuPXt0eXBlOiJwaWUiLGlzQ2FydGVzaWFuOiExLHBvaW50Q2xhc3M6b24scmVxdWlyZVNvcnRpbmc6ITEsbm9TaGFyZWRUb29sdGlwOiEwLHRyYWNrZXJHcm91cHM6WyJncm91cCIsImRhdGFMYWJlbHNHcm91cCJdLGF4aXNUeXBlczpbXSxwb2ludEF0dHJUb09wdGlvbnM6e3N0cm9rZToiYm9yZGVyQ29sb3IiLCJzdHJva2Utd2lkdGgiOiJib3JkZXJXaWR0aCIsZmlsbDoiY29sb3IifSxzaW5ndWxhclRvb2x0aXBzOiEwLGdldENvbG9yOlJ0LGFuaW1hdGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUucG9pbnRzLGk9ZS5zdGFydEFuZ2xlUmFkO3R8fChtZShuLGZ1bmN0aW9uKHQpe3ZhciBuPXQuZ3JhcGhpYyxvPXQuc2hhcGVBcmdzO24mJihuLmF0dHIoe3I6ZS5jZW50ZXJbM10vMixzdGFydDppLGVuZDppfSksbi5hbmltYXRlKHtyOm8ucixzdGFydDpvLnN0YXJ0LGVuZDpvLmVuZH0sZS5vcHRpb25zLmFuaW1hdGlvbikpfSksZS5hbmltYXRlPW51bGwpfSxzZXREYXRhOmZ1bmN0aW9uKHQsZSxuLGkpe1hlLnByb3RvdHlwZS5zZXREYXRhLmNhbGwodGhpcyx0LCExLG4saSksdGhpcy5wcm9jZXNzRGF0YSgpLHRoaXMuZ2VuZXJhdGVQb2ludHMoKSx3KGUsITApJiZ0aGlzLmNoYXJ0LnJlZHJhdyhuKX0sZ2VuZXJhdGVQb2ludHM6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxvPTAsYT10aGlzLm9wdGlvbnMuaWdub3JlSGlkZGVuUG9pbnQ7Zm9yKFhlLnByb3RvdHlwZS5nZW5lcmF0ZVBvaW50cy5jYWxsKHRoaXMpLGU9dGhpcy5wb2ludHMsbj1lLmxlbmd0aCx0PTA7dDxuO3QrKylpPWVbdF0sbys9YSYmIWkudmlzaWJsZT8wOmkueTtmb3IodGhpcy50b3RhbD1vLHQ9MDt0PG47dCsrKWk9ZVt0XSxpLnBlcmNlbnRhZ2U9bz4wP2kueS9vKjEwMDowLGkudG90YWw9b30sdHJhbnNsYXRlOmZ1bmN0aW9uKHQpe3RoaXMuZ2VuZXJhdGVQb2ludHMoKTt2YXIgZSxuLGksbyxhLHIscyxsPXRoaXMsYz0wLHA9MWUzLGQ9bC5vcHRpb25zLGg9ZC5zbGljZWRPZmZzZXQsdT1oK2QuYm9yZGVyV2lkdGgsbT1kLnN0YXJ0QW5nbGV8fDAsZj1sLnN0YXJ0QW5nbGVSYWQ9Q3QvMTgwKihtLTkwKSxnPWwuZW5kQW5nbGVSYWQ9Q3QvMTgwKih3KGQuZW5kQW5nbGUsbSszNjApLTkwKSx4PWctZixiPWwucG9pbnRzLF89ZC5kYXRhTGFiZWxzLmRpc3RhbmNlLHY9ZC5pZ25vcmVIaWRkZW5Qb2ludCx5PWIubGVuZ3RoO2Zvcih0fHwobC5jZW50ZXI9dD1sLmdldENlbnRlcigpKSxsLmdldFg9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gaT13dC5hc2luKHl0KChlLXRbMV0pLyh0WzJdLzIrXyksMSkpLHRbMF0rKG4/LTE6MSkqKHp0KGkpKih0WzJdLzIrXykpfSxyPTA7cjx5O3IrKylzPWJbcl0sZT1mK2MqeCx2JiYhcy52aXNpYmxlfHwoYys9cy5wZXJjZW50YWdlLzEwMCksbj1mK2MqeCxzLnNoYXBlVHlwZT0iYXJjIixzLnNoYXBlQXJncz17eDp0WzBdLHk6dFsxXSxyOnRbMl0vMixpbm5lclI6dFszXS8yLHN0YXJ0Onh0KGUqcCkvcCxlbmQ6eHQobipwKS9wfSxpPShuK2UpLzIsaT4xLjUqQ3Q/aS09MipDdDppPC1DdC8yJiYoaSs9MipDdCkscy5zbGljZWRUcmFuc2xhdGlvbj17dHJhbnNsYXRlWDp4dCh6dChpKSpoKSx0cmFuc2xhdGVZOnh0KGp0KGkpKmgpfSxvPXp0KGkpKnRbMl0vMixhPWp0KGkpKnRbMl0vMixzLnRvb2x0aXBQb3M9W3RbMF0rLjcqbyx0WzFdKy43KmFdLHMuaGFsZj1pPC1DdC8yfHxpPkN0LzI/MTowLHMuYW5nbGU9aSx1PXl0KHUsXy8yKSxzLmxhYmVsUG9zPVt0WzBdK28renQoaSkqXyx0WzFdK2EranQoaSkqXyx0WzBdK28renQoaSkqdSx0WzFdK2EranQoaSkqdSx0WzBdK28sdFsxXSthLF88MD8iY2VudGVyIjpzLmhhbGY/InJpZ2h0IjoibGVmdCIsaV19LGRyYXdHcmFwaDpudWxsLGRyYXdQb2ludHM6ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxhPXRoaXMscj1hLmNoYXJ0LHM9ci5yZW5kZXJlcixsPWEub3B0aW9ucy5zaGFkb3c7bCYmIWEuc2hhZG93R3JvdXAmJihhLnNoYWRvd0dyb3VwPXMuZygic2hhZG93IikuYWRkKGEuZ3JvdXApKSxtZShhLnBvaW50cyxmdW5jdGlvbihyKXtlPXIuZ3JhcGhpYyxpPXIuc2hhcGVBcmdzLG49ci5zaGFkb3dHcm91cCxsJiYhbiYmKG49ci5zaGFkb3dHcm91cD1zLmcoInNoYWRvdyIpLmFkZChhLnNoYWRvd0dyb3VwKSksdD1yLnNsaWNlZD9yLnNsaWNlZFRyYW5zbGF0aW9uOnt0cmFuc2xhdGVYOjAsdHJhbnNsYXRlWTowfSxuJiZuLmF0dHIodCksZT9lLmFuaW1hdGUobyhpLHQpKTpyLmdyYXBoaWM9ZT1zW3Iuc2hhcGVUeXBlXShpKS5zZXRSYWRpYWxSZWZlcmVuY2UoYS5jZW50ZXIpLmF0dHIoci5wb2ludEF0dHJbci5zZWxlY3RlZD9hZTppZV0pLmF0dHIoewoic3Ryb2tlLWxpbmVqb2luIjoicm91bmQifSkuYXR0cih0KS5hZGQoYS5ncm91cCkuc2hhZG93KGwsbiksdm9pZCAwIT09ci52aXNpYmxlJiZyLnNldFZpc2libGUoci52aXNpYmxlKX0pfSxzb3J0QnlBbmdsZTpmdW5jdGlvbih0LGUpe3Quc29ydChmdW5jdGlvbih0LG4pe3JldHVybiB2b2lkIDAhPT10LmFuZ2xlJiYobi5hbmdsZS10LmFuZ2xlKSplfSl9LGRyYXdMZWdlbmRTeW1ib2w6VWUuZHJhd1JlY3RhbmdsZSxnZXRDZW50ZXI6WWUuZ2V0Q2VudGVyLGdldFN5bWJvbDpSdH07YW49XyhYZSxhbiksc2UucGllPWFuLFhlLnByb3RvdHlwZS5kcmF3RGF0YUxhYmVscz1mdW5jdGlvbigpe3ZhciB0LGUsbixpLHI9dGhpcyxzPXIub3B0aW9ucyxsPXMuY3Vyc29yLGM9cy5kYXRhTGFiZWxzLHA9ci5wb2ludHMsZD1yLmhhc1JlbmRlcmVkfHwwOyhjLmVuYWJsZWR8fHIuX2hhc1BvaW50TGFiZWxzKSYmKHIuZGxQcm9jZXNzT3B0aW9ucyYmci5kbFByb2Nlc3NPcHRpb25zKGMpLGk9ci5wbG90R3JvdXAoImRhdGFMYWJlbHNHcm91cCIsImRhdGEtbGFiZWxzIixjLmRlZmVyP0p0OlZ0LGMuekluZGV4fHw2KSx3KGMuZGVmZXIsITApJiYoaS5hdHRyKHtvcGFjaXR5OitkfSksZHx8eGUociwiYWZ0ZXJBbmltYXRlIixmdW5jdGlvbigpe3IudmlzaWJsZSYmaS5zaG93KCksaVtzLmFuaW1hdGlvbj8iYW5pbWF0ZSI6ImF0dHIiXSh7b3BhY2l0eToxfSx7ZHVyYXRpb246MjAwfSl9KSksZT1jLG1lKHAsZnVuY3Rpb24ocyl7dmFyIHAsZCxoLHUsZixnPXMuZGF0YUxhYmVsLHg9cy5jb25uZWN0b3IsYj0hMDtpZih0PXMub3B0aW9ucyYmcy5vcHRpb25zLmRhdGFMYWJlbHMscD13KHQmJnQuZW5hYmxlZCxlLmVuYWJsZWQpLGcmJiFwKXMuZGF0YUxhYmVsPWcuZGVzdHJveSgpO2Vsc2UgaWYocCl7aWYoYz1hKGUsdCksZj1jLnJvdGF0aW9uLGQ9cy5nZXRMYWJlbENvbmZpZygpLG49Yy5mb3JtYXQ/aihjLmZvcm1hdCxkKTpjLmZvcm1hdHRlci5jYWxsKGQsYyksYy5zdHlsZS5jb2xvcj13KGMuY29sb3IsYy5zdHlsZS5jb2xvcixyLmNvbG9yLCJibGFjayIpLGcpbShuKT8oZy5hdHRyKHt0ZXh0Om59KSxiPSExKToocy5kYXRhTGFiZWw9Zz1nLmRlc3Ryb3koKSx4JiYocy5jb25uZWN0b3I9eC5kZXN0cm95KCkpKTtlbHNlIGlmKG0obikpe2g9e2ZpbGw6Yy5iYWNrZ3JvdW5kQ29sb3Isc3Ryb2tlOmMuYm9yZGVyQ29sb3IsInN0cm9rZS13aWR0aCI6Yy5ib3JkZXJXaWR0aCxyOmMuYm9yZGVyUmFkaXVzfHwwLHJvdGF0aW9uOmYscGFkZGluZzpjLnBhZGRpbmcsekluZGV4OjF9O2Zvcih1IGluIGgpaFt1XT09PUgmJmRlbGV0ZSBoW3VdO2c9cy5kYXRhTGFiZWw9ci5jaGFydC5yZW5kZXJlcltmPyJ0ZXh0IjoibGFiZWwiXShuLDAsLTk5OSxudWxsLG51bGwsbnVsbCxjLnVzZUhUTUwpLmF0dHIoaCkuY3NzKG8oYy5zdHlsZSxsJiZ7Y3Vyc29yOmx9KSkuYWRkKGkpLnNoYWRvdyhjLnNoYWRvdyl9ZyYmci5hbGlnbkRhdGFMYWJlbChzLGcsYyxudWxsLGIpfX0pKX0sWGUucHJvdG90eXBlLmFsaWduRGF0YUxhYmVsPWZ1bmN0aW9uKHQsZSxuLGksYSl7dmFyIHIscz10aGlzLmNoYXJ0LGw9cy5pbnZlcnRlZCxjPXcodC5wbG90WCwtOTk5KSxwPXcodC5wbG90WSwtOTk5KSxkPWUuZ2V0QkJveCgpLGg9dGhpcy52aXNpYmxlJiYodC5zZXJpZXMuZm9yY2VETHx8cy5pc0luc2lkZVBsb3QoYyx4dChwKSxsKXx8aSYmcy5pc0luc2lkZVBsb3QoYyxsP2kueCsxOmkueStpLmhlaWdodC0xLGwpKTtoJiYoaT1vKHt4Omw/cy5wbG90V2lkdGgtcDpjLHk6eHQobD9zLnBsb3RIZWlnaHQtYzpwKSx3aWR0aDowLGhlaWdodDowfSxpKSxvKG4se3dpZHRoOmQud2lkdGgsaGVpZ2h0OmQuaGVpZ2h0fSksbi5yb3RhdGlvbj9lW2E/ImF0dHIiOiJhbmltYXRlIl0oe3g6aS54K24ueCtpLndpZHRoLzIseTppLnkrbi55K2kuaGVpZ2h0LzJ9KS5hdHRyKHthbGlnbjpuLmFsaWdufSk6KGUuYWxpZ24obixudWxsLGkpLHI9ZS5hbGlnbkF0dHIsImp1c3RpZnkiPT09dyhuLm92ZXJmbG93LCJqdXN0aWZ5Iik/dGhpcy5qdXN0aWZ5RGF0YUxhYmVsKGUsbixyLGQsaSxhKTp3KG4uY3JvcCwhMCkmJihoPXMuaXNJbnNpZGVQbG90KHIueCxyLnkpJiZzLmlzSW5zaWRlUGxvdChyLngrZC53aWR0aCxyLnkrZC5oZWlnaHQpKSkpLGh8fChlLmF0dHIoe3k6LTk5OX0pLGUucGxhY2VkPSExKX0sWGUucHJvdG90eXBlLmp1c3RpZnlEYXRhTGFiZWw9ZnVuY3Rpb24odCxlLG4saSxvLGEpe3ZhciByLHMsbD10aGlzLmNoYXJ0LGM9ZS5hbGlnbixwPWUudmVydGljYWxBbGlnbjtyPW4ueCxyPDAmJigicmlnaHQiPT09Yz9lLmFsaWduPSJsZWZ0IjplLng9LXIscz0hMCkscj1uLngraS53aWR0aCxyPmwucGxvdFdpZHRoJiYoImxlZnQiPT09Yz9lLmFsaWduPSJyaWdodCI6ZS54PWwucGxvdFdpZHRoLXIscz0hMCkscj1uLnkscjwwJiYoImJvdHRvbSI9PT1wP2UudmVydGljYWxBbGlnbj0idG9wIjplLnk9LXIscz0hMCkscj1uLnkraS5oZWlnaHQscj5sLnBsb3RIZWlnaHQmJigidG9wIj09PXA/ZS52ZXJ0aWNhbEFsaWduPSJib3R0b20iOmUueT1sLnBsb3RIZWlnaHQtcixzPSEwKSxzJiYodC5wbGFjZWQ9IWEsdC5hbGlnbihlLG51bGwsbykpfSxzZS5waWUmJihzZS5waWUucHJvdG90eXBlLmRyYXdEYXRhTGFiZWxzPWZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksbyxhLHIscyxsLGMscCxkLGgsdT10aGlzLG09dS5kYXRhLGY9dS5jaGFydCxnPXUub3B0aW9ucy5kYXRhTGFiZWxzLHg9dyhnLmNvbm5lY3RvclBhZGRpbmcsMTApLGI9dyhnLmNvbm5lY3RvcldpZHRoLDEpLF89Zi5wbG90V2lkdGgsdj1mLnBsb3RIZWlnaHQseT13KGcuc29mdENvbm5lY3RvciwhMCksaz1nLmRpc3RhbmNlLHo9dS5jZW50ZXIsaj16WzJdLzIsQz16WzFdLFM9az4wLFA9W1tdLFtdXSxUPVswLDAsMCwwXSxOPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUueS10Lnl9O2lmKHUudmlzaWJsZSYmKGcuZW5hYmxlZHx8dS5faGFzUG9pbnRMYWJlbHMpKXtmb3IoWGUucHJvdG90eXBlLmRyYXdEYXRhTGFiZWxzLmFwcGx5KHUpLG1lKG0sZnVuY3Rpb24odCl7dC5kYXRhTGFiZWwmJnQudmlzaWJsZSYmUFt0LmhhbGZdLnB1c2godCl9KSxkPTI7ZC0tOyl7dmFyIEksQixxLE8sRT1bXSxMPVtdLEQ9UFtkXSxGPUQubGVuZ3RoO2lmKEYpe2Zvcih1LnNvcnRCeUFuZ2xlKEQsZC0uNSksaD1yPTA7IXImJkRbaF07KXI9RFtoXSYmRFtoXS5kYXRhTGFiZWwmJihEW2hdLmRhdGFMYWJlbC5nZXRCQm94KCkuaGVpZ2h0fHwyMSksaCsrO2lmKGs+MCl7Zm9yKHE9eXQoQytqK2ssZi5wbG90SGVpZ2h0KSxCPXZ0KDAsQy1qLWspO0I8PXE7Qis9cilFLnB1c2goQik7aWYoST1FLmxlbmd0aCxGPkkpe2ZvcihwPVtdLmNvbmNhdChEKSxwLnNvcnQoTiksaD1GO2gtLTspcFtoXS5yYW5rPWg7Zm9yKGg9RjtoLS07KURbaF0ucmFuaz49SSYmRC5zcGxpY2UoaCwxKTtGPUQubGVuZ3RofWZvcihoPTA7aDxGO2grKyl7dD1EW2hdLGE9dC5sYWJlbFBvczt2YXIgTSxSLCQ9OTk5OTtmb3IoUj0wO1I8STtSKyspTT1rdChFW1JdLWFbMV0pLE08JCYmKCQ9TSxPPVIpO2lmKE88aCYmbnVsbCE9PUVbaF0pTz1oO2Vsc2UgaWYoSTxGLWgrTyYmbnVsbCE9PUVbaF0pZm9yKE89SS1GK2g7bnVsbD09PUVbT107KU8rKztlbHNlIGZvcig7bnVsbD09PUVbT107KU8rKztMLnB1c2goe2k6Tyx5OkVbT119KSxFW09dPW51bGx9TC5zb3J0KE4pfWZvcihoPTA7aDxGO2grKyl7dmFyIEgsVzt0PURbaF0sYT10LmxhYmVsUG9zLGk9dC5kYXRhTGFiZWwsYz10LnZpc2libGU9PT0hMT9KdDpWdCxXPWFbMV0saz4wPyhIPUwucG9wKCksTz1ILmksbD1ILnksKFc+bCYmbnVsbCE9PUVbTysxXXx8VzxsJiZudWxsIT09RVtPLTFdKSYmKGw9eXQodnQoMCxXKSxmLnBsb3RIZWlnaHQpKSk6bD1XLHM9Zy5qdXN0aWZ5P3pbMF0rKGQ/LTE6MSkqKGorayk6dS5nZXRYKGw9PT1DLWota3x8bD09PUMraitrP1c6bCxkKSxpLl9hdHRyPXt2aXNpYmlsaXR5OmMsYWxpZ246YVs2XX0saS5fcG9zPXt4OnMrZy54Kyh7bGVmdDp4LHJpZ2h0Oi14fVthWzZdXXx8MCkseTpsK2cueS0xMH0saS5jb25uWD1zLGkuY29ublk9bCxudWxsPT09dGhpcy5vcHRpb25zLnNpemUmJihvPWkud2lkdGgscy1vPHg/VFszXT12dCh4dChvLXMreCksVFszXSk6cytvPl8teCYmKFRbMV09dnQoeHQocytvLV8reCksVFsxXSkpLGwtci8yPDA/VFswXT12dCh4dCgtbCtyLzIpLFRbMF0pOmwrci8yPnYmJihUWzJdPXZ0KHh0KGwrci8yLXYpLFRbMl0pKSl9fX0oMD09PUEoVCl8fHRoaXMudmVyaWZ5RGF0YUxhYmVsT3ZlcmZsb3coVCkpJiYodGhpcy5wbGFjZURhdGFMYWJlbHMoKSxTJiZiJiZtZSh0aGlzLnBvaW50cyxmdW5jdGlvbih0KXtlPXQuY29ubmVjdG9yLGE9dC5sYWJlbFBvcyxpPXQuZGF0YUxhYmVsLGkmJmkuX3Bvcz8oYz1pLl9hdHRyLnZpc2liaWxpdHkscz1pLmNvbm5YLGw9aS5jb25uWSxuPXk/W3RlLHMrKCJsZWZ0Ij09PWFbNl0/NTotNSksbCwiQyIscyxsLDIqYVsyXS1hWzRdLDIqYVszXS1hWzVdLGFbMl0sYVszXSxlZSxhWzRdLGFbNV1dOlt0ZSxzKygibGVmdCI9PT1hWzZdPzU6LTUpLGwsZWUsYVsyXSxhWzNdLGVlLGFbNF0sYVs1XV0sZT8oZS5hbmltYXRlKHtkOm59KSxlLmF0dHIoInZpc2liaWxpdHkiLGMpKTp0LmNvbm5lY3Rvcj1lPXUuY2hhcnQucmVuZGVyZXIucGF0aChuKS5hdHRyKHsic3Ryb2tlLXdpZHRoIjpiLHN0cm9rZTpnLmNvbm5lY3RvckNvbG9yfHx0LmNvbG9yfHwiIzYwNjA2MCIsdmlzaWJpbGl0eTpjfSkuYWRkKHUuZGF0YUxhYmVsc0dyb3VwKSk6ZSYmKHQuY29ubmVjdG9yPWUuZGVzdHJveSgpKX0pKX19LHNlLnBpZS5wcm90b3R5cGUucGxhY2VEYXRhTGFiZWxzPWZ1bmN0aW9uKCl7bWUodGhpcy5wb2ludHMsZnVuY3Rpb24odCl7dmFyIGUsbj10LmRhdGFMYWJlbDtuJiYoZT1uLl9wb3MsZT8obi5hdHRyKG4uX2F0dHIpLG5bbi5tb3ZlZD8iYW5pbWF0ZSI6ImF0dHIiXShlKSxuLm1vdmVkPSEwKTpuJiZuLmF0dHIoe3k6LTk5OX0pKX0pfSxzZS5waWUucHJvdG90eXBlLmFsaWduRGF0YUxhYmVsPVJ0LHNlLnBpZS5wcm90b3R5cGUudmVyaWZ5RGF0YUxhYmVsT3ZlcmZsb3c9ZnVuY3Rpb24odCl7dmFyIGUsbj10aGlzLmNlbnRlcixpPXRoaXMub3B0aW9ucyxvPWkuY2VudGVyLGE9aS5taW5TaXplfHw4MCxyPWE7cmV0dXJuIG51bGwhPT1vWzBdP3I9dnQoblsyXS12dCh0WzFdLHRbM10pLGEpOihyPXZ0KG5bMl0tdFsxXS10WzNdLGEpLG5bMF0rPSh0WzNdLXRbMV0pLzIpLG51bGwhPT1vWzFdP3I9dnQoeXQocixuWzJdLXZ0KHRbMF0sdFsyXSkpLGEpOihyPXZ0KHl0KHIsblsyXS10WzBdLXRbMl0pLGEpLG5bMV0rPSh0WzBdLXRbMl0pLzIpLHI8blsyXT8oblsyXT1yLHRoaXMudHJhbnNsYXRlKG4pLG1lKHRoaXMucG9pbnRzLGZ1bmN0aW9uKHQpe3QuZGF0YUxhYmVsJiYodC5kYXRhTGFiZWwuX3Bvcz1udWxsKX0pLHRoaXMuZHJhd0RhdGFMYWJlbHMmJnRoaXMuZHJhd0RhdGFMYWJlbHMoKSk6ZT0hMCxlfSksc2UuY29sdW1uJiYoc2UuY29sdW1uLnByb3RvdHlwZS5hbGlnbkRhdGFMYWJlbD1mdW5jdGlvbih0LGUsbixpLG8pe3ZhciByPXRoaXMuY2hhcnQscz1yLmludmVydGVkLGw9dC5kbEJveHx8dC5zaGFwZUFyZ3MsYz10LmJlbG93fHx0LnBsb3RZPncodGhpcy50cmFuc2xhdGVkVGhyZXNob2xkLHIucGxvdFNpemVZKSxwPXcobi5pbnNpZGUsISF0aGlzLm9wdGlvbnMuc3RhY2tpbmcpO2wmJihpPWEobCkscyYmKGk9e3g6ci5wbG90V2lkdGgtaS55LWkuaGVpZ2h0LHk6ci5wbG90SGVpZ2h0LWkueC1pLndpZHRoLHdpZHRoOmkuaGVpZ2h0LGhlaWdodDppLndpZHRofSkscHx8KHM/KGkueCs9Yz8wOmkud2lkdGgsaS53aWR0aD0wKTooaS55Kz1jP2kuaGVpZ2h0OjAsaS5oZWlnaHQ9MCkpKSxuLmFsaWduPXcobi5hbGlnbiwhc3x8cD8iY2VudGVyIjpjPyJyaWdodCI6ImxlZnQiKSxuLnZlcnRpY2FsQWxpZ249dyhuLnZlcnRpY2FsQWxpZ24sc3x8cD8ibWlkZGxlIjpjPyJ0b3AiOiJib3R0b20iKSxYZS5wcm90b3R5cGUuYWxpZ25EYXRhTGFiZWwuY2FsbCh0aGlzLHQsZSxuLGksbyl9KTt2YXIgcm49bGUuVHJhY2tlck1peGluPXtkcmF3VHJhY2tlclBvaW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQuY2hhcnQsbj1lLnBvaW50ZXIsaT10Lm9wdGlvbnMuY3Vyc29yLG89aSYme2N1cnNvcjppfSxhPWZ1bmN0aW9uKG4pe3ZhciBpLG89bi50YXJnZXQ7Zm9yKGUuaG92ZXJTZXJpZXMhPT10JiZ0Lm9uTW91c2VPdmVyKCk7byYmIWk7KWk9by5wb2ludCxvPW8ucGFyZW50Tm9kZTtpIT09SCYmaSE9PWUuaG92ZXJQb2ludCYmaS5vbk1vdXNlT3ZlcihuKX07bWUodC5wb2ludHMsZnVuY3Rpb24odCl7dC5ncmFwaGljJiYodC5ncmFwaGljLmVsZW1lbnQucG9pbnQ9dCksdC5kYXRhTGFiZWwmJih0LmRhdGFMYWJlbC5lbGVtZW50LnBvaW50PXQpfSksdC5faGFzVHJhY2tpbmd8fChtZSh0LnRyYWNrZXJHcm91cHMsZnVuY3Rpb24oZSl7dFtlXSYmKHRbZV0uYWRkQ2xhc3MoWnQrInRyYWNrZXIiKS5vbigibW91c2VvdmVyIixhKS5vbigibW91c2VvdXQiLGZ1bmN0aW9uKHQpe24ub25UcmFja2VyTW91c2VPdXQodCl9KS5jc3MobyksVSYmdFtlXS5vbigidG91Y2hzdGFydCIsYSkpfSksdC5faGFzVHJhY2tpbmc9ITApfSxkcmF3VHJhY2tlckdyYXBoOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXMsaT1uLm9wdGlvbnMsbz1pLnRyYWNrQnlBcmVhLGE9W10uY29uY2F0KG8/bi5hcmVhUGF0aDpuLmdyYXBoUGF0aCkscj1hLmxlbmd0aCxzPW4uY2hhcnQsbD1zLnBvaW50ZXIsYz1zLnJlbmRlcmVyLHA9cy5vcHRpb25zLnRvb2x0aXAuc25hcCxkPW4udHJhY2tlcixoPWkuY3Vyc29yLHU9aCYme2N1cnNvcjpofSxtPW4uc2luZ2xlUG9pbnRzLGY9ZnVuY3Rpb24oKXtzLmhvdmVyU2VyaWVzIT09biYmbi5vbk1vdXNlT3ZlcigpfSxnPSJyZ2JhKDE5MiwxOTIsMTkyLCIrKEV0PzFlLTQ6LjAwMikrIikiO2lmKHImJiFvKWZvcihlPXIrMTtlLS07KWFbZV09PT10ZSYmYS5zcGxpY2UoZSsxLDAsYVtlKzFdLXAsYVtlKzJdLGVlKSwoZSYmYVtlXT09PXRlfHxlPT09cikmJmEuc3BsaWNlKGUsMCxlZSxhW2UtMl0rcCxhW2UtMV0pO2ZvcihlPTA7ZTxtLmxlbmd0aDtlKyspdD1tW2VdLGEucHVzaCh0ZSx0LnBsb3RYLXAsdC5wbG90WSxlZSx0LnBsb3RYK3AsdC5wbG90WSk7ZD9kLmF0dHIoe2Q6YX0pOihuLnRyYWNrZXI9Yy5wYXRoKGEpLmF0dHIoeyJzdHJva2UtbGluZWpvaW4iOiJyb3VuZCIsdmlzaWJpbGl0eTpuLnZpc2libGU/VnQ6SnQsc3Ryb2tlOmcsZmlsbDpvP2c6UXQsInN0cm9rZS13aWR0aCI6aS5saW5lV2lkdGgrKG8/MDoyKnApLHpJbmRleDoyfSkuYWRkKG4uZ3JvdXApLG1lKFtuLnRyYWNrZXIsbi5tYXJrZXJHcm91cF0sZnVuY3Rpb24odCl7dC5hZGRDbGFzcyhadCsidHJhY2tlciIpLm9uKCJtb3VzZW92ZXIiLGYpLm9uKCJtb3VzZW91dCIsZnVuY3Rpb24odCl7bC5vblRyYWNrZXJNb3VzZU91dCh0KX0pLmNzcyh1KSxVJiZ0Lm9uKCJ0b3VjaHN0YXJ0IixmKX0pKX19O3NlLmNvbHVtbiYmKHRuLnByb3RvdHlwZS5kcmF3VHJhY2tlcj1ybi5kcmF3VHJhY2tlclBvaW50KSxzZS5waWUmJihzZS5waWUucHJvdG90eXBlLmRyYXdUcmFja2VyPXJuLmRyYXdUcmFja2VyUG9pbnQpLHNlLnNjYXR0ZXImJihubi5wcm90b3R5cGUuZHJhd1RyYWNrZXI9cm4uZHJhd1RyYWNrZXJQb2ludCksbyhXZS5wcm90b3R5cGUse3NldEl0ZW1FdmVudHM6ZnVuY3Rpb24odCxlLG4saSxvKXt2YXIgYT10aGlzOyhuP2U6dC5sZWdlbmRHcm91cCkub24oIm1vdXNlb3ZlciIsZnVuY3Rpb24oKXt0LnNldFN0YXRlKG9lKSxlLmNzcyhhLm9wdGlvbnMuaXRlbUhvdmVyU3R5bGUpfSkub24oIm1vdXNlb3V0IixmdW5jdGlvbigpe2UuY3NzKHQudmlzaWJsZT9pOm8pLHQuc2V0U3RhdGUoKX0pLm9uKCJjbGljayIsZnVuY3Rpb24oZSl7dmFyIG49ImxlZ2VuZEl0ZW1DbGljayIsaT1mdW5jdGlvbigpe3Quc2V0VmlzaWJsZSgpfTtlPXticm93c2VyRXZlbnQ6ZX0sdC5maXJlUG9pbnRFdmVudD90LmZpcmVQb2ludEV2ZW50KG4sZSxpKTpfZSh0LG4sZSxpKX0pfSxjcmVhdGVDaGVja2JveEZvckl0ZW06ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0LmNoZWNrYm94PWIoImlucHV0Iix7dHlwZToiY2hlY2tib3giLGNoZWNrZWQ6dC5zZWxlY3RlZCxkZWZhdWx0Q2hlY2tlZDp0LnNlbGVjdGVkfSxlLm9wdGlvbnMuaXRlbUNoZWNrYm94U3R5bGUsZS5jaGFydC5jb250YWluZXIpLHhlKHQuY2hlY2tib3gsImNsaWNrIixmdW5jdGlvbihlKXt2YXIgbj1lLnRhcmdldDtfZSh0LCJjaGVja2JveENsaWNrIix7Y2hlY2tlZDpuLmNoZWNrZWR9LGZ1bmN0aW9uKCl7dC5zZWxlY3QoKX0pfSl9fSksRy5sZWdlbmQuaXRlbVN0eWxlLmN1cnNvcj0icG9pbnRlciIsbyhSLnByb3RvdHlwZSx7c2hvd1Jlc2V0Wm9vbTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT1HLmxhbmcsbj10Lm9wdGlvbnMuY2hhcnQucmVzZXRab29tQnV0dG9uLGk9bi50aGVtZSxvPWkuc3RhdGVzLGE9ImNoYXJ0Ij09PW4ucmVsYXRpdmVUbz9udWxsOiJwbG90Qm94Ijt0aGlzLnJlc2V0Wm9vbUJ1dHRvbj10LnJlbmRlcmVyLmJ1dHRvbihlLnJlc2V0Wm9vbSxudWxsLG51bGwsZnVuY3Rpb24oKXt0Lnpvb21PdXQoKX0saSxvJiZvLmhvdmVyKS5hdHRyKHthbGlnbjpuLnBvc2l0aW9uLmFsaWduLHRpdGxlOmUucmVzZXRab29tVGl0bGV9KS5hZGQoKS5hbGlnbihuLnBvc2l0aW9uLCExLGEpfSx6b29tT3V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztfZSh0LCJzZWxlY3Rpb24iLHtyZXNldFNlbGVjdGlvbjohMH0sZnVuY3Rpb24oKXt0Lnpvb20oKX0pfSx6b29tOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10aGlzLG89aS5wb2ludGVyLGE9ITE7IXR8fHQucmVzZXRTZWxlY3Rpb24/bWUoaS5heGVzLGZ1bmN0aW9uKHQpe2U9dC56b29tKCl9KTptZSh0LnhBeGlzLmNvbmNhdCh0LnlBeGlzKSxmdW5jdGlvbih0KXt2YXIgbj10LmF4aXMsaT1uLmlzWEF4aXM7KG9baT8iem9vbVgiOiJ6b29tWSJdfHxvW2k/InBpbmNoWCI6InBpbmNoWSJdKSYmKGU9bi56b29tKHQubWluLHQubWF4KSxuLmRpc3BsYXlCdG4mJihhPSEwKSl9KSxuPWkucmVzZXRab29tQnV0dG9uLGEmJiFuP2kuc2hvd1Jlc2V0Wm9vbSgpOiFhJiZsKG4pJiYoaS5yZXNldFpvb21CdXR0b249bi5kZXN0cm95KCkpLGUmJmkucmVkcmF3KHcoaS5vcHRpb25zLmNoYXJ0LmFuaW1hdGlvbix0JiZ0LmFuaW1hdGlvbixpLnBvaW50Q291bnQ8MTAwKSl9LHBhbjpmdW5jdGlvbih0LGUpe3ZhciBuLGk9dGhpcyxvPWkuaG92ZXJQb2ludHM7byYmbWUobyxmdW5jdGlvbih0KXt0LnNldFN0YXRlKCl9KSxtZSgieHkiPT09ZT9bMSwwXTpbMV0sZnVuY3Rpb24oZSl7dmFyIG89dFtlPyJjaGFydFgiOiJjaGFydFkiXSxhPWlbZT8ieEF4aXMiOiJ5QXhpcyJdWzBdLHI9aVtlPyJtb3VzZURvd25YIjoibW91c2VEb3duWSJdLHM9KGEucG9pbnRSYW5nZXx8MCkvMixsPWEuZ2V0RXh0cmVtZXMoKSxjPWEudG9WYWx1ZShyLW8sITApK3MscD1hLnRvVmFsdWUocitpW2U/InBsb3RXaWR0aCI6InBsb3RIZWlnaHQiXS1vLCEwKS1zO2Euc2VyaWVzLmxlbmd0aCYmYz55dChsLmRhdGFNaW4sbC5taW4pJiZwPHZ0KGwuZGF0YU1heCxsLm1heCkmJihhLnNldEV4dHJlbWVzKGMscCwhMSwhMSx7dHJpZ2dlcjoicGFuIn0pLG49ITApLGlbZT8ibW91c2VEb3duWCI6Im1vdXNlRG93blkiXT1vfSksbiYmaS5yZWRyYXcoITEpLHgoaS5jb250YWluZXIse2N1cnNvcjoibW92ZSJ9KX19KSxvKEdlLnByb3RvdHlwZSx7c2VsZWN0OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPW4uc2VyaWVzLG89aS5jaGFydDt0PXcodCwhbi5zZWxlY3RlZCksbi5maXJlUG9pbnRFdmVudCh0PyJzZWxlY3QiOiJ1bnNlbGVjdCIse2FjY3VtdWxhdGU6ZX0sZnVuY3Rpb24oKXtuLnNlbGVjdGVkPW4ub3B0aW9ucy5zZWxlY3RlZD10LGkub3B0aW9ucy5kYXRhW3VlKG4saS5kYXRhKV09bi5vcHRpb25zLG4uc2V0U3RhdGUodCYmYWUpLGV8fG1lKG8uZ2V0U2VsZWN0ZWRQb2ludHMoKSxmdW5jdGlvbih0KXt0LnNlbGVjdGVkJiZ0IT09biYmKHQuc2VsZWN0ZWQ9dC5vcHRpb25zLnNlbGVjdGVkPSExLGkub3B0aW9ucy5kYXRhW3VlKHQsaS5kYXRhKV09dC5vcHRpb25zLHQuc2V0U3RhdGUoaWUpLHQuZmlyZVBvaW50RXZlbnQoInVuc2VsZWN0IikpfSl9KX0sb25Nb3VzZU92ZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuc2VyaWVzLGk9bi5jaGFydCxvPWkudG9vbHRpcCxhPWkuaG92ZXJQb2ludDthJiZhIT09ZSYmYS5vbk1vdXNlT3V0KCksZS5maXJlUG9pbnRFdmVudCgibW91c2VPdmVyIiksIW98fG8uc2hhcmVkJiYhbi5ub1NoYXJlZFRvb2x0aXB8fG8ucmVmcmVzaChlLHQpLGUuc2V0U3RhdGUob2UpLGkuaG92ZXJQb2ludD1lfSxvbk1vdXNlT3V0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5zZXJpZXMuY2hhcnQsZT10LmhvdmVyUG9pbnRzO3RoaXMuZmlyZVBvaW50RXZlbnQoIm1vdXNlT3V0IiksZSYmdWUodGhpcyxlKSE9PS0xfHwodGhpcy5zZXRTdGF0ZSgpLHQuaG92ZXJQb2ludD1udWxsKX0saW1wb3J0RXZlbnRzOmZ1bmN0aW9uKCl7aWYoIXRoaXMuaGFzSW1wb3J0ZWRFdmVudHMpe3ZhciB0LGU9dGhpcyxuPWEoZS5zZXJpZXMub3B0aW9ucy5wb2ludCxlLm9wdGlvbnMpLGk9bi5ldmVudHM7ZS5ldmVudHM9aTtmb3IodCBpbiBpKXhlKGUsdCxpW3RdKTt0aGlzLmhhc0ltcG9ydGVkRXZlbnRzPSEwfX0sc2V0U3RhdGU6ZnVuY3Rpb24odCxlKXt2YXIgbixpLHIscyxsPXRoaXMsYz1sLnBsb3RYLHA9bC5wbG90WSxkPWwuc2VyaWVzLGg9ZC5vcHRpb25zLnN0YXRlcyx1PWplW2QudHlwZV0ubWFya2VyJiZkLm9wdGlvbnMubWFya2VyLG09dSYmIXUuZW5hYmxlZCxmPXUmJnUuc3RhdGVzW3RdLGc9ZiYmZi5lbmFibGVkPT09ITEsdz1kLnN0YXRlTWFya2VyR3JhcGhpYyx4PWwubWFya2VyfHx7fSxiPWQuY2hhcnQsXz1kLmhhbG87dD10fHxpZSxzPWwucG9pbnRBdHRyW3RdfHxkLnBvaW50QXR0clt0XSx0PT09bC5zdGF0ZSYmIWV8fGwuc2VsZWN0ZWQmJnQhPT1hZXx8aFt0XSYmaFt0XS5lbmFibGVkPT09ITF8fHQmJihnfHxtJiZmLmVuYWJsZWQ9PT0hMSl8fHQmJnguc3RhdGVzJiZ4LnN0YXRlc1t0XSYmeC5zdGF0ZXNbdF0uZW5hYmxlZD09PSExfHwobC5ncmFwaGljPyhuPXUmJmwuZ3JhcGhpYy5zeW1ib2xOYW1lJiZzLnIsbC5ncmFwaGljLmF0dHIoYShzLG4/e3g6Yy1uLHk6cC1uLHdpZHRoOjIqbixoZWlnaHQ6MipufTp7fSkpLHcmJncuaGlkZSgpKToodCYmZiYmKG49Zi5yYWRpdXMscj14LnN5bWJvbHx8ZC5zeW1ib2wsdyYmdy5jdXJyZW50U3ltYm9sIT09ciYmKHc9dy5kZXN0cm95KCkpLHc/d1tlPyJhbmltYXRlIjoiYXR0ciJdKHt4OmMtbix5OnAtbn0pOnImJihkLnN0YXRlTWFya2VyR3JhcGhpYz13PWIucmVuZGVyZXIuc3ltYm9sKHIsYy1uLHAtbiwyKm4sMipuKS5hdHRyKHMpLmFkZChkLm1hcmtlckdyb3VwKSx3LmN1cnJlbnRTeW1ib2w9cikpLHcmJndbdCYmYi5pc0luc2lkZVBsb3QoYyxwLGIuaW52ZXJ0ZWQpPyJzaG93IjoiaGlkZSJdKCkpLGk9aFt0XSYmaFt0XS5oYWxvLGkmJmkuc2l6ZT8oX3x8KGQuaGFsbz1fPWIucmVuZGVyZXIucGF0aCgpLmFkZChkLnNlcmllc0dyb3VwKSksXy5hdHRyKG8oe2ZpbGw6QWUobC5jb2xvcnx8ZC5jb2xvcikuc2V0T3BhY2l0eShpLm9wYWNpdHkpLmdldCgpfSxpLmF0dHJpYnV0ZXMpKVtlPyJhbmltYXRlIjoiYXR0ciJdKHtkOmwuaGFsb1BhdGgoaS5zaXplKX0pKTpfJiZfLmF0dHIoe2Q6W119KSxsLnN0YXRlPXQpfSxoYWxvUGF0aDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnNlcmllcyxuPWUuY2hhcnQsaT1lLmdldFBsb3RCb3goKSxvPW4uaW52ZXJ0ZWQ7cmV0dXJuIG4ucmVuZGVyZXIuc3ltYm9scy5jaXJjbGUoaS50cmFuc2xhdGVYKyhvP2UueUF4aXMubGVuLXRoaXMucGxvdFk6dGhpcy5wbG90WCktdCxpLnRyYW5zbGF0ZVkrKG8/ZS54QXhpcy5sZW4tdGhpcy5wbG90WDp0aGlzLnBsb3RZKS10LDIqdCwyKnQpfX0pLG8oWGUucHJvdG90eXBlLHtvbk1vdXNlT3ZlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNoYXJ0LG49ZS5ob3ZlclNlcmllcztuJiZuIT09dCYmbi5vbk1vdXNlT3V0KCksdC5vcHRpb25zLmV2ZW50cy5tb3VzZU92ZXImJl9lKHQsIm1vdXNlT3ZlciIpLHQuc2V0U3RhdGUob2UpLGUuaG92ZXJTZXJpZXM9dH0sb25Nb3VzZU91dDpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Lm9wdGlvbnMsbj10LmNoYXJ0LGk9bi50b29sdGlwLG89bi5ob3ZlclBvaW50O28mJm8ub25Nb3VzZU91dCgpLHQmJmUuZXZlbnRzLm1vdXNlT3V0JiZfZSh0LCJtb3VzZU91dCIpLCFpfHxlLnN0aWNreVRyYWNraW5nfHxpLnNoYXJlZCYmIXQubm9TaGFyZWRUb29sdGlwfHxpLmhpZGUoKSx0LnNldFN0YXRlKCksbi5ob3ZlclNlcmllcz1udWxsfSxzZXRTdGF0ZTpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsaT1uLm9wdGlvbnMsbz1uLmdyYXBoLGE9bi5ncmFwaE5lZyxyPWkuc3RhdGVzLHM9aS5saW5lV2lkdGg7aWYodD10fHxpZSxuLnN0YXRlIT09dCl7aWYobi5zdGF0ZT10LHJbdF0mJnJbdF0uZW5hYmxlZD09PSExKXJldHVybjt0JiYocz1yW3RdLmxpbmVXaWR0aHx8cysoclt0XS5saW5lV2lkdGhQbHVzfHwwKSksbyYmIW8uZGFzaHN0eWxlJiYoZT17InN0cm9rZS13aWR0aCI6c30sby5hdHRyKGUpLGEmJmEuYXR0cihlKSl9fSxzZXRWaXNpYmxlOmZ1bmN0aW9uKHQsZSl7dmFyIG4saT10aGlzLG89aS5jaGFydCxhPWkubGVnZW5kSXRlbSxyPW8ub3B0aW9ucy5jaGFydC5pZ25vcmVIaWRkZW5TZXJpZXMscz1pLnZpc2libGU7aS52aXNpYmxlPXQ9aS51c2VyT3B0aW9ucy52aXNpYmxlPXQ9PT1IPyFzOnQsbj10PyJzaG93IjoiaGlkZSIsbWUoWyJncm91cCIsImRhdGFMYWJlbHNHcm91cCIsIm1hcmtlckdyb3VwIiwidHJhY2tlciJdLGZ1bmN0aW9uKHQpe2lbdF0mJmlbdF1bbl0oKX0pLG8uaG92ZXJTZXJpZXM9PT1pJiZpLm9uTW91c2VPdXQoKSxhJiZvLmxlZ2VuZC5jb2xvcml6ZUl0ZW0oaSx0KSxpLmlzRGlydHk9ITAsaS5vcHRpb25zLnN0YWNraW5nJiZtZShvLnNlcmllcyxmdW5jdGlvbih0KXt0Lm9wdGlvbnMuc3RhY2tpbmcmJnQudmlzaWJsZSYmKHQuaXNEaXJ0eT0hMCl9KSxtZShpLmxpbmtlZFNlcmllcyxmdW5jdGlvbihlKXtlLnNldFZpc2libGUodCwhMSl9KSxyJiYoby5pc0RpcnR5Qm94PSEwKSxlIT09ITEmJm8ucmVkcmF3KCksX2UoaSxuKX0sc2V0VG9vbHRpcFBvaW50czpmdW5jdGlvbih0KXt2YXIgZSxuLGksbyxhLHIscyxsPXRoaXMsYz1bXSxwPWwueEF4aXMsZD1wJiZwLmdldEV4dHJlbWVzKCksaD1wP3AudG9vbHRpcExlbnx8cC5sZW46bC5jaGFydC5wbG90U2l6ZVgsdT1bXTtpZihsLm9wdGlvbnMuZW5hYmxlTW91c2VUcmFja2luZyE9PSExJiYhbC5zaW5ndWxhclRvb2x0aXBzKXtmb3IodCYmKGwudG9vbHRpcFBvaW50cz1udWxsKSxtZShsLnNlZ21lbnRzfHxsLnBvaW50cyxmdW5jdGlvbih0KXtjPWMuY29uY2F0KHQpfSkscCYmcC5yZXZlcnNlZCYmKGM9Yy5yZXZlcnNlKCkpLGwub3JkZXJUb29sdGlwUG9pbnRzJiZsLm9yZGVyVG9vbHRpcFBvaW50cyhjKSxlPWMubGVuZ3RoLHM9MDtzPGU7cysrKWlmKG89Y1tzXSxhPW8ueCxhPj1kLm1pbiYmYTw9ZC5tYXgpZm9yKHI9Y1tzKzFdLG49aT09PUg/MDppKzEsaT1jW3MrMV0/eXQodnQoMCxidCgoby5jbGllbnRYKyhyP3Iud3JhcHBlZENsaWVudFh8fHIuY2xpZW50WDpoKSkvMikpLGgpOmg7bj49MCYmbjw9aTspdVtuKytdPW87bC50b29sdGlwUG9pbnRzPXV9fSxzaG93OmZ1bmN0aW9uKCl7dGhpcy5zZXRWaXNpYmxlKCEwKX0saGlkZTpmdW5jdGlvbigpe3RoaXMuc2V0VmlzaWJsZSghMSl9LHNlbGVjdDpmdW5jdGlvbih0KXt2YXIgZT10aGlzO2Uuc2VsZWN0ZWQ9dD10PT09SD8hZS5zZWxlY3RlZDp0LGUuY2hlY2tib3gmJihlLmNoZWNrYm94LmNoZWNrZWQ9dCksX2UoZSx0PyJzZWxlY3QiOiJ1bnNlbGVjdCIpfSxkcmF3VHJhY2tlcjpybi5kcmF3VHJhY2tlckdyYXBofSksbyhsZSx7QXhpczpNLENoYXJ0OlIsQ29sb3I6QWUsUG9pbnQ6R2UsVGljazpGLFJlbmRlcmVyOlcsU2VyaWVzOlhlLFNWR0VsZW1lbnQ6RCxTVkdSZW5kZXJlcjpOZSxhcnJheU1pbjpULGFycmF5TWF4OkEsY2hhcnRzOiR0LGRhdGVGb3JtYXQ6WCxmb3JtYXQ6aixwYXRoQW5pbTpaLGdldE9wdGlvbnM6TCxoYXNCaWRpQnVnOkx0LGlzVG91Y2hEZXZpY2U6cXQsbnVtYmVyRm9ybWF0OnYsc2VyaWVzVHlwZXM6c2Usc2V0T3B0aW9uczpFLGFkZEV2ZW50OnhlLHJlbW92ZUV2ZW50OmJlLGNyZWF0ZUVsZW1lbnQ6YixkaXNjYXJkRWxlbWVudDpJLGNzczp4LGVhY2g6bWUsZXh0ZW5kOm8sbWFwOndlLG1lcmdlOmEscGljazp3LHNwbGF0OmcsZXh0ZW5kQ2xhc3M6XyxwSW50OnIsd3JhcDprLHN2ZzpFdCxjYW52YXM6RHQsdm1sOiFFdCYmIUR0LHByb2R1Y3Q6V3QsdmVyc2lvbjpVdH0pfSgpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPHN0eWxlPlxuXHQucGFuZWwtc2hhZG93IHtcblx0XHR0b3A6IDI1MHB4O1xuXHR9XG5cblx0LmZsb2F0QnV0dG9ucyB7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMjVweDtcbiAgICByaWdodDogMzBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHotaW5kZXg6IDk5O1xuICAgIGhlaWdodDogMTZweDtcblx0fVxuXG5cdC5oaWdoY2hhcnRzLWNvbnRhaW5lciB7XG5cdFx0d2lkdGg6IDEwMCUhaW1wb3J0YW50O1xuXHRcdGhlaWdodDogMTAwJSFpbXBvcnRhbnQ7XG5cdH1cblxuXHQuaGlnaGNoYXJ0cy1jb250YWluZXIgPiBzdmcge1xuXHRcdHdpZHRoOiAxMDAlIWltcG9ydGFudDtcblx0XHRoZWlnaHQ6IDEwMCUhaW1wb3J0YW50O1x0XHRcblx0fVxuXG5cdC5oaWdoY2hhcnRzLXRvb2x0aXAgc3BhbiB7XG5cdFx0ei1pbmRleDogOTk5OSFpbXBvcnRhbnQ7XG5cdH1cblxuXHQuaGlnaGNoYXJ0cy10b29sdGlwIHRhYmxlIHtcblx0XHR3aWR0aDogYXV0byFpbXBvcnRhbnQ7XG5cdFx0bWFyZ2luLWxlZnQ6IDhweCFpbXBvcnRhbnQ7XG5cdFx0bWFyZ2luLXJpZ2h0OiA4cHghaW1wb3J0YW50O1xuXHRcdGJvcmRlcjogbm9uZTtcblx0XHRib3JkZXItc3BhY2luZzogbm9uZTtcblx0fVxuXG5cdC5oaWdoY2hhcnRzLXRvb2x0aXAgdGQge1xuXHRcdGZvbnQtZmFtaWx5OiAiTWljcm9zb2Z0IFlhaGVpIjtcblx0XHRmb250LXNpemU6IDEycHg7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHR9XG5cblx0LmhpZ2hjaGFydHMtdG9vbHRpcCAucHJvbW9UZHtcblx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHRcdHBhZGRpbmctbGVmdDogNXB4O1xuXHRcdHdpZHRoOiAxMDBweDtcblx0XHRtYXgtd2lkdGg6IDEwMHB4O1xuXHRcdGNvbG9yOiAjNGE5MGUyO1xuXHRcdG92ZXJmbG93OiBoaWRkZW47XG5cdFx0dGV4dC1vdmVyZmxvdzogZWxsaXBzaXMhaW1wb3J0YW50O1xuXHR9XG5cblx0LmZsb2F0QnV0dG9ucyA+IGF7XG5cdFx0Y3Vyc29yOiBwb2ludGVyO1xuXHRcdGJhY2tncm91bmQ6IG5vbmU7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJvcmRlci1yaWdodDogMXB4IHNvbGlkICM2NjY7XG5cdFx0cGFkZGluZy1sZWZ0OiAyMHB4O1xuXHRcdHBhZGRpbmctcmlnaHQ6IDIwcHg7XG5cdFx0aGVpZ2h0OiAxNnB4O1xuXHRcdGxpbmUtaGVpZ2h0OiAxNnB4O1xuXHRcdGNvbG9yOiAjMzMzO1xuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZSFpbXBvcnRhbnQ7XG5cdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0Zm9udC1mYW1pbHk6ICJNaWNyb3NvZnQgWWFIZWkiO1xuXHRcdGZvbnQtc2l6ZTogMTJweCFpbXBvcnRhbnQ7XG5cdH1cblxuXHQjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9jaGFydCB7XG5cdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdHdpZHRoOiA0NjBweDtcblx0XHRoZWlnaHQ6IDE4NnB4O1xuXHR9XG5cblx0I21pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWwge1xuXHRcdGNsZWFyOiBib3RoO1xuXHRcdGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuXHRcdGhlaWdodDogMzA3cHg7XG5cdH1cblxuXHRAbWVkaWEgKG1heC13aWR0aDogMTI1MHB4KSB7XG5cdFx0I2d3ZC10cmVuZC1jaGFydCB7XG5cdFx0XHRwb3NpdGlvbjogZml4ZWQ7XG5cdFx0XHRsZWZ0OiA1MCU7XG5cdFx0XHRtYXJnaW4tbGVmdDogLTQwMHB4O1xuXHRcdH1cblx0fVxuXG5cdC5mbG9hdEJ1dHRvbnMgPiBhOmZpcnN0LWNoaWxkIHtcblx0XHRib3JkZXItbGVmdDogMXB4IHNvbGlkIGJsYWNrO1xuXHR9XG5cblx0LmZsb2F0QnV0dG9ucyA+IGE6Zm9jdXMge1xuXHRcdG91dGxpbmU6IG5vbmU7XG5cdH1cblxuXHQuYWN0aXZlUGxvdCB7XG5cdFx0YmFja2dyb3VuZDogI2VkZjFmMiFpbXBvcnRhbnQ7XG5cdH1cblxuXHQuYmpkLW5ld3RyZW5kLWRldiAuYmpkLWhpZGRlbiB7XG5cdFx0ZGlzcGxheTogbm9uZSFpbXBvcnRhbnQ7XG5cdH1cblxuXHQjcGxvdEFyZWFfe3tmcm9tX2RldmljZX19IHtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0cmlnaHQ6IDBweDtcblx0XHRsZWZ0OiAwcHg7XG5cdFx0aGVpZ2h0OiAxODZweDtcblx0XHRtYXgtd2lkdGg6IDIwMDBweCFpbXBvcnRhbnQ7XG5cdFx0Zm9udC1mYW1pbHk6ICJNaWNyb3NvZnQgWWFIZWkiO1xuXHR9XG5cdCNnd2RhbmctdHJlbmQtZGV0YWlsIFx0I3Bsb3RBcmVhX3t7ZnJvbV9kZXZpY2V9fSB7XG5cdFx0aGVpZ2h0OiAxODJweDtcblx0XHR0b3A6IDYycHg7XG5cdH1cblxuXHQuaGlnaGNoYXJ0cy10b29sdGlwIHtcblx0XHR6LWluZGV4OiA5OTtcblx0XHRiYWNrZ3JvdW5kOiB3aGl0ZTtcblx0fVxuXG5cblx0I2JqZC1xcmNvZGUtdHJlbmQge1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHR3aWR0aDogMTUwcHg7XG5cdFx0aGVpZ2h0OiAxNTBweDtcblx0XHRyaWdodDogMzVweDtcblx0XHRib3R0b206IDBweDtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdH1cblxuXHQjYmpkLXFyY29kZS10cmVuZCBzcGFuIHtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0Zm9udC1zaXplOiAxMnB4O1xuXHRcdGZvbnQtZmFtaWx5OiAiTWljcm9zb2Z0IFlhaGVpIjtcblx0XHRjb2xvcjogIzUzNTg1NDtcblx0XHR0b3A6IDhweDtcblx0fVxuPC9zdHlsZT5cblxuPGRpdiBjbGFzcz0iZmxvYXRCdXR0b25zIGJqZC1uZXd0cmVuZC1kZXYiPlxuXHQ8YSBjbGFzcz0iYmpkLWhpZGRlbiIgaWQ9InBsb3RBbGwiPuWFqOmDqDwvYT48YSBjbGFzcz0iYmpkLWhpZGRlbiIgaWQ9InBsb3RZZWFyIj4xODDlpKk8L2E+PGEgY2xhc3M9ImJqZC1oaWRkZW4iIGlkPSJwbG90TW9udGgiPjMw5aSpPC9hPjxhIGNsYXNzPSJiamQtaGlkZGVuIiBpZD0icGxvdDVEYXkiPjXml6Xnur88L2E+XG48L2Rpdj5cbjxkaXYgaWQ9InBsb3RBcmVhX3t7ZnJvbV9kZXZpY2V9fSI+XG5cdFxuPC9kaXY+XG48ZGl2IGlkPSJkYXNoZWRMaW5lX3t7ZnJvbV9kZXZpY2V9fSI+PC9kaXY+XG48IS0tIDxkaXYgaWQ9ImJqZC1xcmNvZGUtdHJlbmQiPlxuXHQ8aW1nIHNyYz0ie3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zL3RyZW5kX3FyY29kZS5qcGciIGFsdD0iIiBzdHlsZT0id2lkdGg6IDk0cHg7aGVpZ2h0Ojk0cHgiIC8+XG5cdDxicj5cblx0PHNwYW4+5b6u5L+h5LiK5Lmf6IO95p+l5Y6G5Y+y5Lu35qC8PC9zcGFuPlxuPC9kaXY+IC0tPid9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTtpPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBEYXRlKHQpLG49bmV3IERhdGUoZS5nZXRGdWxsWWVhcigpLGUuZ2V0TW9udGgoKSxlLmdldERhdGUoKSksaT1uLmdldFRpbWUoKSs2ODRlNTtyZXR1cm4gaX19LmNhbGwoZSxuLGUsdCksISh2b2lkIDAhPT1pJiYodC5leHBvcnRzPWkpKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpOyhmdW5jdGlvbihvLGEpeyJ1c2Ugc3RyaWN0IjtpPWZ1bmN0aW9uKCl7dmFyIHQ9MCxlPXsiMzYwYnV5IjoiI3BhZ2VfbWFwcmljZSIsc3VuaW5nOlsiZGVsLnNtYWxsLXByaWNlIiwiZGVsIiwiI2l0ZW1QcmljZT5kZWwiXSxhbWF6b246WyIuZGlnaXRhbC1saXN0LXByaWNlPnRkPi5hLXRleHQtc3RyaWtlIiwiLmEtc3BhbjEyLmEtY29sb3Itc2Vjb25kYXJ5LmEtc2l6ZS1iYXNlIiwiLmEtdGV4dC1zdHJpa2UiXSx5b3Vnb3U6ImRlbDplcSgwKSIsZGFuZ2Rhbmc6WyIucHJpY2VfbTplcSgwKSIsIi5kMTVfcHJpY2VfaW5mbyAucHJpY2VfcGMgLnByaWNlX20iXSx2aXBzaG9wOiIuSi1tUHJpY2UiLGtlZWRlOiIubWVzc2FnZV9wcmljZV9rZCIsZmVpbml1OiJkZWwuZm4tcm1iLW51bTplcSgwKSIsa2FvbGE6IiNqc19tYXJrZXRQcmljZSIsMTExOiJkZWwiLGppdXhpYW46ImRlbCIseWludGFpOiIubWstbnVtIixiZWliZWk6Jy5zdHJpa2Vbb3AtdmFsdWU9Im9yaWdpblByaWNlIl0nLGJvb2tzY2hpbmE6InRkOmVxKDE5KSIsdG1hbGw6WyIudGItcm1iLW51bSIsIi50bS10YWdQcmljZS1wYW5lbCAudG0tcHJpY2UiLCIudG0tcHJpY2UtcGFuZWwgLnRtLXByaWNlIl0sdGFvYmFvOiIjSl9TdHJQcmljZT5lbS50Yi1ybWItbnVtIiwidGFvYmFvLTk1MDk1IjoiLnRtLXByaWNlLXBhbmVsIC50bS1wcmljZTplcSgwKSIsbGVmZW5nOiIubWFya2V0UHJpY2UtcyJ9LGk9IiI7aWYodm9pZCAwIT1lW28uc2l0ZV0pe3ZhciByPWVbby5zaXRlXTtpZihyIGluc3RhbmNlb2YgQXJyYXkpci5mb3JFYWNoKGZ1bmN0aW9uKGUpe3ZhciBuPWEoZSksbz1hKGUpLnRvQXJyYXkoKS5sZW5ndGg7aWYobz4xJiYobj1hKGUrKCI6ZXEoIisoby0xKSsiKSIpKSksIXQmJm4mJm4udGV4dCgpKXt2YXIgcj1uLnRleHQoKTtyLnRyaW0mJihyPXIudHJpbSgpKTt2YXIgcz1wYXJzZUZsb2F0KHIucmVwbGFjZSgiLCIsIiIpLnJlcGxhY2UoIu+/pSIsIiIpLnJlcGxhY2UoIsKlIiwiIikucmVwbGFjZSgiJCIsIiIpLnJlcGxhY2UoIiwiLCIiKSk7dD1zLGk9ZX19KTtlbHNle3ZhciBzPWEocik7aWYocyYmcy50ZXh0KCkubGVuZ3RoPjApe3ZhciBsPXMudGV4dCgpO2wudHJpbSYmKGw9bC50cmltKCkpO3ZhciBjPXBhcnNlRmxvYXQobC5yZXBsYWNlKCIsIiwiIikucmVwbGFjZSgi77+lIiwiIikucmVwbGFjZSgiwqUiLCIiKS5yZXBsYWNlKCIsIiwiIikpO3Q9YyxpPXJ9fX1pZigiZGV0YWlsLnRtYWxsLmhrIj09PWxvY2F0aW9uLmhvc3Qpe3Q9YSgic3Bhbi50bS1wcmljZTplcSgwKSIpLnRleHQoKTt2YXIgcD1hKCJlbS50bS15ZW46ZXEoMCkiKS50ZXh0KCk7IuKCqSIhPT1wJiYiTlQkIiE9PXAmJmEoInNwYW4udG0tcHJpY2U6ZXEoMCkiKS5jc3MoInRleHQtZGVjb3JhdGlvbiIpLmluZGV4T2YoImxpbmUtdGhyb3VnaCIpIT09LTF8fCh0PW51bGwpO3ZhciBkPWEoIi53cnRvcmlnaW5wcmljZSAudG0tcHJpY2UiKS50ZXh0KCk7ZCYmKHQ9ZCl9dmFyIGg9YSgiI0pfU3RyUHJpY2UiKS50ZXh0KCkmJmEoIiNKX1N0clByaWNlIikuY3NzKCJ0ZXh0LWRlY29yYXRpb24iKS50b1N0cmluZygpLmluZGV4T2YoImxpbmUtdGhyb3VnaCIpPT09LTE7aWYoInRhb2JhbyIhPT1vLnNpdGUmJiJ0bWFsbCIhPT1vLnNpdGUmJiJ0YW9iYW8tOTUwOTUiIT09by5zaXRlfHwhKGh8fCJ0bWFsbCI9PT1vLnNpdGUmJiJub25lIj09PWEoIiNKX1N0clByaWNlTW9kQm94IikuY3NzKCJkaXNwbGF5IikpfHwiLnRtLXByaWNlLXBhbmVsIC50bS1wcmljZSIhPT1pJiYiI0pfU3RyUHJpY2U+ZW0udGItcm1iLW51bSIhPT1pfHwodD1udWxsKSwidGFvYmFvIj09PW8uc2l0ZXx8InRtYWxsIj09PW8uc2l0ZXx8InRhb2Jhby05NTA5NSI9PT1vLnNpdGUpe3ZhciB1PWEoaSk7dS5jc3MoInRleHQtZGVjb3JhdGlvbiIpJiZ1LmNzcygidGV4dC1kZWNvcmF0aW9uIikudG9TdHJpbmcoKS5pbmRleE9mKCJsaW5lLXRocm91Z2giKT09PS0xJiYoInRhb2JhbyI9PT1vLnNpdGU/dS5wYXJlbnQoKS5jc3MoInRleHQtZGVjb3JhdGlvbiIpLnRvU3RyaW5nKCkuaW5kZXhPZigibGluZS10aHJvdWdoIik9PT0tMSYmKHQ9bnVsbCk6dD1udWxsKX1pZigiYm9va3NjaGluYSI9PT1vLnNpdGUpe3ZhciBtPWEoInRkIikudG9BcnJheSgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5pbm5lclRleHR9KSxmPW0uaW5kZXhPZigi5a6awqDCoMKgwqDku7fvvJoiKTt0PW1bZisxXX12YXIgZz1udWxsO3JldHVybiJ3d3cuYW1hem9uLmNvLmpwIj09PWxvY2F0aW9uLmhvc3QmJihnPSJKUFkiKSx0PW4oMjMpKHQsZyksdD1wYXJzZUZsb2F0KHQpfS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KS5jYWxsKGUsbigxKSxuKDQpKX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9ImJhclRyZW5kSW5mb0JveCB7e2lmIHNob3djb3VkYW59fSBzaG93Y291ZGFuIHt7L2lmfX0iPlxuICA8ZGl2IGNsYXNzPSJ0cmVuZC1tYXgtbWluLXByaWNlIj5cbiAgICA8ZW0gY2xhc3M9ImNpcmNsZV9tYXJrIj48L2VtPlxuICAgIDxzcGFuIGNsYXNzPSJwYWdlLXByaS10bGUiPumhtemdouS7tzwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz0icGFnZS1wdGktdGxlLW1oIj46PC9zcGFuPlxuICAgIHt7aWYgZDEubm93cHJpY2V9fVxuICAgIDxzcGFuIGNsYXNzPSJ0LW5vdy1wcmkyIj5cbiAgICAgIDxzcGFuIGNsYXNzPSJub3ctcC1zcDEiPueOsOS7tzwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJwLXNwaS1taCI+Ojwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJwcmlmb250ZiBub3ctcC1zcDIiPnt7ZDEubm93cHJpY2V9fTwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gICAge3tlbHNlfX1cbiAgICA8c3BhbiBjbGFzcz0idC1tYXgtcHJpIj5cbiAgICAgIDxzcGFuIGNsYXNzPSJtYXgtcC1zcDEiPuacgOmrmDwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJwLXNwaS1taCI+Ojwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJwcmlmb250ZiBtYXgtcC1zcDIiPnt7ZDEuUGhpZ2hlc3R9fTwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9InQtbWluLXByaSI+XG4gICAgICA8c3BhbiBjbGFzcz0ibWluLXAtc3AxIj7mnIDkvY48L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0icC1zcGktbWgiPjo8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0icHJpZm9udGYgbWluLXAtc3AyIj57e2QxLlBsb3dlc3R9fTwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gICAge3svaWZ9fVxuICAgIDxzcGFuIGNsYXNzPSJ0LW1pbi1kYXRlIHByaWZvbnRmIj57e2QxLmxvd2VzdERhdGV9fTwvc3Bhbj5cbiAgPC9kaXY+XG4gIHt7aWYgc2hvd2NvdWRhbn19XG4gICAgPGRpdiBjbGFzcz0idHJlbmQtZHNqLXByaWNlIj5cbiAgICAgIDxlbSBjbGFzcz0iY2lyY2xlX21hcmsiPjwvZW0+XG4gICAgICA8c3BhbiBjbGFzcz0iZHNqLXByaS10bGUiPuWHkeWNleWIsOaJi+S7tzwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJwYWdlLXB0aS10bGUtbWgiPjo8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0iZHNqLW1heCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJtYXgtcC1zcDEiPuacgOmrmDwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InAtc3BpLW1oIj46PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0icHJpZm9udGYgbWF4LXAtc3AyIj57e2QyLlBoaWdoZXN0fX08L3NwYW4+XG4gICAgICAgIDxlbT48L2VtPlxuICAgICAgPC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9InQtbWluLXByaSI+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJtaW4tcC1zcDEiPuacgOS9jjwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InAtc3BpLW1oIj46PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0icHJpZm9udGYgbWluLXAtc3AyIj57e2QyLlBsb3dlc3R9fTwvc3Bhbj5cbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0LW1pbi1kYXRlIHByaWZvbnRmIj57e2QyLmxvd2VzdERhdGV9fTwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJkc2otcHJvLXRsZTIiPuWHkeWNleS/oeaBrzombmJzcDs8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0iZHNqLXByby10eHQiPnt7ZDIubG93ZXN0UHJvbW99fTwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAge3svaWZ9fVxuPC9kaXY+XG5cbid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8cCBjbGFzcz0icHJpZm9udGYiPnt7ZGF0YS50aW1lfX08L3A+XG57e2lmIGRhdGEucGFnZVByaWNlfX1cbjxkaXYgY2xhc3M9InRpcC1pdGVtIHRpcC1wYWdlcHJpIj5cbiAgPGVtPjwvZW0+XG4gIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDEiPumhtemdouS7tzwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9InRpcC1pdGVtLXNwMiI+Ojwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9InRpcC1pdGVtLXNwMyBwcmlmb250ZiI+e3tkYXRhLnBhZ2VQcmljZX19PC9zcGFuPlxuPC9kaXY+XG57ey9pZn19XG57e2lmIGRhdGEuZGlyZWN0cHJvfX1cbjxkaXYgY2xhc3M9InRpcC1pdGVtIHRpcC1kaXJlY3Rwcm8iPlxuICA8ZW0+PC9lbT5cbiAgPHNwYW4gY2xhc3M9InRpcC1pdGVtLXNwMSI+5Yiw5omL5Lu3PC9zcGFuPlxuICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3AyIj46PC9zcGFuPlxuICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3AzIHByaWZvbnRmIj7CpXt7ZGF0YS5kaXJlY3Rwcm99fTwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9InRpcC1pdGVtLXNwNCI+IHt7I2RhdGEucHJvbW8yfX08L3NwYW4+XG48L2Rpdj5cbnt7L2lmfX1cbnt7aWYgZGF0YS5hZGRwcm99fVxuPGRpdiBjbGFzcz0idGlwLWl0ZW0gdGlwLWFkZHBybyI+XG4gIDxlbT48L2VtPlxuICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3AxIj7lh5HljZXliLDmiYvku7c8L3NwYW4+XG4gIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDIiPjo8L3NwYW4+XG4gIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDMgcHJpZm9udGYiPsKle3tkYXRhLmFkZHByb319PC9zcGFuPlxuICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3A0Ij57eyNkYXRhLnByb21vMX19PC9zcGFuPlxuPC9kaXY+XG57ey9pZn19J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9InByaWZvbnRmIHRpcC10aW1lIj57e2RhdGEudGltZX19PC9kaXY+XG48ZGl2IGNsYXNzPSJwcmktcmlnaHQtaW5mbyB7e2RvbWNsYXNzfX0iPlxuICB7e2lmIGRhdGEucGFnZVByaWNlfX1cbiAgICA8ZGl2IGNsYXNzPSJ0aXAtaXRlbSB0aXAtcGFnZXByaSI+XG4gICAgICA8ZW0+PC9lbT5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDEiPumhtemdouS7tzwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDIiPjo8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3AzIHByaWZvbnRmIj57e2RhdGEucGFnZVByaWNlfX08L3NwYW4+XG4gICAgPC9kaXY+XG4gIHt7L2lmfX1cbiAge3tpZiBkYXRhLmRpcmVjdHByb319XG4gICAgPGRpdiBjbGFzcz0idGlwLWl0ZW0gdGlwLWRpcmVjdHBybyI+XG4gICAgICA8ZW0+PC9lbT5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDEiPuWIsOaJi+S7tzwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDIiPjo8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3AzIHByaWZvbnRmIj7CpXt7ZGF0YS5kaXJlY3Rwcm99fTwvc3Bhbj5cbiAgICAgIDxzcGFuIGNsYXNzPSJ0aXAtaXRlbS1zcDQiPiB7eyNkYXRhLnByb21vMn19PC9zcGFuPlxuICAgIDwvZGl2PlxuICB7ey9pZn19XG4gIHt7aWYgZGF0YS5hZGRwcm99fVxuICAgIDxkaXYgY2xhc3M9InRpcC1pdGVtIHRpcC1hZGRwcm8iPlxuICAgICAgPGVtPjwvZW0+XG4gICAgICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3AxIj7lh5HljZXliLDmiYvku7c8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3AyIj46PC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9InRpcC1pdGVtLXNwMyBwcmlmb250ZiI+wqV7e2RhdGEuYWRkcHJvfX08L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0idGlwLWl0ZW0tc3A0Ij57eyNkYXRhLnByb21vMX19PC9zcGFuPlxuICAgIDwvZGl2PlxuICB7ey9pZn19XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPW4oMTU5KSxvPW4oMTApLGE9dm9pZCAwLHI9dm9pZCAwLHM9ZnVuY3Rpb24oKXt2YXIgdD17dHlwZToianNvbiIsYnJvd3NlcjoiY2hyb21lIix2ZXI6IjYuMSIsc3R5bGVfc2hvd190eXBlOm51bGwsc3R5bGVfQURJRDpudWxsLGN1cnJlbmN5Om51bGwsbGFuZ3VhZ2U6ImVuZ2xpc2giLHI6LjcxOTY5NTkxMzk4MTc1MzEsdXJsOmxvY2F0aW9uLmhyZWZ9LGU9InR5cGU9Iit0LnR5cGUrIiZicm93c2VyPSIrdC5icm93c2VyKyImdmVyPSIrdC52ZXIrIiZzdHlsZV9zaG93X3R5cGU9dW5kZWZpbmVkJnN0eWxlX0FESUQ9dW5kZWZpbmVkJmN1cnJlbmN5PXVuZGVmaW5lZCZsYW5ndWFnZT0iK3QubGFuZ3VhZ2UrIiZyPSIrdC5yKyImdXJsPSIrZW5jb2RlVVJJQ29tcG9uZW50KGxvY2F0aW9uLmhyZWYpO3JldHVybiBlfSxsPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1mdW5jdGlvbihlKXtmb3IodmFyIG49MDtuPHQubGVuZ3RoLTE7bisrKWlmKGU+PTFlMypOdW1iZXIodFtuXS50aW1lX3VwZGF0ZSkmJmU8MWUzKk51bWJlcih0W24rMV0udGltZV91cGRhdGUpKXJldHVybiB0W25dLnByaWNlO3JldHVybiB0W3QubGVuZ3RoLTFdLnByaWNlfSxuPTM2ZTUsbz0yNCpuLHI9TnVtYmVyKGEubG93ZXN0X3BpY2UucHJpY2UpLHM9cixsPTFlMypOdW1iZXIodFswXS50aW1lX3VwZGF0ZSksYz1uZXcgRGF0ZShsKS5nZXREYXRlKCkscD1uZXcgRGF0ZShsKS5nZXRNb250aCgpLGQ9bmV3IERhdGUobCkuZ2V0RnVsbFllYXIoKSxoPVtdLHU9bmV3IERhdGUsbT10W3QubGVuZ3RoLTFdLnByaWNlLGY9MDtmPHQubGVuZ3RoO2YrKylOdW1iZXIodFtmXS5wcmljZSk+cyYmKHM9TnVtYmVyKHRbZl0ucHJpY2UpKTtmb3IodmFyIGc9cisiLSIrcyx3PWw7dzw9dS5nZXRUaW1lKCk7KXt2YXIgeD1lKHcpO2gucHVzaChwYXJzZUZsb2F0KHgpKSx3Kz1vfXZhciBiPWkuZ2V0UHJpY2VTdGF0dXNOZXcoaCksXz1iLnByaWNlX3N0YXR1cyx2PW51bGw7aC5sZW5ndGg+PTM2NSYmKHY9aC5zbGljZShoLmxlbmd0aC0zNjUpKTt2YXIgeT1udWxsO2gubGVuZ3RoPj0zMSYmKHk9aC5zbGljZShoLmxlbmd0aC0zMSkpO3ZhciBrPW51bGw7aWYoaC5sZW5ndGg+PTYpe3ZhciB6PWguc2xpY2UoaC5sZW5ndGgtNik7az1bXTtmb3IodmFyIGY9MDtmPHoubGVuZ3RoLTE7ZisrKXtmb3IodmFyIGo9W10sQz0wO0M8MjQ7QysrKWoucHVzaCh6W2ZdKTtrPWsuY29uY2F0KGopfWsucHVzaCh6W3oubGVuZ3RoLTFdKX12YXIgUz17cHJpY2Vfc3RhdHVzOl8sc3RhcnREOmMsc3RhcnRNOnAsc3RhcnRZOmQsbm93X2RheTp1LmdldFRpbWUoKSxleHRyYToic3RhcnQgZnJvbSBhbm90aGVyIixzdG9yZTpbe2N1cnJlbnRfcHJpY2U6bSxhbGxfbGluZTpoLGFsbF9saW5lX2JlZ2luX3RpbWU6bCs4Km4seWVhcl9saW5lOnYseWVhcl9saW5lX3RpbWU6dS5nZXRUaW1lKCktMzY1Km8sbW9udGhfbGluZTp5LG1vbnRoX2xpbmVfdGltZTp1LmdldFRpbWUoKS0zMCpvLHNob3J0X2RheV9saW5lOmssc2hvcnRfZGF5X2xpbmVfYmVnaW5fdGltZTp1LmdldFRpbWUoKSs4Km4tNSpvLG1pbl9zdGFtcDoiMCIsaXNsb3dlc3Q6MCxuYW1lOiJhbGlleHByZXNzIixwcmljZV9yYW5nZTpnLHByb21vOltdLGFsbF9lcXVhbF9zaG9ydDohMX1dfTtyZXR1cm4gU307dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXt2YXIgdD1zKCk7by5vbihmdW5jdGlvbih0KXsic3RyaW5nIj09dHlwZW9mIHQmJih0PUpTT04ucGFyc2UodCkpLCJhbGlleHByZXNzIj09PXQudHlwZSYmKGE9SlNPTi5wYXJzZSh0LnZhbHVlKSxhLnByaWNlX3RyYWNraW5nJiYoYS5wcmljZV90cmFja2luZz1sKGEucHJpY2VfdHJhY2tpbmcpLHImJnIoYS5wcmljZV90cmFja2luZykpKX0pLG8udHJpZ2dlcih7dHlwZToiYWxpZXhwcmVzcyIsdXJsOiJodHRwczovL3BsdWdpbi5hbGlwcmljZS5jb20vcGx1Z2luL2Nocm9tZV92MDcucGhwPyIrdH0pfSx0LmV4cG9ydHMuZ2V0VHJlbmREYXRhPWZ1bmN0aW9uKHQpe2E/dChhKTpyPXR9fSxmdW5jdGlvbih0LGUsbil7dmFyIGk7KGZ1bmN0aW9uKG8peyJ1c2Ugc3RyaWN0IjtpPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3ZhciB0PSIiLGU9e3Rhb2Jhbzoi5reY5a6dIix0bWFsbDoi5aSp54yrIiwiMzYwYnV5Ijoi5Lqs5Lic5ZWG5Z+OIiwiNTFidXkiOiLmmJPov4XnvZEiLHN1bmluZzoi6IuP5a6B5piT6LStIix5aWhhb2RpYW46IuS4gOWPt+W6lyIsZGFuZ2Rhbmc6IuW9k+W9k+e9kSIsZ29tZToi5Zu9576O5Zyo57q/IixsZWZlbmc6IuS5kOicgue9kSIseGl1OiLotbDnp4DnvZEiLHBoaWxpcHM6IumjnuWIqea1piIsdGNsOiJUQ0zllYbln44iLCJlLWNoYW5naG9uZyI6IumVv+iZueWVhuWfjiIsa29ua2E6IuW6t+S9s+WVhuWfjiIsaGlzZW5zZToi5rW35L+h5ZWG5Z+OIixpbmVpZ286IueIseWGhei0rSIsc2tnOiJTS0fllYbln44iLCJrLXRvdWNoIjoi5aSp6K+t5omL5py65a6Y572RIixnaW9uZWU6IumHkeeriyIsb3BwbzoiT1BQTyIsZ2ZpdmU6IuWfuuS8jeWumOaWueWVhuWfjiIsdml2bzoidml2byIsbWVpbGlzaHVvOiLnvo7kuL3or7QiLG1vZ3VqaWU6IuiYkeiPh+ihlyIseGlhb21pOiLlsI/nsbPlrpjnvZEiLGxlbWFsbDoi5LmQ6KeG5ZWG5Z+OIixncmFpbmdlcjoi5Zu65a6J5o235a6Y572RIixwaWFvOiLnvZHmmJPnlLXlvbHnpagiLDE2Mzoi572R5piT5ZWG5Z+OIixkaWFucGluZzoi54K56K+E5ZuiIixudW9taToi55m+5bqm57Ov57GzIixtZWl0dWFuOiLnvo7lm6IiLGJvb2t1dToi5Y2a5bqT5paH5YW3Iixib29rc2NoaW5hOiLkuK3lm73lm77kuabnvZEiLDE2ODg6IumYv+mHjOW3tOW3tCIsem9sOiLkuK3lhbPmnZHllYbln44iLGFtYXpvbjoi5Lqa6ams6YCKIix0aWFudGlhbjoi5aSp5aSp572RIix3b21haToi5oiR5Lmw572RIix5b3Vnb3U6IuS8mOi0ree9kSIsdm1hbGw6IuWNjuS4uuWVhuWfjiIscGFpeGllOiLmi43pnovnvZEiLG5ld2VnZzoi5paw6JuL5ZWG5Z+OIix2YW5jbDoi5Yeh5a6i6K+a5ZOBIn07dHJ5e2Zvcih2YXIgbj1vLnNpdGUsaT1bIjM2MGJ1eSIsImdvbWUiLCJzdW5pbmciLCJ0YW9iYW8iLCJ5aWhhb2RpYW4iLCJ3b21haSIsImJvb2tzY2hpbmEiLCJwYWl4aWUiLCJib29rdXUiLCJ0aWFudGlhbiJdLGE9MDthPGkubGVuZ3RoO2ErKylpZihuLmluZGV4T2YoaVthXSk+LTEpe249aVthXTticmVha310PWVbbl19Y2F0Y2gocil7aWYoby5kZWJ1Zyl0aHJvdyByfXJldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgdCYmKHQ9IiIpLCLmt5jlrp0iPT10JiZ3aW5kb3cubG9jYXRpb24uaG9zdC50b1N0cmluZygpLmluZGV4T2YoInRtYWxsIik+LTEmJih0PSLlpKnnjKsiKSx0fWZ1bmN0aW9uIGUodCl7cmV0dXJuIHBhcnNlSW50KHQpPjk5OTk5OT9wYXJzZUludCh0KTpwYXJzZUZsb2F0KHQpLnRvRml4ZWQoMSl9ZnVuY3Rpb24gaSh0KXtpZigidGFvYmFvIiE9by5zaXRlJiYwPT10LnN0b3JlLmxlbmd0aCx0LnN0b3JlLmxlbmd0aD4wKXtJKHQpLCJib3R0b20iPT09by5zdHlsZT9CKHQpOihnKCIjZ3dkYW5nLXRyZW5kIC5wcmljZS10cmVuZC1pY29uIikuc2hvdygpLGcoIiMiK28uZXh0QnJhbmQrIl9wcmljZV9oaXN0b3J5X2J0biAucHJpY2UtdHJlbmQtaWNvbiIpLnNob3coKSwwPT10LnByaWNlX3N0YXR1cz8oZygiI2d3ZGFuZy10cmVuZCAucHJpY2UtdHJlbmQtaWNvbiIpLmNzcygibWFyZ2luLXRvcCIsIjdweCIpLGcoIiNnd2RhbmctdHJlbmQgLnByaWNlLXRyZW5kLWljb24iKS5jc3MoImJhY2tncm91bmQtcG9zaXRpb24iLCItMTg5cHggLTMxcHgiKSxnKCIjZ3dkYW5nLXRyZW5kLXRleHQiKS5jc3MoImNvbG9yIiwiI2ZmOTAwMCIpLmh0bWwoIuS7t+agvOW5s+eosyIpKToxPT10LnByaWNlX3N0YXR1cz8oZygiI2d3ZGFuZy10cmVuZCAucHJpY2UtdHJlbmQtaWNvbiIpLmNzcygibWFyZ2luLXRvcCIsIjZweCIpLGcoIiNnd2RhbmctdHJlbmQgLnByaWNlLXRyZW5kLWljb24iKS5jc3MoImJhY2tncm91bmQtcG9zaXRpb24iLCItMjIycHggLTMxcHgiKSxnKCIjZ3dkYW5nLXRyZW5kLXRleHQiKS5jc3MoImNvbG9yIiwiI2Q4MDAwMSIpLmh0bWwoIuS7t+agvOS4iua2qCIpKTooZygiI2d3ZGFuZy10cmVuZCAucHJpY2UtdHJlbmQtaWNvbiIpLmNzcygibWFyZ2luLXRvcCIsIjRweCIpLHoodCl8fHQuc3RvcmVbMF0uaXNsb3dlc3Q/KGcoIiNnd2RhbmctdHJlbmQgLnByaWNlLXRyZW5kLWljb24iKS5jc3MoImJhY2tncm91bmQtcG9zaXRpb24iLCItMjU0cHggLTMxcHgiKSxnKCIjZ3dkYW5nLXRyZW5kLXRleHQiKS5jc3MoImNvbG9yIiwiIzAwQTY2QyIpLmh0bWwoIuWOhuWPsuacgOS9jiIpKTooZygiI2d3ZGFuZy10cmVuZCAucHJpY2UtdHJlbmQtaWNvbiIpLmNzcygiYmFja2dyb3VuZC1wb3NpdGlvbiIsIi0yNTRweCAtMzFweCIpLGcoIiNnd2RhbmctdHJlbmQtdGV4dCIpLmNzcygiY29sb3IiLCIjMDBBNjZDIikuaHRtbCgi5Lu35qC85LiL6ZmNIikpKSksZygiI2d3ZGFuZy10cmVuZCIpLnNob3coKSxnKCIjZ3dkYW5nLXRyZW5kLWN1cnJlbnQtcHJpY2UiKS5odG1sKG0ocGFyc2VGbG9hdCh0LnN0b3JlWzBdLmN1cnJlbnRfcHJpY2UpKSksaCYmKGcoIiNnd2RhbmctdHJlbmQtY3VycmVudC1wcmljZSIpLmh0bWwobShwYXJzZUZsb2F0KHcuZ2V0UHJpY2VCZWZvcmVFeGNoYW5nZVJhdGUoby5kcC5vbGRQcmljZSkpKSksInd3dy5hbWF6b24uY28uanAiPT1sb2NhdGlvbi5ob3N0JiZnKCIjZ3dkYW5nLXRyZW5kLWN1cnJlbnQtcHJpY2UiKS5odG1sKG0ocGFyc2VGbG9hdCh3LmdldFByaWNlQmVmb3JlRXhjaGFuZ2VSYXRlKG8uZHAub2xkUHJpY2UpKSkrIuaXpeWFgyIpKTt2YXIgZT10LnN0b3JlWzBdLnByaWNlX3JhbmdlLnNwbGl0KCItIiksbj1tKHBhcnNlRmxvYXQoZVswXSkpKyItIittKHBhcnNlRmxvYXQoZVsxXSkpO2coIiNnd2RhbmctdHJlbmQtcHJpLXJhbmdlIikuaHRtbChuKSwid3d3LmFtYXpvbi5jby5qcCI9PWxvY2F0aW9uLmhvc3QmJmcoIiNnd2RhbmctdHJlbmQtcHJpLXJhbmdlIikuaHRtbChuKyLml6XlhYMiKSxnKCIjZ3dkYW5nLXByaS10cmVuZC1jaGFydCIpLmNzcygid2lkdGgiLG8ud2lkdGgtNDAwKSxnKCIjZ3dkYW5nLXRyZW5kLWRldGFpbCAucmVtaW5kIikuY3NzKCJsZWZ0IixvLndpZHRoLTM3OSksZygiI2d3ZGFuZy1yZW1pbmQtYnRuIikuY2xpY2soZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLGcoIi5yZW1pbmQtZXJyb3IiKS5oaWRlKCk7dmFyIGU9L15bXHctXSsoXC5bXHctXSspKkBbXHctXSsoXC5bXHctXSspKyQvLG49MSxpPTAsYT1nKCIjZ3dkYW5nLXJlbWluZC1lbWFpbCIpLnZhbCgpLHI9by5ub3dfZHBfaWQ7ZygiI2d3ZGFuZy1wcmktbm90aWNlLWltIikuYXR0cigiY2hlY2tlZCIpP249MTpnKCIjZ3dkYW5nLXByaS1ub3RpY2UtbGkiKS5hdHRyKCJjaGVja2VkIikmJihuPTIsaT1wYXJzZUZsb2F0KGcoIiNnd2RhbmctcHJpLWxpbWl0IikudmFsKCkpKSxlLnRlc3QoYSk/Xy5nZXQoby5zZXJ2ZXIrIi9icndleHQvcmVtaW5kP2FjdGlvbj1hZGQmZHBfaWQ9IityKyImZW1haWw9IitlbmNvZGVVUklDb21wb25lbnQoYSkrIiZ0eXBlPSIrbisiJnByaWNlPSIraSkuZG9uZShmdW5jdGlvbih0KXsxPT10LmNvZGU/ZygiI2d3ZGFuZy1yZW1pbmQtZXJyb3IyIikuc2hvdygpOjI9PXQuY29kZT9nKCIjZ3dkYW5nLXJlbWluZC1lcnJvcjMiKS5zaG93KCk6ZygiI2d3ZGFuZy1yZW1pbmQtZXJyb3IxIikuc2hvdygpfSk6ZygiI2d3ZGFuZy1yZW1pbmQtZXJyb3IwIikuc2hvdygpfSksIiIhPW8uZW1haWwmJmcoIiNnd2RhbmctcmVtaW5kLWVtYWlsIikudmFsKG8uZW1haWwpLChvLklFNnx8by5JRTcpJiYiYW1hem9uIj09by5zaXRlJiZnKCIjZ3dkYW5nLXJlbWluZC1lbWFpbCIpLmhlaWdodCgyOCl9fWZ1bmN0aW9uIGEodCxpKXtpZighKG8uc2l0ZS5pbmRleE9mKCJ0YW9iYW8iKT4tMXx8by5zaXRlLmluZGV4T2YoInRtYWxsIik+LTEpKXt2YXIgYT1uKDExNSkscj1uKDE2MSkscz1bXTtvLnNhdmVfZHBfcXVlcnkmJm8uc2F2ZV9kcF9xdWVyeS5iMmMmJm8uc2F2ZV9kcF9xdWVyeS5iMmMuc3RvcmUmJihzPW8uc2F2ZV9kcF9xdWVyeS5iMmMuc3RvcmUpO2Zvcih2YXIgbD1nKCIjdHJlbmRfZGV0YWlsX2JvZHlfdWwiKSxjPVtdLHA9cy5sZW5ndGgsZD1bMSwxMDMsMTA4LDEyMywxMjQsMTI2LDEyOSwxMzQsMTM2LDE0LDE0MSwxNSwxNjcsMTY4LDE5LDIsMjEsMjUsMjYsMjgsMywzMSwzNCwzNSw0MSw2LDY2LDcsODYsOTMsOV0saD0wO2g8cy5sZW5ndGgmJmg8NjtoKyspe3ZhciB1PXNbaF0ucHJvZHVjdCYmc1toXS5wcm9kdWN0WzBdfHxzW2hdLG09dS5kcF9pZHx8IiIsZj1tLm1hdGNoKC9bMC05XSstKFswLTldKykvKTtmPWYmJmZbMV07dmFyIHc9ZC5pbmRleE9mKE51bWJlcihmKSk+LTE/Ii5wbmciOiIuaWNvIjtmJiYodS5wcmljZT1lKHUucHJpY2UucmVwbGFjZSgvLC9nLCIiKSksdS5pY291cmw9by5zX3NlcnZlcisiL2ltYWdlcy9mYXZpY29uLyIrZit3LGMucHVzaCh1KSl9dmFyIGI9IuWFtuS7liIrcCsi5a625oql5Lu3IjswPT09Yy5sZW5ndGg/Yj0i5pqC5peg5ZWG5Z+O5q+U5Lu3IjpjWzBdLnByaWNlPE51bWJlcih0LnN0b3JlWzBdLmN1cnJlbnRfcHJpY2UpJiYoYj0i5pu05L2O5Lu377yaIitjWzBdLnByaWNlKSxsLmFwcGVuZCh4LmNvbXBpbGUoYSkoe2RhdGE6YyxhbGxMaW5rOm8uY19zZXJ2ZXIrIi9kcCIrby5ub3dfZHBfaWQsc3RvcmVTaXplOnB9KSksZygiLnRyZW5kLWNvbS1taW5pIikuYXBwZW5kKHguY29tcGlsZShyKSh7ZGF0YTpjLGFsbExpbms6by5jX3NlcnZlcisiL2RwIitvLm5vd19kcF9pZCxzdG9yZVNpemU6cH0pKSxnKCIjZ3dkX21pbmlfY29tcGFyZSIpLnNob3coKSwwPT09Yy5sZW5ndGgmJmcoIiNnd2RfbWluaV9jb21wYXJlIikuYWRkQ2xhc3MoIm5vLWNvbS1pbmZvIikub2ZmKCksZygiI2d3ZF9taW5pX2NvbXBhcmUgLm1pbi1jb20tYm94IHNwYW4iKS50ZXh0KGIpfX1mdW5jdGlvbiByKHQpe3ZhciBlPXt3aWR0aDo0MDAsaGVpZ2h0OjIwMH07Imx1eW91IiE9by5idHlwZSYmKGUud2lkdGg9MzYwLGUuaGVpZ2h0PTE4MCksc3x8KHM9ITAsYSh0LDQpLE8odCwiMThweCIsZSkpfXZhciBzLGwsYz10aGlzLHA9MzZlNSxkPTI0KnAsaD0hMSx1PXZvaWQgMCxtPW4oMTYwKSxmPXt9LGc9big0KSx3PW4oMjMpLHg9bigyMiksYj1uKDEzKSxfPW4oMjQpLHY9WyJ3YW5nZ291LmNvbSIsImx2eW91bWFsbC5jb20iLCJkb3ViYW4uY29tIiwic2hhbmdwaW4uY29tIiwic2hhbmdwaW4uY29tLmhrIl0seT1mdW5jdGlvbigpe3ZhciB0PXdpbmRvdy5sb2NhdGlvbi5ob3N0LnRvU3RyaW5nKCk7Zm9yKHZhciBlIGluIHYpaWYodC5pbmRleE9mKHZbZV0pPjApcmV0dXJuIGcoIiMiK28uZXh0QnJhbmQrIl93aXNobGlzdF90cmVuZF9kZXRhaWwiKS5oaWRlKCksZygiIyIrby5leHRCcmFuZCsiX3ByaWNlX2hpc3RvcnlfYnRuIikuaGlkZSgpLGcoIiMiK28uZXh0QnJhbmQrIl93aXNobGlzdF9idG4iKS5jc3MoImJvcmRlci1sZWZ0IiwiMXB4IHNvbGlkICNkZGQiKSwhMDtyZXR1cm4hMX0saz1mdW5jdGlvbih0KXtsPWIuZ2V0KCJwZXJtYW5lbnQiKS5zdHlsZSxuKDE1MCkuaW5pdCh0LCJkcFBhZ2UiLCExLHt0b3A6ITEsbWlkZGxlOiExLGJvdHRvbTohMSxiYWlkdTohMX0pLCghdHx8dCYmMD09PXQuc3RvcmUubGVuZ3RoKSYmby5uZXdfZXh0ZW5zaW9uJiYoZygiIyIrby53aXNoZG9tMikuaGlkZSgpLGcoIi4iK28uZXh0QnJhbmQrIl9wcm9tb19icmFuZF9sYXlvdXQiKS5jc3MoInBhZGRpbmciLCIwcHgiKSk7dHJ5eyJ0b3AiIT1sJiYicmlnaHQiIT1sfHwoInRvcCI9PWwmJihpKHQpLG8uZml4V2lkdGgoKSkscih0KSksImJvdHRvbSI9PWwmJihpKHQpLHIodCksby5hdXRvRml4V2lkdGgoKSksKG8uSUU3fHxvLklFOCkmJm4oIWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IEVycm9yKCdDYW5ub3QgZmluZCBtb2R1bGUgIi4vdXBkYXRlIicpO3Rocm93IHQuY29kZT0iTU9EVUxFX05PVF9GT1VORCIsdH0oKSkudHJlbmRVcGRhdGUoKX1jYXRjaChlKXtpZihvLmRlYnVnKXRocm93IGV9fSx6PWZ1bmN0aW9uKHQsZSl7aWYoZSl7dmFyIG49cGFyc2VGbG9hdCh0LnN0b3JlWzBdLmN1cnJlbnRfcHJpY2UucmVwbGFjZSgiLCIsIiIpKSxpPXBhcnNlRmxvYXQodC5zdG9yZVswXS5wcmljZV9yYW5nZS5zcGxpdCgiLSIsMSlbMF0ucmVwbGFjZSgiLCIsIiIpKTtyZXR1cm4gbj09aX10cnl7dmFyIG49cGFyc2VJbnQodC5zdG9yZVswXS5jdXJyZW50X3ByaWNlLnJlcGxhY2UoIiwiLCIiKSksbz10LnN0b3JlWzBdLmFsbF9saW5lO249b1tvLmxlbmd0aC0xXTt2YXIgYT1NYXRoLm1pbi5hcHBseShudWxsLHQuc3RvcmVbMF0uYWxsX2xpbmUpO3JldHVybiBuPT1hfWNhdGNoKHIpe319LGo9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtpZihpPj05JiYiYW1hem9uIj09by5zaXRlJiZsb2NhdGlvbi5ob3N0LmluZGV4T2YoImNuIikhPS0xKXJldHVybiB0KCExKTtpZihpPj02KXJldHVybiB0KCExKTt2YXIgbj1nKCIjIitvLmV4dEJyYW5kKyJfbXlEaXYiKS50ZXh0KCk7Cm4/dChuKTooaSsrLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKHQpfSwxZTMpKX12YXIgaT0wOyI2cG0iPT09by5zaXRlJiYoaD0hMCx1PSJVU0QiKSwiYW1hem9uIj09PW8uc2l0ZSYmInd3dy5hbWF6b24uY24iIT1sb2NhdGlvbi5ob3N0PyhoPSEwLHU9IlVTRCIsInd3dy5hbWF6b24uY28uanAiPT1sb2NhdGlvbi5ob3N0JiYodT0iSlBZIiksWyJ3d3cuYW1hem9uLmZyIiwid3d3LmFtYXpvbi5kZSIsInd3dy5hbWF6b24uZXMiLCJ3d3cuYW1hem9uLm5sIiwid3d3LmFtYXpvbi5pdCJdLmluZGV4T2YobG9jYXRpb24uaG9zdCk+LTEmJih1PSJFVVIiKSwid3d3LmFtYXpvbi5jYSI9PWxvY2F0aW9uLmhvc3QmJih1PSJDQUQiKSwid3d3LmFtYXpvbi5jby51ayI9PWxvY2F0aW9uLmhvc3QmJih1PSJHQlAiKSxlKGZ1bmN0aW9uKGUpe2lmKGUpe2lmKCJhbWF6b24iPT09by5zaXRlKXt2YXIgbj1TKGUpO24/dChuKTpDKGZ1bmN0aW9uKGUpe3QoZSl9KX19ZWxzZSBDKGZ1bmN0aW9uKGUpe3QoZSl9KX0pKToidG1hbGwiPT09by5zaXRlfHwidGFvYmFvLTk1MDk1Ij09PW8uc2l0ZXx8ImFpLXRhb2JhbyI9PT1vLnNpdGV8fCJ0YW9iYW8iPT09by5zaXRlP0MoZnVuY3Rpb24oZSl7ZS5zdG9yZS5sZW5ndGg+MCYmZS5zdG9yZVswXS5hbGxfbGluZS5sZW5ndGg+MD90KGUpOm4oMzMpLmdldFRyZW5kKGZ1bmN0aW9uKG4pe24/QShuLGZ1bmN0aW9uKG4pe3Qobj9uOmUpfSk6dChlKX0pfSk6ImFsaWV4cHJlc3MiPT09by5zaXRlP24oMTU4KS5nZXRUcmVuZERhdGEoZnVuY3Rpb24oZSl7ZSYmdChlKX0pOkMoZnVuY3Rpb24oZSl7dChlKX0pfSxDPWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKCl7dmFyIGU9TihvLnNpdGUpO2lmKGV8fChlPW8uZHAucHJpY2UpLCJzdW5pbmciPT09by5zaXRlKXt2YXIgbj12b2lkIDAsaT1nKCIudzMiKS50b0FycmF5KCk7aT1pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdC5pbm5lckhUTUx9KSxpLmluZGV4T2YoIuWboui0reS7tyIpPi0xJiYobj1nKCJzcGFuLnNtYWxsLXByaWNlIikudGV4dCgpKTt2YXIgYT1nKCIjcHJvbW90aW9uUHJpY2UubWFpbnByaWNlIikudGV4dCgpLHI9ZygiLm1haW5wcmljZSIpLnRleHQoKTtyJiYoZT1yKSxhJiYoZT1hKSxuJiYoZT1uKSxlPXcoZSksby5kcC5wcmljZT1lfWU9cGFyc2VGbG9hdChlKSxlPyhoJiYoZT13LmdldFByaWNlQmVmb3JlRXhjaGFuZ2VSYXRlKG8uZHAub2xkUHJpY2UpKSxlPXBhcnNlSW50KHBhcnNlRmxvYXQoMTAwKmUpLnRvRml4ZWQoMikpLGU9ZS50b0ZpeGVkKDIpKTplPSIiLG8ubm9SZWFsUHJpY2UmJihlPTApO3ZhciBzPWVuY29kZVVSSUNvbXBvbmVudChsb2NhdGlvbi5ocmVmKTtfLmdldChvLnNlcnZlcisiLy9leHRlbnNpb24vcHJpY2VfdG93YXJkcz91cmw9IitzKyImcHJpY2U9IitlKS5kb25lKGZ1bmN0aW9uKGUpe2lmKGgmJmUuc3RvcmVbMF0pe2Uuc3RvcmU9W2Uuc3RvcmVbMF1dLGUuc3RvcmVbMF0uY3VycmVuY3k9dTt2YXIgbj1lLnN0b3JlWzBdLm5hbWU7c3dpdGNoKGxvY2F0aW9uLmhvc3Qpe2Nhc2Uid3d3LmFtYXpvbi5jby5qcCI6bj0i5Lqa6ams6YCK5pel5pysKOW9k+WJjSkiO2JyZWFrO2Nhc2Uid3d3LmFtYXpvbi5jb20iOm49IuS6mumprOmAiue+juWbvSjlvZPliY0pIjticmVhaztjYXNlInd3dy5hbWFvem4uZnIiOm49IuS6mumprOmAiuazleWbvSjlvZPliY0pIjticmVhaztjYXNlInd3dy5hbWF6b24uY28udWsiOm49IuS6mumprOmAiuiLseWbvSjlvZPliY0pIjticmVhaztjYXNlInd3dy5hbWF6b24uZGUiOm49IuS6mumprOmAiuW+t+WbvSjlvZPliY0pIjticmVhaztjYXNlInd3dy5hbWF6b24uY2EiOm49IuS6mumprOmAiuWKoOaLv+WkpyjlvZPliY0pIn1lLnN0b3JlWzBdLm5hbWU9bn10KGUpfSkuZmFpbChmdW5jdGlvbigpe3QoITEpfSl9O1sic3VuaW5nIiwiZmVpbml1IiwianVtZWlnbG9iYWwiLCJ5b3Vnb3UiXS5pbmRleE9mKG8uc2l0ZSk+LTE/c2V0VGltZW91dChlLDFlMyk6ZSgpfSxTPWZ1bmN0aW9uKHQpe3ZhciBlPTEwMDtpZihoPSEwLHU9IlVTRCIsInd3dy5hbWF6b24uY28uanAiPT1sb2NhdGlvbi5ob3N0JiYoZT0xLHU9IkpQWSIpLFsid3d3LmFtYXpvbi5mciIsInd3dy5hbWF6b24uZGUiLCJ3d3cuYW1hem9uLmVzIiwid3d3LmFtYXpvbi5ubCIsInd3dy5hbWF6b24uaXQiLCJ3d3cuYW1hem9uLmNvLnVrIl0uaW5kZXhPZihsb2NhdGlvbi5ob3N0KT4tMSYmKGU9MTAwLHU9IkVVUiIpLCJ3d3cuYW1hem9uLmNhIj09bG9jYXRpb24uaG9zdCYmKHU9IkNBRCIpLHQmJiIiIT10KXt0cnl7dmFyIGk9SlNPTi5wYXJzZSh0KX1jYXRjaChhKXtyZXR1cm59dmFyIHI9IuS6mumprOmAiiI7c3dpdGNoKGxvY2F0aW9uLmhvc3Qpe2Nhc2Uid3d3LmFtYXpvbi5jby5qcCI6cj0i5Lqa6ams6YCK5pel5pysIjticmVhaztjYXNlInd3dy5hbWF6b24uY29tIjpyPSLkuprpqazpgIrnvo7lm70iO2JyZWFrO2Nhc2Uid3d3LmFtYW96bi5mciI6cj0i5Lqa6ams6YCK5rOV5Zu9IjticmVhaztjYXNlInd3dy5hbWF6b24uY28udWsiOnI9IuS6mumprOmAiuiLseWbvSI7YnJlYWs7Y2FzZSJ3d3cuYW1hem9uLmRlIjpyPSLkuprpqazpgIrlvrflm70iO2JyZWFrO2Nhc2Uid3d3LmFtYXpvbi5jYSI6cj0i5Lqa6ams6YCK5Yqg5ou/5aSnIn12YXIgcz1pLnNlbGZfY3VydmUsbD1pLm90aGVyX2N1cnZlO2lmKChzfHxsKSYmKDAhPXMubGVuZ3RofHwwIT1sLmxlbmd0aCkpe3MmJjAhPXMubGVuZ3RofHwocz1sLHI9IuS6mumprOmAiuesrOS4ieaWuSIpO3ZhciBjPXZvaWQgMCxtPXZvaWQgMCxmPXZvaWQgMCxnPXZvaWQgMCx4PXZvaWQgMCxiPXZvaWQgMCxfPVtdO2M9MWUzKigzNjAwKnNbMF0udG0rMTQxNzYwNTEwNyksbT1mPXNbMF0ucGkvZTtmb3IodmFyIHY9MCx5PXMubGVuZ3RoO3Y8eTt2Kyspe3ZhciBrPXNbdl07MCE9ay5waSYmKGsucGk9ay5waS9lLGsudG09MWUzKigzNjAwKmsudG0rMTQxNzYwNTEwNyksXy5wdXNoKFtrLnRtLGsucGldKSl9aWYoMD09Xy5sZW5ndGgpcmV0dXJuITE7Zz1uZXcgRGF0ZShwYXJzZUludChjKSkuZ2V0RnVsbFllYXIoKSx4PW5ldyBEYXRlKHBhcnNlSW50KGMpKS5nZXRNb250aCgpLGI9bmV3IERhdGUocGFyc2VJbnQoYykpLmdldERhdGUoKTtmb3IodmFyIHo9Xy5sZW5ndGgsaj16LTE7aj4wO2otLSlpZighKF9bal1bMF08PV9bai0xXVswXSs4NjRlNXx8X1tqXVsxXT09X1tqLTFdWzFdKSl7dmFyIEM9W19bal1bMF0tODY0ZTUsX1tqLTFdWzFdXTtfLnNwbGljZShqLDAsQyl9aWYoRGF0ZS5wYXJzZShuZXcgRGF0ZSktX1tfLmxlbmd0aC0xXVswXT44NjRlNSlfLnB1c2goW0RhdGUucGFyc2UobmV3IERhdGUpLTg2NGU1LHBhcnNlRmxvYXQody5nZXRQcmljZUJlZm9yZUV4Y2hhbmdlUmF0ZShvLmRwLm9sZFByaWNlKSldKTtlbHNlIHRyeXtfW18ubGVuZ3RoLTFdWzFdPXBhcnNlRmxvYXQody5nZXRQcmljZUJlZm9yZUV4Y2hhbmdlUmF0ZShvLmRwLm9sZFByaWNlKSl9Y2F0Y2goUyl7fWZvcih2YXIgVD12b2lkIDAsQT12b2lkIDAsTj12b2lkIDAsST12b2lkIDAsQj1fLHE9W10sTz1uZXcgRGF0ZSxFPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8Qi5sZW5ndGgtMTtlKyspaWYodD49QltlXVswXSYmdDxCW2UrMV1bMF0pcmV0dXJuIEJbZV1bMV07cmV0dXJuIEJbQi5sZW5ndGgtMV1bMV19LEw9QlswXVswXTtMPD1PLmdldFRpbWUoKTspe3ZhciBEPUUoTCk7cS5wdXNoKHBhcnNlRmxvYXQoRC50b0ZpeGVkKDIpKSksTCs9ZH1pZihxW3EubGVuZ3RoLTFdKXt2YXIgRj1uKDIzKS5nZXRQcmljZUJlZm9yZUV4Y2hhbmdlUmF0ZShvLmRwLm9sZFByaWNlKTtxW3EubGVuZ3RoLTFdPXBhcnNlRmxvYXQoRil9ZWxzZSBxW3EubGVuZ3RoLTFdPXFbcS5sZW5ndGgtMl0sby5kcC5vbGRQcmljZT1xW3EubGVuZ3RoLTFdLG8uZHAucHJpY2U9bigyMykoby5kcC5vbGRQcmljZSk7dHJ5e1Q9UChxKSxBPVQucHJpY2Vfc3RhdHVzLE49VC5wcmljZV9sYXN0LEk9VC5pc2xvd2VzdH1jYXRjaChTKXt9dmFyIE09bnVsbDtxLmxlbmd0aD49MzY1JiYoTT1xLnNsaWNlKHEubGVuZ3RoLTM2NSkpO3ZhciBSPW51bGw7cS5sZW5ndGg+PTMxJiYoUj1xLnNsaWNlKHEubGVuZ3RoLTMxKSk7dmFyICQ9bnVsbDtpZihxLmxlbmd0aD49Nil7dmFyIEg9cS5zbGljZShxLmxlbmd0aC02KTskPVtdO2Zvcih2YXIgVz0wO1c8SC5sZW5ndGgtMTtXKyspe2Zvcih2YXIgVT1bXSxZPTA7WTwyNDtZKyspVS5wdXNoKEhbV10pOyQ9JC5jb25jYXQoVSl9JC5wdXNoKEhbSC5sZW5ndGgtMV0pfW09cVswXTtmb3IodmFyIEc9MDtHPHEubGVuZ3RoO0crKyltPnFbR10mJihtPXFbR10pLGY8cVtHXSYmKGY9cVtHXSk7dmFyIFg9bSsiLSIrZixKPXtwcmljZV9zdGF0dXM6QSxzdGFydEQ6YixzdGFydE06eCxub3dfZGF5Ok8sc3RhcnRZOmcsc3RvcmU6W3tjdXJyZW50X3ByaWNlOk4sYWxsX2xpbmU6cSxhbGxfbGluZV9iZWdpbl90aW1lOkJbMF1bMF0seWVhcl9saW5lOk0seWVhcl9saW5lX3RpbWU6Ty5nZXRUaW1lKCktMzY1KmQsbW9udGhfbGluZTpSLG1vbnRoX2xpbmVfdGltZTpPLmdldFRpbWUoKS0zMCpkLHNob3J0X2RheV9saW5lOiQsc2hvcnRfZGF5X2xpbmVfYmVnaW5fdGltZTpPLmdldFRpbWUoKSs4KnAtNSpkLG1pbl9zdGFtcDoiMCIsaXNsb3dlc3Q6SSxuYW1lOnIrIijlvZPliY0pIixwcmljZV9yYW5nZTpYLHByb21vOltdLGFsbF9lcXVhbF9zaG9ydDohMSxjdXJyZW5jeTp1fV19O3JldHVybiBKfX19LFA9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj10Lmxlbmd0aCxpPU1hdGgubWluLmFwcGx5KGMsdCksbz10W24tMV0sYT0hMSxyPTE4MCxzPTAsbD10Lmxlbmd0aC0xO2w+PTA7bC0tKXt2YXIgcD10W2xdO2lmKGw+MCYmKHMrPTEpLDAhPXApaWYobyE9cCl7aWYocGFyc2VGbG9hdChvKT5wYXJzZUZsb2F0KHApJiZsPj1uLXItMSl7ZT0xO2JyZWFrfWlmKHBhcnNlRmxvYXQobyk8cGFyc2VGbG9hdChwKSl7ZT0tMSxvPT09aSYmKGE9ITApO2JyZWFrfX1lbHNlIGlmKHM+MTgwKWJyZWFrfXJldHVybntwcmljZV9zdGF0dXM6ZSxpc2xvd2VzdDphLHByaWNlX2xhc3Q6b319LFQ9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj10Lmxlbmd0aCxpPXQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0WzFdfSksbz1NYXRoLm1pbi5hcHBseShjLGkpLGE9dFtuLTFdWzFdLHI9ITEscz0yMCxsPTAscD1uLTE7cD49MDtwLS0pe3ZhciBkPXRbcF1bMV07aWYocD4wJiYobCs9KHRbcF1bMF0tdFtwLTFdWzBdKS84NjRlNSksMCE9ZClpZihhIT1kKXtpZihwYXJzZUZsb2F0KGEpPnBhcnNlRmxvYXQoZCkmJnA+PW4tcy0xKXtlPTE7YnJlYWt9aWYocGFyc2VGbG9hdChhKTxwYXJzZUZsb2F0KGQpKXtlPS0xLGE9PT1vJiYocj0hMCk7YnJlYWt9fWVsc2UgaWYobD4xODApYnJlYWt9cmV0dXJue3ByaWNlX3N0YXR1czplLGlzbG93ZXN0OnIscHJpY2VfbGFzdDphfX0sQT1mdW5jdGlvbihlLG4pe2lmKGUmJmUubGlzdCl7dmFyIGk9dm9pZCAwLGE9dm9pZCAwLHI9dm9pZCAwLHM9dm9pZCAwLGw9dm9pZCAwLGM9ZS5saXN0Lmxlbmd0aCxoPVtdO3M9bmV3IERhdGUoZS5jdXJUaW1lKS5nZXRUaW1lKCksYT1yPWUubGlzdFswXS5wcmljZTt0cnl7Zm9yKHZhciB1PTA7dTxjO3UrKyl7dmFyIG09ZS5saXN0W3VdO2gucHVzaChbbmV3IERhdGUobS50aW1lKS5nZXRUaW1lKCksbS5wcmljZV0pLG0ucHJpY2U+ciYmKHI9bS5wcmljZSksbS5wcmljZTxhJiYoYT1tLnByaWNlKX1mb3IodmFyIHU9Yy0xO3U+MDt1LS0paWYoaFt1XVswXS1oW3UtMV1bMF0+ODY0ZTUpe3ZhciBmPVtoW3VdWzBdLTg2NGU1LGhbdS0xXVsxXV07aC5zcGxpY2UodSwwLGYpfXZhciBnPWhbaC5sZW5ndGgtMV07aWYoZ1swXTxzKXt2YXIgdz1nWzFdLHg9TihvLnNpdGUpO3MtZ1swXT44NjRlNSYmaC5wdXNoKFtzLTg2NGU1LHddKSx4JiZ3IT14JiYoeD5yJiYocj14KSx4PGEmJihhPXgpLGgucHVzaChbcyx4XSkpfXNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgcz1OKG8uc2l0ZSk7cyYmKGhbaC5sZW5ndGgtMV1bMV09cyk7dmFyIGM9VChoKSx1PWMucHJpY2Vfc3RhdHVzLG09Yy5wcmljZV9sYXN0O2k9Yy5pc2xvd2VzdDtmb3IodmFyIGY9YSsiLSIrcixnPW5ldyBEYXRlKGUuc3RhcnRUaW1lKS5nZXREYXRlKCksdz1uZXcgRGF0ZShlLnN0YXJ0VGltZSkuZ2V0TW9udGgoKSx4PW5ldyBEYXRlKGUuc3RhcnRUaW1lKS5nZXRGdWxsWWVhcigpLGI9W10sXz1uZXcgRGF0ZSx2PWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8aC5sZW5ndGgtMTtlKyspaWYodD49aFtlXVswXSYmdDxoW2UrMV1bMF0pcmV0dXJuIGhbZV1bMV07cmV0dXJuIGhbaC5sZW5ndGgtMV1bMV19LHk9aFswXVswXTt5PD1fLmdldFRpbWUoKTspe3ZhciBrPXYoeSk7Yi5wdXNoKHBhcnNlRmxvYXQoay50b0ZpeGVkKDIpKSkseSs9ZH12YXIgej1udWxsO2IubGVuZ3RoPj0zNjUmJih6PWIuc2xpY2UoYi5sZW5ndGgtMzY1KSk7dmFyIGo9bnVsbDtiLmxlbmd0aD49MzEmJihqPWIuc2xpY2UoYi5sZW5ndGgtMzEpKTt2YXIgQz1udWxsO2lmKGIubGVuZ3RoPj02KXt2YXIgUz1iLnNsaWNlKGIubGVuZ3RoLTYpO0M9W107Zm9yKHZhciBQPTA7UDxTLmxlbmd0aC0xO1ArKyl7Zm9yKHZhciBBPVtdLEk9MDtJPDI0O0krKylBLnB1c2goU1tQXSk7Qz1DLmNvbmNhdChBKX1DLnB1c2goU1tTLmxlbmd0aC0xXSl9dmFyIEI9bmV3IERhdGU7bD17cHJpY2Vfc3RhdHVzOnUsc3RhcnREOmcsc3RhcnRNOncsc3RhcnRZOngsbm93X2RheTpfLmdldFRpbWUoKSxleHRyYToic3RhcnQgZnJvbSBhbm90aGVyIixzdG9yZTpbe2N1cnJlbnRfcHJpY2U6bSxhbGxfbGluZTpiLGFsbF9saW5lX2JlZ2luX3RpbWU6aFswXVswXSs4KnAseWVhcl9saW5lOnoseWVhcl9saW5lX3RpbWU6Xy5nZXRUaW1lKCktMzY1KmQsbW9udGhfbGluZTpqLG1vbnRoX2xpbmVfdGltZTpfLmdldFRpbWUoKS0zMCpkLHNob3J0X2RheV9saW5lOkMsc2hvcnRfZGF5X2xpbmVfYmVnaW5fdGltZTpCLmdldFRpbWUoKSs4KnAtNSpkLG1pbl9zdGFtcDoiMCIsaXNsb3dlc3Q6aSxuYW1lOnQoKSxwcmljZV9yYW5nZTpmLHByb21vOltdLGFsbF9lcXVhbF9zaG9ydDohMX1dfSxuKGwpfSwxZTMpfWNhdGNoKGIpe319fSxOPWZ1bmN0aW9uKHQpe3ZhciBlPSIiO2lmKCJ0YW9iYW8iPT10JiYoZT1nKCIjSl9Qcm9tb1ByaWNlTnVtIikudGV4dCgpLCIiPT1lJiYwPT1nKCIjSl9Qcm9tb1ByaWNlTnVtIikubGVuZ3RoJiYoZT1nKCIjSl9TdHJQcmljZSAudGItcm1iLW51bSIpLnRleHQoKSkpLCJ0bWFsbCI9PXQmJigiIj09ZSYmKGU9ZygiI0pfRGV0YWlsTWV0YSAjSl9Qcm9tb1ByaWNlIHNwYW4udG0tcHJpY2UiKS50ZXh0KCkpLCIiPT1lJiYoZT1nKCJzcGFuLnRtLXByaWNlIikudGV4dCgpKSwiZGV0YWlsLnRtYWxsLmhrIj09PWxvY2F0aW9uLmhvc3QmJihlPWcoInNwYW4udG0tcHJpY2U6ZXEoMSkiKS50ZXh0KCkpLGcoIi50Yi13clR1YW4tbnVtIikudGV4dCgpJiYoZT1nKCIudGItd3JUdWFuLW51bSIpLnRleHQoKSkpLCJ0YW9iYW8tOTUwOTUiPT10JiYoZT1nKCIjSl9Qcm9tb1ByaWNlIC50bS1wcmljZSIpLnRleHQoKSwiIj09ZSYmKGU9ZygiI0pfU3RyUHJpY2VNb2RCb3ggLnRtLXByaWNlIikudGV4dCgpKSksImFpLXRhb2JhbyI9PXQpe2lmKG8uY2hyb21lX2V4dGVuc2lvbil7dmFyIG49ZygiLmFpdGFvYmFvLWVkZXRhaWwtaGVhZGVyIHNjcmlwdCIpLnRleHQoKTtlPS9wcm9tb1ByaWNlIjoiKFtcZFwuXSspIi8uZXhlYyhuKSxlJiYoZT1lWzFdKX1lbHNlIGU9d2luZG93LnBhZ2Vjb25maWcucHJvbW9QcmljZTsiIiE9ZSYmZXx8KGU9ZygiLnByaWNlLXdyYXAgLnByaWNlLXNpbmdsZSAucHJpY2UtcHJvbW8gc3Ryb25nIikudGV4dCgpKX1yZXR1cm4gZS5pbmRleE9mKCItIik+LTEmJihlPWUuc3BsaXQoIi0iKVswXSksdyhlKX0sST1mdW5jdGlvbih0KXt2YXIgZT1kb2N1bWVudC5sb2NhdGlvbi5ob3N0LGk9IiZ5ZW47IixhPXtjb206IiQiLCJjby51ayI6IsKjIixkZToiRVVSIiwiY28uanAiOiIiLGZyOiJFVVIiLGNhOiJDRE4kIixjbjoiJnllbjsiLGl0OiJFVVIiLGVzOiJFVVIiLCI2cG0iOiIkIn07Zm9yKHZhciByIGluIGEpaWYoZS5pbmRleE9mKHIpPi0xJiYoImFtYXpvbiI9PT1vLnNpdGV8fCI2cG0iPT09by5zaXRlfHwiYWxpZXhwcmVzcyI9PT1vLnNpdGUpKXtpPWFbcl07YnJlYWt9aWYoZygiI2d3ZGFuZy10cmVuZC1kZXRhaWwiKS5lbXB0eSgpLmFwcGVuZChnKCI8ZGl2PiIseyJjbGFzcyI6InBhbmVsLXdyYXAifSkuYXBwZW5kKGcoIjxkaXY+Iix7ImNsYXNzIjoiY2hhcnQiLGlkOiJnd2RhbmctcHJpLXRyZW5kLWNoYXJ0IixzdHlsZToid2lkdGg6NzAwcHg7IGhlaWdodDoyNDBweCJ9KSkpLmFwcGVuZChnKCI8ZGl2PiIseyJjbGFzcyI6InBhbmVsLXNoYWRvdyJ9KSksbig4NCkuaW5pdCgiI2d3ZGFuZy10cmVuZC1kZXRhaWwgLnBhbmVsLXdyYXAiLGksdCksImFtYXpvbiI9PW8uc2l0ZSl7dmFyIHM9d2luZG93LmxvY2F0aW9uJiZ3aW5kb3cubG9jYXRpb24uaG9zdCYmd2luZG93LmxvY2F0aW9uLmhvc3QuaW5kZXhPZigiYW1hem9uLmNvbSIpPj0wfHwhMTtzJiZnKCIjdGJzYi1ub3RpZmllcnMgLnJlbWluZCwjdGJzYi1ub3RpZmllcnMgLnBhbmVsLXdyYXAsI3Ric2Itbm90aWZpZXJzIC5jaGFydCIpLmFkZENsYXNzKCJmaXgtYW1hem9uLWNvbSIpfX0sQj1mdW5jdGlvbih0KXswPT10LnByaWNlX3N0YXR1cz8oZygiLnByaWNlLXRyZW5kLWJ0biAudHJlbmQtYm94LWRldiBlbSIpLmFkZENsYXNzKCJ0cmVuZC1zdGFibGUiKSxnKCIucHJpY2UtdHJlbmQtYnRuIC50cmVuZC1ib3gtZGV2IHNwYW4iKS5hZGRDbGFzcygidHJlbmQtc3RhYmxlIikudGV4dCgi5Lu35qC85bmz56izIikpOjE9PXQucHJpY2Vfc3RhdHVzPyhnKCIucHJpY2UtdHJlbmQtYnRuIC50cmVuZC1ib3gtZGV2IGVtIikuYWRkQ2xhc3MoInRyZW5kLXVwIiksZygiLnByaWNlLXRyZW5kLWJ0biAudHJlbmQtYm94LWRldiBzcGFuIikuYWRkQ2xhc3MoInRyZW5kLXJlZCIpLnRleHQoIuS7t+agvOS4iua2qCIpKTp6KHQpfHx0LnN0b3JlWzBdLmlzbG93ZXN0PyhnKCIucHJpY2UtdHJlbmQtYnRuIC50cmVuZC1ib3gtZGV2IGVtIikuYWRkQ2xhc3MoInRyZW5kLWRvd24iKSxnKCIucHJpY2UtdHJlbmQtYnRuIC50cmVuZC1ib3gtZGV2IHNwYW4iKS5hZGRDbGFzcygidHJlbmQtZ3JlZW4iKS50ZXh0KCLljoblj7LmnIDkvY4iKSk6KGcoIi5wcmljZS10cmVuZC1idG4gLnRyZW5kLWJveC1kZXYgZW0iKS5hZGRDbGFzcygidHJlbmQtZG93biIpLGcoIi5wcmljZS10cmVuZC1idG4gLnRyZW5kLWJveC1kZXYgc3BhbiIpLmFkZENsYXNzKCJ0cmVuZC1ncmVlbiIpLnRleHQoIuS7t+agvOS4i+mZjSIpKX0scT1mdW5jdGlvbigpe2coIiMiK28uZXh0QnJhbmQrIl93aXNobGlzdF90cmVuZF9kZXRhaWwiKS5oaWRlKCksZygiIyIrby5leHRCcmFuZCsiX3ByaWNlX2hpc3RvcnlfYnRuIHNwYW4iKS50ZXh0KCLmmoLml6Dku7fmoLzotbDlir8iKSxnKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfaGlzdG9yeV9idG4iKS5vZmYoKSxnKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfaGlzdG9yeV9idG4iKS5hZGRDbGFzcygiX25vcHJpY2UiKS5zaG93KCksZygiIyIrby5leHRCcmFuZCsiX3ByaWNlX2hpc3RvcnlfYnRuIGVtIikuaGlkZSgpfSxPPWZ1bmN0aW9uKHQsZSxuKXt0LnN0b3JlWzBdLmFsbF9saW5lLmxlbmd0aD4wJiZnKCIjIitvLmV4dEJyYW5kKyJfd2lzaGxpc3RfdHJlbmRfZGV0YWlsIikubGVuZ3RoPjA/KG8uc2hvd01pbmlUcmVuZD0hMCwwPT10LnByaWNlX3N0YXR1cz8oZygiIyIrby5leHRCcmFuZCsiX3ByaWNlX2hpc3RvcnlfYnRuIC5wcmljZS10cmVuZC1pY29uIikuYWRkQ2xhc3MoInByaWNlLXRyZW5kLWljb24tc29sdyIpLGcoIiMiK28uZXh0QnJhbmQrIl9wcmljZV9oaXN0b3J5X2J0biBzcGFuIikuaHRtbCgi5Lu35qC85bmz56izIikpOjE9PXQucHJpY2Vfc3RhdHVzPyhnKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfaGlzdG9yeV9idG4gLnByaWNlLXRyZW5kLWljb24iKS5hZGRDbGFzcygicHJpY2UtdHJlbmQtaWNvbi11cCIpLGcoIiMiK28uZXh0QnJhbmQrIl9wcmljZV9oaXN0b3J5X2J0biBzcGFuIikuaHRtbCgi5Lu35qC85LiK5raoIikpOnoodCl8fHQuc3RvcmVbMF0uaXNsb3dlc3Q/KGcoIiMiK28uZXh0QnJhbmQrIl9wcmljZV9oaXN0b3J5X2J0biAucHJpY2UtdHJlbmQtaWNvbiIpLmFkZENsYXNzKCJwcmljZS10cmVuZC1pY29uLWRvd24iKSxnKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfaGlzdG9yeV9idG4gc3BhbiIpLmh0bWwoIuWOhuWPsuacgOS9jiIpKTooZygiIyIrby5leHRCcmFuZCsiX3ByaWNlX2hpc3RvcnlfYnRuIC5wcmljZS10cmVuZC1pY29uIikuYWRkQ2xhc3MoInByaWNlLXRyZW5kLWljb24tZG93biIpLGcoIiMiK28uZXh0QnJhbmQrIl9wcmljZV9oaXN0b3J5X2J0biBzcGFuIikuaHRtbCgi5Lu35qC85LiL6ZmNIikpLGcoIi5wcmljZS10cmVuZC1pY29uIikuc2hvdygpLGcoIiMiK28uZXh0QnJhbmQrIl9wcmljZV9oaXN0b3J5X2J0biIpLnNob3coKSxnKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfaGlzdG9yeV9idG4gKyBkaXYuc2h1eGlhbiIpLnNob3coKSk6Imx1eW91Ij09by5idHlwZT8oZygiIyIrby5leHRCcmFuZCsiX3dpc2hsaXN0X3RyZW5kX2RldGFpbCIpLmhpZGUoKSxnKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfaGlzdG9yeV9idG4iKS5oaWRlKCksZygiIyIrby5leHRCcmFuZCsiX3ByaWNlX2hpc3RvcnlfYnRuICsgZGl2IikuaGlkZSgpKTooMD09PXQuc3RvcmVbMF0uYWxsX2xpbmUubGVuZ3RoJiYoZygiI2d3ZGFuZy10cmVuZCIpLmhpZGUoKSxnKCIjIitvLmV4dEJyYW5kKyItdHJlbmQiKS5oaWRlKCkpLHEoKSl9O3JldHVybiBmLmdldFByaWNlU3RhdHVzTmV3PVAsZi5pbml0PWZ1bmN0aW9uKHQsZSxpKXtvLklFOSYmImFtYXpvbiI9PT1vLnNpdGV8fChuKDE2MiksImtlZWRlIj09PW8uc2l0ZSYmbigxNjMpKCkseSgpfHxqKGZ1bmN0aW9uKHQpe24oMTY0KSxrKHQpfSkpfSxmfS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTtpPWZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiB0PXBhcnNlRmxvYXQodCksdC50b0ZpeGVkKDIpfX0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPHA+5ZWG5Z+O5q+U5Lu3PC9wPlxuPHVsPlxuICB7e2VhY2ggZGF0YX19XG4gICAgPGxpPlxuICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIHRhcmdldD0iX2JsYW5rIj5cbiAgICAgICAgPGltZyBzcmM9Int7JHZhbHVlLmljb3VybH19Ij5cbiAgICAgICAgPHNwYW4gY2xhc3M9Im0taXRlbS1wcmljZTIiPsKle3skdmFsdWUucHJpY2V9fTwvc3Bhbj5cbiAgICAgIDwvYT5cbiAgICA8L2xpPlxuICB7ey9lYWNofX1cbjwvdWw+XG48YSBocmVmPSJ7e2FsbExpbmt9fSIgdGFyZ2V0PSJfYmxhbmsiIGNsYXNzPSJtLWFsbC1saW5rMiI+XG4gIOafpeeci+WFqOmDqO+8iHt7c3RvcmVTaXplfX3vvIlcbjwvYT5cbjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gIC50cmVuZC1jb20tbWluaSBwe1xuICAgIGhlaWdodDogNDVweDtcbiAgICBsaW5lLWhlaWdodDogNDVweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOiAjMzMzIWltcG9ydGFudDtcbiAgfVxuICAudHJlbmQtY29tLW1pbmkge1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgd2lkdGg6IDExM3B4O1xuICB9XG4gIC50cmVuZC1jb20tbWluaSB1bCBsaSB7XG4gICAgaGVpZ2h0OiAyOHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIH1cbiAgLnRyZW5kLWNvbS1taW5pIHVsIGxpOmZpcnN0LWNoaWxkIHtcbiAgICBtYXJnaW4tdG9wOiAwcHg7XG4gIH1cbiAgLnRyZW5kLWNvbS1taW5pIHVsIGxpOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRmMWYxO1xuICB9XG4gIC50cmVuZC1jb20tbWluaSB1bCBsaSBpbWcge1xuICAgIGhlaWdodDogMTZweDtcbiAgICBtYXJnaW4tbGVmdDogMTFweDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tdG9wOiA2cHg7XG4gIH1cbiAgLnRyZW5kLWNvbS1taW5pIHVsIGxpIHNwYW4ge1xuICAgIGZsb2F0OiByaWdodDtcbiAgICBtYXJnaW4tcmlnaHQ6IDlweDtcbiAgICBsaW5lLWhlaWdodDogMjhweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICM5YjliOWI7XG4gIH1cbiAgLm0tYWxsLWxpbmsyIHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBjb2xvcjogIzVlYmVmZiFpbXBvcnRhbnQ7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxMnB4O1xuICB9XG48L3N0eWxlPid9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyl7InVzZSBzdHJpY3QiO2k9ZnVuY3Rpb24oKXsidWxlIiE9PW8uc2l0ZSYmInllc215d2luZSIhPT1vLnNpdGV8fChBcnJheS5wcm90b3R5cGUuZmlsdGVyPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0aGlzLmxlbmd0aDtuKyspdCh0aGlzW25dKSYmZS5wdXNoKHRoaXNbbl0pO3JldHVybiBlfSksIndzdHgiPT09by5zaXRlJiYoQXJyYXkucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24odCxlKXt2YXIgbjtpZihudWxsPT10aGlzKXRocm93IG5ldyBUeXBlRXJyb3IoJyJ0aGlzIiBpcyBudWxsIG9yIG5vdCBkZWZpbmVkJyk7dmFyIGk9T2JqZWN0KHRoaXMpLG89aS5sZW5ndGg+Pj4wO2lmKDA9PT1vKXJldHVybi0xO3ZhciBhPStlfHwwO2lmKE1hdGguYWJzKGEpPT09MS8wJiYoYT0wKSxhPj1vKXJldHVybi0xO2ZvcihuPU1hdGgubWF4KGE+PTA/YTpvLU1hdGguYWJzKGEpLDApO248bzspe2lmKG4gaW4gaSYmaVtuXT09PXQpcmV0dXJuIG47bisrfXJldHVybi0xfSl9LmNhbGwoZSxuLGUsdCksISh2b2lkIDAhPT1pJiYodC5leHBvcnRzPWkpKX0pLmNhbGwoZSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dC5leHBvcnRzPWZ1bmN0aW9uKCl7ImtlZWRlIj09PWUuc2l0ZSYmImZ1bmN0aW9uIGZvckVhY2goKSB7IFtuYXRpdmUgY29kZV0gfSIhPT1BcnJheS5wcm90b3R5cGUuZm9yRWFjaC50b1N0cmluZygpJiYoQXJyYXkucHJvdG90eXBlLmZvckVhY2g9ZnVuY3Rpb24odCxlKXt2YXIgbixpO2lmKG51bGw9PXRoaXMpdGhyb3cgbmV3IFR5cGVFcnJvcigiIHRoaXMgaXMgbnVsbCBvciBub3QgZGVmaW5lZCIpO3ZhciBvPU9iamVjdCh0aGlzKSxhPW8ubGVuZ3RoPj4+MDtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKHQrIiBpcyBub3QgYSBmdW5jdGlvbiIpO2Zvcihhcmd1bWVudHMubGVuZ3RoPjEmJihuPWUpLGk9MDtpPGE7KXt2YXIgcjtpIGluIG8mJihyPW9baV0sdC5jYWxsKG4scixpLG8pKSxpKyt9fSl9fSkuY2FsbChlLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk7KGZ1bmN0aW9uKG8peyJ1c2Ugc3RyaWN0IjtpPWZ1bmN0aW9uKCl7dmFyIHQ9big0KTsiMzYwYnV5Ij09PW8uc2l0ZSYmdCgiI3NlcnZpY2UiKS5jc3MoeyJ6LWluZGV4IjowfSksIm5ld2VnZyI9PT1vLnNpdGUmJih0KCIuZ29vZHNfaW5mbyIpLmNzcyh7b3ZlcmZsb3c6InZpc2libGUifSksdCgiLmdvb2RzX2luZm8iKS5jc3Moe292ZXJmbG93OiJpbml0aWFsIn0pLHQoIi5nb29kc19vdGhlcmluZm8iKS5jc3Moe3pJbmRleDo5fSkpLCJ5b3Vnb3UiPT09by5zaXRlJiYodCgiLmdvb2RzQ29uIikuY3NzKHt6SW5kZXg6M30pLHQoIi5jZW5fc2Nyb2xsIikuY3NzKHsiei1pbmRleCI6MH0pKSwidmFuY2wiPT09by5zaXRlJiZ0KCIuZGFucGluUmlnaHQiKS5jc3Moe292ZXJmbG93OiJ2aXNpYmxlIn0pLCJnb21lIj09PW8uc2l0ZSYmdCgiLmhpZ2hjaGFydHMtdG9vbHRpcCBzcGFuIikuY3NzKHsiZmxvYXQiOiJub25lIn0pLCJzZWNvbyI9PT1vLnNpdGUmJih0KCIuIitvLmV4dE5hbWUrIi1uYXYgLmNvbnRlbnRzIikuY3NzKHt3aWR0aDoiYXV0byIsImJveC1zaGFkb3ciOiJub25lIixiYWNrZ3JvdW5kOiJyZ2IoMjQ3LDI0NywyNDcpIn0pLHQoIi4iK28uZXh0TmFtZSsiLW5hdiAuY29udGVudHMiKS5jc3Moe3dpZHRoOiJpbml0aWFsIn0pKSwieGl1Ij09PW8uc2l0ZSYmdCgiI3JpZ2h0X2luZm8iKS5jc3Moe3dpZHRoOiJhdXRvIn0pfS5jYWxsKGUsbixlLHQpLCEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJ0cmVuZC1lcnJvci1pbmZvIj5cbiAgPHAgY2xhc3M9ImVycm9yLXAiPuaIkeS7rOajgOa1i+WIsOiuv+mXruW8guW4uO+8jOivt+aCqOmqjOivgeWQjue7p+e7reS9v+eUqDwvcD5cbiAgPGEgY2xhc3M9ImVycm9yLXNwIiBocmVmPSJ7e3VybH19Ij7ngrnlh7vpqozor4E8L2E+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgI2d3ZGFuZy10cmVuZCBzcGFuIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDExMHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDYwcHg7XG4gICAgICBjb2xvcjogIzY2NjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gICAgI2d3ZGFuZy10cmVuZCAudHJlbmQtZXJyb3ItaW5mbyB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIHotaW5kZXg6IDk5OTk5OTk5O1xuICAgICAgaGVpZ2h0OiAyNjhweDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICNnd2RhbmctdHJlbmQgLmVycm9yLXAge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIG1hcmdpbi10b3A6IDQ1cHg7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBjb2xvcjogIzY2NjtcbiAgICB9XG4gICAgI2d3ZGFuZy10cmVuZCAuZXJyb3Itc3Age1xuICAgICAgd2lkdGg6IDk1cHg7XG4gICAgICBtYXJnaW46IDExMHB4IGF1dG87XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICBsaW5lLWhlaWdodDogMjBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGNvbG9yOiAjMDAwIWltcG9ydGFudDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMzMzM7XG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgICNnd2RhbmctdHJlbmQ6aG92ZXIgLnRyZW5kLWVycm9yLWluZm8ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9InRyZW5kLWVycm9yLWluZm8iPlxuICA8cCBjbGFzcz0iZXJyb3ItcCI+5oiR5Lus5qOA5rWL5Yiw6K6/6Zeu5byC5bi477yM6K+35oKo6aqM6K+B5ZCO57un57ut5L2/55SoPC9wPlxuICA8YSBjbGFzcz0iZXJyb3Itc3AiIGhyZWY9Int7dXJsfX0iPueCueWHu+mqjOivgTwvYT5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAjZ3dkYW5nLXRyZW5kIHtcbiAgICAgIHdpZHRoOiAxMDVweDtcbiAgICB9XG4gICAgI2d3ZGFuZy10cmVuZCwgI2d3ZGFuZy10cmVuZCBzcGFuIHtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICB9XG4gICAgI2d3ZGFuZy10cmVuZCBzcGFuIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDEwNXB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7XG4gICAgICBjb2xvcjogIzY2NjtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICB9XG4gICAgI2d3ZGFuZy10cmVuZCAudHJlbmQtZXJyb3ItaW5mbyB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDM2cHg7XG4gICAgICBsZWZ0OiAtMXB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgei1pbmRleDogOTk5OTk5OTk7XG4gICAgICBoZWlnaHQ6IDI2OHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJveC1zaGFkb3c6IDAgNXB4IDEwcHggMCByZ2JhKDIyLDI0LDI2LC4xNSk7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWRmMWYyIWltcG9ydGFudDtcbiAgICB9XG4gICAgI2d3ZGFuZy10cmVuZCAuZXJyb3ItcCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbWFyZ2luLXRvcDogNDVweDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAjNjY2O1xuICAgIH1cbiAgICAjZ3dkYW5nLXRyZW5kIC5lcnJvci1zcCB7XG4gICAgICB3aWR0aDogOTVweDtcbiAgICAgIG1hcmdpbjogMTEwcHggYXV0bztcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgY29sb3I6ICMwMDAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzMzMztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lIWltcG9ydGFudDtcbiAgICB9XG4gICAgI2d3ZGFuZy10cmVuZDpob3ZlciAudHJlbmQtZXJyb3ItaW5mbyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICB9XG4gIDwvc3R5bGU+XG48L2Rpdj4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBjbGFzcz0idHJlbmQtZXJyb3ItaW5mby1taW5pIj5cbiAgPHAgY2xhc3M9ImVycm9yLXAiPuaIkeS7rOajgOa1i+WIsOiuv+mXruW8guW4uO+8jOivt+aCqOmqjOivgeWQjue7p+e7reS9v+eUqDwvcD5cbiAgPGEgY2xhc3M9ImVycm9yLXNwIiBocmVmPSJ7e3VybH19Ij7ngrnlh7vpqozor4E8L2E+XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgI21pbmlfcHJpY2VfaGlzdG9yeSB7XG4gICAgICBcbiAgICB9XG4gICAgI21pbmlfcHJpY2VfaGlzdG9yeSBzcGFuIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBsaW5lLWhlaWdodDogMzZweDtcbiAgICAgIGNvbG9yOiAjNjY2O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgIH1cbiAgICAjbWluaV9wcmljZV9oaXN0b3J5IC50cmVuZC1lcnJvci1pbmZvLW1pbmkge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAzN3B4O1xuICAgICAgbGVmdDogMHB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgICAgei1pbmRleDogOTk5OTk5OTk7XG4gICAgICBoZWlnaHQ6IDI2OHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTVweCAwIHJnYmEoMjMsMjUsMjcsMC4xNSk7XG4gICAgICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDtcbiAgICAgIHdpZHRoOiA0NjBweDtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICBib3JkZXItdG9wOiBub25lO1xuICAgIH1cbiAgICAjbWluaV9wcmljZV9oaXN0b3J5IC5lcnJvci1wIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW4tdG9wOiA0NXB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICM2NjY7XG4gICAgfVxuICAgICNtaW5pX3ByaWNlX2hpc3RvcnkgLmVycm9yLXNwIHtcbiAgICAgIHdpZHRoOiA5NXB4O1xuICAgICAgbWFyZ2luOiAxMTBweCBhdXRvO1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBjb2xvcjogIzAwMCFpbXBvcnRhbnQ7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMzMzO1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUhaW1wb3J0YW50O1xuICAgIH1cbiAgICAjbWluaV9wcmljZV9oaXN0b3J5OmhvdmVyIC50cmVuZC1lcnJvci1pbmZvLW1pbmkge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgaWQ9Im1pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWwiIGNsYXNzPSJtaW5pLXRyZW5kLWRldGFpbCI+XG4gICAgPGRpdiBjbGFzcz0ibWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF93cmFwcGVyIiBzdHlsZT0iZmxvYXQ6bGVmdCI+XG4gICAgICA8ZGl2IGNsYXNzPSJ0cmVuZC1tYXgtbWluLXByaWNlIj5cbiAgICAgICAgPGVtIGNsYXNzPSJjaXJjbGVfbWFyayI+PC9lbT5cbiAgICAgICAgPHNwYW4gY2xhc3M9InBhZ2UtcHJpLXRsZSI+6aG16Z2i5Lu3PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0icGFnZS1wdGktdGxlLW1oIj46PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0idC1tYXgtcHJpIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWF4LXAtc3AxIj7mnIDpq5g8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InAtc3BpLW1oIj46PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmlmb250ZiBtYXgtcC1zcDIiPjwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0idC1taW4tcHJpIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0ibWluLXAtc3AxIj7mnIDkvY48L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InAtc3BpLW1oIj46PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmlmb250ZiBtaW4tcC1zcDIiPjwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0idC1ub3ctcHJpIj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0ibm93LXAtc3AxIj7njrDku7c8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InAtc3BpLW1oIj46PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmlmb250ZiBub3ctcC1zcDIiPjwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0idC1taW4tZGF0ZSBwcmlmb250ZiI+PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPSJ0cmVuZC1kc2otcHJpY2UiPlxuICAgICAgICA8ZW0gY2xhc3M9ImNpcmNsZV9tYXJrIj48L2VtPlxuICAgICAgICA8c3BhbiBjbGFzcz0iZHNqLXByaS10bGUiPuWHkeWNleWIsOaJi+S7tzwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InBhZ2UtcHRpLXRsZS1taCI+Ojwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9ImRzai1tYXgiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJtYXgtcC1zcDEiPuacgOmrmDwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0icC1zcGktbWgiPjo8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InByaWZvbnRmIG1heC1wLXNwMiI+PC9zcGFuPlxuICAgICAgICAgIDxlbT48L2VtPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJ0LW1pbi1wcmkiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJtaW4tcC1zcDEiPuacgOS9jjwvc3Bhbj5cbiAgICAgICAgICA8c3BhbiBjbGFzcz0icC1zcGktbWgiPjo8L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InByaWZvbnRmIG1pbi1wLXNwMiI+PC9zcGFuPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJ0LW1pbi1kYXRlIHByaWZvbnRmIj48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9InRyZW5kLWRzai1wcm9tbyI+XG4gICAgICAgIDxlbSBjbGFzcz0iY2lyY2xlX21hcmsiPjwvZW0+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJkc2otcHJvLXRsZSI+5YeR5Y2V5L+h5oGvPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0icGFnZS1wdGktdGxlLW1oIj46PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0iZHNqLXByby10eHQiPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgaWQ9Im1pbmlfcHJpY2VfaGlzdG9yeV9kZXRhaWxfY2hhcnQiPjwvZGl2PlxuICAgICAgPGRpdiBpZD0ibWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9pbmZvIj48L2Rpdj5cbiAgICAgIDxzcGFuIGNsYXNzPSJmdWxsLWhpc3RvcnktcmVtaW5kIj4q54K55Ye7572R6aG16aG26YOo5oiW5bqV6YOo5bel5YW35qCP5p+l55yL5pu06ZW/5pe26Ze05Lu35qC86LWw5Yq/PC9zcGFuPlxuICAgICAgPGRpdiBpZD0ibWluaV9wcmljZV9oaXN0b3J5X2RldGFpbF9idG4iIGNsYXNzPSJsZWdlbmQtYnRuLWJveCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZS10cmVuZC1zcCBwdC1zcDEgIiBkYXRhLWlkPSJkYXlzMTgwIj5cbiAgICAgICAgICA8ZW0+PC9lbT5cbiAgICAgICAgICA8c3Bhbj7pobXpnaLku7c8L3NwYW4+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InJldmlldy10cmVuZC1zcCIgZGF0YS1pZD0icGxvdFNwZWNpYWwiPlxuICAgICAgICAgIDxlbT48L2VtPlxuICAgICAgICAgIDxzcGFuPuWHkeWNleWIsOaJi+S7tzwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBpZD0iYmlnX3Rvb2x0aXAiIGNsYXNzPSJiaWdfdG9vbHRpcF9ib3giPlxuICAgIDwvZGl2PlxuICAgIFxuICAgIFxuICAgIFxuICAgIDxkaXYgY2xhc3M9ImRpc2NvdW50LXByaWNlLXJlIj5cbiAgICAgIDxzcGFuPuWHkeWNleWIsOaJi+S7tzwvc3Bhbj5cbiAgICAgIDxlbT48L2VtPlxuICAgICAgPGRpdiBjbGFzcz0iZGlzY291bnQtcHJpY2UtcmUtZGV0YWlsIj5cbiAgICAgICAg5YeR5Y2V5Yiw5omL5Lu35oyH5L+D6ZSA5rS75Yqo5a6M576O5YeR5Y2V5ZKM5L2/55So5LyY5oOg5Yi45ZCO55qE55CG6K665Yiw5omL5Lu377yM5LiN5Luj6KGo5oKo55qE5a6e6ZmF5pSv5LuY5Lu35qC844CCXG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICB7e2lmIHNob3dhcHB9fVxuICAgIDxkaXYgY2xhc3M9ImFwcC10dWlndWFuZyI+XG4gICAgICA8cD7nq4vljbPmiavnoIHkuIvovb1BUFA8L3A+XG4gICAgICA8aW1nIGNsYXNzPSJhcHAtdGctcXJjb2RlIiBzcmM9Imh0dHBzOi8vY2RuLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvYXBwdGcxODEwMTkvY2xpXzEwMDBweC5wbmciPlxuICAgICAgPGRpdiBjbGFzcz0iYXBwLXRnLWl0ZW0gaXRlbS1iaWppYWdlIj5cbiAgICAgICAgPGVtID48L2VtPlxuICAgICAgICA8c3Bhbj7mr5Tku7fmoLw8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImFwcC10Zy1pdGVtIGl0ZW0taGlzdG9yeSI+XG4gICAgICAgIDxlbT48L2VtPlxuICAgICAgICA8c3Bhbj7mn6Xljoblj7I8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImFwcC10Zy1pdGVtIGl0ZW0tY291cG9uIj5cbiAgICAgICAgPGVtPjwvZW0+XG4gICAgICAgIDxzcGFuPuaJvuS8mOaDoOWIuDwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgICBkaXYjbWluaV9wcmljZV9oaXN0b3J5X2RldGFpbCB7XG4gICAgICAgIHdpZHRoOiA1OTBweDtcbiAgICAgIH1cbiAgICAgIC5hcHAtdHVpZ3Vhbmcge1xuICAgICAgICB3aWR0aDogMTI4cHg7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2U0ZTRlNDtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNGU0ZTQ7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgdG9wOiAtMXB4O1xuICAgICAgfVxuICAgICAgLmFwcC10dWlndWFuZyBwIHtcbiAgICAgICAgd2lkdGg6IDk3cHg7XG4gICAgICAgIGhlaWdodDogMTZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgbWFyZ2luOiAxNXB4IDAgMCAxN3B4O1xuICAgICAgfVxuICAgICAgLmFwcC10Zy1xcmNvZGUge1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgaGVpZ2h0OiAxMjhweDtcbiAgICAgICAgd2lkdGg6IDEyOHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzcHg7XG4gICAgICB9XG4gICAgICAuYXBwLXRnLWl0ZW0ge1xuICAgICAgICBoZWlnaHQ6IDIycHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTRweDtcbiAgICAgIH1cbiAgICAgIC5hcHAtdGctaXRlbSBlbSB7XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBoZWlnaHQ6IDIycHg7XG4gICAgICAgIHdpZHRoOiAyMnB4O1xuICAgICAgICBtYXJnaW4tbGVmdDogMjNweDtcbiAgICAgIH1cbiAgICAgIC5hcHAtdGctaXRlbSBzcGFuIHtcbiAgICAgICAgaGVpZ2h0OiAyMnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMjJweDtcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICBjb2xvcjogIzY2NjtcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgIH1cbiAgICAgIC5pdGVtLWJpamlhZ2UgZW0ge1xuICAgICAgICBiYWNrZ3JvdW5kOiB1cmwoImh0dHBzOi8vY2RuLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvYXBwdGcxODEwMTkvYmpnLnBuZyIpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgfVxuICAgICAgLml0ZW0taGlzdG9yeSBlbSB7XG4gICAgICAgIGJhY2tncm91bmQ6IHVybCgiaHR0cHM6Ly9jZG4uZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9hcHB0ZzE4MTAxOS9oaXN0b3J5LnBuZyIpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgfVxuICAgICAgLml0ZW0tY291cG9uIGVtIHtcbiAgICAgICAgYmFja2dyb3VuZDogdXJsKCJodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL2FwcHRnMTgxMDE5L2NvdXBvbi5wbmciKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIH1cbiAgICAgICNtaW5pX3ByaWNlX2hpc3RvcnlfZGV0YWlsIC5kaXNjb3VudC1wcmljZS1yZSB7XG4gICAgICAgIGxlZnQ6IDM2NHB4O1xuICAgICAgICByaWdodDogaW5oZXJpdDtcbiAgICAgIH1cbiAgICA8L3N0eWxlPlxuICAgIHt7L2lmfX1cbiAgPC9kaXY+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDIyKSxhPW4oMTIpLHI9ZnVuY3Rpb24odCl7bCh0KSxwKCk7dmFyIGk9InRyZW5kX2JveCI7ZSgiLm1pbi1tYXgtcHJpY2UtbGFibGUgLm1heC1sYWIiKS50ZXh0KCLmnIDpq5g677+lIit0LnN0b3JlWzBdLmhpZ2hlc3QpLGUoIi5taW4tbWF4LXByaWNlLWxhYmxlIC5taW4tbGFiIikudGV4dCgi5pyA5L2OOu+/pSIrdC5zdG9yZVswXS5sb3dlc3QpLG4oMTcwKSh7ZWw6aSxtc2c6dC5zdG9yZVswXX0pfSxzPXsicHJpLXQxIjoi5Lu35qC85LiK5raoIiwicHJpLXQwIjoi5Lu35qC85bmz56izIiwicHJpLXQtMSI6IuS7t+agvOS4i+mZjSIsInByaS10LTIiOiLljoblj7LmnIDkvY4ifSxsPWZ1bmN0aW9uKHQpe3ZhciBhPWUoJy5nYW1lX3B1cmNoYXNlX2FjdGlvbjpjb250YWlucygi5byA5aeL5ri45oiPIiknKTswPT09YS5sZW5ndGgmJihhPWUoJy5nYW1lX3B1cmNoYXNlX2FjdGlvbjpjb250YWlucygi5re75Yqg6Iez6LSt54mp6L2mIiknKSk7Zm9yKHZhciByPXQucHJpY2Vfc3RhdHVzLGw9InByaS10IityLGM9c1tsXSxwPW4oMTcxKSxkPWEuZXEoMCksaD1kLndpZHRoKCksdT1kLmNoaWxkcmVuKCksbT0wLGY9MDtmPHUubGVuZ3RoO2YrKyltKz11LmVxKGYpLm91dGVyV2lkdGgoKTt2YXIgZz1oLW0tNS0xMDgsdz1pLnNfc2VydmVyKyIvaW1hZ2VzL2V4dGVuc2lvbnMvbmV3YmFyIjthLmVxKDApLnByZXBlbmQoby5jb21waWxlKHApKHtpbWd1cmw6dyxidG5sZWZ0Omcsc3RhdHVzX3RsZTpjLHN0YXR1c19zdHI6bH0pKX0sYz1mdW5jdGlvbigpe3ZhciB0PXZvaWQgMDtlKCIjc3RlYW1fdHJlbWRfYnRuIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7ZSgiI3RyZW5tX3RyZW5kX2RldGFpbCIpLnNob3coKSxlKCIjc3RlYW1fdHJlbWRfYnRuIikuYWRkQ2xhc3MoIl9tc2hvdmVyIiksYSgic3RlYW0tdHJlbmQtdHJhY2siKX0pLGUoIiNzdGVhbV90cmVtZF9idG4iKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXt0PXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKCIjdHJlbm1fdHJlbmRfZGV0YWlsIikuaGlkZSgpLGUoIiNzdGVhbV90cmVtZF9idG4iKS5yZW1vdmVDbGFzcygiX21zaG92ZXIiKX0sMzAwKX0pLGUoIiN0cmVubV90cmVuZF9kZXRhaWwiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodCl9KSxlKCIjdHJlbm1fdHJlbmRfZGV0YWlsIikub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7ZSgiI3RyZW5tX3RyZW5kX2RldGFpbCIpLmhpZGUoKSxlKCIjc3RlYW1fdHJlbWRfYnRuIikucmVtb3ZlQ2xhc3MoIl9tc2hvdmVyIil9KX0scD1mdW5jdGlvbigpe3ZhciB0PW4oMTcyKSxpPWUoJy5nYW1lX2FyZWFfcHVyY2hhc2VfZ2FtZTpjb250YWlucygi5byA5aeL5ri45oiPIiknKTswPT09aS5sZW5ndGgmJihpPWUoJy5nYW1lX2FyZWFfcHVyY2hhc2VfZ2FtZTpjb250YWlucygi5re75Yqg6Iez6LSt54mp6L2mIiknKSksMD09PWkubGVuZ3RoJiYoaT1lKCcuZ2FtZV9hcmVhX3B1cmNoYXNlX2dhbWVfd3JhcHBlcjpjb250YWlucygi5re75Yqg6Iez6LSt54mp6L2mIiknKSksaS5lcSgwKS5hcHBlbmQoby5jb21waWxlKHQpKCkpLGkuZXEoMCkuYWRkQ2xhc3MoInN0ZWFtX2JveF90dCIpLGMoKX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7dCYmMCE9PXQuc3RvcmVbMF0uYWxsX2xpbmUubGVuZ3RoJiZyKHQpfX0pLmNhbGwoZSxuKDQpLG4oMSkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0Ijt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dmFyIG49cGFyc2VJbnQodC5tc2cuaGlnaGVzdCksaT0xMDtuPjk5JiYoaT0yNCk7dmFyIG89e2NoYXJ0OntyZW5kZXJUbzp0LmVsLG1hcmdpblRvcDoyNCxtYXJnaW5MZWZ0Ojc4LG1hcmdpblJpZ2h0OjI0LGJhY2tncm91bmRDb2xvcjoiIzM5NDY1MyIsdHlwZToibGluZSIsZXZlbnRzOntsb2FkOmZ1bmN0aW9uKCl7dGhpcy55QXhpc1swXS51cGRhdGUoe3RpY2tJbnRlcnZhbDpwYXJzZUludCgodGhpcy55QXhpc1swXS5kYXRhTWF4LXRoaXMueUF4aXNbMF0uZGF0YU1pbikvNCl8fDF9KTt2YXIgZT0odGhpcy54QXhpc1swXS5kYXRhTWF4LXRoaXMueEF4aXNbMF0uZGF0YU1pbikvODY0ZTU7ZS89Mzt2YXIgbj12b2lkIDA7ZT4zMD8oZT1wYXJzZUludChlLzMwKSsxLG49MzAqZSo4NjRlNSk6bj04NjRlNSplLHQuc2hvcnRUaW1lfHx0aGlzLnhBeGlzWzBdLnVwZGF0ZSh7dGlja0ludGVydmFsOm59KX19fSxjcmVkaXRzOntlbmFibGVkOiExfSxjb2xvcnM6WyIjNjFCQkVGIl0sdGl0bGU6e3RleHQ6dC50aXRsZXx8IiIseTotMjAsc3R5bGU6e2NvbG9yOiIjOTJBQkMyIn19LHhBeGlzOnt0eXBlOiJkYXRldGltZSIsbGFiZWxzOntzdHlsZTp7Y29sb3I6IiM5MkFCQzIifX0sZGF0ZVRpbWVMYWJlbEZvcm1hdHM6e2RheToiJW0tJWUiLHdlZWs6IiVtLSVlIixtb250aDoiJXkvJW0iLHllYXI6IiV5LyVtIn0sdGlja0xlbmd0aDowLGxpbmVDb2xvcjoiIzNFNEM1QSIsZ3JpZExpbmVXaWR0aDoxLGdyaWRMaW5lQ29sb3I6IiMzRTRDNUEifSx5QXhpczp7dGl0bGU6e3RleHQ6IuS7t+agvCjlhYMpIixyb3RhdGlvbjowLG1hcmdpbjowLHk6LTkwLHg6aSxzdHlsZTp7Y29sb3I6IiM5MkFCQzIifX0sbGFiZWxzOntzdHlsZTp7Y29sb3I6IiM5MkFCQzIifSxmb3JtYXR0ZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZS50b0ZpeGVkKDIpfX0scGxvdExpbmVzOlt7dmFsdWU6MCx3aWR0aDoxLGNvbG9yOiIjODA4MDgwIn1dLGdyaWRMaW5lQ29sb3I6IiMzRTRDNUEiLHRpY2tQaXhlbEludGVydmFsOjUwfSx0b29sdGlwOnt4RGF0ZUZvcm1hdDoiJVktJW0tJWQiLHNoYXJlZDohMCx1c2VIVE1MOiEwLGZvbGxvd1BvaW50ZXI6ITEsc3R5bGU6e3BhZGRpbmc6MH0sZm9ybWF0dGVyOmZ1bmN0aW9uKCl7dmFyIHQ9bmV3IERhdGUodGhpcy54KSxlPXQuZ2V0RnVsbFllYXIoKSxuPXQuZ2V0TW9udGgoKSsxLGk9dC5nZXREYXRlKCk7bjwxMCYmKG49IjAiK24udG9TdHJpbmcoKSksaTwxMCYmKGk9IjAiK2kudG9TdHJpbmcoKSk7dmFyIG89ZSsiLiIrbisiLiIraSxhPXZvaWQgMDthPTAhPT10aGlzLnk/dGhpcy55LnRvRml4ZWQoMik6IjAiO3ZhciByPSc8ZGl2IGNsYXNzPSJ0dGlwLWRpc2NvdW50Ij5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR0aXAtc3AxIj4nK28rJzwvc3Bhbj5cbiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InR0aXAtc3AyIj7ku7fmoLw6IO+/pScrYSsiPC9zcGFuPlxuICAgICAgICA8L2Rpdj4iO3JldHVybiByfSxiYWNrZ3JvdW5kQ29sb3I6InJnYmEoMjAsMzcsNTUsMC45NCkifSxwbG90T3B0aW9uczp7c2VyaWVzOnttYXJrZXI6e3JhZGl1czoxfSxzaGFkb3c6ITEsc3RhdGVzOntob3Zlcjp7bGluZVdpZHRoOjJ9fX19LGxlZ2VuZDp7ZW5hYmxlZDohMSxib3JkZXJXaWR0aDowfSxzZXJpZXM6W119O3ZvaWQgMD09PXQudGl0bGUmJihvLnRpdGxlLnN0eWxlLmRpc3BsYXk9Im5vbmUiKTt2YXIgYT10Lm1zZzt0cnl7by5zZXJpZXNbMF09e3Zpc2libGU6ITAsbmFtZTphLm5hbWUsY29sb3I6IiM2MUJCRUYiLGxpbmVXaWR0aDoyLGRhdGE6W119LG8uc2VyaWVzWzBdLnZpc2libGU9ITAsby5zZXJpZXNbMF0ucG9pbnRTdGFydD1hLmFsbF9saW5lX2JlZ2luX3RpbWUsby5zZXJpZXNbMF0ucG9pbnRJbnRlcnZhbD1hLmFsbF9lcXVhbF9zaG9ydD8zNmU1Ojg2NGU1LG8uc2VyaWVzWzBdLmRhdGE9YS5hbGxfbGluZSxuZXcgZS5DaGFydChvKX1jYXRjaChyKXt9fX0pLmNhbGwoZSxuKDE1MSkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0iPGRpdiBpZD1cInN0ZWFtX3RyZW1kX2J0blwiPlxuICA8c3Bhbj57e3N0YXR1c190bGV9fTwvc3Bhbj5cbiAgPGVtIGNsYXNzPVwie3tzdGF0dXNfc3RyfX1cIj48L2VtPlxuICA8c3R5bGUgdHlwZT1cInRleHQvY3NzXCI+XG4gICAgI3N0ZWFtX3RyZW1kX2J0bntcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtMTgwZGVnLCAjMjQ4OEI5IDAlLCAjMTI0MjVBIDEwMCUpO1xuICAgICAgYm9yZGVyOiAycHggc29saWQgIzAwMDAwMDtcbiAgICAgIHdpZHRoOiAxMDRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgY29sb3I6ICAjQkNFNkZGO1xuICAgICAgbWFyZ2luLWxlZnQ6IHt7YnRubGVmdH19cHg7XG4gICAgICBoZWlnaHQ6IDMycHg7XG4gICAgfVxuICAgICNzdGVhbV90cmVtZF9idG4uX21zaG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KC0xODBkZWcsICM2NkMwRjQgMCUsICMyRjg5QkMgMTAwJSk7XG4gICAgICBcbiAgICB9XG4gICAgI3N0ZWFtX3RyZW1kX2J0bi5fbXNob3ZlciBzcGFuIHtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cbiAgICAjc3RlYW1fdHJlbWRfYnRuID4qIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAjc3RlYW1fdHJlbWRfYnRuIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAxNXB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMzJweDtcbiAgICAgIGNvbG9yOiAjQkNFNkZGXG4gICAgICBmb250LWZhbWlseTogXCJtaWNyb3NvZnQgeWFoZWlcIjtcbiAgICB9XG4gICAgI3N0ZWFtX3RyZW1kX2J0biBlbSB7XG4gICAgICB3aWR0aDogMThweDtcbiAgICAgIGhlaWdodDogMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDdweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gICAgfVxuICAgICNzdGVhbV90cmVtZF9idG4gZW0ucHJpLXQxIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgne3tpbWd1cmx9fS9yaXNlLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAjc3RlYW1fdHJlbWRfYnRuIGVtLnByaS10MCB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ3t7aW1ndXJsfX0vc3RhYmxlLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICB9XG4gICAgI3N0ZWFtX3RyZW1kX2J0biBlbS5wcmktdC0xIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgne3tpbWd1cmx9fS9mYWxsLnBuZycpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAjc3RlYW1fdHJlbWRfYnRuIGVtLnByaS10LTJ7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoJ3t7aW1ndXJsfX0vbWluaW11bS5wbmcnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICB9XG4gIDwvc3R5bGU+XG48L2Rpdj4ifSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0idHJlbm1fdHJlbmRfZGV0YWlsIj5cbiAgPGRpdiBpZD0idHJlbmRfYm94Ij48L2Rpdj5cbiAgPGRpdiBjbGFzcz0ibWluLW1heC1wcmljZS1sYWJsZSI+XG4gICAgPGRpdiBjbGFzcz0ibWluLW1heC1ib3giPlxuICAgICAgPHNwYW4gY2xhc3M9Im1heC1sYWIiPuacgOmrmDrvv6U1LjAwPC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9Im1pbi1sYWIiPuacgOS9jjrvv6UzLjAwPC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIFxuICA8L2Rpdj5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAuZ2FtZV9hcmVhX3B1cmNoYXNlX2dhbWVfd3JhcHBlci5zdGVhbV9ib3hfdHQgLC5zdGVhbV9ib3hfdHR7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTk5O1xuICAgIH1cbiAgICAjdHJlbm1fdHJlbmRfZGV0YWlsIHtcbiAgICAgIHdpZHRoOiA0MDBweDtcbiAgICAgIGhlaWdodDogMjYwcHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMzk0NjUzO1xuICAgICAgYm94LXNoYWRvdzogMCAycHggNHB4IDAgIzQ2NUY3QztcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM0NjVGN0M7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDI2cHg7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgei1pbmRleDogOTk5OTk5OTk5OTtcbiAgICB9XG4gICAgI3RyZW5tX3RyZW5kX2RldGFpbCAqe1xuICAgICAgZm9udC1mYW1pbHk6ICJtaWNyb3NvZnQgeWFoZWkiO1xuICAgIH1cbiAgICAjdHJlbmRfYm94IHtcbiAgICAgIG1hcmdpbi10b3A6IDQ0cHg7XG4gICAgICBoZWlnaHQ6IDIxNnB4O1xuICAgICAgd2lkdGg6IDQwMHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBib3JkZXI6MXB4IHNvbGlkICMzOTQ2NTM7XG4gICAgfVxuICAgIC50cmVuZC1jb21wYXJlIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgtMTgwZGVnLCAjMjgzNjQ1IDAlLCAjMkMzQTQ5IDEwMCUpO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzM5NDY1MztcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDIxNHB4O1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cbiAgICAudHJlbmQtY29tcGFyZSBwIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tdG9wOiAxOHB4O1xuICAgICAgaGVpZ2h0OiAxOXB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNEQUVERkY7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG4gICAgLnRyZW5kLWNvbXBhcmUgdWwgbGkge1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICAgIGhlaWdodDogMTlweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICAudHJlbmQtY29tcGFyZSB1bCBsaSBzcGFuIHtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gICAgLnRyZW5kLWNvbXBhcmUgdWwgbGk6YWZ0ZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb250ZW50OiAiIjtcbiAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbiAgICAudHJlbmQtY29tLXNwMSB7XG4gICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICBjb2xvcjogI0RBRURGRjtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMnB4O1xuICAgICAgd2lkdGg6IDY1cHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC50cmVuZC1jb20tc3AyIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAjNzFDQUZGO1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBsaW5lLWhlaWdodDogMTlweDtcbiAgICAgIG1hcmdpbi1yaWdodDogMnB4O1xuICAgIH1cbiAgICAudHJlbmQtY29tLXNwMy5pc2Rpc2NvdW50IHtcbiAgICAgIGNvbG9yOiAjODdCNjFGO1xuICAgIH1cbiAgICAudHJlbmQtY29tLXNwMyB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogICNGMDU0Mjg7XG4gICAgICBoZWlnaHQ6IDE5cHg7XG4gICAgICBmbG9hdDogcmlnaHQhaW1wb3J0YW50O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgfVxuICAgIC5taW4tbWF4LXByaWNlLWxhYmxlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGhlaWdodDogNDRweDtcbiAgICAgIHdpZHRoOiA0MDJweDtcbiAgICAgIHRvcDogMHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGVmdDogMHB4O1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzM5NDY1MztcbiAgICB9XG4gICAgLm1pbi1tYXgtYm94IHtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgICAubWluLW1heC1wcmljZS1sYWJsZSBzcGFuIHtcbiAgICAgIGhlaWdodDogMjZweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgcGFkZGluZzogMCA3cHg7XG4gICAgICBtYXJnaW4tdG9wOiAxOHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBib3JkZXItcmFkaXVzOiAycHg7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgfVxuICAgIC5taW4tbWF4LXByaWNlLWxhYmxlIC5tYXgtbGFiIHtcbiAgICAgIGJhY2tncm91bmQ6ICMyRDNBNDY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjRkY1NjI3O1xuICAgICAgY29sb3I6ICNGRjU2Mjc7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDM2cHg7XG4gICAgfVxuICAgIC5taW4tbWF4LXByaWNlLWxhYmxlIC5taW4tbGFiIHtcbiAgICAgIGJhY2tncm91bmQ6ICMyRTNBNDc7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjOUVEODFFO1xuICAgICAgY29sb3I6ICM5RUQ4MUU7XG4gICAgfVxuICAgIC50dGlwLWRpc2NvdW50IHtcbiAgICAgIHdpZHRoOiAxMTBweDtcbiAgICAgIGhlaWdodDogNTRweDtcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICB9XG4gICAgLnR0aXAtZGlzY291bnQgc3Bhbi50dGlwLXNwMSB7XG4gICAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgfVxuICAgIC50dGlwLWRpc2NvdW50IHNwYW4ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgZm9udC1mYW1pbHk6ICJtaWNyb3NvZnQgeWFoZWkiO1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgY29sb3I6ICNCREQ5RjM7XG4gICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgfVxuICA8L3N0eWxlPlxuPC9kaXY+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDY1KSxhPW4oMjIpLHI9big0Nykscz1uKDQwKSxsPW4oMTc0KSxjPW4oMjQpLHA9bigxNCksZD1uKDEyKSxoPW4oMTMpLHU9dm9pZCAwLG09ZnVuY3Rpb24odCl7dCYmMjAwPT09dC5jb2RlJiYodD10LmRhdGEsdC5waWQ9IjEwMDA1IixfKHQsZnVuY3Rpb24obyxyKXt2KG8scixmdW5jdGlvbihvKXt2YXIgcj1uKDE3NSkscz11PjcwLGw9IueCueWHu+mihuWIuCI7cyYmKGw9IiIpLGUoIi5nd2QtdG9wYmFyLWxlZnQiKS5hcHBlbmQoYS5jb21waWxlKHIpKHtwcmljZTp0LmNvdXBvbi5jb3Vwb25fbW9uZXksdXJsOnQuY2xpY2tfdXJsMix0bGU6bCxpc1Nob3dQaWM6cyxwaWNVcmw6b1swXS5pbWdTcmMKfSkpLHAubG9nKCJ0cmFjazp0b3Bjb3Vwb246IitpLmZyb21fZGV2aWNlKSxkKCJ0cmFjazp0b3Bjb3Vwb246IitpLmZyb21fZGV2aWNlKSxnKCJjbGljazp0b3Bjb3Vwb246IitpLmZyb21fZGV2aWNlKX0pfSkpfSxmPWZ1bmN0aW9uKHQpe2lmKCEodCBpbnN0YW5jZW9mIEFycmF5KSl7dmFyIG89bigxNzUpO2UoIi5nd2QtdG9wYmFyLWxlZnQiKS5hcHBlbmQoYS5jb21waWxlKG8pKHtwcmljZTp0LmRpc2NvdW50LHVybDp0LmNsaWNrX3VybDJ9KSkscC5sb2coInRyYWNrOnRvcGNvdXBvbl8yOiIraS5mcm9tX2RldmljZSksZCgidHJhY2s6dG9wY291cG9uXzI6IitpLmZyb21fZGV2aWNlKSxnKCJjbGljazp0b3Bjb3Vwb25fMjoiK2kuZnJvbV9kZXZpY2UpfX0sZz1mdW5jdGlvbih0KXt2YXIgbj12b2lkIDA7ZSgiI3RvcF9jb3Vwb25fYnRuIikub24oImNsaWNrIixmdW5jdGlvbigpe3AubG9nKHQpLGQodCl9KSxlKCIuY291cG9uLWNsb3NlLWJ0biIpLm9uKCJjbGljayIsZnVuY3Rpb24odCl7cmV0dXJuIGUoIiN0b3BfY291cG9uX2J0biIpLnJlbW92ZSgpLCExfSksZSgiI3RvcF9jb3Vwb25fYnRuIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7bnx8KHAubG9nKCJ0cmFjazpjb3Vwb246cXJjb2RlOnRvcCIpLGQoInRyYWNrOmNvdXBvbjpxcmNvZGU6dG9wIiksbj0hMCl9KX0sdz12b2lkIDAseD12b2lkIDAsYj12b2lkIDAsXz1mdW5jdGlvbih0LGUpe3ZhciBuPXt9O2lmKHgpcmV0dXJuIHc9ZSx2b2lkKGI9dC5jbGlja191cmwpO3ZhciBvPWkuZHAuaXRlbUlkLGE9e2l0ZW1OdW1JZDpvfSxyPSJodHRwczovL2Fjcy5tLnRhb2Jhby5jb20vaDUvbXRvcC50YW9iYW8uZGV0YWlsLmdldGRldGFpbC82LjAvP2RhdGE9IitlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoYSkpO2MuZ2V0UHVyZShyKS5kb25lKGZ1bmN0aW9uKGkpe3ZhciBhPWkuZGF0YS5pdGVtLHI9aS5kYXRhLnNlbGxlcixzPUpTT04ucGFyc2UoaS5kYXRhLmFwaVN0YWNrWzBdLnZhbHVlKTtuLnRpdGxlPWEudGl0bGUsbi5waWNVcmw9YS5pbWFnZXNbMF0sbi5pZD1vLG4uc2hvcE5hbWU9ci5zaG9wTmFtZSxuLnNob3BMb2dvPXIuc2hvcEljb24sbi5zaG9wVXJsPXIuc2hvcFVybCxuLmJpejMwRGF5PXMuaXRlbS5zZWxsQ291bnQsbi5hbW91bnQ9dC5jb3Vwb24uY291cG9uX21vbmV5LG4uZWZmZWN0aXZlU3RhcnRUaW1lPXQuY291cG9uLnN0YXJ0X3RpbWUsbi5lZmZlY3RpdmVFbmRUaW1lPXQuY291cG9uLmVuZF90aW1lLG4ucGlkPXQucGlkLG4udGtsPXQudGtsLG4udG1hbGw9bG9jYXRpb24uaG9zdC5pbmRleE9mKCJ0bWFsbCIpPi0xLG4uZGlzY291bnRQcmljZT0oTnVtYmVyKHMuc2t1Q29yZS5za3UyaW5mb1swXS5wcmljZS5wcmljZU1vbmV5KS8xMDApLnRvRml4ZWQoMiksZShuLHQuY2xpY2tfdXJsKSx3JiZ3KG4sYil9KX0sdj1mdW5jdGlvbih0LGUsbil7dC5jb3Vwb25Vcmw9ZSx0PUpTT04uc3RyaW5naWZ5KHQpO3ZhciBpPW5ldyBYTUxIdHRwUmVxdWVzdDtpLm9wZW4oIlBPU1QiLCJodHRwczovL2Jyb3dzZXIuZ3dkYW5nLmNvbS9leHRlbnNpb24vQ291cG9uUXJDb2RlP3c9MTUwIiksaS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixmdW5jdGlvbigpe3RyeXt2YXIgdD1KU09OLnBhcnNlKGkucmVzcG9uc2UpO24odCl9Y2F0Y2goZSl7fX0pLGkuc2VuZCh0KSxwLmxvZygi5a6e5pe25oqT5Y+W5Y+R6YCB6K+35rGCIil9LHk9ZnVuY3Rpb24odCl7cmV0dXJuIXR8fHQmJjIwMCE9PXQuY29kZT92b2lkKGkucnVubWluaUNvdXBvbjI/ZShkb2N1bWVudCkudHJpZ2dlcigicnVubWluaUNvdXBvbjIiKTppLnJ1bm1pbmlDb3VwPSIxIik6KGkucnVubWluaUNvdXA9IjIiLHQ9dC5kYXRhLHQucGlkPSIxMDAwMSIsdm9pZCBfKHQsZnVuY3Rpb24obixvKXt2KG4sbyxmdW5jdGlvbihuKXt0LmNvdXBvbi5sYXN0UHJpY2U9TnVtYmVyKGkuZHAucHJpY2UtdC5jb3Vwb24uY291cG9uX21vbmV5KS50b0ZpeGVkKDIpO3ZhciBvPXU+NzAscj0i54K55Ye76aKG5Yi4IjtvJiYocj0iIik7dmFyIHM9YS5jb21waWxlKGwpKHtkYXRhOnQsdGxlOnIsaXNTaG93UGljOm8scGljVXJsOm5bMF0uaW1nU3JjfSk7ZSgiI21pbmlDb3Vwb25Db20iKS5sZW5ndGg+MD9lKCIjbWluaUNvdXBvbkNvbSIpLmJlZm9yZShzKTplKCIuZ3dkLW1pbmliYXItYmciKS5hcHBlbmQocykscC5sb2coInRyYWNrOm1pbmljb3Vwb246IitpLmZyb21fZGV2aWNlKSxkKCJ0cmFjazptaW5pY291cG9uOiIraS5mcm9tX2RldmljZSksZSgiI2NvdXBvbl9ib3giKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7cC5sb2coImNsaWNrOm1pbmljb3Vwb246IitpLmZyb21fZGV2aWNlKSxkKCJjbGljazptaW5pY291cG9uOiIraS5mcm9tX2RldmljZSl9KTt2YXIgYz12b2lkIDA7ZSgiI2NvdXBvbl9ib3giKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtjfHwocC5sb2coInRyYWNrOmNvdXBvbjpxcmNvZGU6bWluaSIpLGQoInRyYWNrOmNvdXBvbjpxcmNvZGU6bWluaSIpLGM9ITApfSl9KX0pKX0saz1mdW5jdGlvbih0KXtpZighKHQgaW5zdGFuY2VvZiBBcnJheSkpe3Q9e2NsaWNrX3VybDp0LmNsaWNrX3VybDIsY291cG9uOntjb3Vwb25fbW9uZXk6dC5kaXNjb3VudCxsYXN0UHJpY2U6dC5jb3Vwb25QcmljZVBDfX07dmFyIG49YS5jb21waWxlKGwpKHtkYXRhOnR9KTtlKCIuIitpLndpc2hkb20pLmFwcGVuZChuKSxwLmxvZygidHJhY2s6dG9wY291cG9uXzI6IitpLmZyb21fZGV2aWNlKSxkKCJ0cmFjazp0b3Bjb3Vwb25fMjoiK2kuZnJvbV9kZXZpY2UpLGUoIiNjb3Vwb25fYm94Iikub24oImNsaWNrIixmdW5jdGlvbigpe3AubG9nKCJjbGljazptaW5pY291cG9uXzI6IitpLmZyb21fZGV2aWNlKSxkKCJjbGljazptaW5pY291cG9uXzI6IitpLmZyb21fZGV2aWNlKX0pfX0sej1mdW5jdGlvbih0KXt2YXIgZT1oLmdldCgiZHBfcXVlcnkiKSxuPWUmJmUuZHAmJmUuZHAuZHBfaWQsaT0iaHR0cHM6Ly9icm93c2VyLmd3ZGFuZy5jb20vYXBwL3F1YW5idGM/ZHBpZD0iK247Yy5nZXQoaSkuZG9uZShmdW5jdGlvbihlKXt0KGUpfSl9LGo9ZnVuY3Rpb24odCl7MCE9PXQubGVuZ3RoJiYodC5sdF9zaG9ydF9saW5rfHx0LmNsaWNrX3VybCkmJih0Lmx0X3Nob3J0X2xpbmsmJih0LmNsaWNrX3VybD10Lmx0X3Nob3J0X2xpbmspLHQuY291cG9uUHJpY2VQQ3x8KHQuY291cG9uUHJpY2VQQz0oTnVtYmVyKHQucGNQcmljZSktTnVtYmVyKHQuZGlzY291bnQpKS50b0ZpeGVkKDIpKSxrKHQpLGYodCkpfSxDPWZ1bmN0aW9uKCl7dmFyIHQ9aS5kcC5pdGVtSWQsZT0iMTAwMDEiO3U9cGFyc2VJbnQoMTAwKk1hdGgucmFuZG9tKCkpLG8uaW5pdCh0LGUseSk7dmFyIG49IjEwMDA1IjtvLmluaXQodCxuLG0pfTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbih0KXtpZighaS5mb3JiaWRDb3Vwb24mJiIzNjAiIT09aS5mcm9tX2RldmljZSl7dmFyIGU9aS5zaXRlLG49ci5nZXRTaXRlSWQoZSk7cy5pbml0KG4sZnVuY3Rpb24odCl7dCYmdD4wJiYoaS5kcC5vbGRQcmljZT10LGkuZHAucHJpY2U9dCksQygpfSl9fSx0LmV4cG9ydHMuaW5pdDI9ZnVuY3Rpb24oKXt6KGopfX0pLmNhbGwoZSxuKDQpLG4oMSkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGEgaWQ9ImNvdXBvbl9ib3giIHRpdGxlPSJ7e3RsZX19IiBjbGFzcz0iY291cG9uLWJveCIge3tpZiAhaXNTaG93UGljfX0gaHJlZj0ie3tkYXRhLmNsaWNrX3VybDJ9fSIgdGFyZ2V0PSJfYmxhbmsiIHN0eWxlPSJjdXJzb3I6cG9pbnRlciJ7ey9pZn19PlxuICA8c3BhbiBjbGFzcz0iY291cG9uLWljb24iPjwvc3Bhbj5cbiAgPGRpdiAgY2xhc3M9ImNvdXBvbi10bGUiPlxuICAgIDxzcGFuPuW9k+WJjeWVhuWTgemihuWIuOeri+WHj3t7ZGF0YS5jb3Vwb24uY291cG9uX21vbmV5fX3lhYM8L3NwYW4+IFxuICAgIDxlbSBjbGFzcz0iY291cG9uX2dpZiI+PC9lbT5cbiAgPC9kaXY+XG4gIDxkaXYgIGNsYXNzPSJjbGljazJnZXQiPlxuICAgIDxzcGFuIGNsYXNzPSJjMmctc3AxIj7vv6V7e2RhdGEuY291cG9uLmNvdXBvbl9tb25leX19PC9zcGFuPlxuICAgIDxzcGFuIGNsYXNzPSJjMmctc3AyIj7pooblj5Y8L3NwYW4+XG4gIDwvZGl2PlxuICB7e2lmIHBpY1VybCAmJiBpc1Nob3dQaWN9fVxuICA8ZGl2IGNsYXNzPSJtaW5pY291cG9uX2RldGFpbCI+XG4gICAgICA8aW1nIHNyYz0ie3twaWNVcmx9fSI+XG4gICAgICA8c3Bhbj7lvq7kv6HmiavnoIHpoobliLg8L3NwYW4+XG4gIDwvZGl2PlxuICB7ey9pZn19XG4gIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gICAgI2NvdXBvbl9ib3guY291cG9uLWJveCB7XG4gICAgICB3aWR0aDogNDYwcHg7XG4gICAgICBoZWlnaHQ6IDM0cHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2U4ZThlODtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBtYXJnaW46IDBweDtcbiAgICAgIHBhZGRpbmc6IDBweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgICNjb3Vwb25fYm94OmFmdGVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogIiI7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gICAgLmd3ZF90bWFsbCAjZ3dkX21pbmliYXIge1xuICAgICAgZmxvYXQ6IG5vbmU7XG4gICAgfVxuICAgICNjb3Vwb25fYm94ICoge1xuICAgICAge3tpZiBpc1Nob3dQaWN9fVxuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAge3tlbHNlfX1cbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIHt7L2lmfX1cbiAgICB9XG4gICAgLm1pbmljb3Vwb25fZGV0YWlsIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMzVweDtcbiAgICAgIHJpZ2h0OiAtMXB4O1xuICAgICAgaGVpZ2h0OiAxNTBweDtcbiAgICAgIHdpZHRoOiAxMzJweDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTk5OTtcbiAgICAgIGJhY2tncm91bmQ6ICNGRkY3Rjg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjRjk1Nzc0O1xuICAgIH1cbiAgICAjY291cG9uX2JveDpob3ZlciAubWluaWNvdXBvbl9kZXRhaWwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIC5taW5pY291cG9uX2RldGFpbCBpbWcge1xuICAgICAgd2lkdGg6IDExNHB4O1xuICAgICAgaGVpZ2h0OiAxMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDlweDtcbiAgICAgIG1hcmdpbi10b3A6IDlweDtcbiAgICB9XG4gICAgLm1pbmljb3Vwb25fZGV0YWlsIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNGOTU1NzI7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLXRvcDogNnB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICAuY291cG9uLWJveCAqIHtcbiAgICAgIGZvbnQtZmFtaWx5OiBcJ01pY3Jvc29mdCBZYUhlaVwnLEFyaWFsLFNpbVN1bjtcbiAgICB9XG4gICAgLmNvdXBvbi1pY29uIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCdodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci9jb3Vwb25faWNvbi5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgICBtYXJnaW46IDlweCA4cHggOXB4IDEycHg7XG4gICAgfVxuICAgICNjb3Vwb25fYm94IC5jb3Vwb24tdGxlIHtcbiAgICAgIGNvbG9yOiAjRkYzQjVDO1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMXB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDM0cHg7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgd2lkdGg6IDMwMXB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDM0cHg7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUhaW1wb3J0YW50O1xuICAgIH1cbiAgICAjY291cG9uX2JveCAuY291cG9uLXRsZSAqIHtcbiAgICAgIGNvbG9yOiAjRkYzQjVDO1xuICAgIH1cbiAgICAjY291cG9uX2JveCAuY291cG9uLXRsZSBzcGFuIHtcbiAgICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgfVxuICAgIC5jb3Vwb25fZ2lmIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybChcJ2h0dHBzOi8vY2RuLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvbmV3YmFyL3R1cm4uZ2lmXCcpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDU2cHg7XG4gICAgICBtYXJnaW4tdG9wOiA5cHg7XG4gICAgfVxuICAgIC5jbGljazJnZXQge1xuICAgICAgYmFja2dyb3VuZDogdXJsKFwnaHR0cHM6Ly9jZG4uZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9uZXdiYXIvY291cG9uXzAxLnBuZ1wnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgd2lkdGg6IDk2cHg7XG4gICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgfVxuICAgIC5jbGljazJnZXQgc3BhbiB7XG4gICAgICBoZWlnaHQ6IDI0cHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxcHg7XG4gICAgfVxuICAgIC5jMmctc3AxIHtcbiAgICAgIHdpZHRoOiA1MHB4O1xuICAgICAgY29sb3I6ICNGRjNCNUM7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMjRweCFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5jMmctc3AyIHtcbiAgICAgIHdpZHRoOiA0NHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDI0cHghaW1wb3J0YW50O1xuICAgICAgY29sb3I6ICNmZmYhaW1wb3J0YW50O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICBkaXYjZ3dkX3dpc2hsaXN0X2Rpdi5nd2Rfd2lzaGxpc3RfZGl2IHtcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwcHg7XG4gICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwcHg7XG4gICAgfVxuICA8L3N0eWxlPlxuPC9hPid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8c3BhbiAgY2xhc3M9ImNvdXBvbi1tYXJsZWZ0Ij48L3NwYW4+XG48YSBpZD0idG9wX2NvdXBvbl9idG4iIHRpdGxlPSJ7e3RsZX19IiB7e2lmICFpc1Nob3dQaWN9fSBocmVmPSJ7e3VybH19IiB0YXJnZXQ9Il9ibGFuayIgc3R5bGU9ImN1cnNvcjpwb2ludGVyInt7L2lmfX0+XG4gICAgPHNwYW4gY2xhc3M9InRvcC1jb3Vwb24tdGxlIj7lvZPliY3llYblk4HpoobliLjnq4vlh488L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9InByaWNlLW51bSI+77+le3twcmljZX19PC9zcGFuPlxuICAgIDxlbSBjbGFzcz0ibGlua19oYW5kIj48L2VtPlxuICAgIHt7aWYgcGljVXJsICYmIGlzU2hvd1BpY319XG4gICAgPGRpdiBjbGFzcz0iY291cG9uX2RldGFpbCI+XG4gICAgICA8aW1nIHNyYz0ie3twaWNVcmx9fSI+XG4gICAgICA8c3Bhbj7lvq7kv6HmiavnoIHpoobliLg8L3NwYW4+XG4gICAgPC9kaXY+XG4gICAge3svaWZ9fVxuICA8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAgICN0b3BfY291cG9uX2J0biB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGJhY2tncm91bmQ6IHVybChodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci90b3BfY291cG9uMi5wbmcpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiAyOHB4O1xuICAgICAgd2lkdGg6IDE0OXB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogOTk5OTk5OTk5OTk5O1xuICAgICAgcGFkZGluZzogMHB4IWltcG9ydGFudDtcbiAgICAgIG1hcmdpbjogM3B4IDQwcHggNHB4IDBweCFpbXBvcnRhbnQ7XG4gICAgICBib3JkZXI6IG5vbmUhaW1wb3J0YW50O1xuICAgIH1cbiAgICAjdG9wX2NvdXBvbl9idG4gKiB7XG4gICAgICB7e2lmIGlzU2hvd1BpY319XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICB7e2Vsc2V9fVxuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAge3svaWZ9fVxuICAgIH1cbiAgICAgLmNvdXBvbl9kZXRhaWwge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAyOHB4O1xuICAgICAgcmlnaHQ6IDFweDtcbiAgICAgIGhlaWdodDogMTU2cHg7XG4gICAgICB3aWR0aDogMTQ2cHg7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTk5OTtcbiAgICAgIGJhY2tncm91bmQ6ICNGRkY2RjQ7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjRkY2MTMyO1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgI3RvcF9jb3Vwb25fYnRuOmhvdmVyIC5jb3Vwb25fZGV0YWlsIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICAuY291cG9uX2RldGFpbCBpbWcge1xuICAgICAgd2lkdGg6IDExOHB4O1xuICAgICAgaGVpZ2h0OiAxMThweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDE0cHg7XG4gICAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgfVxuICAgIC5jb3Vwb25fZGV0YWlsIHNwYW4ge1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICNGRjQzMzUhaW1wb3J0YW50O1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDAuMjJweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luLXRvcDogNnB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbiAgICAuY291cG9uLW1hcmxlZnQge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICBmbG9hdDogbGVmdCFpbXBvcnRhbnQ7XG4gICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNlZGYxZjI7XG4gICAgfVxuICAgIC5saW5rX2hhbmQge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgaGVpZ2h0OiAzMHB4O1xuICAgICAgd2lkdGg6IDM4cHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogLTM4cHg7XG4gICAgICB0b3A6IC0ycHg7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoaHR0cHM6Ly9jZG4uZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9uZXdiYXIvaGFuZC5naWYpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAjdG9wX2NvdXBvbl9idG4gKiB7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgZm9udC1mYW1pbHk6ICJtaWNyb3NvZnQgeWFoZWkiO1xuICAgIH1cblxuICAgICN0b3BfY291cG9uX2J0biAudG9wLWNvdXBvbi10bGV7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgICAgbWFyZ2luLWxlZnQ6IDJweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweCFpbXBvcnRhbnQ7XG4gICAgICBmb250LXdlaWdodDogbm9ybWFsIWltcG9ydGFudDtcbiAgICB9XG4gICAgI3RvcF9jb3Vwb25fYnRuIC5wcmljZS1udW17XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgd2lkdGg6IDQycHg7XG4gICAgICBoZWlnaHQ6IDI4cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMnB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgbGluZS1oZWlnaHQ6IDI4cHghaW1wb3J0YW50O1xuICAgICAgcGFkZGluZzogMHB4IWltcG9ydGFudDtcbiAgICB9XG4gIDwvc3R5bGU+XG48L2E+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIGk9bigxMCk7dC5leHBvcnRzLnJlYWR5PWZ1bmN0aW9uKCl7dmFyIHQ9WyJ3d3cuYW1hem9uLmNvbSIsInd3dy5hbWF6b24uZGUiLCJ3d3cuYW1hem9uLmNvLmpwIl07aWYodC5pbmRleE9mKGxvY2F0aW9uLmhvc3QpIT0tMSl7dmFyIG49e25hbWU6ZS5kcC5uYW1lfHwiIixwcmljZTplLmRwLm9sZFByaWNlfHwiMCJ9O2kudHJpZ2dlcih7dHlwZToiZ2V0QW1hem9uUHJpY2VUcmVuZCIsaW5mbzpKU09OLnN0cmluZ2lmeShuKX0pfX19KS5jYWxsKGUsbigxKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaTsoZnVuY3Rpb24obyxhKXsidXNlIHN0cmljdCI7aT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXtmb3IodmFyIHQ9ITEsZT1FLmxlbmd0aC0xO2U+PTA7ZS0tKWlmKHQ9RVtlXS50ZXN0KGxvY2F0aW9uLmhyZWYpKXJldHVybiB0fWZ1bmN0aW9uIGUodCl7QygiYm9keSIpLm9uKCJtb3VzZW92ZXIiLCJpbWciLGZ1bmN0aW9uKHQpe3ZhciBlPXQudGFyZ2V0O2lmKGUucGFyZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoImRhdGEtdGlwIikpcmV0dXJuITE7aWYoZS53aWR0aD41MCYmZS5oZWlnaHQ+NTApe3ZhciBuPWUucGFyZW50RWxlbWVudDtpZih5PW4sInRhb2JhbyI9PT1vLnNpdGUmJiJBIj09PW4udGFnTmFtZSYmL15odHRwcz86XC9cLy8udGVzdChuLmhyZWYpKXt2YXIgYT1uLmdldEF0dHJpYnV0ZSgiZGF0YS1uaWQiKTtpZihxPUMobikucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkubmV4dCgpLmZpbmQoIi5wcmljZSBzdHJvbmciKS50ZXh0KCkscChlKSxuLmhyZWYubWF0Y2goLyg/Oml0ZW1cLnRhb2Jhb1wuY29tfGRldGFpbFwudG1hbGxcLmNvbSkvKSlrPW4uaHJlZjtlbHNle2lmKCFhKXJldHVybjtrPSJodHRwczovL2l0ZW0udGFvYmFvLmNvbS9pdGVtLmh0bT9pZD0iK2F9YyhuKSxyKG4pfWVsc2UiQSI9PT1uLnRhZ05hbWUmJi9eaHR0cHM/OlwvXC8vLnRlc3Qobi5ocmVmKSYmUC5pc1Byb2R1Y3RQYWdlKG4uaHJlZik/KHAoZSksaz1pKGUsbi5ocmVmKSxjKG4pLHIobikpOiJBIj09PW4ucGFyZW50RWxlbWVudC50YWdOYW1lJiYvXmh0dHBzPzpcL1wvLy50ZXN0KG4ucGFyZW50RWxlbWVudC5ocmVmKSYmUC5pc1Byb2R1Y3RQYWdlKG4ucGFyZW50RWxlbWVudC5ocmVmKSYmKG49bi5wYXJlbnRFbGVtZW50LHAoZSksaz1pKGUsbi5ocmVmKSxjKG4pLHIobikpfX0pLGIub24oIm1vdXNlZW50ZXIiLHMpLHgub24oIm1vdXNlbGVhdmUiLGZ1bmN0aW9uKCl7Xy5oaWRlKCkseC5oaWRlKCl9KSxfLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe18uaGlkZSgpLHguaGlkZSgpfSl9ZnVuY3Rpb24gaSh0LGUpe2lmKG8uY3JjNjQpcmV0dXJuIGU7c3dpdGNoKEIuc2l0ZU5hbWUpe2Nhc2Uic3VuaW5nIjp2YXIgbj1DKHQpLnBhcmVudHMoIi53cmFwIikuZmluZCgiaW5wdXQuaGlkZW5JbmZvIikuYXR0cigiZGF0YXBybyIpLnNwbGl0KCJ8fCIpWzBdO2U9Imh0dHA6Ly93d3cuc3VuaW5nLmNvbS9lbWFsbC9wcmRfMTAwNTJfMTAwNTFfLTdfIituKyJfLmh0bWwifXJldHVybiBlfWZ1bmN0aW9uIHIodCl7dmFyIGU9Qyh0KTtlLmF0dHIoby5leHRCcmFuZCsiX3RpcF9iaW5kIil8fChlLm9uKCJtb3VzZWxlYXZlIixsKSxlLmF0dHIoby5leHRCcmFuZCsiX3RpcF9iaW5kIiwxKSl9ZnVuY3Rpb24gcygpe2NsZWFyVGltZW91dCh2KSx4LnNob3coKSxoKCl9ZnVuY3Rpb24gbCgpe3guaGlkZSgpLF8uaGlkZSgpfWZ1bmN0aW9uIGModCl7eC5jc3MoImxlZnQiLE0odCkpLHguY3NzKCJ0b3AiLEYodCkpLHguc2hvdygpLmNzcygiZGlzcGxheSIsImlubGluZS1ibG9jayIpfWZ1bmN0aW9uIHAodCl7dmFyIGU9IiI7c3dpdGNoKG8uc2l0ZSl7Y2FzZSJ5aWhhb2RpYW4iOnZhciBuPUModCkucGFyZW50KCkuYXR0cigiaWQiKS5zcGxpdCgiXyIpO24mJihuPW5bMV0pLGU9IiZpZD0iK24rIi0zMSJ9ej1lfWZ1bmN0aW9uIGQodCl7aWYoIW8uY3VycmVuY3l8fCF0KXJldHVybiB0O2lmKHQuc3RvcmUmJnQuc3RvcmUubGVuZ3RoPjApZm9yKHZhciBlPTA7ZTx0LnN0b3JlLmxlbmd0aDtlKyspe3ZhciBuPXQuc3RvcmVbZV07bi5wcmljZSYmbi5wcmljZS5tYXRjaCgvXGQrLykmJih0LnN0b3JlW2VdLnByaWNlPSLCpSIrQShuLnByaWNlKSl9aWYodC50cmVuZCYmdC50cmVuZC5zdG9yZS5sZW5ndGg+MCl7Zm9yKHZhciBpPTA7aTx0LnRyZW5kLnN0b3JlWzBdLmRhdGEubGVuZ3RoO2krKyl7dmFyIGE9dC50cmVuZC5zdG9yZVswXS5kYXRhW2ldO3QudHJlbmQuc3RvcmVbMF0uZGF0YVtpXVsxXT1BKGFbMV0pfXQudHJlbmQuc3RvcmVbMF0ubWluX3ByaWNlPUEodC50cmVuZC5zdG9yZVswXS5taW5fcHJpY2UpLnRvRml4ZWQoMiksdC50cmVuZC5zdG9yZVswXS5tYXhfcHJpY2U9QSh0LnRyZW5kLnN0b3JlWzBdLm1heF9wcmljZSkudG9GaXhlZCgyKSx0LnRyZW5kLnN0b3JlWzBdLmN1cnJlbnRfcHJpY2U9QSh0LnRyZW5kLnN0b3JlWzBdLmN1cnJlbnRfcHJpY2UpfXJldHVybiB0fWZ1bmN0aW9uIGgoKXtpZihfLmh0bWwoJzxpbWcgc3JjPSInK28uc2VydmVyKycvdGVtcGxhdGUvYXVnL2ltYWdlcy8wMzUuZ2lmIiBzdHlsZT0ibWFyZ2luOiA1cHg7IiBpZD0iJytvLmV4dEJyYW5kKydfcHJpY2VfdGlwX2xvYWRpbmciPicpLF8uY3NzKCJ3aWR0aCIsNTApLF8uc2hvdygpLE9ba10pdShPW2tdKTtlbHNle3ZhciB0PW8uc2VydmVyKyIvYnJ3ZXh0L3RpcD9kYXlzPTE4MCZ2ZXI9MSZzaXRlPSIrby5zaXRlKyImcHJpY2U9IitxKyImdXJsPSIrZW5jb2RlVVJJQ29tcG9uZW50KGspK3o7RC5nZXQodCkuZG9uZShmdW5jdGlvbih0KXt0cnl7aWYodCYmdC5ub3dfdXJsJiYoaz10Lm5vd191cmwpLHQuaXNfYmFuJiZ0LmFjdGlvbiYmInJlZGlyZWN0Ij09PXQuYWN0aW9uLm1ldGhvZCYmdC5hY3Rpb24udG8pcmV0dXJuIHZvaWQgSCh0LmFjdGlvbi50byk7aWYoMD09PXQudHJlbmQuc3RvcmUubGVuZ3RoJiYodD0kKHQpKSx0PWQodCksIXR8fDA9PT10LnRyZW5kLnN0b3JlLmxlbmd0aClyZXR1cm4gZygpO2lmKCIwLjAwIj09dC50cmVuZC5zdG9yZVswXS5jdXJyZW50X3ByaWNlKXJldHVybiBnKCk7T1trXT10LHUodCl9Y2F0Y2goZSl7fX0pLmZhaWwoZnVuY3Rpb24oKXtyZXR1cm4gZygpfSl9fWZ1bmN0aW9uIHUodCl7Zih0KTt2YXIgZT12b2lkIDA7dC5zdG9yZSYmMCE9PXQuc3RvcmUubGVuZ3RofHwoZT0hMCk7dmFyIG49Ti5nZXRUaW1lTnVtYmVyKDFlMyp0LnRyZW5kLnN0b3JlWzBdLm1pbl9zdGFtcCk7Xy5yZW1vdmVDbGFzcygidGlwLWVycm9yLWluZm8iKSx0LnRyZW5kLnN0b3JlWzBdLm1heF9wcmljZT09PXQudHJlbmQuc3RvcmVbMF0ubWluX3ByaWNlJiYodC50cmVuZC5zdG9yZVswXS5ub3dwcmljZT10LnRyZW5kLnN0b3JlWzBdLm1pbl9wcmljZSksXy5odG1sKFMuY29tcGlsZShJKSh7ZGF0YTp0LG5ld19leHRlbnNpb246by5uZXdfZXh0ZW5zaW9uLGV4dE5hbWU6by5leHROYW1lLGlzQWxpU2l0ZTpvLmFsaVNpdGUsbm9zdG9yZTplLGxvd2VzdFRpbWU6bixleHRCcmFuZDpvLmV4dEJyYW5kfSkpLG8uYWxpU2l0ZXx8ZT9fLmNzcygid2lkdGgiLDM3MCk6Xy5jc3MoIndpZHRoIiw0NjApLEMod2luZG93KS53aWR0aCgpLU0oQyh4KVswXSktQyh4KS53aWR0aCgpPDQ2MD9fLmNzcygibGVmdCIsMC1DKF8pLndpZHRoKCktMysicHgiKTpfLmNzcygibGVmdCIsIjY3cHgiKSx3KHQudHJlbmQsdC50YW9iYW9Ob1RyZW5kLHQuc3RhcnQpLG0odCl9ZnVuY3Rpb24gbSh0KXtDKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfdGlwX25vdGlmeV9idG4iKS5vbigiY2xpY2siLGZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKSxDKCIjIitvLmV4dEJyYW5kKyJfbm90aWZ5X2Vycm9yIikuaGlkZSgpLEMoIiMiK28uZXh0QnJhbmQrIl9wcmljZV90aXBfbm90aWZ5X2J0biIpLnRleHQoIuato+WcqOa3u+WKoC4uLi4uLiIpLEQuZ2V0KG8uY19zZXJ2ZXIrIi9jb2xsZWN0L2FqX2FkZD9kcF9pZD0iK3QuZHBfaWQrIiZmcm9tPXRpcCIpLmRvbmUoZnVuY3Rpb24odCl7MTAwPT10LmNvZGV8fHQuY29kZTw9MD93aW5kb3cubG9jYXRpb24uaHJlZj0iaHR0cDovL3d3dy4iK28uZXh0TmFtZSsiLmNvbS91c2VyL2xvZ2luP2Zyb21fdXJsPSIrZW5jb2RlVVJJQ29tcG9uZW50KHdpbmRvdy5sb2NhdGlvbi5ocmVmKToxPT10LmNvZGU/QygiIyIrby5leHRCcmFuZCsiX3ByaWNlX3RpcF9ub3RpZnlfYnRuIikudGV4dCgi5bey5re75Yqg5Yiw5pS26JeP5aS5IikuYXR0cigic3R5bGUiLCJmbG9hdDpyaWdodDtjb2xvcjojZmZmO2JhY2tncm91bmQ6IzE4QTBGNTsiKToyPT10LmNvZGUmJiLmraPlnKjmt7vliqAuLi4uLi4iPT1DKCIjIitvLmV4dEJyYW5kKyJfcHJpY2VfdGlwX25vdGlmeV9idG4iKS50ZXh0KCkmJkMoIiMiK28uZXh0QnJhbmQrIl9wcmljZV90aXBfbm90aWZ5X2J0biIpLnRleHQoIuS9oOW3sue7j+a3u+WKoOi/h+WVpiIpLmF0dHIoInN0eWxlIiwiZmxvYXQ6cmlnaHQ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiMxOEEwRjU7Iil9KX0pfWZ1bmN0aW9uIGYodCl7dmFyIGU9WzEsMTAzLDEwOCwxMjMsMTI0LDEyNiwxMjksMTM0LDEzNiwxNCwxNDEsMTUsMTY3LDE2OCwxOSwyLDIxLDI1LDI2LDI4LDMsMzEsMzQsMzUsNDEsNiw2Niw3LDg2LDkzLDldLG49dC5zdG9yZTtpZihuKWZvcih2YXIgaT1uLmxlbmd0aC0xO2k+PTA7aS0tKXtuW2ldLmljb25fdXJsPW5baV0uaWNvbl91cmwucmVwbGFjZSgiYnJvd3NlciIsInMxIiksbltpXS5wcmljZS5pbmRleE9mKCLvv6UiKT4tMSYmKG5baV0ucHJpY2U9Iu+/pSIrTnVtYmVyKG5baV0ucHJpY2UucmVwbGFjZSgi77+lIiwiIikucmVwbGFjZSgiLCIsIiIpKS50b0ZpeGVkKDIpKTt2YXIgYT0vXC8oXGQrKVwuaWNvLy5leGVjKG5baV0uaWNvbl91cmwpO2EmJihhPWFbMV0sIW8uSUU2JiZlLmluZGV4T2YoTnVtYmVyKGEpKT4tMSYmKG5baV0uaWNvbl91cmw9bltpXS5pY29uX3VybC5yZXBsYWNlKC9cZCtcLmljby8sYSsiLnBuZyIpLnJlcGxhY2UoL2Jyb3dzZXJcLi8sInMxLiIpKSl9dmFyIHI9InByaS10Iit0LnRyZW5kLnN0b3JlWzBdLnByaWNlX3N0YXR1czt0LnRyZW5kLnN0b3JlWzBdLnN0YXR1c190bGU9TFtyXSx0LnRyZW5kLnN0b3JlWzBdLm1heF9wcmljZT1OdW1iZXIodC50cmVuZC5zdG9yZVswXS5tYXhfcHJpY2UucmVwbGFjZSgiLCIsIiIpKS50b0ZpeGVkKDIpLHQudHJlbmQuc3RvcmVbMF0ubWluX3ByaWNlPU51bWJlcih0LnRyZW5kLnN0b3JlWzBdLm1pbl9wcmljZS5yZXBsYWNlKCIsIiwiIikpLnRvRml4ZWQoMil9ZnVuY3Rpb24gZyh0KXt0JiZ0LmlzX2Jhbj9IKHQuYWN0aW9uLnRvKTooXy5odG1sKCI8ZGl2PuaKseatie+8jOW9k+WJjeWVhuWTgeaaguaXoOS7t+agvOi1sOWKv348L2Rpdj4iKSxfLmFkZENsYXNzKCJ0aXAtZXJyb3ItaW5mbyIpLF8uY3NzKCJ3aWR0aCIsMjIwKSxfLnNob3coKSl9ZnVuY3Rpb24gdyh0LGUsbil7dmFyIGk9TnVtYmVyKHQuc3RvcmVbMF0ubWF4X3ByaWNlKS50b1N0cmluZygpfHwiIixvPXBhcnNlSW50KDUuNSppLmxlbmd0aCkscj1vKzgrOCxzPW8rOCxsPUMoIiNnd2RfcHJpY2VfdGlwX3RyZW5kIiksYz17Y2hhcnQ6e3JlbmRlclRvOiJnd2RfcHJpY2VfdGlwX3RyZW5kIix0eXBlOiJsaW5lIixtYXJnaW5Ub3A6MTAsbWFyZ2luTGVmdDpyLG1hcmdpblJpZ2h0OjE1LG1hcmdpbkJvdHRvbToxNyxzcGFjaW5nOlswLDAsMCwwXSxldmVudHM6e2xvYWQ6ZnVuY3Rpb24oKXt2YXIgdD1wYXJzZUludCgodGhpcy54QXhpc1swXS5kYXRhTWF4LXRoaXMueEF4aXNbMF0uZGF0YU1pbikvMy45KXx8MTt0aGlzLnhBeGlzWzBdLnVwZGF0ZSh7dGlja0ludGVydmFsOnR9KTt2YXIgZT12b2lkIDAsbj12b2lkIDA7ZT1NYXRoLmZsb29yKHRoaXMueUF4aXNbMF0uZGF0YU1pbiksbj1NYXRoLmNlaWwodGhpcy55QXhpc1swXS5kYXRhTWF4KTt2YXIgaT1NYXRoLnBvdygxMCxlLnRvU3RyaW5nKCkubGVuZ3RoLTIpLG89dm9pZCAwO3RoaXMueUF4aXNbMF0uZGF0YU1heDwxPyhlPXRoaXMueUF4aXNbMF0uZGF0YU1pbixuPXRoaXMueUF4aXNbMF0uZGF0YU1heCxvPTApOnRoaXMueUF4aXNbMF0uZGF0YU1pbj09PXRoaXMueUF4aXNbMF0uZGF0YU1heD8oZT1NYXRoLmZsb29yKGUvaSkqaSxuPTIqZSxlPTAsbz1wYXJzZUludCgobi1lKS8yKSk6KGU9TWF0aC5mbG9vcihlL2kpKmksbj1NYXRoLmNlaWwobi9pKSppLGU9PT1uJiYoZS09MSxuKz0xKSxvPXBhcnNlSW50KChuLWUpLzQpLGUrbzx0aGlzLnlBeGlzWzBdLmRhdGFNaW4mJihlKz1vKSk7dmFyIGE9TWF0aC5wb3coMTAsby50b1N0cmluZygpLmxlbmd0aC0xKTtvPU1hdGguY2VpbChvL2EpKmEsdGhpcy55QXhpc1swXS51cGRhdGUoe21pbjplLG1heDpuLHRpY2tJbnRlcnZhbDpvfHwxfSl9fX0sY3JlZGl0czp7ZW5hYmxlZDohMX0sY29sb3JzOlsiIzJmN2VkOCJdLHRpdGxlOnt0ZXh0Om51bGx9LHhBeGlzOnt0eXBlOiJkYXRldGltZSIsbGFiZWxzOntyb3RhdGlvbjowLHk6MTYsc3RlcDoyLHN0eWxlOntmb250U2l6ZToiMTBweCIsZm9udEZhbWlseToiSGVsdmV0aWNhIixjb2xvcjoiIzlEOUQ5RCJ9LGFsaWduOiJjZW50ZXIifSxkYXRlVGltZUxhYmVsRm9ybWF0czp7ZGF5OiIlbS0lZSIsd2VlazoiJW0tJWUiLG1vbnRoOiIlWS8lbSIseWVhcjoiJVkvJW0ifSx0aWNrTGVuZ3RoOjAsZ3JpZExpbmVDb2xvcjoiI2U2ZTllYiIsbGluZUNvbG9yOiIjZTZlOWViIixtaW5vclRpY2tMZW5ndGg6MCxncmlkTGluZVdpZHRoOjF9LHlBeGlzOnt0aXRsZTpudWxsLGxhYmVsczp7YWxpZ246ImxlZnQiLHBhZGRpbmc6NCx4Oi1zLHN0eWxlOntmb250U2l6ZToiMTBweCIsZm9udEZhbWlseToiSGVsdmV0aWNhIixjb2xvcjoiIzlEOUQ5RCJ9LGZvcm1hdHRlcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlfX0scGxvdExpbmVzOlt7dmFsdWU6MCx3aWR0aDoxLGNvbG9yOiIjODA4MDgwIn1dLGdyaWRMaW5lQ29sb3I6IiNlNmU5ZWIiLGxpbmVDb2xvcjoiI2U2ZTllYiIsdGlja1BpeGVsSW50ZXJ2YWw6NTB9LHBsb3RPcHRpb25zOntzZXJpZXM6e2FuaW1hdGlvbjohMSxtYXJrZXI6e3JhZGl1czoyfSxlbmFibGVNb3VzZVRyYWNraW5nOiEwLHN0YXRlczp7aG92ZXI6e2VuYWJsZWQ6ITB9fSxzaGFkb3c6ITF9fSx0b29sdGlwOnt4RGF0ZUZvcm1hdDoiJVktJW0tJWQiLGJvcmRlckNvbG9yOiIjNDhCRUZFIix1c2VIVE1MOiEwLGZvcm1hdHRlcjpmdW5jdGlvbigpe3ZhciB0PW5ldyBEYXRlKHRoaXMueCksbj10LmdldEZ1bGxZZWFyKCksaT10LmdldE1vbnRoKCkrMSxvPXQuZ2V0RGF0ZSgpO2lmKGk8MTAmJihpPSIwIitpLnRvU3RyaW5nKCkpLG88MTAmJihvPSIwIitvLnRvU3RyaW5nKCkpLGUpe3ZhciBhPW5ldyBEYXRlO2lmKHQuZ2V0TW9udGgoKSE9PWEuZ2V0TW9udGgoKXx8dC5nZXREYXRlKCkhPT1hLmdldERhdGUoKSlyZXR1cm4hMX12YXIgcj12b2lkIDA7cj0wIT09dGhpcy55P3RoaXMueS50b0ZpeGVkKDIpOiIwIjt2YXIgcz0iXG4gICAgICAgICAgICAgIDxkaXY+IituKyIvIitpKyIvIitvKyc8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJpY2UtdGlwLWl0ZW0iPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZS10aXAtc3AxIiBzdHlsZT0iY29sb3I6ICcrdGhpcy5zZXJpZXMuY29sb3IrJztmb250LXNpemU6MTJweDtmb250LWZhbWlseTphcmlhbDtmbG9hdDpub25lIj7il488L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InByaWNlLXRpcC1zcDIiPicrdGhpcy5zZXJpZXMubmFtZSsnPC9zcGFuPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJwcmljZS10aXAtc3AzIiBzdHlsZT0iZm9udC1mYW1pbHk6SGVsdmV0aWNhIj4nK3IrIjwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9kaXY+IjtyZXR1cm4gc319LGxlZ2VuZDp7ZW5hYmxlZDohMX0sc2VyaWVzOltdfTtpZihjLnNlcmllc1swXT17dmlzaWJsZTohMCxuYW1lOnQuc3RvcmVbMF0ubmFtZSxwb2ludFN0YXJ0Om4scG9pbnRJbnRlcnZhbDoxNTQ2NTZlNSxjb2xvcjoiIzQ4QkVGRSIsbGluZVdpZHRoOjEsbWFya2VyOntlbmFibGVkOiExfSxzdGF0ZXM6e2VuYWJsZWQ6ITEsaG92ZXI6e2xpbmVXaWR0aDoxfX0sZGF0YTpbXX0sZSYmKGMuc2VyaWVzWzBdLmRhc2hTdHlsZT0iRGFzaCIpLHQuc3RvcmVbMF0uZGF0YS5sZW5ndGg+MCl7dmFyIHA9dC5zdG9yZVswXSxkPXAuZGF0YS5sZW5ndGgsaD1wLmRhdGE7aWYoMWUzKnAubWluX3N0YW1wPnBhcnNlSW50KERhdGUuVVRDKHQuc3RhcnRZLHQuc3RhcnRNLHQuc3RhcnREKSkmJmMuc2VyaWVzWzBdLmRhdGEucHVzaChudWxsKSxlKWZvcih2YXIgdT0wO3U8ZDt1KyspYy5zZXJpZXNbMF0uZGF0YS5wdXNoKHt5OmhbdV1bMV19KTtlbHNlIGMuc2VyaWVzWzBdLmRhdGE9dC5zdG9yZVswXS5kYXRhfWUmJihjLnNlcmllc1swXS5kYXRhWzFdLm1hcmtlcj17ZW5hYmxlZDohMCxmaWxsQ29sb3I6IiM1QUNGRkIiLHJhZGl1czoyLjUsbGluZVdpZHRoOjAsc3ltYm9sOiJjaXJjbGUifSxjLnBsb3RPcHRpb25zLnNlcmllcy5zdGF0ZXM9e2hvdmVyOntlbmFibGVkOiExfX0pLEMoIiMiK2MuY2hhcnQucmVuZGVyVG8pLmxlbmd0aCYmbmV3IGEuQ2hhcnQoYyksbC5zaG93KCl9dmFyIHgsYixfLHYseSxrLHosaj17fSxDPW4oNCksUz1uKDIyKSxQPW4oOCksVD1uKDEzKSxBPW4oMjMpLE49big3MyksST1uKDE3OCksQj1vLnBhZ2VJbmZvLHE9MCxPPXt9LEU9Wy9zaGFuZ3BpblwuY29tL10sTD17InByaS10MSI6IuS7t+agvOS4iua2qCIsInByaS10MCI6IuS7t+agvOW5s+eosyIsInByaS10LTEiOiLku7fmoLzkuIvpmY0iLCJwcmktdC0yIjoi5Y6G5Y+y5pyA5L2OIn0sRD1uKDI0KSxGPWZ1bmN0aW9uIFcodCl7dmFyIGU9dC5vZmZzZXRUb3A7cmV0dXJuIG51bGwhPXQub2Zmc2V0UGFyZW50JiYoZSs9Vyh0Lm9mZnNldFBhcmVudCkpLGV9LE09ZnVuY3Rpb24gVSh0KXt2YXIgZT10Lm9mZnNldExlZnQ7cmV0dXJuIG51bGwhPXQub2Zmc2V0UGFyZW50JiYoZSs9VSh0Lm9mZnNldFBhcmVudCkpLGV9LFI9ZnVuY3Rpb24oKXt2YXIgdD0iMCI7c3dpdGNoKG8uc2l0ZSl7Y2FzZSIzNjBidXkiOnQ9Qyh5KS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCIucC1wcmljZSBzdHJvbmcgaSIpLmVxKDApLnRleHQoKTticmVhaztjYXNlInN1bmluZyI6dD1DKHkpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoIi5yZXMtaW5mbyAucHJpY2UtYm94IC5kZWYtcHJpY2UiKS5lcSgwKS50ZXh0KCk7YnJlYWs7Y2FzZSJ0YW9iYW8iOnQ9Qyh5KS5wYXJlbnQoKS5uZXh0KCkuZmluZCgiLmMtcHJpY2UiKS50ZXh0KCksdHx8KHQ9Qyh5KS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCIuSl9JY29uTW9yZU5ldyAuZ19wcmljZSIpLmVxKDApLnRleHQoKSk7YnJlYWs7Y2FzZSJ0bWFsbCI6dD1DKHkpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoIi5wcm9kdWN0UHJpY2U+ZW0iKS5lcSgwKS50ZXh0KCk7YnJlYWs7Y2FzZSJhbWF6b24iOnQ9Qyh5KS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCIuYS1zcGFjaW5nLW1pbmkgc3Bhbi5zLXByaWNlIikuZXEoMCkudGV4dCgpO2JyZWFrO2Nhc2UiZ29tZSI6dD1DKHkpLnBhcmVudCgpLnBhcmVudCgpLmZpbmQoIi5pdGVtLXByaWNlLWluZm8gLml0ZW0tcHJpY2UgLnByaWNlIikuZXEoMCkudGV4dCgpO2JyZWFrO2Nhc2UiZGFuZ2RhbmciOnQ9Qyh5KS5wYXJlbnQoKS5maW5kKCIucHJpY2UgLnByaWNlX24iKS5lcSgwKS50ZXh0KCk7YnJlYWs7Y2FzZSJ2aXBzaG9wIjp0PUMoeSkucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkuZmluZCgiLnNwZWNpYWwtcHJpY2UgLnRpdGxlIikuZXEoMCkudGV4dCgpLHR8fCh0PUMoeSkucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkucGFyZW50KCkuZmluZCgiLmdvb2RzLXByaWNlLWluZm8gLnByaWNlIikuZXEoMCkudGV4dCgpKTticmVhaztkZWZhdWx0OnQ9IjAifXJldHVybiB0PXQucmVwbGFjZSgvWyzvv6XCpV0rL2csIiIpfSwkPWZ1bmN0aW9uKHQpe3ZhciBlPXZvaWQgMCxuPVIoKTtpZigiMCI9PT1uKXJldHVybiB0O3ZhciBpPU4uZ2V0VGltZU51bWJlcigobmV3IERhdGUpLmdldFRpbWUoKS0xNTQ2NTZlNSwiNSIpLG89Ti5nZXRUaW1lTnVtYmVyKChuZXcgRGF0ZSkuZ2V0VGltZSgpLCI1IiksYT1bXTtpPW5ldyBEYXRlKGkpLmdldFRpbWUoKSxvPW5ldyBEYXRlKG8pLmdldFRpbWUoKSxhLnB1c2goW2ksTnVtYmVyKG4pXSksYS5wdXNoKFtvLE51bWJlcihuKV0pLGU9dC5zaXRlX25hbWU7dmFyIHI9e2N1cnJlbnRfcHJpY2U6bixkYXRhOmEsbWF4X3ByaWNlOm4sbWluX3ByaWNlOm4sbWluX3N0YW1wOm8vMWUzLG5hbWU6ZSxzdGFydDppLHByaWNlX3N0YXR1czowfTtyZXR1cm4gdC50cmVuZC5zdG9yZT1bcl0sdC50YW9iYW9Ob1RyZW5kPSEwLHQuc3RhcnQ9aSx0fTtqLmluaXQ9ZnVuY3Rpb24oKXt2YXIgbj1ULmdldCgicGVybWFuZW50Iik7IjAiIT09bi5zZXRUaXAmJih0KCl8fCgxPT09Qi50eXBlJiYoQygiYm9keSIpLmFwcGVuZCgnPGEgaWQgPSInK28uZXh0QnJhbmQrJ19wcmljZV90aXAiIHNyYz0iamF2YXNjcmlwdDp2b2lkKDApIiB0YXJnZXQ9Il9zZWxmIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aXBfYnRuX2JveCI+XG4gICAgICAgICAgICA8ZW0+PC9lbT5cbiAgICAgICAgICAgIDxzcGFuPuavlOS7tzwvc3Bhbj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGlkPSInK28uZXh0QnJhbmQrJ19wcmljZV90aXBfZGV0YWlsIj48L2Rpdj5cbiAgICAgICAgPC9hPicpLHg9QygiIyIrby5leHRCcmFuZCsiX3ByaWNlX3RpcCIpLGI9QygiIyIrby5leHRCcmFuZCsiX3ByaWNlX3RpcCAudGlwX2J0bl9ib3giKSxfPUMoIiMiK28uZXh0QnJhbmQrIl9wcmljZV90aXBfZGV0YWlsIikpLGUoKSkpfTt2YXIgSD1mdW5jdGlvbih0KXt2YXIgZT1uKDE3OSk7Xy5lbXB0eSgpLmFwcGVuZChTLmNvbXBpbGUoZSkoe3VybDp0fSkpLF8uY3NzKCJ3aWR0aCIsMzcwKX07cmV0dXJuIGp9LmNhbGwoZSxuLGUsdCksISh2b2lkIDAhPT1pJiYodC5leHBvcnRzPWkpKX0pLmNhbGwoZSxuKDEpLG4oMTUxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJwcmljZV90aXBfZGV0YWlsIHt7aWYgaXNBbGlTaXRlfX0gYWxpdGlwe3svaWZ9fSB7e2lmIG5vc3RvcmV9fSBub3N0b3JldGlwIHt7L2lmfX0iPlxuICA8ZGl2IGNsYXNzPSJ0aXAtYm94LWxlZnQiPlxuICAgIDxkaXYgY2xhc3M9InRpcC10aXRsZSI+5pyA6L+RMTgw5aSp5Lu35qC85Y6G5Y+yPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0idGlwLXByaWNlLXN0YXR1cyBzdGF0dXN7e2RhdGEudHJlbmQuc3RvcmVbMF0ucHJpY2Vfc3RhdHVzfX0iPlxuICAgICAgPGVtIGNsYXNzPSJ0aXAtYmciPjwvZW0+XG4gICAgICA8c3Bhbj57e2RhdGEudHJlbmQuc3RvcmVbMF0uc3RhdHVzX3RsZX19PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9ImhpZ2hlc3QtbG93ZXN0LWJveCI+XG4gICAgICB7e2lmIGRhdGEudHJlbmQuc3RvcmVbMF0ubm93cHJpY2V9fVxuICAgICAgICA8c3BhbiBjbGFzcz0idGlwLW5vdy1idG4iPueOsOS7tzo8c3BhbiBjbGFzcz0iZm9udFNpemVjIj57e2RhdGEudHJlbmQuc3RvcmVbMF0ubm93cHJpY2V9fTwvc3Bhbj48L3NwYW4+XG4gICAgICB7e2Vsc2V9fVxuICAgICAgPHNwYW4gY2xhc3M9InRpcC1oaWdoZXN0LWJ0biI+5pyA6auYOjxzcGFuIGNsYXNzPSJmb250U2l6ZWMiPnt7ZGF0YS50cmVuZC5zdG9yZVswXS5tYXhfcHJpY2V9fTwvc3Bhbj48L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0idGlwLWxvd2VzdC1idG4iPuacgOS9jjo8c3BhbiBjbGFzcz0iZm9udFNpemVjIj57e2RhdGEudHJlbmQuc3RvcmVbMF0ubWluX3ByaWNlfX08L3NwYW4+PC9zcGFuPlxuICAgICAge3svaWZ9fVxuICAgICAgPHNwYW4gY2xhc3M9InRpcC1sb3dlc3QtdGltZSBmb250U2l6ZWMiPnt7bG93ZXN0VGltZX19PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InRpcC1jaGFydCIgaWQ9Imd3ZF9wcmljZV90aXBfdHJlbmQiPjwvZGl2PlxuICAgIHt7aWYgIWlzQWxpU2l0ZX19XG4gICAgICA8ZGl2IGNsYXNzPSJ0aXAtaW5mby1idG0iPlxuICAgICAgICA8YSBjbGFzcz0idGlwLWluZm8tc3RvcmUiPlxuICAgICAgICAgIDxlbSBjbGFzcz0idGlwLWJnIj48L2VtPlxuICAgICAgICAgIDxzcGFuPnt7ZGF0YS5zaXRlX25hbWV9fTwvc3Bhbj5cbiAgICAgICAgPC9hPlxuICAgICAgICB7e2VhY2ggZGF0YS5tb3JlfX1cbiAgICAgICAgPGEgaHJlZj0ie3skdmFsdWUudXJsfX0iIGNsYXNzPSJ0aXAtaW5mby1wcm9tbyI+XG4gICAgICAgICAgPGVtIGNsYXNzPSJ0aXAtYmciPjwvZW0+XG4gICAgICAgICAgPHNwYW4+e3skdmFsdWUudGl0bGV9fTwvc3Bhbj5cbiAgICAgICAgPC9hPlxuICAgICAgICB7ey9lYWNofX1cbiAgICAgIDwvZGl2PlxuICAgIHt7L2lmfX1cbiAgPC9kaXY+XG4gIHt7aWYgIWlzQWxpU2l0ZSAmJiAhbm9zdG9yZX19XG4gIDxkaXYgY2xhc3M9InRpcC1ib3gtcmlnaHQiPlxuICAgIDxwPuWVhuWfjuavlOS7tzwvcD5cbiAgICA8dWw+XG4gICAgICB7e2VhY2ggZGF0YS5zdG9yZX19XG4gICAgICA8bGk+XG4gICAgICAgIDxhIGhyZWY9Int7JHZhbHVlLnVybH19IiBjbGFzcz0idGlwLWNvbS1pdGVtIiB0YXJnZXQ9Il9ibGFuayI+XG4gICAgICAgICAgPGltZyBzcmM9Int7JHZhbHVlLmljb25fdXJsfX0iIGFsdD0ie3skdmFsdWUuc2l0ZV9uYW1lfX0iIHRpdGxlPSJ7eyR2YWx1ZS5zaXRlX25hbWV9fSI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9ImZvbnRTaXplYyI+e3skdmFsdWUucHJpY2V9fTwvc3Bhbj5cbiAgICAgICAgPC9hPlxuICAgICAgPC9saT5cbiAgICAgIHt7L2VhY2h9fVxuICAgIDwvdWw+XG4gICAgPGEgY2xhc3M9InRpcC1jb20tYWxsIiBocmVmPSJ7e2RhdGEubW9yZV9saW5rfX0iIHRhcmdldD0iX2JsYW5rIj57e2RhdGEubW9yZV90bGV9fTwvYT5cbiAgPC9kaXY+XG4gIHt7L2lmfX1cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAudGlwLWJnIHtcbiAgICAgIGJhY2tncm91bmQ6IHVybCgiaHR0cHM6Ly9jZG4uZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy94YnQvbWluaS1pY29uLnBuZyIpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIH1cbiAgICAucHJpY2VfdGlwX2RldGFpbCB7XG4gICAgICBoZWlnaHQ6IDIzOHB4O1xuICAgIH1cbiAgICAucHJpY2VfdGlwX2RldGFpbC5hbGl0aXAge1xuICAgICAgaGVpZ2h0OiAyMThweDtcbiAgICB9XG4gICAgI2d3ZF9wcmljZV90aXBfZGV0YWlsLCAjZ3dkX3ByaWNlX3RpcF9kZXRhaWwgKiB7XG4gICAgICBmb250LWZhbWlseTogIk1pY3Jvc29mdCBZYUhlaSI7XG4gICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICB9XG4gICAgLnRpcC1ib3gtbGVmdCB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAzMzZweDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2cHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB9XG4gICAgLm5vc3RvcmV0aXAgLnRpcC1ib3gtbGVmdHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxN3B4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxN3B4O1xuICAgIH1cbiAgICAjZ3dkX3ByaWNlX3RpcF9kZXRhaWwgLmZvbnRTaXplYyB7XG4gICAgICBmb250LWZhbWlseTogSGVsdmV0aWNhO1xuICAgIH1cbiAgICAudGlwLXRpdGxlIHtcbiAgICAgIGhlaWdodDogMTVweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNXB4O1xuICAgICAgbWFyZ2luLXRvcDogMTRweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEzcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogIzVFNzA3QztcbiAgICB9XG4gICAgLnRpcC1wcmljZS1zdGF0dXMge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogNzBweDtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiA4cHg7XG4gICAgfVxuICAgIC50aXAtcHJpY2Utc3RhdHVzIGVtIHtcbiAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgaGVpZ2h0OiAxMHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tdG9wOiAzcHg7XG4gICAgfVxuICAgIC50aXAtcHJpY2Utc3RhdHVzLnN0YXR1cy0xIGVtIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC01cHggLTVweDtcbiAgICB9XG4gICAgLnRpcC1wcmljZS1zdGF0dXMuc3RhdHVzLTIgZW0ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTcxcHggLTVweDtcbiAgICB9XG4gICAgLnRpcC1wcmljZS1zdGF0dXMuc3RhdHVzMCBlbSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNDlweCAtNXB4O1xuICAgIH1cbiAgICAudGlwLXByaWNlLXN0YXR1cy5zdGF0dXMxIGVtIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0yNnB4IC01cHg7XG4gICAgfVxuICAgIC50aXAtcHJpY2Utc3RhdHVzIHNwYW4ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgICAgd2lkdGg6IDQ4cHg7XG4gICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICBjb2xvcjogIzVFNzA3QztcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIH1cbiAgICAudGlwLWhpZ2hlc3QtYnRuLCAudGlwLW5vdy1idG4ge1xuICAgICAgY29sb3I6ICNFNDM5M0M7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNHB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgIH1cbiAgICAuaGlnaGVzdC1sb3dlc3QtYm94IC50aXAtbm93LWJ0biB7XG4gICAgICBjb2xvcjogIzNGQzBGMDtcbiAgICAgIG1hcmdpbi1yaWdodDogMHB4O1xuICAgIH1cbiAgICAudGlwLWxvd2VzdC1idG4ge1xuICAgICAgY29sb3I6ICMzNWJkNjc7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gICAgLnRpcC1sb3dlc3QtdGltZSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogIzlEOUQ5RDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbGluZS1oZWlnaHQ6IDE4cHghaW1wb3J0YW50O1xuICAgICAgbWFyZ2luLWxlZnQ6IDJweDtcbiAgICB9XG4gICAgLmhpZ2hlc3QtbG93ZXN0LWJveCB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgd2lkdGg6IDI1NHB4O1xuICAgIH1cbiAgICAuaGlnaGVzdC1sb3dlc3QtYm94PnNwYW4ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICB9XG4gICAgLnRpcC1pbmZvLWJ0bSB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIHdpZHRoOiAzMjRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICB9XG4gICAgLnRpcC1pbmZvLWJ0bSBhIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgIH1cbiAgICAudGlwLWluZm8tYnRtIHNwYW4ge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC50aXAtaW5mby1zdG9yZSB7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQhaW1wb3J0YW50O1xuICAgIH1cbiAgICAudGlwLWluZm8tc3RvcmUgZW0ge1xuICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICBoZWlnaHQ6IDEwcHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAzMXB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICBtYXJnaW4tdG9wOiA1cHghaW1wb3J0YW50O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTM5cHggLTIzcHg7XG4gICAgfVxuICAgIGEudGlwLWluZm8tc3RvcmUgc3BhbntcbiAgICAgIGNvbG9yOiAjNUU3MDdDO1xuICAgIH1cbiAgICAudGlwLWluZm8tcHJvbW8gZW0ge1xuICAgICAgd2lkdGg6IDEycHg7XG4gICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyNHB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMjVweCAtMjJweDtcbiAgICB9XG4gICAgLnRpcC1pbmZvLXByb21vIHNwYW57XG4gICAgICBjb2xvcjogIzQ4QkVGRTtcbiAgICB9XG4gICAgLnRpcC1pbmZvLXByb21vIHNwYW46aG92ZXIge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuICAgIC50aXAtaW5mby1idG0gZW0ge1xuICAgICAgbWFyZ2luLXRvcDogM3B4O1xuICAgIH1cbiAgICAudGlwLWJveC1yaWdodCB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAxMTFweDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI0Y0RjdGOTtcbiAgICB9XG4gICAgLnRpcC1ib3gtcmlnaHQgdWwge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW46IDBweDtcbiAgICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgICBwYWRkaW5nOiAwcHg7XG4gICAgfVxuICAgIC50aXAtYm94LXJpZ2h0IHVsIGxpIHtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIHdpZHRoOiAxMTNweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgbWFyZ2luLXRvcDogMXB4O1xuICAgIH1cbiAgICAudGlwLWJveC1yaWdodCB1bCBsaTpmaXJzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwcHg7XG4gICAgfVxuICAgIC50aXAtYm94LXJpZ2h0IHVsIGxpOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNFREY1Rjg7XG4gICAgfVxuICAgICNnd2RfcHJpY2VfdGlwX2RldGFpbCAudGlwLWNvbS1hbGwge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTVweDtcbiAgICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgICBjb2xvcjogIzZCODM5MztcbiAgICAgIGxpbmUtaGVpZ2h0OiAxM3B4O1xuICAgICAgaGVpZ2h0OiAxM3B4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cbiAgICAjZ3dkX3ByaWNlX3RpcF9kZXRhaWwgLnRpcC1jb20tYWxsOmhvdmVye1xuICAgICAgY29sb3I6ICM0OEJFRkU7XG4gICAgfVxuICAgIC50aXAtYm94LXJpZ2h0IHB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogIzVFNzA3QztcbiAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgICAgaGVpZ2h0OiAxNXB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBsaW5lLWhlaWdodDogMTVweDtcbiAgICAgIG1hcmdpbjogMHB4O1xuICAgICAgbWFyZ2luLXRvcDogMTRweDtcbiAgICB9XG4gICAgLnRpcC1jb20taXRlbSB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogMzBweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gICAgfVxuICAgIC50aXAtY29tLWl0ZW0gaW1nIHtcbiAgICAgIGhlaWdodDogMTZweDtcbiAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTVweDtcbiAgICAgIG1hcmdpbi1yaWdodDogN3B4O1xuICAgICAgbWFyZ2luLXRvcDogN3B4O1xuICAgIH1cbiAgICAudGlwLWNvbS1pdGVtIHNwYW57XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogIzZCODM5MztcbiAgICB9XG4gICAgLnRpcC1jb20taXRlbSwgLnRpcC1jb20taXRlbSBzcGFuLCAudGlwLWNvbS1hbGwge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lIWltcG9ydGFudDtcbiAgICB9XG4gICAgLnRpcC1jaGFydCB7XG4gICAgICB3aWR0aDogMzM2cHg7XG4gICAgICBoZWlnaHQ6IDExNnB4O1xuICAgICAgbWFyZ2luLXRvcDogNnB4O1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJ0cmVuZC1lcnJvci1pbmZvLW1pbmkiPlxuICA8cCBjbGFzcz0iZXJyb3ItcCI+5oiR5Lus5qOA5rWL5Yiw6K6/6Zeu5byC5bi477yM6K+35oKo6aqM6K+B5ZCO57un57ut5L2/55SoPC9wPlxuICA8YSBjbGFzcz0iZXJyb3Itc3AiIGhyZWY9Int7dXJsfX0iPueCueWHu+mqjOivgTwvYT5cbiAgPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgICAudHJlbmQtZXJyb3ItaW5mby1taW5pIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDM3MHB4O1xuICAgICAgaGVpZ2h0OiAyNDJweDtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTtcbiAgICAgIGhlaWdodDogMjY4cHg7XG4gICAgfVxuICAgIC5lcnJvci1wIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBtYXJnaW4tdG9wOiA0NXB4IWltcG9ydGFudDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGNvbG9yOiAjNjY2O1xuICAgIH1cbiAgICAuZXJyb3Itc3Age1xuICAgICAgd2lkdGg6IDk1cHg7XG4gICAgICBtYXJnaW46IDExMHB4IGF1dG8haW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBjb2xvcjogIzAwMCFpbXBvcnRhbnQ7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMzMzO1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUhaW1wb3J0YW50O1xuICAgIH1cbiAgPC9zdHlsZT5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyNCksYT1uKDIyKSxyPW4oNzMpLHM9bigxMyksbD12b2lkIDAsYz12b2lkIDAscD17fSxkPSEwLGg9e2xpYW5qaWE6e2xpc3Q6Ii5zZWxsTGlzdENvbnRlbnQgbGkuY2xlYXIiLGhyZWZpdGVtOiIuaW5mbyAudGl0bGUgYSIsaW5zZXJ0ZG9tOiIuc2VsbExpc3RDb250ZW50IGxpLmNsZWFyIn0sbWFpdGlhbjp7bGlzdDoiLmxpc3Rfd3JhcCBsaS5jbGVhcmZpeCIsaHJlZml0ZW06Ii5saXN0X3RpdGxlIGgxIGEiLGluc2VydGRvbToiLmxpc3Rfd3JhcCBsaS5jbGVhcmZpeCJ9LGxpYW5qaWEyOntsaXN0OiIjanMtZXJzaG91ZmFuZ0xpc3QgLm0tbGlzdD51bD5saSIsaHJlZml0ZW06Ii5wcm9wLXRpdGxlIGEiLGluc2VydGRvbToiI2pzLWVyc2hvdWZhbmdMaXN0IC5tLWxpc3Q+dWw+bGkifSxrZTp7bGlzdDoiLnNlbGxMaXN0Q29udGVudCBsaS5jbGVhciIsaHJlZml0ZW06Ii5pbmZvIC50aXRsZSBhIixpbnNlcnRkb206Ii5zZWxsTGlzdENvbnRlbnQgbGkuY2xlYXIifSxrZTI6e2xpc3Q6Ii5zZWxsTGlzdENvbnRlbnQgbGkuY2xlYXIiLGhyZWZpdGVtOiIuaW5mbyAudGl0bGUgYSIsaW5zZXJ0ZG9tOiIuc2VsbExpc3RDb250ZW50IGxpLmNsZWFyIn0sIjVpNWoiOntsaXN0OiIucExpc3RCb3ggLnBMaXN0PmxpIixocmVmaXRlbToiYSIsaW5zZXJ0ZG9tOiIucExpc3RCb3ggLnBMaXN0PmxpIn0sY2VudGFuZXQ6e2xpc3Q6Ii5zZWN0aW9uLWhvdXNlbGlzdHMgLmhvdXNlLWl0ZW0iLGhyZWZpdGVtOiIuaG91c2UtdGl0bGUgYSIsaW5zZXJ0ZG9tOiIuc2VjdGlvbi1ob3VzZWxpc3RzIC5ob3VzZS1pdGVtIn0sY2VudGFuZXQyOntsaXN0OiIucmVzdWx0LWxpc3RzIC5ob3VzZS1tYWluIC5ob3VzZS1pdGVtIixocmVmaXRlbToiLmhvdXNlLXRpdGxlIGEiLGluc2VydGRvbToiLnJlc3VsdC1saXN0cyAuaG91c2UtbWFpbiAuaG91c2UtaXRlbSJ9fSx1PXtsaWFuamlhOlsiLmNvbnRlbnQ+LnByaWNlIiwiI3RvcEltZysuaW5mbz4ucHJpY2UiXSxsaWFuamlhMjpbIi5ob3VzZUluZm8iLCIubWFpbmluZm8tcHJpY2UiXSxrZTpbIi5jb250ZW50Pi5wcmljZSIsIiN0b3BJbWcrLmluZm8+LnByaWNlIl0sa2UyOlsiLmhvdXNlSW5mbyIsIi5tYWluaW5mby1wcmljZSJdLCI1aTVqIjpbIi5ob3VzZXN0eSJdLGNlbnRhbmV0OlsiI3NpZGVmaXhlZGJveCAuaW5mb3RvcCJdLGNlbnRhbmV0MjpbIi5yb29tYmFzZS1pbmZvciAucm9vbWJhc2UtcHJpY2UiXSxtYWl0aWFuOlsiLmhvbWVfY29udGVudCAuaGNfbGVmdCB0YWJsZSB0cjpmaXJzdC1jaGlsZCIsIi5ob21lX2NvbnRlbnQgLmhvbWVfaW5mb3MgbGk6Zmlyc3QtY2hpbGQiXX0sbT17bGlhbmppYTo0NDEsIjVpNWoiOjQ0MixrZTo0NDEsbWFpdGlhbjo0NDMsY2VudGFuZXQ6NTExfSxmPWZ1bmN0aW9uKCl7dmFyIHQ9aigpLG49dm9pZCAwO2lmKDI9PXQpe3ZhciBpPWxvY2F0aW9uLmhyZWY7c3dpdGNoKGUuc2l0ZSl7Y2FzZSJsaWFuamlhIjpuPWkubWF0Y2goL1wvKFthLXowLTlBLVpdKylcLmh0bWwvKVsxXTticmVhaztjYXNlImtlIjpuPWkubWF0Y2goL1wvKFthLXowLTlBLVpdKylcLmh0bWwvKVsxXTticmVhaztjYXNlIm1haXRpYW4iOm49aS5tYXRjaCgvXC9lc2Z4cVwvKFthLXowLTlBLVpdKykvKVsxXTticmVhaztjYXNlIjVpNWoiOm49aS5tYXRjaCgvXC8oW2EtejAtOV0rKVwuaHRtbC8pWzFdO2JyZWFrO2Nhc2UiY2VudGFuZXQiOm49aS5tYXRjaCgvXC8oW2EtejAtOV0rKVwuaHRtbC8pWzFdfX1lbHNle3ZhciBvPWM7c3dpdGNoKGUuc2l0ZSl7Y2FzZSJsaWFuamlhIjpuPUFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChvLGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hdGNoKC9cLyhbYS16MC05QS1aXSspXC5odG1sLylbMV19KS5qb2luKCIsIik7YnJlYWs7Y2FzZSJrZSI6bj1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwobyxmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXRjaCgvXC8oW2EtejAtOUEtWl0rKVwuaHRtbC8pWzFdfSkuam9pbigiLCIpO2JyZWFrO2Nhc2UibWFpdGlhbiI6bj1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwobyxmdW5jdGlvbih0KXtyZXR1cm4gdC5tYXRjaCgvXC9lc2Z4cVwvKFthLXowLTlBLVpdKykvKVsxXX0pLmpvaW4oIiwiKTticmVhaztjYXNlIjVpNWoiOm49QXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKG8sZnVuY3Rpb24odCl7cmV0dXJuIHQubWF0Y2goL1wvKFthLXowLTldKylcLmh0bWwvKVsxXX0pLmpvaW4oIiwiKTticmVhaztjYXNlImNlbnRhbmV0IjpuPUFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChvLGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hdGNoKC9cLyhbYS16MC05XSspXC5odG1sLylbMV19KS5qb2luKCIsIil9fXJldHVybiBufSxnPWZ1bmN0aW9uKCl7dmFyIHQ9bVtlLnNpdGVdO2lmKHQpe3ZhciBuPWYoKSxhPWUudV9ob3VzZSsiL2FwaS9ob3VzZV9jb2xsZWN0aW9uP2FjPWV4aXN0JnNpdGVfaWQ9Iit0KyImaG91c2VfY29kZT0iK247by5nZXQoYSkuZG9uZShmdW5jdGlvbih0KXtpZih0JiZ0LmV4aXN0KWZvcih2YXIgZT1pKCIuaHQtcHJpY2UtcmVtaW5kIiksbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lLmVxKG4pLmF0dHIoImRhdGEtaWQiKTt0LmV4aXN0W29dJiYoZS5lcShuKS5hZGRDbGFzcygiaGFzcmVtaW5kIiksZS5lcShuKS5maW5kKCJzcGFuIikudGV4dCgi5bey5re75Yqg5o+Q6YaSIiksZS5lcShuKS5hdHRyKCJkYXRhLWNvbGlkIix0LmV4aXN0W29dKSl9fSl9fSx3PWZ1bmN0aW9uKHQsbil7aWYoIShwW3RdPj00KSl7cFt0XXx8KHBbdF09MSkscFt0XSsrO3ZhciBpPW1bZS5zaXRlXSxhPWUudV9ob3VzZSsiL2FwaS9ob3VzZV9jb2xsZWN0aW9uP2FjPWFkZCZzaXRlX2lkPSIraSsiJmhvdXNlX2NvZGU9Iit0KyImZnJvbV91cmw9IitlbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24uaHJlZik7by5nZXQoYSkuZG9uZShmdW5jdGlvbih0KXsKdCYmIuaUtuiXj+aIkOWKnyI9PT10Lm1zZz9uKHQpOiLor7flhYjnmbvlvZUiPT09dC5tc2cmJihsb2NhdGlvbi5ocmVmPXQubG9naW5VcmwpfSl9fSx4PWZ1bmN0aW9uKHQsbil7dmFyIGk9ZS51X2hvdXNlKyIvYXBpL2hvdXNlX2NvbGxlY3Rpb24/YWM9ZGVsJmNvbGxlY3Rpb25faWQ9Iit0O28uZ2V0KGkpLmRvbmUoZnVuY3Rpb24odCl7dCYmIuWIoOmZpOaIkOWKnyI9PT10Lm1zZyYmbigpfSl9LGI9ZnVuY3Rpb24oKXt2YXIgdD12b2lkIDAsZT12b2lkIDA7aSgiLmh0LXRyZW5kLWRlc2MsICNiZGV4dF9taW5pYmFyIC5iZGV4dC10b3B0YWJzIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7dmFyIHQ9aSh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5oYXNDbGFzcygidHJlbmQtYm94LTEiKTtpZighdCl7dmFyIGU9aSh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuZmluZCgiLmhvdXNlLXRyZW5kLWltZyBpbWciKS5hdHRyKCJzcmMiKTtpZighZSl7dmFyIG49aSh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuZmluZCgiLmhvdXNlLXRyZW5kLWltZyBpbWciKS5hdHRyKCJkYXRhLXNyYyIpO2kodGhpcykucGFyZW50KCkubmV4dCgpLmZpbmQoIi5ob3VzZS10cmVuZC1pbWcgaW1nIikuYXR0cigic3JjIixuKX1pKHRoaXMpLmFkZENsYXNzKCJtc2hvdmVyIiksaSh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuc2hvdygpfX0pLGkoIi5odC10cmVuZC1kZXNjLCAjYmRleHRfbWluaWJhciAuYmRleHQtdG9wdGFicyIpLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe3ZhciBlPXRoaXM7dD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aShlKS5wYXJlbnQoKS5uZXh0KCkuaGlkZSgpLGkoZSkucmVtb3ZlQ2xhc3MoIm1zaG92ZXIiKX0sMzAwKX0pLGkoIi5ob3VzZXQtZGV0YWlsIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHQpfSksaSgiLmhvdXNldC1kZXRhaWwiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtpKHRoaXMpLmhpZGUoKSxpKCIuaHQtdHJlbmQtZGVzYywgI2JkZXh0X21pbmliYXIiKS5yZW1vdmVDbGFzcygibXNob3ZlciIpfSksaSgiLmh0LXByaWNlLXJlbWluZCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9aSh0aGlzKS5maW5kKCJzcGFuIikudGV4dCgpLG49aSh0aGlzKS5hdHRyKCJkYXRhLWlkIik7aWYoIumZjeS7t+aPkOmGkiI9PT1lKXcobixmdW5jdGlvbihlKXtpKHQpLmFkZENsYXNzKCJoYXNyZW1pbmQiKSxpKHQpLmZpbmQoInNwYW4iKS50ZXh0KCLlt7Lmt7vliqDmj5DphpIiKSxpKHQpLmF0dHIoImRhdGEtY29saWQiLGUuY29sbGVjdF9pZCl9KTtlbHNle3ZhciBvPWkodGhpcykuYXR0cigiZGF0YS1jb2xpZCIpO3gobyxmdW5jdGlvbigpe2kodCkuYXR0cigiZGF0YS1jb2xpZCIsbnVsbCksaSh0KS5yZW1vdmVDbGFzcygiaGFzcmVtaW5kIiksaSh0KS5maW5kKCJzcGFuIikudGV4dCgi6ZmN5Lu35o+Q6YaSIil9KX19KSxpKCIuaHQtcHJpY2UtcmVtaW5kIikub24oIm1vdXNlZW50ZXIiLGZ1bmN0aW9uKCl7MCE9cy5nZXQoInNob3dfbGpmcXJjb2RlIikmJmQmJmkodGhpcykucGFyZW50KCkucGFyZW50KCkuZmluZCgiLmh0LXd4cXJjb2RlIikuc2hvdygpfSksaSgiLmh0LXByaWNlLXJlbWluZCIpLm9uKCJtb3VzZWxlYXZlIixmdW5jdGlvbigpe3ZhciB0PXRoaXM7ZT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aSh0KS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCIuaHQtd3hxcmNvZGUiKS5oaWRlKCl9LDE1MCl9KSxpKCIuaHQtd3hxcmNvZGUiKS5vbigibW91c2VlbnRlciIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQoZSl9KSxpKCIuaHQtd3hxcmNvZGUiKS5vbigibW91c2VsZWF2ZSIsZnVuY3Rpb24oKXtpKCIuaHQtd3hxcmNvZGUiKS5oaWRlKCl9KSxpKCIuaHQtd3hxcmNvZGUgLmh0LXd4LXNwMyIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtpKCIuaHQtd3hxcmNvZGUiKS5oaWRlKCksZD0hMSxyLnNldHRpbmdzKCJzZXRfc2hvd19samZxcmNvZGUiLCJzaG93X2xqZnFyY29kZSIsIjAiKX0pLGkoImJvZHkiKS5vbigiY2xpY2siLGZ1bmN0aW9uKHQpe3ZhciBlPWkodC50YXJnZXQpLG49ZS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5maW5kKCIuY29tbXVuaXR5LXByaWNlIik7ZS5oYXNDbGFzcygiaG91c2UtdHJlbmQtYiIpPyhuLmhpZGUoKSxlLnBhcmVudCgpLmZpbmQoInNwYW4iKS5yZW1vdmVDbGFzcygidHJlbmQtY2hvb3NlIiksZS5hZGRDbGFzcygidHJlbmQtY2hvb3NlIikpOmUuaGFzQ2xhc3MoImNvbW11bml0eS10cmVuZC1iIikmJigwPT09bi5jaGlsZHJlbigpLmxlbmd0aD9fKG4sZnVuY3Rpb24oKXtlLnBhcmVudCgpLmZpbmQoInNwYW4iKS5yZW1vdmVDbGFzcygidHJlbmQtY2hvb3NlIiksZS5hZGRDbGFzcygidHJlbmQtY2hvb3NlIiksbi5zaG93KCl9KTooZS5wYXJlbnQoKS5maW5kKCJzcGFuIikucmVtb3ZlQ2xhc3MoInRyZW5kLWNob29zZSIpLGUuYWRkQ2xhc3MoInRyZW5kLWNob29zZSIpLG4uc2hvdygpKSl9KX0sXz1mdW5jdGlvbih0LGUpe3ZhciBpPXQuYXR0cigiZGF0YS11Iiksbz10LmF0dHIoImlkIik7eihpLGZ1bmN0aW9uKHQpe24oMTgxKSh7ZWw6byxtc2c6dH0pLGUmJnQuY29tbXVuaXR5JiZlKCl9KX0sdj1mdW5jdGlvbih0KXt2YXIgbz1uKDE4Mik7ImJhaWR1Ij09PWUuZnJvbV9kZXZpY2UmJihvPW4oMTgzKSk7Zm9yKHZhciByPWhbbF0scz1pKHIubGlzdCksYz0wO2M8cy5sZW5ndGg7YysrKXt2YXIgcD1zLmVxKGMpLmZpbmQoci5ocmVmaXRlbSksZD1wLmF0dHIoImhyZWYiKTtkLmluZGV4T2YoImh0dHAiKT09PS0xJiYoZD1sb2NhdGlvbi5wcm90b2NvbCsiLy8iK2xvY2F0aW9uLmhvc3QrZCk7dmFyIHU9dm9pZCAwO3N3aXRjaChlLnNpdGUpe2Nhc2UibGlhbmppYSI6dT1kLm1hdGNoKC9cLyhbYS16MC05QS1aXSspXC5odG1sLylbMV07YnJlYWs7Y2FzZSJrZSI6dT1kLm1hdGNoKC9cLyhbYS16MC05QS1aXSspXC5odG1sLylbMV07YnJlYWs7Y2FzZSI1aTVqIjp1PWQubWF0Y2goL1wvKFthLXowLTldKylcLmh0bWwvKVsxXTticmVhaztjYXNlIm1haXRpYW4iOnU9ZC5tYXRjaCgvXC9lc2Z4cVwvKFthLXowLTlBLVpdKykvKVsxXTticmVhaztjYXNlImNlbnRhbmV0Ijp1PWQubWF0Y2goL1wvKFthLXowLTldKylcLmh0bWwvKVsxXX1kPWVuY29kZVVSSUNvbXBvbmVudChkLnJlcGxhY2UoIi5rZS4iLCIubGlhbmppYS4iKSksdC5kYXRhW2RdJiZzLmVxKGMpLmFwcGVuZChhLmNvbXBpbGUobykoe2RhdGE6dC5kYXRhW2RdLHNlcnZlcjplLnNlcnZlcixzX3NlcnZlcjplLnNfc2VydmVyLGhvdXNlY29kZTp1fSkpfXNldFRpbWVvdXQoZyw1MDApLGIoKX0seT1mdW5jdGlvbih0KXtmb3IodmFyIG89ZigpLHI9dm9pZCAwLHM9dVtsXSxjPTA7YzxzLmxlbmd0aDtjKyspaWYoaShzW2NdKS5sZW5ndGg+MCl7cj1zW2NdO2JyZWFrfXZhciBwPW4oMTgyKTsiYmFpZHUiPT09ZS5mcm9tX2RldmljZSYmKHA9bigxODMpKTt2YXIgZD1lbmNvZGVVUklDb21wb25lbnQobG9jYXRpb24uaHJlZi5yZXBsYWNlKCIua2UuIiwiLmxpYW5qaWEuIikpO2kocikuZXEoMCkuYWZ0ZXIoYS5jb21waWxlKHApKHtkYXRhOnQuZGF0YVtkXSxzZXJ2ZXI6ZS5zZXJ2ZXIsc19zZXJ2ZXI6ZS5zX3NlcnZlcixwYWdldHlwZToiZHBwYWdlIixob3VzZWNvZGU6b30pKSxiKCksc2V0VGltZW91dChnLDUwMCl9LGs9ZnVuY3Rpb24odCl7dmFyIGU9aFtsXSxuPWUubGlzdCsiICIrZS5ocmVmaXRlbSxvPWxvY2F0aW9uLmhvc3Q7aWYoby5pbmRleE9mKCJsaWFuamlhIik+LTEmJjI9PT10KXJldHVybiBsb2NhdGlvbi5ocmVmO2lmKG8uaW5kZXhPZigibGlhbmppYSIpPi0xKXt2YXIgYT1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwoaShuKSxmdW5jdGlvbih0KXt2YXIgZT1pKHQpLmF0dHIoImhyZWYiKTtyZXR1cm4oZS5pbmRleE9mKCJodHRwIik+LTE/IiI6Imh0dHA6Ly8iK2xvY2F0aW9uLmhvc3QpK2V9KTtyZXR1cm4gYz1hLGEuam9pbigifHwiKX1pZihvLmluZGV4T2YoIm1haXRpYW4iKT4tMSYmMj09PXQpcmV0dXJuIGxvY2F0aW9uLmhyZWY7aWYoby5pbmRleE9mKCJtYWl0aWFuIik+LTEpe3ZhciBhPUFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChpKG4pLGZ1bmN0aW9uKHQpe3ZhciBlPWkodCkuYXR0cigiaHJlZiIpO3JldHVybihlLmluZGV4T2YoImh0dHAiKT4tMT8iIjoiaHR0cDovLyIrbG9jYXRpb24uaG9zdCkrZX0pO3JldHVybiBjPWEsYS5qb2luKCJ8fCIpfWlmKG8uaW5kZXhPZigia2UiKT4tMSYmMj09PXQpcmV0dXJuIGxvY2F0aW9uLmhyZWY7aWYoby5pbmRleE9mKCJrZSIpPi0xKXt2YXIgYT1BcnJheS5wcm90b3R5cGUubWFwLmNhbGwoaShuKSxmdW5jdGlvbih0KXt2YXIgZT1pKHQpLmF0dHIoImhyZWYiKTtyZXR1cm4oZS5pbmRleE9mKCJodHRwIik+LTE/IiI6Imh0dHA6Ly8iK2xvY2F0aW9uLmhvc3QpK2V9KTtyZXR1cm4gYz1hLGEuam9pbigifHwiKX1pZihvLmluZGV4T2YoIjVpNWoiKT4tMSYmMj09PXQpcmV0dXJuIGxvY2F0aW9uLmhyZWY7aWYoby5pbmRleE9mKCI1aTVqIik+LTEpe3ZhciBhPUFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChpKCIucExpc3RCb3ggLnBMaXN0PmxpIC5saXN0VGl0PmEiKSxmdW5jdGlvbih0KXtyZXR1cm4gbG9jYXRpb24ucHJvdG9jb2wrIi8vIitsb2NhdGlvbi5ob3N0K2kodCkuYXR0cigiaHJlZiIpfSk7cmV0dXJuIGM9YSxhLmpvaW4oInx8Iil9aWYoby5pbmRleE9mKCJjZW50YW5ldCIpPi0xJiYyPT09dClyZXR1cm4gbG9jYXRpb24uaHJlZjtpZihvLmluZGV4T2YoImNlbnRhbmV0Iik+LTEpe3ZhciBhPUFycmF5LnByb3RvdHlwZS5tYXAuY2FsbChpKG4pLGZ1bmN0aW9uKHQpe3JldHVybiBsb2NhdGlvbi5wcm90b2NvbCsiLy8iK2xvY2F0aW9uLmhvc3QraSh0KS5hdHRyKCJocmVmIil9KTtyZXR1cm4gYz1hLGEuam9pbigifHwiKX19LHo9ZnVuY3Rpb24odCxlKXtvLmdldCh0KS5kb25lKGZ1bmN0aW9uKHQpe2UodCl9KX0saj1mdW5jdGlvbigpe3ZhciB0PWxvY2F0aW9uLmhyZWYsZT0wLG49bDtzd2l0Y2gobil7Y2FzZSJsaWFuamlhIjplPXQubWF0Y2goL1xkK1wuaHRtbC8pPzI6MTticmVhaztjYXNlIm1haXRpYW4iOmU9dC5tYXRjaCgvZXNmeHFcL1x3Ky8pPzI6MTticmVhaztjYXNlImxpYW5qaWEyIjplPXQubWF0Y2goL1xkK1wuaHRtbC8pPzI6MTticmVhaztjYXNlIjVpNWoiOnQubWF0Y2goLyg/OmV4Y2hhbmdlfGVyc2hvdWZhbmcpXC9cZCtcLmh0bWwvKSYmaSgiLmJpZy1zbGlkZSIpLmxlbmd0aD4wP2U9Mjp0Lm1hdGNoKC8oPzpleGNoYW5nZXxlcnNob3VmYW5nKS8pJiYoZT0xKTticmVhaztjYXNlImNlbnRhbmV0Ijp0Lm1hdGNoKC9lcnNob3VmYW5nXC9bYS16MC05XStcLmh0bWwvKSYmaSgiI3BpY0JveCIpLmxlbmd0aD4wP2U9Mjp0Lm1hdGNoKC9lcnNob3VmYW5nLykmJihlPTEpO2JyZWFrO2Nhc2UiY2VudGFuZXQyIjp0Lm1hdGNoKC9lcnNob3VmYW5nXC9bYS16MC05XStcLmh0bWwvKT9lPTI6dC5tYXRjaCgvZXJzaG91ZmFuZy8pJiYoZT0xKTticmVhaztjYXNlImtlIjplPXQubWF0Y2goL1xkK1wuaHRtbC8pPzI6MX1yZXR1cm4gZX0sQz1mdW5jdGlvbigpe3ZhciB0PW4oMTg0KTtpKCJib2R5IikuYXBwZW5kKGEuY29tcGlsZSh0KSh7c19zZXJ2ZXI6ZS5zX3NlcnZlcixleHRCcmFuZDplLmV4dEJyYW5kfSkpLGkoImJvZHkiKS5hZGRDbGFzcygiaG91c2VfIitsKX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24oKXtpZihsPWUuc2l0ZSwibGlhbmppYSI9PWx8fCI1aTVqIj09bHx8ImNlbnRhbmV0Ij09bHx8ImtlIj09bHx8Im1haXRpYW4iPT1sKXsic2gubGlhbmppYS5jb20iIT09bG9jYXRpb24uaG9zdCYmInN1LmxpYW5qaWEuY29tIiE9PWxvY2F0aW9uLmhvc3R8fChsPSJsaWFuamlhMiIpLCJzaC5jZW50YW5ldC5jb20iPT09bG9jYXRpb24uaG9zdCYmKGw9ImNlbnRhbmV0MiIpO3ZhciB0PWooKSxuPWsodCksaT1lLnNlcnZlcisiL2V4dGVuc2lvbi9ob3VzZVRpcD91cmw9IitlbmNvZGVVUklDb21wb25lbnQobik7Mj09PXQ/eihpLHkpOnooaSx2KSxDKCl9fX0pLmNhbGwoZSxuKDEpLG4oNCkpfSxmdW5jdGlvbih0LGUsbil7KGZ1bmN0aW9uKGUsbil7InVzZSBzdHJpY3QiO3ZhciBpPWZ1bmN0aW9uKHQpe3ZhciBuPW5ldyBEYXRlKHQpLGk9bi5nZXRGdWxsWWVhcigpOyhlLklFN3x8ZS5JRTgpJiYoaT1uLmdldEZ1bGxZZWFyKCkpO3ZhciBvPW4uZ2V0TW9udGgoKSsxLGE9bi5nZXREYXRlKCk7bzwxMCYmKG89IjAiK28pLGE8MTAmJihhPSIwIithKTt2YXIgcj1pKyIvIitvKyIvIithO3JldHVybiByfSxvPWZ1bmN0aW9uKHQpe3JldHVybiB0fTt0LmV4cG9ydHM9ZnVuY3Rpb24odCl7dHJ5e3ZhciBlPXtjaGFydDp7cmVuZGVyVG86dC5lbCx0eXBlOiJsaW5lIixzdHlsZTp7bWFyZ2luTGVmdDoiNHB4IixwYWRkaW5nTGVmdDoiMHB4IixtYXJnaW5Ub3A6IjAiLHBhZGRpbmdUb3A6IjBweCIsbWFyZ2luQm90dG9tOiIwcHgiLHBhZGRpbmdCb3R0b206IjBweCJ9LGV2ZW50czp7bG9hZDpmdW5jdGlvbigpe3RoaXMueEF4aXNbMF0udXBkYXRlKHttYXg6dGhpcy54QXhpc1swXS5tYXgrODY0ZTZ9KX19fSxjcmVkaXRzOntlbmFibGVkOiExfSxjb2xvcnM6WyIjZDE1MGYwIiwiI2YwYjUwNyIsIiMzZWJkZjciXSx0aXRsZTp7dGV4dDp0LnRpdGxlfHwiIix4Oi0yMCxzdHlsZTp7Y29sb3I6IiMyZjdlZDgifX0seEF4aXM6e3R5cGU6ImRhdGV0aW1lIixkYXRlVGltZUxhYmVsRm9ybWF0czp7ZGF5OiIlWS8lbSIsd2VlazoiJVkvJW0iLG1vbnRoOiIlWS8lbSJ9LG1pblRpY2tJbnRlcnZhbDoyNTkyZTYscGxvdExpbmVzOlt7Y29sb3I6InJlZCIsZGFzaFN0eWxlOiJsb25nZGFzaGRvdCIsdmFsdWU6Myx3aWR0aDoyfV0sbWlub3JHcmlkTGluZUNvbG9yOiIjZGZkZmRmIixsYWJlbHM6e3JvdGF0aW9uOi0yNSx5OjMwLHN0eWxlOntmb250U2l6ZToiMTJweCIsZm9udEZhbWlseToiQXJpYWwiLGNvbG9yOiIjMzIzMzMzIn0sYWxpZ246ImNlbnRlciJ9fSx5QXhpczp7dGl0bGU6e3RleHQ6IiIscm90YXRpb246MCxhbGlnbjoiaGlnaCIseTotMTYseDotMTIsb2Zmc2V0Oi01NSxtYXJnaW46MCxzdHlsZTp7Y29sb3I6IiM1ODU4NTgifX0scGxvdExpbmVzOlt7dmFsdWU6MCx3aWR0aDoxLGNvbG9yOiIjODA4MDgwIn1dLGdyaWRMaW5lQ29sb3I6IiNjMGQwZTAiLG1pbm9yR3JpZExpbmVDb2xvcjoiI2RmZGZkZiIsdGlja1BpeGVsSW50ZXJ2YWw6NTB9LHRvb2x0aXA6e3hEYXRlRm9ybWF0OiIlWS0lbS0lZCIsc2hhcmVkOiEwLHZhbHVlRGVjaW1hbHM6Mix2YWx1ZVByZWZpeDoiIix1c2VIVE1MOiEwLHZhbHVlU3VmZml4OiIg5LiHIixib3JkZXJDb2xvcjoibm9uZSIscGFkZGluZzoyMCxmb3JtYXR0ZXI6ZnVuY3Rpb24oKXtmb3IodmFyIHQ9aSh0aGlzLngpLGU9Jzx0YWJsZSBzdHlsZT0ibWFyZ2luLWxlZnQ6MTJweCI+PHRyPjx0ZCB3aWR0aD0iMTAwJSIgY29sc3Bhbj0iOCIgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjtmb250LXdlaWdodDogYm9sZDtmb250LWZhbWlseTogQXJpYWw7Zm9udC1zaXplOjE0cHgiPicrdCsiPC90ZD48L3RkPjwvdHI+IixuPTA7bjx0aGlzLnBvaW50cy5sZW5ndGg7bisrKXt2YXIgbz1wYXJzZUZsb2F0KE51bWJlcih0aGlzLnBvaW50c1tuXS55KS50b0ZpeGVkKDIpKSsi5LiHIjtlKz0nPHRyPjx0ZCBzdHlsZT0id2lkdGg6IDgwcHg7IHRleHQtYWxpZ246IGxlZnQiPjxzcGFuIHN0eWxlPSJjb2xvcjogJyt0aGlzLnBvaW50c1tuXS5wb2ludC5zZXJpZXMuY29sb3IrJztmb250LXNpemU6MTJweDtmb250LWZhbWlseTphcmlhbDtmbG9hdDpub25lO21hcmdpbi1yaWdodDo1cHg7Ij7il488L3NwYW4+Jyt0aGlzLnBvaW50c1tuXS5wb2ludC5zZXJpZXMubmFtZSsnPC90ZD5cbiAgICAgICAgICA8dGQgc3R5bGU9InBhZGRpbmctbGVmdDo0cHg7Ij4nK28rIjwvdGQ+PC90cj4ifXJldHVybiBlKz0iPC90YWJsZT4ifX0scGxvdE9wdGlvbnM6e3Nlcmllczp7bWFya2VyOntyYWRpdXM6MSxzdGF0ZXM6e2hvdmVyOntyYWRpdXM6Mn19fSxsaW5lV2lkdGg6MS41LHNoYWRvdzohMSxzdGF0ZXM6e2hvdmVyOntsaW5lV2lkdGg6MX19fX0sbGVnZW5kOntlbmFibGVkOiEwLGJvcmRlcldpZHRoOjAsdmVydGljYWxBbGlnbjoidG9wIix4OjIyOCx5Oi04LGl0ZW1TdHlsZTp7Y29sb3I6IiM1ODU4NTgiLGZvbnRXZWlnaHQ6Im5vcm1hbCIsZm9udFNpemU6IjE0cHgiLG1hcmdpbkJvdHRvbToiMHB4In0sc3ltYm9sV2lkdGg6MTIsc3ltYm9sSGVpZ2h0OjMsaXRlbU1hcmdpbkJvdHRvbTowLGl0ZW1NYXJnaW5Ub3A6MCxtYXJnaW46MTJ9LHNlcmllczpbXX07ZS50aXRsZS5zdHlsZS5kaXNwbGF5PSJub25lIjt2YXIgYT10Lm1zZztpZih0Lm1haW5UcmVuZCllLnNlcmllc1swXT17dmlzaWJsZTohMCxuYW1lOiLmiL/mupDku7fmoLzotbDlir8iLG1hcmtlcjp7c3ltYm9sOiJjaXJjbGUifSxkYXRhOltdfSxlLnNlcmllc1swXS5kYXRhPWEucHJpY2VfaGlzdG9yeSxlLnNlcmllc1swXS5kYXRhPW8oZS5zZXJpZXNbMF0uZGF0YSksZS5jb2xvcnM9WyIjM2ViZGY3Il0sZS5sZWdlbmQuZW5hYmxlZD0hMTtlbHNle3ZhciByPTAscz0wLGw9MCxjPVtdO2lmKGEub25zYWxlLmxlbmd0aD4xKXtlLnNlcmllc1tyXT17dmlzaWJsZTohMCxuYW1lOiLmjILniYzljZXku7ciLG1hcmtlcjp7c3ltYm9sOiJjaXJjbGUifSxkYXRhOltdfSxzKyssbCsrLGMucHVzaCgiI2QxNTBmMCIpLGUubGVnZW5kLng9ZS5sZWdlbmQueC00ODtmb3IodmFyIHA9MDtwPHQubXNnLm9uc2FsZS5sZW5ndGg7cCsrKXt2YXIgZD1uZXcgQXJyYXkoMik7ZFswXT0xZTMqdC5tc2cub25zYWxlW3BdWzBdLGRbMV09TWF0aC5yb3VuZCgxMDAqdC5tc2cub25zYWxlW3BdWzFdKS8xMDAsZS5zZXJpZXNbcl0uZGF0YS5wdXNoKGQpfWUuc2VyaWVzW3JdLmRhdGE9byhlLnNlcmllc1tyXS5kYXRhKX1pZihhLmRlYWx0Lmxlbmd0aD4xKXtlLnNlcmllc1tzXT17dmlzaWJsZTohMCxuYW1lOiLmiJDkuqTljZXku7ciLG1hcmtlcjp7c3ltYm9sOiJjaXJjbGUifSxkYXRhOltdfSxsKyssYy5wdXNoKCIjZjBiNTA3IiksZS5sZWdlbmQueD1lLmxlZ2VuZC54LTQ4O2Zvcih2YXIgcD0wO3A8dC5tc2cuZGVhbHQubGVuZ3RoO3ArKyl7dmFyIGQ9bmV3IEFycmF5KDIpO2RbMF09MWUzKnQubXNnLmRlYWx0W3BdWzBdLGRbMV09TWF0aC5yb3VuZCgxMDAqdC5tc2cuZGVhbHRbcF1bMV0pLzEwMCxlLnNlcmllc1tzXS5kYXRhLnB1c2goZCl9ZS5zZXJpZXNbc10uZGF0YT1vKGUuc2VyaWVzW3NdLmRhdGEpfWUueUF4aXMudGl0bGUudGV4dD0i5Y2V5L2NKOS4hykiLGUuY29sb3JzPWN9bmV3IG4uQ2hhcnQoZSl9Y2F0Y2goaCl7fX19KS5jYWxsKGUsbigxKSxuKDE1MSkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBjbGFzcz0iaG91c2UtdHJlbmQtYm94IHt7cGFnZXR5cGV9fSB0cmVuZC1ib3h7e2RhdGEudHJlbmR9fSI+XG4gIDxkaXYgY2xhc3M9ImhvdXNldC1idG4iPlxuICAgIDxhIGNsYXNzPSJob3VzZS10cmVuZC1iZyIgdGl0bGU9IuaSuOaIv+S7tyI+PC9hPlxuICAgIDxkaXYgY2xhc3M9Imh0LXRyZW5kLWRlc2MiPlxuICAgICAgPHNwYW4gY2xhc3M9ImgtY29sb3J7e2RhdGEudHJlbmR9fSI+e3tkYXRhLnRyZW5kTXNnfX08L3NwYW4+XG4gICAgICA8ZW0gY2xhc3M9InRyZW5kLWljb257e2RhdGEudHJlbmR9fSBob3VzZS10cmVuZC1iZyI+PC9lbT5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJodC1wcmljZS1yZW1pbmQiIGRhdGEtaWQ9Int7aG91c2Vjb2RlfX0iPlxuICAgICAgPGVtIGNsYXNzPSJob3VzZS10cmVuZC1iZyI+PC9lbT5cbiAgICAgIDxzcGFuPumZjeS7t+aPkOmGkjwvc3Bhbj4gIFxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz0iaG91c2V0LWRldGFpbCI+XG4gICAgPGRpdiBjbGFzcz0iaG91c2UtdHJlbmQtaW1nIiBpZD0iaG91c2UtdHJlbmQte3tob3VzZWNvZGV9fSIgPlxuICAgICAgIDxpbWcgc3JjPSIiIGRhdGEtc3JjPSJ7e3NlcnZlcn19e3tkYXRhLnRyZW5kSW1nfX0md2lkdGg9NDYwJmhlaWdodD0yMTAmcGxvdEZvbnRTaXplPTEwIj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJob3VzZS1wcmljZS1xcmNvZGUiPlxuICAgICAgPHNwYW4gY2xhc3M9Im1ndG9wIj7mr4/ml6XmiJDkuqTooYzmg4U8L3NwYW4+XG4gICAgICA8c3BhbiBjbGFzcz0icmVkLXByaSI+5pyA5paw6ZmN5Lu35oi/5rqQPC9zcGFuPlxuICAgICAgPGltZyBzcmM9Int7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9uZXdiYXIvaG91c2VwcmktcXJjb2RlMi5wbmciPlxuICAgICAgPHA+5omr56CB5YWz5rOo5pK45oi/5Lu3PC9wPlxuICAgICAgPHAgY2xhc3M9ImhvdXNlLXAtcDIiPumZjeS7t+aPkOmGkuS9oDwvcD5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJwcmljZS1yYW5nZSI+XG4gICAgICB7e2lmIGRhdGEubWF4UHJpY2UgPT0gZGF0YS5taW5QcmljZX19XG4gICAgICAgIDxzcGFuID7njrDku7fvvJp7e2RhdGEubWF4UHJpY2V9feS4hzwvc3Bhbj5cbiAgICAgIHt7ZWxzZX19XG4gICAgICAgIDxzcGFuIGNsYXNzPSJ0b3BwcmkiPuacgOmrmOS7tzp7e2RhdGEubWF4UHJpY2V9feS4hzwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9Imxvd3ByaSI+5pyA5L2O5Lu3Ont7ZGF0YS5taW5QcmljZX195LiHPC9zcGFuPlxuICAgICAge3svaWZ9fVxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9ImNoYW5nZV90cmVuZF9idG4iPlxuICAgICAgPGRpdj5cbiAgICAgICAgPHNwYW4gY2xhc3M9ImhvdXNlLXRyZW5kLWIgdHJlbmQtY2hvb3NlIj7miL/mupDooYzmg4U8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJjb21tdW5pdHktdHJlbmQtYiI+5bCP5Yy66KGM5oOFPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgICBcbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPSJjb21tdW5pdHktcHJpY2UiIGlkPSJjb21tdW5pdHkte3tob3VzZWNvZGV9fSIgZGF0YS11PSJ7e3NlcnZlcn19e3tkYXRhLmNvbW11bml0eVByaWNlfX0iIGRhdGEtYz0ie3tkYXRhLmNvbW11bml0eX19Ij48L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9Imh0LXd4cXJjb2RlIj5cbiAgICA8c3BhbiBjbGFzcz0iaHQtd3gtc3AxIj7lhbPms6jlhazkvJflj7c8L3NwYW4+XG4gICAgPHNwYW4gY2xhc3M9Imh0LXd4LXNwMiI+5oi/5rqQ6ZmN5Lu35a6e5pe25o+Q6YaSPC9zcGFuPlxuICAgIDxpbWcgc3JjPSJ7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvbmV3YmFyL2hvdXNlcHJpLXFyY29kZTIucG5nIj5cbiAgICA8c3BhbiBjbGFzcz0iaHQtd3gtc3AzIj7kuI3lho3mj5DnpLo8L3NwYW4+XG4gIDwvZGl2PlxuXG48L2Rpdj4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBpZD0iYmRleHRfbWJfYmciIGNsYXNzPSJ7e3BhZ2V0eXBlfX0gdHJlbmQtYm94e3tkYXRhLnRyZW5kfX0iPlxuICA8ZGl2IGlkPSJiZGV4dF9taW5pYmFyIiA+XG4gICAgPGRpdiBjbGFzcz0iYmRleHQtdG9wdGFicyI+XG4gICAgICA8ZGl2IGNsYXNzPSJiZGV4dC1taW5pLWxvZ28iPlxuICAgICAgICA8YSA+XG4gICAgICAgICAgPGVtIGNsYXNzPSJiZGV4dC1iZyI+PC9lbT5cbiAgICAgICAgPC9hPlxuICAgICAgICBcbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz0iYmRleHQtbWluaS10cmVuZCI+XG4gICAgICAgIDxlbSBjbGFzcz0iYmRleHQtYmcgdHJlbmQtaWNvbnt7ZGF0YS50cmVuZH19Ij48L2VtPlxuICAgICAgICA8c3BhbiA+e3tkYXRhLnRyZW5kTXNnfX08L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9ImhvdXNldC1kZXRhaWwiPlxuICAgIDxkaXYgY2xhc3M9ImhvdXNlLXRyZW5kLWltZyI+XG4gICAgICA8aW1nIHNyYz0iIiBkYXRhLXNyYz0ie3tzZXJ2ZXJ9fXt7ZGF0YS50cmVuZEltZ319JndpZHRoPTQ2MCZoZWlnaHQ9MjEwJnBsb3RGb250U2l6ZT0xMCI+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0iaG91c2UtcHJpY2UtcXJjb2RlIj5cbiAgICAgIDxzcGFuIGNsYXNzPSJtZ3RvcCI+5q+P5pel5oiQ5Lqk6KGM5oOFPC9zcGFuPlxuICAgICAgPHNwYW4gY2xhc3M9InJlZC1wcmkiPuaIv+a6kOWOhuWPsuaKpeS7tzwvc3Bhbj5cbiAgICAgIDxpbWcgc3JjPSJ7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvbmV3YmFyL2hvdXNlcHJpLXFyY29kZS5qcGciPlxuICAgICAgPHA+5omr56CB5YWz5rOo5pK45oi/5Lu3PC9wPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9InByaWNlLXJhbmdlIj5cbiAgICAgIHt7aWYgZGF0YS5tYXhQcmljZSA9PSBkYXRhLm1pblByaWNlfX1cbiAgICAgICAgPHNwYW4gPueOsOS7t++8mnt7ZGF0YS5tYXhQcmljZX195LiHPC9zcGFuPlxuICAgICAge3tlbHNlfX1cbiAgICAgICAgPHNwYW4gY2xhc3M9InRvcHByaSI+5pyA6auY5Lu377yae3tkYXRhLm1heFByaWNlfX3kuIc8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJsb3dwcmkiPuacgOS9juS7t++8mnt7ZGF0YS5taW5QcmljZX195LiHPC9zcGFuPlxuICAgICAge3svaWZ9fVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvZGl2Pid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAuaG91c2VfY2VudGFuZXQyIC5ob3VzZS1pdGVtIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIH1cbiAgLmhvdXNlXzVpNWogI2JkZXh0X21iX2JnLmRwcGFnZSwgLmhvdXNlX2NlbnRhbmV0MiAjYmRleHRfbWJfYmcuZHBwYWdlIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbiAgI2JkZXh0X21iX2JnLmRwcGFnZSB7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICB9XG4gIC5ob3VzZS10cmVuZC1iZyB7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoInt7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy94YnQvaG91c2UtdHJlbmQtaWNvbjIucG5nIikgbm8tcmVwZWF0O1xuICAgIH1cbiAgICAuaG91c2UtdHJlbmQtYm94IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAwcHg7XG4gICAgICBib3R0b206IDUwcHg7XG4gICAgICB3aWR0aDogMjgycHg7XG4gICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlO1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrIWltcG9ydGFudDtcbiAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgICAgZm9udC1mYW1pbHk6ICJNaWNyb3NvZnQgWWFoZWkiLCLlvq7ova/pm4Xpu5EiXG4gICAgfVxuICAgICNiZGV4dF9tYl9iZyAjYmRleHRfbWluaWJhciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMHB4O1xuICAgICAgYm90dG9tOiA1NnB4O1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIC5ob3VzZV9jZW50YW5ldDIgI2JkZXh0X21iX2JnICNiZGV4dF9taW5pYmFyIHtcbiAgICAgIHJpZ2h0OiA2cHg7XG4gICAgICBib3R0b206IDI5cHg7XG4gICAgfVxuICAgIC5ob3VzZV9jZW50YW5ldDIgI2JkZXh0X21iX2JnLmRwcGFnZSAjYmRleHRfbWluaWJhciB7XG4gICAgICByaWdodDogLTMycHg7XG4gICAgfVxuICAgIC5ob3VzZV9jZW50YW5ldCAjYmRleHRfbWJfYmcuZHBwYWdlICNiZGV4dF9taW5pYmFyIHtcbiAgICAgIHJpZ2h0OiAtMThweDtcbiAgICB9XG4gICAgLmhvdXNlXzVpNWogI2JkZXh0X21iX2JnICNiZGV4dF9taW5pYmFyIHtcbiAgICAgIGJvdHRvbTogMzBweDtcbiAgICB9XG4gICAgLmhvdXNlX2NlbnRhbmV0ICNiZGV4dF9tYl9iZyAjYmRleHRfbWluaWJhciB7XG4gICAgICBib3R0b206IDIwcHg7XG4gICAgfVxuICAgICNiZGV4dF9tYl9iZy5kcHBhZ2UgI2JkZXh0X21pbmliYXIge1xuICAgICAgYm90dG9tOiAtOHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIC5ob3VzZS10cmVuZC1ib3ggKiB7XG4gICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICB9XG4gICAgLmhvdXNlLXRyZW5kLWJveC50cmVuZC1ib3gtMSAuaHQtdHJlbmQtZGVzYyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xuICAgIH1cbiAgICAuaG91c2VfbGlhbmppYTIgLmhvdXNlLXRyZW5kLWJveCB7XG4gICAgICBib3R0b206IDMycHg7XG4gICAgfVxuICAgIC5ob3VzZV9jZW50YW5ldCAuaG91c2UtdHJlbmQtYm94IHtcbiAgICAgIHJpZ2h0OiA0MHB4O1xuICAgICAgYm90dG9tOiAyMnB4O1xuICAgIH1cbiAgICAuaG91c2VfY2VudGFuZXQyIC5ob3VzZS10cmVuZC1ib3gge1xuICAgICAgcmlnaHQ6IDUycHg7XG4gICAgICBib3R0b206IDMycHg7XG4gICAgfVxuICAgIC5ob3VzZV9jZW50YW5ldCAuaG91c2UtdHJlbmQtYm94LmRwcGFnZSB7XG4gICAgICByaWdodDogLTE2cHg7XG4gICAgICBib3R0b206IDBweDtcbiAgICB9XG4gICAgLmhvdXNlX2NlbnRhbmV0MiAuaG91c2UtdHJlbmQtYm94LmRwcGFnZSB7XG4gICAgICByaWdodDogLTM4cHg7XG4gICAgICBib3R0b206IC0xNXB4O1xuICAgIH1cbiAgICAue3tleHRCcmFuZH19XzVpNWogLmhvdXNlLXRyZW5kLWJveCB7XG4gICAgICBib3R0b206IDBweDtcbiAgICB9XG4gICAgLmhvdXNlLXRyZW5kLWJveC5kcHBhZ2Uge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgYm90dG9tOiAwcHg7XG4gICAgfVxuICAgIC5ob3VzZV9saWFuamlhMiAuaG91c2UtdHJlbmQtYm94LmRwcGFnZSB7XG4gICAgICBib3R0b206IDFweDtcbiAgICB9XG4gICAgLmhvdXNldC1idG4ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuICAgIC5ob3VzZXQtYnRuOmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICIiO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjbGVhcjogYm90aDtcbiAgICB9XG4gICAgLmhvdXNldC1kZXRhaWwge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAzMnB4O1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICAgIGhlaWdodDogMjg1cHg7XG4gICAgICB3aWR0aDogNTgwcHg7XG4gICAgICB6LWluZGV4OiA5OTk5OTk5OTk7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWVlO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAgICAgYm94LXNoYWRvdzogMHB4IDVweCAxNXB4IDAgcmdiYSgyMywyNSwyNywwLjE1KTtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgICNiZGV4dF9tYl9iZyAuaG91c2V0LWRldGFpbCB7XG4gICAgICB0b3A6IDE4OHB4O1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICB9XG4gICAgLmhvdXNlX2NlbnRhbmV0MiAjYmRleHRfbWJfYmcgLmhvdXNldC1kZXRhaWwge1xuICAgICAgdG9wOiAxOTZweDtcbiAgICAgIHJpZ2h0OiA1cHg7XG4gICAgfVxuICAgIC5ob3VzZV81aTVqICNiZGV4dF9tYl9iZyAuaG91c2V0LWRldGFpbCB7XG4gICAgICB0b3A6IDEzM3B4O1xuICAgIH1cbiAgICAuaG91c2VfY2VudGFuZXQgI2JkZXh0X21iX2JnIC5ob3VzZXQtZGV0YWlsIHtcbiAgICAgIHRvcDogMjMwcHg7XG4gICAgfVxuICAgICNiZGV4dF9tYl9iZy5kcHBhZ2UgLmhvdXNldC1kZXRhaWwge1xuICAgICAgdG9wOiA5N3B4O1xuICAgICAgcmlnaHQ6IDE0OXB4O1xuICAgIH1cbiAgICAuaG91c2VfY2VudGFuZXQyICNiZGV4dF9tYl9iZy5kcHBhZ2UgLmhvdXNldC1kZXRhaWwge1xuICAgICAgdG9wOiA0OHB4O1xuICAgICAgcmlnaHQ6IDIzNXB4O1xuICAgIH1cbiAgICAuaG91c2VfY2VudGFuZXQgI2JkZXh0X21iX2JnLmRwcGFnZSAuaG91c2V0LWRldGFpbCB7XG4gICAgICB0b3A6IDE1MnB4O1xuICAgICAgcmlnaHQ6IDUxcHg7XG4gICAgfVxuICAgIC5ob3VzZV81aTVqICNiZGV4dF9tYl9iZy5kcHBhZ2UgLmhvdXNldC1kZXRhaWwge1xuICAgICAgdG9wOiA0NnB4O1xuICAgICAgcmlnaHQ6IDc4cHg7XG4gICAgfVxuICAgIC5ob3VzZS10cmVuZC1pbWcge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogNDUycHg7XG4gICAgICBoZWlnaHQ6IDIxN3B4O1xuICAgICAgbWFyZ2luLXRvcDogMjhweDtcbiAgICB9XG4gICAgLmhvdXNldC1kZXRhaWwgLmhvdXNlLXRyZW5kLWltZyBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgfVxuICAgIC5ob3VzZXQtYnRuIGEge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogMzJweDtcbiAgICAgIGhlaWdodDogMzJweDtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlNmU2ZTY7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNnB4IC00OHB4O1xuICAgIH1cbiAgICAuaHQtdHJlbmQtZGVzYyB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGhlaWdodDogMzJweDtcbiAgICAgIHdpZHRoOiAxMjRweDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLmh0LXByaWNlLXJlbWluZCB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAxMjRweDtcbiAgICAgIGhlaWdodDogMzJweDtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2U2ZTZlNjtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB9XG4gICAgLmh0LXByaWNlLXJlbWluZDpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmNWY2O1xuICAgIH1cbiAgICAuaHQtcHJpY2UtcmVtaW5kIHNwYW4ge1xuICAgICAgY29sb3I6ICNmNzcwNWI7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICBoZWlnaHQ6IDMycHg7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICAgICAgbWFyZ2luLXJpZ2h0OiA2cHg7XG4gICAgfVxuICAgIC5odC1wcmljZS1yZW1pbmQgZW0ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMwcHggLTIycHg7XG4gICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICB3aWR0aDogMTZweDtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbi1yaWdodDogMjJweDtcbiAgICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICB9XG4gICAgLmh0LXByaWNlLXJlbWluZC5oYXNyZW1pbmQgc3BhbiB7XG4gICAgICBjb2xvcjogIzMzMztcbiAgICB9XG4gICAgLmh0LXByaWNlLXJlbWluZC5oYXNyZW1pbmQgZW0ge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTU3cHggLTIycHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XG4gICAgfVxuICAgIC5iZGV4dC1taW5pLXRyZW5kLm1zaG92ZXJ7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjNDI1NzY2O1xuICAgICAgei1pbmRleDogMjtcbiAgICB9XG4gICAgLmh0LXRyZW5kLWRlc2MubXNob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmNWY2O1xuICAgIH1cbiAgICAuaHQtdHJlbmQtZGVzYyBzcGFuIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICBtYXJnaW4tbGVmdDogMjJweDtcbiAgICB9XG4gICAgLmh0LXRyZW5kLWRlc2Mgc3Bhbi5oLWNvbG9yMCB7XG4gICAgICBjb2xvcjogI2Y3YTgyYjtcbiAgICB9XG4gICAgLmh0LXRyZW5kLWRlc2Mgc3Bhbi5oLWNvbG9yMSB7XG4gICAgICBjb2xvcjogI2ZmMWUxZTtcbiAgICB9XG4gICAgLmh0LXRyZW5kLWRlc2Mgc3Bhbi5oLWNvbG9yMiwgLmh0LXRyZW5kLWRlc2Mgc3Bhbi5oLWNvbG9yMyB7XG4gICAgICBjb2xvcjogIzBiYWE3NDtcbiAgICB9XG4gICAgLmh0LXRyZW5kLWRlc2Mgc3Bhbi5oLWNvbG9yMyB7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICB9XG4gICAgLmh0LXRyZW5kLWRlc2Mgc3Bhbi5oLWNvbG9yLTEge1xuICAgICAgY29sb3I6ICM4ODg7XG4gICAgfVxuICAgIC5odC10cmVuZC1kZXNjIGVtIHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDI2cHg7XG4gICAgICBtYXJnaW4tdG9wOiA2cHg7XG4gICAgICBtYXJnaW4tbGVmdDogOHB4O1xuICAgIH1cbiAgICAuaHQtdHJlbmQtZGVzYyAudHJlbmQtaWNvbjAge1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMzJweCAtMnB4O1xuICAgIH1cbiAgICAuaHQtdHJlbmQtZGVzYyAudHJlbmQtaWNvbjEge1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNjZweCAtMnB4O1xuICAgIH1cbiAgICAuaHQtdHJlbmQtZGVzYyAudHJlbmQtaWNvbjIge1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtNXB4IC0ycHg7XG4gICAgfVxuICAgIC5odC10cmVuZC1kZXNjIC50cmVuZC1pY29uMyB7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC00cHggLTIwcHg7XG4gICAgfVxuICAgIC5odC10cmVuZC1kZXNjIC50cmVuZC1pY29uLTEge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG4gICAgI2JkZXh0X21iX2JnIC50cmVuZC1pY29uMiwgI2JkZXh0X21iX2JnIC50cmVuZC1pY29uMyB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggLTEwOXB4O1xuICAgIH1cbiAgICAjYmRleHRfbWJfYmcgLnRyZW5kLWljb24wIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDBweCAtODRweDtcbiAgICB9XG4gICAgI2JkZXh0X21iX2JnIC50cmVuZC1pY29uMSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwcHggLTU3cHg7XG4gICAgfVxuICAgICNiZGV4dF9tYl9iZyAudHJlbmQtaWNvbi0xIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuICAgIC5wcmljZS1yYW5nZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDhweDtcbiAgICAgIHJpZ2h0OiAxMjlweDtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgfVxuICAgIC5wcmljZS1yYW5nZSBzcGFuIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgY29sb3I6ICM1MDUwNTA7XG4gICAgfVxuICAgIC5wcmljZS1yYW5nZSAudG9wcHJpIHtcbiAgICAgIGNvbG9yOiAjZTY0MzQwO1xuICAgIH1cbiAgICAucHJpY2UtcmFuZ2UgLmxvd3ByaSB7XG4gICAgICBjb2xvcjogIzBiYWE3NDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxNHB4O1xuICAgIH1cbiAgICAuaG91c2UtcHJpY2UtcXJjb2RlIHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMjNweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2YwZjBmMDtcbiAgICB9XG4gICAgLmhvdXNlLXByaWNlLXFyY29kZSBzcGFuIHtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgICBsaW5lLWhlaWdodDogMTRweCFpbXBvcnRhbnQ7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBjb2xvcjogIzM1MzUzNTtcbiAgICB9XG4gICAgLmhvdXNlLXByaWNlLXFyY29kZSAubWd0b3Age1xuICAgICAgbWFyZ2luLXRvcDogNTFweDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgfVxuICAgIC5ob3VzZS1wcmljZS1xcmNvZGUgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jayFpbXBvcnRhbnQ7XG4gICAgICB3aWR0aDogMTAwcHghaW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiBhdXRvIWltcG9ydGFudDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDExcHg7XG4gICAgfVxuICAgIC5ob3VzZS1wcmljZS1xcmNvZGUgcCB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBsaW5lLWhlaWdodDogMTJweDtcbiAgICAgIG1hcmdpbi10b3A6IDVweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gICAgfVxuICAgIC5ob3VzZS1wcmljZS1xcmNvZGUgcC5ob3VzZS1wLXAye1xuICAgICAgbWFyZ2luLWxlZnQ6IDMycHg7XG4gICAgICBtYXJnaW4tdG9wOiA4cHg7XG4gICAgfVxuICAgICNleGNoYW5nZUxpc3QgLmxpc3QtYm9keT5saSB7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgICAgIGhlaWdodDogMTY2cHg7XG4gICAgfVxuICAgIC5ob3VzZS1iYXNpYy1tYWluIHtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgaGVpZ2h0OiAzNzhweDtcbiAgICB9XG4gICAgLnt7ZXh0QnJhbmR9fV9saWFuamlhIC5jb250ZW50ICB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogNzBweDtcbiAgICB9XG4gICAgLmhvdXNlX2xpYW5qaWEyIC5tLWxpc3QgbGkge1xuICAgICAgaGVpZ2h0OiAyMTRweDtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIH1cbiAgICAuaHQtd3hxcmNvZGUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAzMnB4O1xuICAgICAgcmlnaHQ6IDBweDtcbiAgICAgIHdpZHRoOiAxMjRweDtcbiAgICAgIGhlaWdodDogMTc2cHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGFkZWUxO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICAgIHotaW5kZXg6IDk5OTk5OTk5OTk5OTtcbiAgICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTVweCAwIHJnYmEoMjMsMjUsMjcsMC4xNSk7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbiAgICAuaHQtd3hxcmNvZGUgKiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICB9XG4gICAgLmh0LXd4cXJjb2RlIHNwYW4ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMTRweDtcbiAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG4gICAgLmh0LXd4cXJjb2RlIGltZyB7XG4gICAgICB3aWR0aDogMTAwcHghaW1wb3J0YW50O1xuICAgICAgaGVpZ2h0OiAxMDBweCFpbXBvcnRhbnQ7XG4gICAgICBtYXJnaW4tdG9wOiA0cHg7XG4gICAgICBtYXJnaW4tbGVmdDogMTFweDtcbiAgICB9XG4gICAgLmh0LXd4LXNwMSB7XG4gICAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgICAgY29sb3I6ICM1ODU4NTg7XG4gICAgfVxuICAgIC5odC13eC1zcDIge1xuICAgICAgbWFyZ2luLXRvcDogOHB4O1xuICAgICAgY29sb3I6ICNlYjY4NjI7XG4gICAgfVxuICAgIC5odC13eC1zcDMge1xuICAgICAgY29sb3I6ICNiMmIyYjI7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSFpbXBvcnRhbnQ7XG4gICAgICBmb250LXNpemU6IDEycHghaW1wb3J0YW50O1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cblxuICAgIC5jb21tdW5pdHktcHJpY2Uge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgaGVpZ2h0OiAyNDdweDtcbiAgICAgIHdpZHRoOiA0NTJweDtcbiAgICAgIHRvcDogMHB4O1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgfVxuICAgIC5jaGFuZ2VfdHJlbmRfYnRuIHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGJvdHRvbTogMTZweDtcbiAgICAgIHdpZHRoOiA0NjJweDtcbiAgICAgIHotaW5kZXg6IDk5O1xuICAgIH1cbiAgICAuY2hhbmdlX3RyZW5kX2J0biBkaXYge1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIGhlaWdodDogMjJweDtcbiAgICB9XG4gICAgLmNoYW5nZV90cmVuZF9idG4gc3BhbiB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIGhlaWdodDogMjJweDtcbiAgICAgIHdpZHRoOiA4MHB4O1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzNlYmRlZjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gICAgICBjb2xvcjogIzNlYmRlZjtcbiAgICAgIG1hcmdpbi1sZWZ0OiA3MHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIC5jaGFuZ2VfdHJlbmRfYnRuIHNwYW4udHJlbmQtY2hvb3NlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzZWJkZWY7XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gICAgLmNoYW5nZV90cmVuZF9idG4gLmhvdXNlLXRyZW5kLWIge1xuICAgICAgbWFyZ2luLWxlZnQ6IDBweDtcbiAgICB9XG4gICAgLnBMaXN0IGxpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGhlaWdodDogMTk1cHg7XG4gICAgICBvdmVyZmxvdzogdmlzaWJsZSFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5nd2RfbWFpdGlhbiAubGlzdF93cmFwIHVsIGxpIHtcbiAgICAgIG92ZXJmbG93OiB2aXNpYmxlIWltcG9ydGFudDtcbiAgICB9XG4gICAgLmd3ZF9tYWl0aWFuIC5ob3VzZS10cmVuZC1ib3gge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgfVxuICAgIC5ob3VzZXQtZGV0YWlsIC5jb21tdW5pdHktcHJpY2UgdGFibGUge1xuICAgICAgd2lkdGg6IGF1dG8haW1wb3J0YW50O1xuICAgIH1cbjwvc3R5bGU+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDY1KSxhPW4oMjQpLHI9bigxNCkscz1uKDEyKSxsPXt9LGM9W10scD12b2lkIDAsZD17dG1hbGwxOntsaXN0OiIjSl9JdGVtTGlzdD5kaXYucHJvZHVjdCIsZG9tOiIucHJvZHVjdEltZy13cmFwIix1cmw6ImEucHJvZHVjdEltZyJ9LHRhb2JhbzE6e2xpc3Q6IiNtYWluc3JwLWl0ZW1saXN0IC5pdGVtcyAuaXRlbSIsZG9tOiIucGljLWJveCIsbGlzdGVuOiIjbWFpbnNycC1pdGVtbGlzdCIsbHNjaGlsZDoiLm0taXRlbWxpc3QiLHVybDoiYS5waWMtbGluayJ9LHRhb2JhbzExOntsaXN0OiIjbGlzdHNycC1pdGVtbGlzdCBkaXYuaXRlbXMgLkpfSXRlbUxpc3RTS1VJdGVtIixkb206Ii5waWMtYm94IixsaXN0ZW46IiNsaXN0c3JwLWl0ZW1saXN0Iixsc2NoaWxkOiIubS1pdGVtbGlzdCIsdXJsOiJhLnBpYy1saW5rIn0sdGFvYmFvMjp7bGlzdDoidWwgbGkiLGRvbToiLngiLGxpc3RlbjoiLm0taXRlbWxpc3QiLHVybDoiYSJ9LHRhb2JhbzM6e2xpc3Q6Ii5tb2R1bGUtd3JhcC5KX3RiX2xhenlsb2FkIC5wcm8tbGlzdCBsaSIsZG9tOiIueCIsbGlzdGVuOiIubS1pdGVtbGlzdCIsdXJsOiJhLml0ZW0ifSx0YW9iYW80OntsaXN0OiIjbGlzdC1pdGVtTGlzdCB1bC5pdGVtcyBsaS5pdGVtIixkb206Ii5KX0l0ZW1NYWluSW1nV3JhcGVyIixsaXN0ZW46Ii5tLWl0ZW1saXN0Iix1cmw6ImEuSl9BdHBMb2cifSx0YW9iYW81OntsaXN0OiIubW9kdWxlLXdyYXAuSl90Yl9sYXp5bG9hZCB1bC5pdGVtcyBsaSIsZG9tOiIueCIsbGlzdGVuOiIubS1pdGVtbGlzdCIsdXJsOiIuc2hvcFRpdGxlK2EuaW1nX3VybCJ9LHRhb2JhbzY6e2xpc3Q6Ii5tLWl0ZW1MaXN0IHVsLml0ZW1zIGxpLml0ZW0iLGRvbToic3Bhbi5pbWctaW5uZXIiLGxpc3RlbjoiI21pbmlsaXN0LWl0ZW1MaXN0LTEiLGxzY2hpbGQ6Ii5tLWl0ZW1MaXN0Iix1cmw6Ii5KX0l0ZW1MaW5rIn0sdGFvYmFvNzp7bGlzdDoidWwgbGkiLGRvbToiLngiLGxpc3RlbjoiIixsc2NoaWxkOiIiLHVybDoiYSJ9fSxoPWZ1bmN0aW9uKCl7dmFyIHQ9eyJsaXN0XFwudG1hbGxcXC5jb20iOiJ0bWFsbDEiLCJzXFwudGFvYmFvXFwuY29tIjoidGFvYmFvMSIsInd3d1xcLnRhb2Jhb1xcLmNvbS9tYXJrZXQvIjoidGFvYmFvMiIsInd3d1xcLnRhb2Jhb1xcLmNvbS9tYXJrZXRzL3Byb21vdGlvbi8iOiJ0YW9iYW8zIiwid3d3XFwudGFvYmFvXFwuY29tL21hcmtldHMvYW11c2VtZW50LyI6InRhb2JhbzYiLCJ3d3dcXC50YW9iYW9cXC5jb20vbWFya2V0cy8iOiJ0YW9iYW83IiwibGlzdFxcLnRhb2Jhb1xcLmNvbSI6InRhb2JhbzQifSxlPWxvY2F0aW9uLmhyZWY7Zm9yKHZhciBuIGluIHQpaWYoZS5tYXRjaChuZXcgUmVnRXhwKG4pKSlyZXR1cm4gdFtuXX0sdT1mdW5jdGlvbih0LGUsbil7dC5jb3Vwb25Vcmw9ZSx0PUpTT04uc3RyaW5naWZ5KHQpO3ZhciBpPW5ldyBYTUxIdHRwUmVxdWVzdDtpLm9wZW4oIlBPU1QiLCJodHRwczovL2Jyb3dzZXIuZ3dkYW5nLmNvbS9leHRlbnNpb24vQ291cG9uUXJDb2RlP3c9MTUwIiksaS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixmdW5jdGlvbigpe3RyeXt2YXIgdD1KU09OLnBhcnNlKGkucmVzcG9uc2UpO24odCl9Y2F0Y2goZSl7fX0pLGkuc2VuZCh0KSxyLmxvZygi5a6e5pe25oqT5Y+W5Y+R6YCB6K+35rGCIil9LG09dm9pZCAwLGY9dm9pZCAwLGc9dm9pZCAwLHc9ZnVuY3Rpb24odCxlKXt2YXIgbj17fTtpZihmKXJldHVybiBtPWUsdm9pZChnPXQuY2xpY2tfdXJsKTt2YXIgaT10Lml0ZW1JZCxvPXtpdGVtTnVtSWQ6aX0scj0iaHR0cHM6Ly9hY3MubS50YW9iYW8uY29tL2g1L210b3AudGFvYmFvLmRldGFpbC5nZXRkZXRhaWwvNi4wLz9kYXRhPSIrZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KG8pKTthLmdldFB1cmUocikuZG9uZShmdW5jdGlvbihvKXt2YXIgYT1vLmRhdGEuaXRlbSxyPW8uZGF0YS5zZWxsZXIscz1KU09OLnBhcnNlKG8uZGF0YS5hcGlTdGFja1swXS52YWx1ZSk7bi50aXRsZT1hLnRpdGxlLG4ucGljVXJsPWEuaW1hZ2VzWzBdLG4uaWQ9aSxuLnNob3BOYW1lPXIuc2hvcE5hbWUsbi5zaG9wTG9nbz1yLnNob3BJY29uLG4uc2hvcFVybD1yLnNob3BVcmwsbi5iaXozMERheT1zLml0ZW0uc2VsbENvdW50LG4uYW1vdW50PXQuY291cG9uLmNvdXBvbl9tb25leSxuLmVmZmVjdGl2ZVN0YXJ0VGltZT10LmNvdXBvbi5zdGFydF90aW1lLG4uZWZmZWN0aXZlRW5kVGltZT10LmNvdXBvbi5lbmRfdGltZSxuLnBpZD10LnBpZCxuLnRrbD10LnRrbCxuLnRtYWxsPWxvY2F0aW9uLmhvc3QuaW5kZXhPZigidG1hbGwiKT4tMSxuLmRpc2NvdW50UHJpY2U9KE51bWJlcihzLnNrdUNvcmUuc2t1MmluZm9bMF0ucHJpY2UucHJpY2VNb25leSkvMTAwKS50b0ZpeGVkKDIpLGUobix0LmNsaWNrX3VybCksbSYmbShuLGcpfSl9LHg9ZnVuY3Rpb24odCxuKXtpZighKGMuaW5kZXhPZih0KT4tMSkmJihjLnB1c2godCksdCkpe3ZhciBpPWxbdF07aS5waWQ9IjEwMDAyIixpLml0ZW1JZD10LHcoaSxmdW5jdGlvbih0LGkpe3UodCxpLGZ1bmN0aW9uKHQpe3ZhciBpPXQmJnRbMF0uaW1nU3JjO2lmKGkpe3ZhciBvPSc8ZGl2IGNsYXNzPSJtaW5pY291cG9uX2RldGFpbCI+XG4gICAgICAgIDxpbWcgc3JjPSInK2krJyI+XG4gICAgICAgIDxzcGFuPuW+ruS/oeaJq+eggemihuWIuDwvc3Bhbj5cbiAgICAgIDwvZGl2Pic7ZShuKS5hcHBlbmQobyl9fSl9KX19LGI9ZnVuY3Rpb24odCxuLGkpe28uaW5pdCh0LCIxMDAwMiIsZnVuY3Rpb24obyl7aWYoby5kYXRhKXtvPW8uZGF0YSxvLnNpdGU9aSxsW3RdPW87dmFyIGE9JzxhIGhyZWY9Iicrby5jbGlja191cmwyKyciIGRhdGEtaWQ9IicrdCsnIiB0aXRsZT0i5b2T5YmN5ZWG5ZOB6aKG5Yi456uL5YePJytvLmNvdXBvbi5jb3Vwb25fbW9uZXkrJ+WFgyIgY2xhc3M9InNlYXJjaF9jb3Vwb25fdGlwIiB0YXJnZXQ9Il9ibGFuayI+77+lJytvLmNvdXBvbi5jb3Vwb25fbW9uZXkrIiDkvJjmg6DliLg8YT4iO3A+NzAmJihhPSc8YSAgZGF0YS1pZD0iJyt0KyciIGNsYXNzPSJzZWFyY2hfY291cG9uX3RpcCIgc3R5bGU9ImN1cnNvcjpkZWZhdWx0OyIgdGFyZ2V0PSJfYmxhbmsiPu+/pScrby5jb3Vwb24uY291cG9uX21vbmV5KyIg5LyY5oOg5Yi4PGE+IiksZShuKS5hcHBlbmQoZShhKSl9fSl9LF89ZnVuY3Rpb24oKXt2YXIgdD12b2lkIDAsbj0wLGk9aCgpLG89ZFtpXTtpZihvKXt2YXIgYT1lKG8ubGlzdGVuKVswXTthJiZhLmFkZEV2ZW50TGlzdGVuZXIoIkRPTVN1YnRyZWVNb2RpZmllZCIsZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodCksbj4xNXx8ZShhKS5maW5kKG8ubHNjaGlsZCkuYXR0cigiY19jb3Vwb24iKXx8KHQ9c2V0VGltZW91dChmdW5jdGlvbigpe24rKyx2KCl9LDFlMykpfSwhMSl9fSx2PWZ1bmN0aW9uKCl7dmFyIHQ9aCgpO2lmKHQpe3ZhciBuPWRbdF0saT1lKG4ubGlzdCk7InRhb2JhbzEiPT09dCYmMD09PWkubGVuZ3RoJiYobj1kLnRhb2JhbzExLGk9ZShuLmxpc3QpKTtmb3IodmFyIG89MDtvPGkubGVuZ3RoO28rKyl7dmFyIGE9aS5lcShvKS5maW5kKG4udXJsKSxsPWEuYXR0cigiaHJlZiIpLGM9InRhb2JhbyI7aWYobCl7bC5pbmRleE9mKCJkZXRhaWwudG1hbGwuY29tIik+LTEmJihjPSJ0bWFsbCIpO3ZhciB1PWwubWF0Y2goL1s/Jl1pZD0oXGQrKS8pJiZsLm1hdGNoKC9bPyZdaWQ9KFxkKykvKVsxXTtpZih1KXt2YXIgbT1pLmVxKG8pLmZpbmQobi5kb20pOzA9PT1tLmxlbmd0aCYmKG09aS5lcShvKSksYih1LG0sYyl9fX10LmluZGV4T2YoInRhb2JhbyIpPi0xJiZlKG4ubGlzdGVuKS5maW5kKG4ubHNjaGlsZCkuYXR0cigiY19jb3Vwb24iLCIxIiksZSgiYm9keSIpLm9uKCJjbGljayIsZnVuY3Rpb24odCl7ZSh0LnRhcmdldCkuaGFzQ2xhc3MoInNlYXJjaF9jb3Vwb25fdGlwIikmJihyLmxvZygiY2xpY2s6c2VhcmNoY291cG9uIikscygiY2xpY2s6c2VhcmNoY291cG9uIikpfSksZSgiYm9keSIpLm9uKCJtb3VzZW92ZXIiLGZ1bmN0aW9uKHQpe2lmKGUodC50YXJnZXQpLmhhc0NsYXNzKCJzZWFyY2hfY291cG9uX3RpcCIpKXt2YXIgbj1lKHQudGFyZ2V0KS5hdHRyKCJkYXRhLWlkIik7MD09PWUodC50YXJnZXQpLmZpbmQoIi5xcl9jb3Vwb25kZXRhaWwiKS5sZW5ndGgmJnA+NzAmJihyLmxvZygidHJhY2s6c2VhcmNoY291cG9uIikscygidHJhY2s6c2VhcmNoY291cG9uIikseChuLHQudGFyZ2V0KSl9fSl9fTt0LmV4cG9ydHMuaW5pdD1mdW5jdGlvbigpeyIzNjAiIT09aS5mcm9tX2RldmljZSYmKHA9cGFyc2VJbnQoMTAwKk1hdGgucmFuZG9tKCkpLHYoKSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XygpfSwxZTQpKX19KS5jYWxsKGUsbig0KSxuKDEpKX0sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLG4peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBpKHQsZSl7aWYoMCE9ZS5pbmRleE9mKCJodHRwIikpe2lmKDA9PWUuaW5kZXhPZigiamF2YXNjcmlwdCIpKXQ9IiIsZT0iIjtlbHNlIGlmKDA9PWUuaW5kZXhPZigiLy8iKSl0PSJodHRwOiI7ZWxzZSBpZigwPT1lLmluZGV4T2YoIi8iKSl0PXQucmVwbGFjZSgvKGh0dHA6XC9cL1teXC9dKykuKi9naSwiJDEiKTtlbHNle3ZhciBuPXQuc3Vic3RyKDAsdC5pbmRleE9mKCIvLyIpKzIpO3Q9dC5zdWJzdHIodC5pbmRleE9mKCIvLyIpKzIpO3ZhciBpPXQuc3BsaXQoIi8iKSxvPWkubGVuZ3RoLTE7aWYoMD09ZS5pbmRleE9mKCIuLyIpKWU9ZS5zdWJzdHIoMik7ZWxzZSBpZigwPT1lLmluZGV4T2YoIi4uLyIpKWZvcig7MD09ZS5pbmRleE9mKCIuLi8iKTspZT1lLnN1YnN0cigzKSxvLS07dD1uO2Zvcih2YXIgYT0wO2E8bzthKyspdCs9aVthXSsiLyJ9ZT10K2V9cmV0dXJuIGV9ZnVuY3Rpb24gbygpe3ZhciB0PWUuc2l0ZTtyZXR1cm4ieWhkIj09ZS5zaXRlJiYodD0ieWloYW9kaWFuIiksInZpcCI9PWUuc2l0ZSYmKHQ9InZpcHNob3AiKSx0fWZ1bmN0aW9uIGEoKXsoImJhaWR1Ij09ZS5mcm9tX2RldmljZXx8Im1pX25ldyI9PWUuZnJvbV9kZXZpY2V8fCJuamNrIj09ZS5mcm9tX2RldmljZXx8ImJqbHQiPT1lLmZyb21fZGV2aWNlfHxlLm5ld19leHRlbnNpb24pJiYoY1siMzYwYnV5Il09Myl9dmFyIHI9ZS51X3NlcnZlcisiL3VuaW9uL2dvIjtlLmlzTW9iaWxlfHwocj1lLnNwZWNpYWxVbmlvbik7dmFyIHMsbD0hMCxjPXtkYW5nZGFuZzoyLHByZXNjcmlwdGl2ZXM6NSxwZXJyeWVsbGlzOjYsbmV3ZWdnOjcsb3JpZ2luYWxwZW5ndWluOjksbTE4OjEwLG5hdHVyYWxpemVyOjExLHNlcGhvcmFjcHM6MTIsbGVmZW5nOjEzLHM6MTQsIjUxYnV5IjoxNSxtb29uYmFzYToxNyxrZWVkZToxOCxrZWRlOjE4LHZhbmNsOjE5LGx1aXNhdmlhcm9tYToyMCxsZXRhbzoyMiwiZ2lvcmdpb2FybWFuaWJlYXV0eS11c2EiOjIzLHRhb3hpZToyNCxzdW5pbmc6MjUsY29vODoyNixjYXVkYWxpZToyNixnb21lOjI4LCJnb21lLXJ1c2hidXkiOjI4LGdvbWVoaWdvOjI4LG11cmFkOjI5LGJldHNleWpvaG5zb246MzAseWloYW9kaWFuOjMxLCJ5aWhhb2RpYW4tdHVhbiI6MzEsd29tYWk6MzIsbGV5b3U6MzMsc2hvcGluOjM0LHhpdTozNSxtYmFvYmFvOjM2LHRoZWJvZHlzaG9wOjM3LGhhbXBkZW5jbG90aGluZzozOCxjaHVuc2h1aXRhbmc6NDAseDo0MSxubzU6NDMsYW50aHJvcG9sb2dpZTo0NCxzYXNhOjQ1LGFybWFuaTo0NywiZWNjby11cyI6NDgsIjM2MGt4ciI6NTAsbTZnbzo1MSwiYmFuYW5hcmVwdWJsaWMtZ2FwIjo1Myxtb3JlZm9vZDo1NCxsb2Z0OjU1LCI5OXJlYWQiOjU5LCJjaGluYS1wdWIiOjYwLGJvb2tzY2hpbmE6NjEsd2lueHVhbjo2MixlZmVpaHU6NjMsInNodXVlbXVyYS11c2EiOjY1LHlpbnRhaTo2NixzdHJhd2JlcnJ5bmV0OjY5LGhhcHBpZ286NzIsZ2FwOjczLHRoZXJlYWxyZWFsOjc0LGMyMXN0b3Jlczo3NixjdHNoaXJ0czo3OCxzdXBlcmpld2VsZXI6NzksamltbXljaG9vOjgyLHRtYWxsOjgzLHRpYW50aWFuOjg0LGZ3cmQ6ODUsanVtZWk6ODYsYXZlZGE6ODcsIm5hLWtkIjo4OCxuYW5jeW1leWVyOjkyLHlvdWdvdTo5MywxMTE6OTQsamlhbmtlOjk3LG11eWluZ3poaWppYTo5OCxsaW5nc2hpOjk5LGJhbmdnbzoxMDAseWVzbXl3aW5lOjEwMSxqaXVtZWk6MTAyLHdpbmVuaWNlOjEwMixqaXV4aWFuOjEwMyxiYXVibGViYXI6MTA1LGVsZXZlbnBhcmlzOjEwNixnb3VqaXV3YW5nOjEwOCxva2hxYjoxMDksYm9va3V1OjExMCxsaW5kdHVzYToxMTEsbmFyc2Nvc21ldGljczoxMTIsZDE6MTE1LGphY2tyYWJiaXQ6MTE2LG1hY21hbGw6MTE3LGNoYW1wc3Nwb3J0czoxMjAsZGppOjEyMSxib2RlbnVzYToxMjIscGFpeGllOjEyMixzODoxMjMsY3Jhenk4OjEyNCxob21ldnY6MTI0LGp4ZHlmOjEyNSxqaW54aWFuZzoxMjUsc2ZiZXN0OjEyNixiZW5sYWk6MTI3LHRvb3RvbzoxMjgsdmlwc2hvcDoxMjksZmNsdWI6MTMwLG1vbHRvbmJyb3duOjEzMCxuZWVkc3VwcGx5OjEzMSxpaHVzaDoxMzEsc29sZXNvY2lldHk6MTMyLHZtYWxsOjEzNCxsZW5vdm86MTM1LGFwcGxlOjEzNix6bTc6MTM4LG1pcWk6MTM5LGNoaWxkcmVuc3BsYWNlOjEzOSx6aGl3bzoxNDAsajE6MTQxLHdhbmdqaXU6MTQyLGxpZWJvOjE0NCxlc3ByaXQ6MTQ1LGxhbWl1OjE0NixhaW1lcjoxNDcsa2FkYW5nOjE0OCxzaWdtYWJlYXV0eToxNDgsbGl6aToxNDksbWV0cm9tYWxsOjE1MCxhZGlkYXM6MTUwLHBiYToxNTEsc2hhbmdwaW46MTUyLHdiaWFvOjE1MyxoYW5kdXlpc2hlOjE1NCxlaGFpZXI6MTU1LHNlY29vOjE1NixjYW1lbDoxNTcsbWFzYW1hc286MTU4LHZlcm9uaWNhYmVhcmQ6MTU4LGNyb3NzOjE1OSxub3A6MTU5LG5hcnVrdToxNjAsbW9uc3RlcnByb2R1Y3RzOjE2MSxnYW9qaWU6MTYxLHpoZW5waW46MTYyLHNwb3J0aWNhOjE2Myx4aWZ1cXVhbjoxNjQsdGhlb3V0bmV0OjE2NSxtaWxpZXI6MTY1LGxlbWFsbDoxNjgsY2xhcmlzb25pYzoxNzAsZGlhbnBpbmc6MTcxLGN0cmlwOjE3Myx5aWd1bzoxNzQseXVtbXk3NzoxNzUsZGVybWFkb2N0b3I6MTc1LGZydWl0ZGF5OjE3OCxqdW1laWdsb2JhbDoxNzksZmVpbml1OjE4MCxzb2xzdGljZXN1bmdsYXNzZXM6MTgxLGZlaWZlaToxODEsenVpcGluOjE4MixwaXhpZW1hcmtldDoxODMseW9ob2J1eToxODQsbHZtYW1hOjE4NSxpa2p0YW86MTg4LHNwZWVkbzoxODkseXVuaWZhbmc6MTkwLGdsb2JhbHdpbm5lcjoxOTEsImJpb3RoZXJtLXVzYSI6MTkzLG1mOTEwOjE5NCxtYXJrbWFsbDoxOTQsbWl5YWJhb2JlaToxOTUsdWxlOjE5NixtaW5nc2hlbmdlYzoxOTcsam9tYWxvbmU6MTk4LHdhbmdmdWppbmc6MTk4LG51b21pOjE5OSxxdW5hcjoyMDAsbWVpbGlzaHVvOjIwMixtb2d1amllOjIwMywiNTV0dWFuIjoyMDQsamluamlhbmdpbm5zOjIwNSxlbG9uZzoyMDYsNTAwOjIwOSxzdXB1eToyMTAsbHY6MjExLGNhaXBpYW86MjEyLGxpbmluZzoyMTMsa29vbGVhcm46MjE0LHNwcmluZ3RvdXI6MjE1LDIyODoyMTYscnJzOjIxNyxjb29jYWE6MjE4LGxpZmV2YzoyMjAsbml1YmlhOjIyMSxremozNjU6MjIyLGthb2xhOjIyMyx5bWF0b3U6MjI0LG1ldGFvOjIyNSx5dmVzcm9jaGVydXNhOjIyNSxranQ6MjI2LGxvZ2l0ZWNoOjIyNyxlYmF5OjIzMCxhbGlleHByZXNzOjIzMSx4aWppOjIzMixuaWtlOjIzMywiMzYwa2FkIjoyMzQsbGJ4Y246MjM1LG1laWNpOjIzNixiZWliZWk6MjM3LCI2cG0iOjIzOCxtb3VudGFpbmhhcmR3ZWFyOjI0MCxzaG9wYm9wOjI0MSxzaWVycmF0cmFkaW5ncG9zdDoyNDMsYXNoZm9yZDoyNDMsIm5ld2VnZy11cyI6MjQ0LCJsb29rZmFudGFzdGljLWNvbSI6MjQ4LGloZXJiOjI1MCx2c2lnbzoyNTIsIjEwMHl1ZSI6MjU2LGhhaXRhb2NoZW5nOjI1OCxqb2VzbmV3YmFsYW5jZW91dGxldDoyNTksZGFsaW5nOjI2NyxzZmh0OjI2OCxmZW5ncXU6MjY4LG1laToyNjksc2hvd2pveToyNzAsb2NqOjI3MSxzdW5kYW46MjcyLGVhc2VleWVzOjI3Myx5dW5ob3U6Mjc0LGhhaXR1bmN1bjoyNzUsd2FsbWFydDoyNzYsdm1laToyNzcsamdiOjI3OCxib3Njb3ZzOjI3OCxwdXRtZWludGhlc3Rvcnk6Mjc5LCI1MWRpbiI6Mjc5LGFpZGFpOjI4MCxib3FpaToyODEsdG91cnNmb3JmdW46MjgyLGx1bHV0cmlwOjI4MyxzcGlkZXI6Mjg0LG1pY3Jvc29mdHN0b3JlOjI4NSxqaWFlOjI4Nix6YXpoaXB1OjI4Nyx4Z2RxOjI4OCx4dGVwOjI4OSxtaWRlYToyOTAsc3RhcGxlczoyOTEsZWZvdGlsZToyOTIsYmVzdGNha2U6MjkzLGxvdm86Mjk0LGh1YToyOTUsemhlODAwOjI5NixiZnR2OjI5Nyx0dWppYToyOTgsdHVodToyOTksaHRjOjMwMCxyb3Nlb25seTozMDEscm9uZzM2MDozMDIsbml3b2RhaTozMDMsY29zbWU6MzA0LGRpYXBlcnM6MzA1LHdpbmRlbG46MzA2LGJhYnluZW86MzA3LGVzY2VudHVhbDozMDgsdGhld2F0Y2hlcnk6MzA5LHNha3NmaWZ0aGF2ZW51ZTozMTAsZXN0ZWVsYXVkZXI6MzExLGJpY2NhbWVyYTozMTIsInBldGl0LWJhdGVhdSI6MzEzLHRhcXU6MzEzLHF5ZXI6MzE0LCJheG1hbGwgIjozMTUsbXVqaTozMTYsZ21hcmtldDozMTcsIjExc3QiOjMxOCxzbWFydGJhcmdhaW5zOjMxOSx5YWhvb3Nob3A6MzIwLGJsb29taW5nZGFsZXM6MzIxLG1pa2lob3VzZTozMjIsdG95c3J1czozMjMsY29tZm9ydGZpcnN0OjMyNCxneW1ib3JlZTozMjUsYWxiZWViYWJ5OjMyNixiYWJ5bWFya3Q6MzI3LHVnZ2F1c3RyYWxpYTozMjgsbmVpbWFubWFyY3VzOjMyOSwic2hvZWJ1eS1lbGV2dGQiOjMzMCxzenVsOjMzMSx0aW1leDozMzIsa2F5OjMzMyxld2F0Y2hlczozMzQsc3dhcm92c2tpOjMzNSx3b3JsZG9md2F0Y2hlczozMzYsZGFuaWVsd2VsbGluZ3RvbjozMzcsYmVhdXR5YmF5OjMzOCxiZWF1dHk6MzM5LHN0cmlkZXJpdGU6MzM5LGJjYmc6MzQwLGJlYXV0eWJhcjozNDAsc2tpbnN0b3JlOjM0MSxsYW5laWdlOjM0Mixib3NlOjM0MyxiZXN0YnV5OjM0NCxiaHBob3RvdmlkZW86MzQ1LHNvbnk6MzQ2LGJsOjM0NyxiZXN0aW5mb29kczozNDgsbWFyaXNzYWNvbGxlY3Rpb25zOjM0OCx5b3UxNjM6MzQ5LGppbmppYW5nOjM1MCxndW9qaW1hbWk6MzUxLGJhaXlhbmd3YW5nOjM1Mixyb3l5b3VuZ2NoZW1pc3Q6MzU0LG1lZGloZWFsc2hvcDozNTUsIjEwMDFwaGFybWFjaWVzIjozNTYsImxvb2tmYW50YXN0aWMtY24iOjM1NywiMS0xNjMiOjM1OCxrYWl4aW5iYW86MzU5LGp1YW5waTozNjAsYm9va2luZzozNjEscGhhcm1hY3lvbmxpbmU6MzYyLGJvZHlndWFyZGFwb3RoZWtlOjM2MyxwdXJjb3R0b246MzY0LHdzdHg6MzY3LGhpc2Vuc2U6MzY4LHpob25naml1OjM2OSxrYWx1bGk6MzcwLHlhbmdrZWR1bzozNzAsdG84dG86MzcxLG9wcG9zaG9wOjM3MixiYW9iZWlnZXppOjM3Myx5YW8xMjM6Mzc0LGJhaWNoZW5nOjM3NSxnaW9uZWU6Mzc2LHN1YW5qdXppOjM3Nyxhb215Z29kOjM3OCxsdW9sYWk6Mzc5LHZpdm86MzgwLGRpeGludG9uZzozODEsY29vbHBhZDozODIsc2tnOjM4MyxpcWl5aTozODQsYW9sYWlnbzozODUsbWlzc2ZyZXNoOjM4NixwdXNoZW5rdWFqaW5nOjM4NyxmZWVsdW5pcXVlOjM4OCxjaGVtaXN0ZGlyZWN0OjM4OSxuZXRwaGFybWFjeTozOTAsY2hpbmVzZWxhdW5kcnk6MzkwLHBoYXJtYWN5NGxlc3M6MzkxLHBoYXJtYWN5ZGlyZWN0OjM5MixhbWNhbDozOTMsCmxhcmVkb3V0ZTozOTQsdW5zZXJla2xlaW5lYXBvdGhla2U6Mzk1LGVyd2lubXVlbGxlcjozOTYsa2l3aWRpc2NvdmVyeTozOTcseWxhbmcyMzozOTcsdGhld2Fsa2luZ2NvbXBhbnk6Mzk4LHNwcmluZ2xhbmU6Mzk4LCJqYWtvLW8iOjM5OSxlYXN5dG95czo0MDAsdGxjcGhhcm1hY3k6NDAxLGJpZW5tYW5nZXI6NDAyLGRld2FyZW46NDAzLCJkaXNjb3VudC1hcG90aGVrZSI6NDA0LCJob2xsYW5kLWF0LWhvbWUiOjQwNSx5b3V5dTo0MDYsa2l3aXN0YXJjYXJlOjQwNyxsZW5vdm9tb2JpbGU6NDA4LG1vdG9yb2xhOjQwOCxraWVobHM6NDA5LHphcHBvczo0MTAsY29hY2g6NDExLHlvb3g6NDEyLCIxMXN0cmVldCI6NDEzLCI1MXRhb3VrIjo0MTQsaHFoYWlyOjQxNSxrYXRlc3BhZGU6NDE2LHZpdGFmeTo0MTcsbG90dGU6NDE4LGNhcnJlZm91cjo0MTksdGVhNzo0MjAscHV6ZXlmOjQyMSxrb2hsczo0MjIsYm9keWJ1aWxkaW5nOjQyMyxub3Jkc3Ryb206NDI0LGNvc3Rjbzo0MjUsdGFyZ2V0OjQyNixrbWFydDo0Mjcsb3ZlcnN0b2NrOjQyOCxzZWFyczo0Mjksc2hvcHJvYmFtOjQzMCxnb3VtaW46NDMxLGZseWNvOjQzMixvcHBsZXN0b3JlOjQzMyxzeXNob3A6NDM0LHlmZHlmOjQzNSxob3RlbHM6NDM2LGFpaHVpc2hvdTo0MzcsdGhlYmVhc3RzaG9wOjQzOCxqb21vb3Nob3A6NDM5LHNlcHR3b2x2ZXM6NDQwLGxpYW5qaWE6NDQxLCI1aTVqIjo0NDIsaG9tZTY6NDQzLCI4MDBwaGFybSI6NDQ0LHVqaXBpbjo0NDUsbW1iOjQ0NixpaGF2ZXU6NDQ3LGlrYW5nOjQ0OCx3eW44ODo0NDksbWNha2U6NDUwLHhtZWlzZTo0NTEsbGVjYWtlOjQ1MixqZDEwMDo0NTMsamluZ2h1YTo0NTQsdGFvaHd1OjQ1NSx6YmlyZDo0NTYsa20xODE4OjQ1Nyx6b2NhaTo0NTgsdGFvc2h1OjQ1OSxhaXpoaWd1OjQ2MCx0aWV5b3U6NDYxLGZpZWxkc2NoaW5hOjQ2Mix3ZG1jYWtlOjQ2MyxscXhzaG9wOjQ2NCx1c2FzaG9wY246NDY3LHdpbmU5OjQ2OCxxaXBhaW1hbGw6NDY5LHlvZG9kbzo0NzAsMTY4ODo0NzEseW9nZXI6NDcyLGRhcHU6NDczLHdpbm9uYTo0NzQsd2w6NDc1LHNoYW5tYWk6NDc2LHpnc2hvZXM6NDc3LG1haWNoYXdhbmc6NDc4LHVlbWFsbDo0ODkscGVyZnVtYW5pYTo0NzksIjUxeW91Ijo0ODAsYmVpZmFib29rOjQ4MSxqcGVlbjo0ODIsaHVhdHVveWY6NDgzLGZlbmdidXk6NDg0LHVpeWk6NDg1LGhlY2hhOjQ4Nix0MTA6NDg3LHF3OjQ4OCxtaXV0b3VyOjQ4OSxlaGFveWFvOjQ5MCxpZHg6NDkxLHV5YTEwMDo0OTIsc3NuZXd5b3JrOjQ5MyxjbGluaXF1ZTo0OTQsaHhlcGF3bjo0OTUsYnJvb2tzYnJvdGhlcnM6NDk2LG9tdGFvOjQ5NyxlcDM2NTo0OTgsY29sdW1iaWFzcG9ydHM6NDk5LGJzdGFwcDo1MDAsbmV3YmFsYW5jZTo1MDEsd2ppa2U6NTAyLGJhbGx5OjUwMywiMWhhaSI6NTA0LGppYWxpY2g6NTA1LHRha2V5YTo1MDYsZm9yZXZlcjIxOjUwNyxtb2Rlcm5hdmVudWU6NTA4LG11bmlhbzo1MDksenVpaHVpeW91OjUxMCxjZW50YW5ldDo1MTEsYm9iYmlicm93bmNvc21ldGljczo1MTIsInN1cGVyLWluIjo1MTMsaGFuZ293YTo1MTQsbGV2aTo1MTUsZmlsYTo1MTYsY29udmVyc2U6NTE3LG5leHRkaXJlY3Q6NTE4LGl0cmlwOjUxOSxsYXNob3U6NTIwLGxpdWZlbmc6NTIxLHRydDo1MjIsd29kaW5naHVhOjUyMyx3dWxpd3VsaTo1MjQsZm9yZXN0Zm9vZDo1MjUsYm9uam91cmhrOjUyNix2aXRhZ291OjUyNyxraW5ob206NTI4LCIzNjBsaiI6NTI5LGNoYW5nYmE6NTMwLG9ha2xleTo1MzEsanB5b286NTMyLGNsYXJrc3VzYTo1MzMsc3Rhcndvb2Rob3RlbHM6NTM0LG1hcnJpb3R0OjUzNSx5ZXNzdHlsZTo1MzYsZXZpc3U6NTM3LGxpZmVzZWFzeTo1MzgsY2N4cGV0OjUzOSx4MDA2MTo1NDAsa2tndWFuOjU0MSwic3R5bGUtb2Nsb2NrIjo1NDIscGVpa3VhOjU0MyxhaXJmcmFuY2U6NTQ0LGFjY29yaG90ZWxzOjU0NSxzcGFjZW5rOjU0NixoYWljaHVmYW5nOjU0Nyx3Y29uY2VwdDo1NDgsZ2FudDo1NDksY2F0Zm9vdHdlYXI6NTUwLHNhdWNvbnk6NTUxLHphb3p1bzo1NTIsbGl0dGxlc3dhbjo1NTMsY2FuOjU1NCxzc3JqOjU1NSx1bmRlcmFybW91cjo1NTUsZ3Vlc3M6NTU2LGV0aWhhZDo1NTcsZmlpbDo1NTgsbWlhbnNodWkzNjU6NTU5LHRlZ291c2hlOjU2MCx3aWdnbGU6NTYxLG1kcmVhbXM6NTYyLGVjb3ZhY3M6NTYzLGNhbHZpbmtsZWluOjU2NCxtZW1lYm94OjU2NSxoaWx0b246NTY2LHJldm9sdmU6NTY3LHNoaXNlaWRvOjU2OCxjbGFyaW5zdXNhOjU2OSxzdGFyYnVja3M6NTcwLCJyYXktYmFuIjo1NzEscHVtYTo1NzIsbmF1dGljYTo1NzMsY3JlbWVkZWxhbWVyOjU3NCwia2lwbGluZy11c2EiOjU3NSxqdXJsaXF1ZTo1NzYsaHVzaHB1cHBpZXM6NTc3LG9yaWdpbnM6NTc4LGZvbGxpZm9sbGllOjc3OSxsb2NjaXRhbmU6NTgwLGhwc3RvcmU6NTgyLCIwMWhvbWUiOjU4NCxoZWFsdGhwb3N0OjU4OCxpbWVuZ3hpYW5nOjU5MCxoeXNqOjU5MSxzYW9odW83OjU5MixyZXBhaTo1OTMsbWF5aTo1OTQseWlucGlhbzo1OTUsImlob21lLWlucyI6NTk2LGluY2FrZTo1OTcsa3V3bzo1OTgseXdhcnQ6NTk5LGNjdDo2MDAsYW5zZ286NjAxLHBpbGliYWJhOjYwMix4aWFvbml1ODg6NjAzLGFoYXZhOjYwNCwiNS1maWZ0aCI6NjA1LHRoZXdhdGNoaHV0OjYwNixiYWJ5aGF2ZW46NjA3LCJjb3NtZS1kZSI6NjA4LGdldHRoZWxhYmVsOjYwOSxtYXRzdXlhOjYxMCx0aW1iZXJsYW5kOjYxMSx0b3BtYW46NjEyLGhvbWVhd2F5OjYxMyxiZWF1dHlleHBlcnQ6NjE0LGhhaW1pOjYxNSxtYW5raW5kOjYxNix0aGVodXQ6NjE3LHRvcHNob3A6NjE4LG1hbWFsYWRlbjo2MTksInRyYXZlbGVyLXN0b3JlIjo2MjAsdHJhdmVsem9vOjYyMSx1bWlzaG9lczo2MjIsZmVycmFyaTo2MjQsd2lsbGVyZXhwcmVzczo2MjUsdW5pbmVlZDo2MjYsYWNuZXN0dWRpb3M6NjI3LGFlcm9wb3N0YWxlOjYyOCxhZ29kYTo2MjksYWxiYW1vZGE6NjMwLGFsbGJlYXV0eTo2MzEsYWxsc2FpbnRzOjYzMixiZXN0Z3ltZXF1aXBtZW50OjYzMixhbGxzb2xlOjYzMyx1cmJhbm91dGZpdHRlcnM6NjM0LHZpdGFiaW90aWNzOjYzNSxiZWxsZW1haXNvbjo2MzYsYmVuZWZpdGNvc21ldGljczo2MzcsYmhjb3NtZXRpY3M6NjM4LGJqbXlsaWtlczo2MzksdGhlc3BvcnRzZWRpdDo2Mzksdml0YW1pbmJheTo2NDAsd2FpdHJvc2U6NjQxLHdvbGZvcmRzaG9wOjY0Mixib29ob286NjQzLGJvb3RzOjY0NCxicml0aXNoY29ybmVyc2hvcDo2NDUseWlyZW5kYWk6NjQ2LHlzNzo2NDcsY29nZ2xlczo2NDgsY29yc2V0ZGVhbDo2NDksY290dG9ub246NjUwLGNyb2NzOjY1MSxjcnVpc2VmYXNoaW9uOjY1MixkZWxsOjY1MyxkZXJtc3RvcmU6NjU0LGRpc25leXN0b3JlOjY1NSxkb3JvdGh5cGVya2luczo2NTYsZG91ZG91a2FuZzo2NTcsZHVqaWFrZTo2NTgsZHVuZWxvbmRvbjo2NTksZWFzdGJheTo2NjAsZWFzdGRhbmU6NjYxLHphZnVsOjY2Mix6YXZ2aTo2NjMsZmVpbmtlaXQ6NjY0LGVpYm1hcmt0OjY2NSxiZWxsdW5hOjY2NixlbWlyYXRlczo2NjcsZW1zOjY2OCxldGVybmE6NjY5LGV1cmFpbDo2NzAsZXhhbnRlZGlldDo2NzEsZXhwZWRpYTo2NzIsZmFsa2U6NjczLGZhbW91c2Zvb3R3ZWFyOjY3NCxmb3Jlbzo2NzYsd2FuZ3hpbmxpY2FpOjY3Nyxmb3JldmVydW5pcXVlOjY3OCxmb3J6aWVyaTo2NzksZnJlZWNvdW50cnk6NjgwLHRyZWRzOjY4MSxmcmVuY2hjb25uZWN0aW9uOjY4MiwiZ2lmdC1sYW5kIjo2ODMsZ3Jvd2dvcmdlb3VzOjY4Nyxob3RlbDo2OTAsaG91c2VvZmZyYXNlcjo2OTEsaHVpenVjaGU6NjkyLGl3YW50b25lb2Z0aG9zZTo2OTUsampnbG9iYWw6Njk2LGp1aWN5Y291dHVyZTo2OTksa2Vua286NzAwLGtpa29jb3NtZXRpY3M6NzAyLGxhbmNlcnNraW5jYXJlOjcwMyxsZWdvOjcwNCxsb3JkYW5kdGF5bG9yOjcwNixtYWl6aGk6NzExLG1hdGNoZXNmYXNoaW9uOjcxMixtYXRzdWtpeW86NzEzLG1pY3Jvc29mdDo3MTUsbWlvc2tpbmNhcmU6NzE2LG1pc3NzZWxmcmlkZ2U6NzE3LG1vdW50YWluZ2Vhcjo3MTgsbXliYWc6NzIwLG15cHJvdGVpbjo3MjEsbXl2aXRhbWluczo3MjMsIm5ldC1hLXBvcnRlciI6NzI0LCJuZXdiYWxhbmNlLXVrIjo3MjUsZGRreTo3MjYsbmV3bG9vazo3MjcsY2hpbmFhY2M6NzI4LGJtYWk6NzI5LCJuaWtlLWhrIjo3MzAsIm5pa2UtYnIiOjczMSxpbmtlOjczMiwidG9yeWJ1cmNoLXVrIjo3MzIsbnlhbmRjb21wYW55OjczMywib2FzaXMtc3RvcmVzIjo3MzQsb3JiaXR6OjczNSxvcmNoaXJhOjczNiwib3JpZ2lucy11ayI6NzM3LHBldHNtYXJ0OjczOCxqdW5yb25nZGFpOjczOSxuYXBhaTo3NDAsZ3JlZTo3NDEscHJvYmlrZWtpdDo3NDIscWF0YXJhaXJ3YXlzOjc0MyxyYWRsZXk6NzQ0LGFsbGlhbno6NzQ1LHJhbHBobGF1cmVuOjc0NixyZWJlY2NhbWlua29mZjo3NDcseW91bWk6NzQ4LCIyMWNha2UiOjc0OSxyZW50YWxjYXJzOjc1MCxyaWNhdWQ6NzUxLHJvY2twb3J0Ojc1MixydWVsYWxhOjc1MywiNTZyZW4iOjc1NCxzYWtzb2ZmNXRoOjc1NSxhbmFudGFyYTo3NTYsc2MyNDo3NTcsY2hlc3VkaTo3NTgsc2hvZXM6NzU5LHNob3BzcHJpbmc6NzYwLHNpbXBseXN1cHBsZW1lbnRzOjc2MSxlaG1hbGw6NzYyLGZhcmZldGNoOjc2Myxzc2Vuc2U6NzY0LHN0ZXZlbWFkZGVuOjc2NSxmcmVlcGVvcGxlOjc2NixnYW9zb3V5aTo3NjcsaW1vbW9rbzo3NjgsdGFvZG86NzY5LG1pY2hhZWxrb3JzOjc3MCx0dGNqOjc3MSwidWYtY2x1YiI6NzcyLHpoYWlkb3U6NzczLCIxNjN5dW4iOjc3NCxhcG86Nzc1LGppbXU6Nzc2LGhhbzI0Ojc3NyxzZWFnb29yOjc3OCx3YW5uYXI6Nzc5LGNhaWhhbmc6NzgwLGNzbWFsbDo3ODEsa3VhamluZzo3ODIsbWlsbGVubml1bWhvdGVsczo3ODMscmVlYm9uejo3ODQsd2VtYWtlcHJpY2U6Nzg1LHd6aG91aHVpOjc4NixodWlqaWF5b3U6Nzg3LG1lbGltZWxvOjc4OCwiOTF4Y20iOjc4OSwiYXNoZm9yZC16aCI6NzkwLGNqb25tYXJ0Ojc5MSxjbnl0bzo3OTIsZ3JhbmRkZnM6NzkzLG9mZmljZWRlcG90Ojc5NCx0aWFuaG9uZzo3OTUseWlsaW5nc2hvcDo3OTYsa2xvb2s6Nzk3LCJjaGFybS1jb2xvciI6Nzk4LGZlbGlzc2ltbzo3OTksc3VyZnN0aXRjaDo4MDAsbG9ybmFqYW5lOjgwMSxyZWlzczo4MDIsZ3psOjgwMywiOWRydWciOjgwNCx5dW5nb3Viczo4MDUseWVuY2l0eTo4MDYsaHVqaWFuZzo4MDcsIm1laXR1YW4taXBoeCI6ODA4LHN2Z291d3U6ODA5LGhxd3g6ODExLHRjbDo4MTIsbWFpbWFpY246ODEzLHR5Zm86ODE0LHR0aGlnbzo4MTYsbWF5bjo4MTcsaGFycm9kczo4MTksdGhldW5kb25lOjgyMCxwZXJmdW1lc2NsdWI6ODIxLGdvZGFkZHk6ODIyLG15dGhlcmVzYTo4MjMsYmFja2NvdW50cnk6ODI0LCJtYXJyaW90dC1jbiI6ODI1LCJzd2Fyb3Zza2ktZW4iOjgyNixtcnBvcnRlcjo4MjcscHJpY2VsaW5lOjgyOCwiY3RyaXAtZW4iOjgyOSxtb25uaWVyZnJlcmVzOjgzMCwibXlwcm90ZWluLWNvbSI6ODMxLCJ0b3J5YnVyY2gtY29tIjo4MjYsaXRhbGlzdDo4MzIsYXNrZGVybTo4MzMsdGF0Y2hhOjgzNCxob2xsYW5kYW5kYmFycmV0dDo4MzUsbmluZXdlc3Q6ODM2LGJlcmdkb3JmZ29vZG1hbjo4MzcsaWhnOjgzOCxmb290bG9ja2VyOjgzOSxyb2RpYWw6ODQwLCJmZWVsdW5pcXVlLWNuIjo4NDEsamFja3dpbGxzOjg0MixraWRzcm9vbTo4NDMsZG9kOjg0NCxrYXJlbm1pbGxlbjo4NDUsaWxsaWNvcGhhcm1hOjg0Nix0ZWRiYWtlcjo4NDcsImItZ2xvd2luZyI6ODQ4LGFkaWV4cHJlc3M6ODQ5LGZyYWdyYW5jZXg6ODUwLHBldGVydGhvbWFzcm90aDo4NTEsImdhcC1jb20iOjg1MixjZWNpbGU6ODUzLGJhcm5leXM6ODU0LGRlYnV5Y246ODU1LHNtYXNoYm94Ojg1NixsYXN0Y2FsbDo4NTcsc3VwZXJkcnVnOjg1OCxsaWJlcnR5bG9uZG9uOjg1OSwiY2hlbWlzdGRpcmVjdC11ayI6ODYwLHNraW5jYXJlcng6ODYxLGhhYmE6ODYyLHBhbmFzb25pYzo4NjMsYmVhdXRpZmllZHlvdTo4NjQsbmJhOjg2NSxlbGZjb3NtZXRpY3M6ODY2LHVuaXFsbzo4NjcsY29sZWhhYW46ODY4LGNhcnRlcnM6ODY5LHNwb3J0c2RpcmVjdDo4NzAsYWRvcmFtYTo4NzEsYWU6ODcyLGFtb3JlcGFjaWZpYzo4NzMsYW5udGF5bG9yOjg3NCxhc2ljczo4NzUsYXNvczo4NzYsYXZlbmV1c2E6ODc3LGJhcm5leXN3YXJlaG91c2U6ODc4LGJlbnNoZXJtYW46ODc5LGJsaXNzd29ybGQ6ODgwLGJsdWVhbmRjcmVhbTo4ODEsYm9uZHM6ODgyLGNvb2tpZXNraWRzOjg4Myxjb3NtZWxhbmQ6ODg0LCJjcmFidHJlZS1ldmVseW4iOjg4NSwiY3JvY3MtY2EiOjg4NixkYXJwaGluOjg4NyxkYXZpZHNjb29raWVzOjg4OCxkaWNraWVzc3RvcmU6ODg5LGRvY2tlcnM6ODkwLGVhc3lzcGlyaXQ6ODkxLGViYWdzOjg5MixlY2hlbWlzdDo4OTMsZWRkaWViYXVlcjo4OTQsZWxlbWlzOjg5NSxlbGl6YWJldGhhcmRlbjo4OTYsZW5hOjg5Nyxldml0YW1pbnM6ODk4LGZhc2hpb25lc3RhOjg5OSxmaWdsZWF2ZXM6OTAwLGZvbGljYTo5MDEsZnJhZ3JhbmNlbmV0OjkwMiwiZ2xhbWdsb3ctdWsiOjkwMyxnb2RpdmFjaG9jb2xhdGVzOjkwNCxnb2xkc21pdGhzOjkwNSwiZ3Jvd2dvcmdlb3VzLXVrIjo5MDYsaGFwcHlzb2Nrczo5MDcsaGFydmV5bmljaG9sczo5MDgsaGF0bGV5OjkwOSxoZXJic3Bybzo5MTAsaG91c2VvZmhvbGxhbmQ6OTExLGpheWpheXM6OTEyLGpldGFpcndheXM6OTEzLGpvdXJuZXlzOjkxNCxrYXJtYWxvb3A6OTE1LGtlZHM6OTE2LGxhYnNlcmllczo5MTcsbGVlamVhbnM6OTE4LGxpdmluZ3NvY2lhbDo5MTksd2t6dWNoZTo5MjAsdXppc2U6OTIxLGxhaXlpZmVuOjkyMixhdmFzdDo5MjMsa2FzcGVyc2t5OjkyNCxzdGVlcGFuZGNoZWFwOjkyNSwiZ2xhbWdsb3ctY29tIjo5MjYsY2xlZGVwZWF1YmVhdXRlOjkyNyxraWNrc3VzYTo5MjgsbGFjb3N0ZTo5MjkscGVycmljb25lbWQ6OTMwLGdlbXZhcmE6OTMxLGJsdWVuaWxlOjkzMixtb2Rhb3BlcmFuZGk6OTMzLHBhcnJvdDo5MzQsZmFzaGlvbmJ1bmtlcjo5MzUsImZpbmFsLXNjb3JlIjo5MzYsZGtueTo5MzcsbWFuZ286OTM4LGNoYXJsb3R0ZXRpbGJ1cnk6OTM5LHZtd2FyZTo5NDAsYXZpcmE6OTQxLGpld2Vscnk6OTQyLGVzZXQ6OTQzLG5vcnRvbjo5NDQsamltbXlqYXp6Ojk0NSxyb3h5Ojk0NixuYXN0eWdhbDo5NDcsbWFyY2phY29iczo5NDgsYmVhc3RzbW9kZTo5NDksdGhlYXBvbGxvYm94Ojk1MCx5YW1pYnV5Ojk1MSxoYng6OTUyLGhvcmNob3c6OTUzLGJsdWVmbHk6OTU0LHN3YW5zb252aXRhbWluczo5NTUsamNyZXc6OTU2LGJlYmU6OTU3LG11Y2ZjOjk1OCxvbmx5Ojk1OSx2ZXJvbW9kYTo5NjAsamFja2pvbmVzOjk2MSxzZWxlY3RlZDo5NjIsaGFuZXM6OTYzLGFsZ2VuaXN0Ojk2NCwiamNyZXctZmFjdG9yeSI6OTY1LGxvbGV3b21lbjo5NjYsInVuZGVyYXJtb3VyLWNvbSI6OTY3LHRoZW9yeTo5NjgsaW50aW1pbmE6OTY5LG55ZGo6OTcwLGpueTo5NzEsYm9ub2Jvczo5NzIsYWxwaGFpbmR1c3RyaWVzOjk3Myx2ZW51ZWtpbmdzOjk3NCxnb29wOjk3NSxzaWxreXNjZW50czo5NzYsc2hvcHNreTo5Nzcsdml0YW1pbndvcmxkOjk3OCxidW1ibGVhbmRidW1ibGU6OTc5LG1hdHRhbmRuYXQ6OTgwLGxhZHlmb290bG9ja2VyOjk4MSxhbGljZWFuZG9saXZpYTo5ODIsImxhbmNvbWUtdXNhIjo5ODMsInNrLWlpIjo5ODQsYmVhdXRpZnVsaGFsbzo5ODUsZm9vdGFjdGlvbjo5ODYsdml0YW1pbnNob3BwZTo5ODcscmVlYm9rOjk4OCxqZXQ6OTg5LGJ1cnRzYmVlc2JhYnk6OTkwLHlvaW5zOjk5MSxza2VjaGVyczo5OTIsdG9vZmFjZWQ6OTkzLHNob2VidXk6OTk0LGthdHZvbmRiZWF1dHk6OTk1LG1vdW50YWluc3RlYWxzOjk5Nix0b3VyczRmdW46OTk3LGpld2VscnlhZmZhaXJzOjk5OCxwZXJmdW1lOjk5OSx0Z3c6MWUzfSxwPWZ1bmN0aW9uKHQsZSl7dmFyIG49Y1t0XTtpZigwPT09ZS5sZW5ndGh8fCEoZSBpbnN0YW5jZW9mIEFycmF5KSlyZXR1cm4hMTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIG89ZVtpXTtpZihvPU51bWJlcihvKSxvPT09bilyZXR1cm4hMH1yZXR1cm4hMX0sZD1mdW5jdGlvbih0KXthKCk7dmFyIG89bG9jYXRpb24uaHJlZjtpZighKG8uaW5kZXhPZigib3JkZXIiKT4tMXx8by5pbmRleE9mKCJjYXJ0Iik+LTEpJiZlLnNldF9mb3JjZSl0cnl7aWYoY1t0XSYmcCh0LGUuZm9yY2UpKXJldHVybjtuKCJib2R5IikuZGVsZWdhdGUoImEiLCJtb3VzZWVudGVyIG1vdXNlbGVhdmUgbW91c2VvdmVyIixmdW5jdGlvbih0KXt2YXIgZT1uKHRoaXMpLmF0dHIoImN0Iik7Im1vdXNlb3ZlciIhPXQudHlwZSYmZSYmbih0aGlzKS5hdHRyKCJocmVmIixlKS5yZW1vdmVBdHRyKCJjdCIpLmF0dHIoImN0ZWQiLCIxIil9KSxuKCJib2R5IikuZGVsZWdhdGUoImEiLCJjbGljayIsZnVuY3Rpb24obyl7aWYoIShuLmluQXJyYXkoIiIrY1t0XSxlLmZvcmNlKT49MCkmJiFzJiYoIjEiIT09bih0aGlzKS5hdHRyKCJjdGVkIil8fGUuaXNNb2JpbGUpKXtpZihsJiYhZS5pc01vYmlsZSYmKCJqc2R4Ij09ZS5mcm9tX2RldmljZSYmZS5zZWNvbmRTaG93fHwidGx4cyI9PWUuZnJvbV9kZXZpY2UmJmUuc2Vjb25kU2hvd3x8ImhuZHgiPT1lLmZyb21fZGV2aWNlfHwieGRqZiI9PWUuZnJvbV9kZXZpY2UmJmUuc2Vjb25kU2hvd3x8ImhhZ3ciPT1lLmZyb21fZGV2aWNlJiZlLnNlY29uZFNob3d8fCJtaV9uZXciPT1lLmZyb21fZGV2aWNlKSlyZXR1cm4gdm9pZChsPSExKTtpZihjW3RdKXt2YXIgYT1uKHRoaXMpLmF0dHIoImhyZWYiKTtpZighYXx8YS5pbmRleE9mKCJvcmRlciIpPi0xfHxhLmluZGV4T2YoImNhcnQiKT4tMSlyZXR1cm47dmFyIHA9bih0aGlzKS5hdHRyKCJjbGFzcyIpfHwiIjthPWkoZS5ocmVmLGEpLDA9PWEuaW5kZXhPZigiaHR0cCIpJiZhLmluZGV4T2YoIiIrZS5leHROYW1lKTwwJiZwLmluZGV4T2YoZS5leHROYW1lKyJfbGluayIpPT0tMSYmKGE9cisiP3NpdGVfaWQ9IitjW3RdKyImdGFyZ2V0X3VybD0iK2VuY29kZVVSSUNvbXBvbmVudChhKSsiJmZyb209Y3QmY29sdW1uPWRpY3RzJnVuaW9uPSIrZS51bmlvbi5yZXBsYWNlKCJ1bmlvbl8iLCIiKSxuKHRoaXMpLmF0dHIoImN0IixuKHRoaXMpLmF0dHIoImhyZWYiKSksbih0aGlzKS5hdHRyKCJocmVmIixhKSxzPSEwLG4uYWpheCh7dXJsOmUuc2VydmVyKyIvYnJ3ZXh0L3Blcm1hbmVudF9pZC8iLGRhdGFUeXBlOiJqc29ucCIsanNvbnA6ImNhbGxiYWNrIixhc3luYzohMCxkYXRhOiJ2ZXJzaW9uPTImb3A9c2V0X2ZvcmNlJnR5cGU9IitjW3RdKyImdW5pb249IitlLnVuaW9uLHN1Y2Nlc3M6ZnVuY3Rpb24odCl7ZS5mb3JjZT10LmZvcmNlfSxlcnJvcjpmdW5jdGlvbih0LGUsbil7fX0pKX19fSl9Y2F0Y2goZCl7aWYoZS5kZWJ1Zyl0aHJvdyBkfX07dC5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIHQ9bygpOyJrYW9sYSI9PT10P3NldFRpbWVvdXQoZnVuY3Rpb24oKXtkKHQpfSwyZTMpOmQodCl9fSkuY2FsbChlLG4oMSksbig0KSl9LGZ1bmN0aW9uKHQsZSxuKXsoZnVuY3Rpb24oZSxpKXsidXNlIHN0cmljdCI7dmFyIG89bigyMiksYT1uKDI0KSxyPW4oMjMpLHM9e307cy5zZXR0aW1lPTE1MDt2YXIgbD17YW1hem9uOlsiI3ByaWNlYmxvY2tfZGVhbHByaWNlIHNwYW4iLCIjcHJpY2VibG9ja19vdXJwcmljZSBzcGFuIC5idXlpbmdQcmljZSIsIiNwcmljZWJsb2NrX2RlYWxwcmljZSIsIiNwcmljZWJsb2NrX3NhbGVwcmljZSIsIiNwcmljZWJsb2NrX291cnByaWNlIiwiI3ByaWNlX2ZlYXR1cmVfZGl2IC5hLWNvbG9yLXByaWNlIl19LGM9e2FtYXpvbjpbIiNwcmljZUJhZGdpbmdfZmVhdHVyZV9kaXYgLmEtY29sb3Itc2Vjb25kYXJ5IiwiI291cnByaWNlX3NoaXBwaW5nbWVzc2FnZSAuYS1jb2xvci1zZWNvbmRhcnkiXX0scD1mdW5jdGlvbih0KXtyZXR1cm4gdD90PXQuaW5kZXhPZigiPyIpPi0xP3QrIiZwX3I9Z291d3VkYW5nJnBfaz1wbHVnXyIrZS5zdHlsZSsiJm91dGVyX3BpZD04NTA3Ijp0KyI/cF9yPWdvdXd1ZGFuZyZwX2s9cGx1Z18iK2Uuc3R5bGUrIiZvdXRlcl9waWQ9ODUwNyI6dH0sZD1mdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9MCxuPTA7bjxsLmFtYXpvbi5sZW5ndGg7bisrKXt2YXIgbz1sLmFtYXpvbltuXTtpZihpKG8pLmxlbmd0aD4wJiZpKG8pLmlzKCI6dmlzaWJsZSIpKXt0PWkobykudGV4dCgpLnJlcGxhY2UoL1vvv6UkwqVccyxdKy9nLCIiKSx0LmluZGV4T2YoIi0iKT4tMSYmKHQ9dC5zcGxpdCgiLSIpWzBdKTticmVha319Zm9yKHZhciBuPTA7bjxjLmFtYXpvbi5sZW5ndGg7bisrKXt2YXIgbz1jLmFtYXpvbltuXTtpZihpKG8pLmxlbmd0aD4wJiZpKG8pLmlzKCI6dmlzaWJsZSIpKXtlPWkobykudGV4dCgpLm1hdGNoKC9bMC05Ll0rLykmJmkobykudGV4dCgpLm1hdGNoKC9bMC05Ll0rLylbMV07YnJlYWt9fXJldHVybiBlfHwoZT0wKSx0PU51bWJlcih0KStOdW1iZXIoZSl9LGg9ZnVuY3Rpb24oKXt2YXIgdD1lLmRwLG49dC5vbGRQcmljZTsiYW1hem9uIj09PWUuc2l0ZSYmKG49ZCgpKSxufHwobj10Lm9sZFByaWNlfHwiIiksdC51cmx8fCh0LnVybD1sb2NhdGlvbi5ocmVmKSx0LnNrdXx8KHQuc2t1PXQudXJsLm1hdGNoKC8oPzpkcHxwcm9kdWN0KVwvKFswLTlhLXpBLVpdKykvKSYmdC51cmwubWF0Y2goLyg/OmRwfHByb2R1Y3QpXC8oWzAtOWEtekEtWl0rKS8pWzFdKTt2YXIgaT0oMTAwKk51bWJlcihuKSkudG9GaXhlZCgwKSxvPWUuc2VydmVyKyIvYXBpL2hhaXRhbz9wcmljZT0iK2krIiZ1cmxfY3JjPSIrdC5za3UrIiZ1cmw9IitlbmNvZGVVUklDb21wb25lbnQodC51cmwpO3MucmVxdWVzdFVybD1vLHMuanVtcGluZm89InVybF9jcmM9Iit0LnNrdSsiJnVybD0iK2VuY29kZVVSSUNvbXBvbmVudCh0LnVybCkscy5mc3RUaW1lPShuZXcgRGF0ZSkuZ2V0VGltZSgpLGEuZ2V0KG8pLmRvbmUoZnVuY3Rpb24odCl7aWYodCYmMT09PXQuZGF0YS5wcm9kdWN0X3N0YXR1cyl7dmFyIGU9dC5kYXRhLnByb2R1Y3RfZGV0YWlsO2UudXJsPXAodC5kYXRhLnByb2R1Y3RfdXJsKSxmKGUpfWVsc2UgaWYoIXR8fDIhPT10LmRhdGEucHJvZHVjdF9zdGF0dXMmJjMhPT10LmRhdGEucHJvZHVjdF9zdGF0dXMpe3ZhciBpPSIiOzQ9PT10LmRhdGEucHJvZHVjdF9zdGF0dXM/aT0i5oqx5q2J77yM55Sx5LqO55u45YWz5rOV5b6L5oiW6L2s6L+Q56aB6L+Q55qE5Y6f5Zug77yM6K+l5ZWG5ZOB5peg5rOV5LiA6ZSu5rW35reY44CCIjo1PT09dC5kYXRhLnByb2R1Y3Rfc3RhdHVzJiYoaT0i5oqx5q2J77yM6K+l5ZWG5ZOB5bey5LiL5p6277yM5peg5rOV5LiA6ZSu5rW35reY44CCIik7dmFyIGU9e2dvb2RzX3ByaWNlOnIobikudG9GaXhlZCgyKSx1cmw6ImphdmFzY3JpcHQ6dm9pZCgpOyIsdGxlOmksbm9pbmZvOiEwfTtmKGUpfWVsc2V7dmFyIGU9dm9pZCAwO3QuZGF0YS5wcm9kdWN0X2RldGFpbF9lc3RpbWF0ZT8oZT10LmRhdGEucHJvZHVjdF9kZXRhaWxfZXN0aW1hdGUsZS51cmw9dygpKTplPXtnb29kc19wcmljZTpyKG4udG9GaXhlZCgyKSksdXJsOiJqYXZhc2NyaXB0OnZvaWQoKTsiLHRsZToi5oqx5q2J77yM6K+l5ZWG5ZOB5pqC5pe25peg5rOV5LiA6ZSu5rW35reYIixub2luZm86ITB9LGYoZSl9fSl9LHU9ZnVuY3Rpb24odCl7dC5nb29kc19vcmlnaW5hbF9wcmljZT1OdW1iZXIoKHQuZ29vZHNfb3JpZ2luYWxfcHJpY2UvMTAwKS50b0ZpeGVkKDIpKSx0Lmdvb2RzX3ByaWNlPU51bWJlcigodC5nb29kc19wcmljZS8xMDApLnRvRml4ZWQoMikpLHQub2ZmaWNpYWxfb3JpZ2luYWxfcG9zdGFnZT0odC5vZmZpY2lhbF9vcmlnaW5hbF9wb3N0YWdlLzEwMCkudG9GaXhlZCgyKSx0Lm9mZmljaWFsX3Bvc3RhZ2U9TnVtYmVyKCh0Lm9mZmljaWFsX3Bvc3RhZ2UvMTAwKS50b0ZpeGVkKDIpKSx0LnhtX29mZmljaWFsPU51bWJlcih0Lm9mZmljaWFsX29yaWdpbmFsX3Bvc3RhZ2UpLXQub2ZmaWNpYWxfcG9zdGFnZSx0LmludGVybmF0aW9uYWxfb3JpZ2luYWxfcG9zdGFnZT1OdW1iZXIoKHQuaW50ZXJuYXRpb25hbF9vcmlnaW5hbF9wb3N0YWdlLzEwMCkudG9GaXhlZCgyKSksdC5pbnRlcm5hdGlvbmFsX3Bvc3RhZ2U9TnVtYmVyKCh0LmludGVybmF0aW9uYWxfcG9zdGFnZS8xMDApLnRvRml4ZWQoMikpLHQueG1faW50ZXJuYXRpb25hbD10LmludGVybmF0aW9uYWxfb3JpZ2luYWxfcG9zdGFnZS10LmludGVybmF0aW9uYWxfcG9zdGFnZSx0LnRheF9vcmlnaW5hbF9mZWU9TnVtYmVyKCh0LnRheF9vcmlnaW5hbF9mZWUvMTAwKS50b0ZpeGVkKDIpKSx0LnRheF9mZWU9TnVtYmVyKCh0LnRheF9mZWUvMTAwKS50b0ZpeGVkKDIpKSx0LnhtX2ZlZT10LnRheF9vcmlnaW5hbF9mZWUtdC50YXhfZmVlLHQucHVyZVByaWNlPXQuZ29vZHNfcHJpY2UrdC5vZmZpY2lhbF9wb3N0YWdlK3QuaW50ZXJuYXRpb25hbF9wb3N0YWdlK3QudGF4X2ZlZSx0LnB1cmVQcmljZT10LnB1cmVQcmljZS50b0ZpeGVkKDIpLHQuZ29vZHNfcHJpY2U9dC5nb29kc19wcmljZS50b0ZpeGVkKDIpO2Zvcih2YXIgZSBpbiB0KSJudW1iZXIiPT10eXBlb2YgdFtlXSYmKHRbZV09dFtlXS50b0ZpeGVkKDIpKTtyZXR1cm4gdH0sbT1mdW5jdGlvbih0KXt2YXIgYT0obmV3IERhdGUpLmdldFRpbWUoKSxyPWcoYSsxNzI4ZTYpLHM9ZyhhKzI1OTJlNiksbD1yKyItIitzLGM9bigxMTYpLmdldEh0SW5mbygpLHA9bigxODgpO2koIiN5al9oYWl0YW8iKS5hcHBlbmQoby5jb21waWxlKHApKHtkYXRhOnQsaG9zdHM6Yy5IT1NULHRpbWVzdHI6bCxwcm90eXBlOmMucHJvdHlwZSxzaXRlOiI2cG0iPT1lLnNpdGU/IjZQTSI6IuS6mumprOmAiiJ9KSkuc2hvdygpfSxmPWZ1bmN0aW9uKHQpe3Qubm9pbmZvfHwodD11KHQpKSxzLmRwaW5mbz10LG0odCl9LGc9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IERhdGUodCksbj1lLmdldEZ1bGxZZWFyKCksaT1lLmdldE1vbnRoKCkrMSxvPWUuZ2V0RGF0ZSgpO3JldHVybiBpPDEwJiYoaT0iMCIraSksbzwxMCYmKG89IjAiK28pLG4rIi4iK2krIi4iK299LHc9ZnVuY3Rpb24oKXt2YXIgdD0iaHR0cHM6Ly93d3cuZ3dkYW5nLmNvbS9wcm9tb3Rpb24vaGFpdGFvbWlkPyIrcy5qdW1waW5mbysiJmZfZD0iK2UuZnJvbV9kZXZpY2U7cmV0dXJuIHR9O3QuZXhwb3J0cy5pbml0PWZ1bmN0aW9uKCl7Ind3dy5hbWF6b24uZGUiIT09bG9jYXRpb24uaG9zdCYmaCgpfX0pLmNhbGwoZSxuKDEpLG4oNCkpfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBjbGFzcz0ieWpodGJ0biI+XG4gIDxlbSBjbGFzcz0iaHQtYmciPjwvZW0+XG4gIDxzcGFuPuS4gOmUrua1t+a3mDo8L3NwYW4+XG4gIDxzcGFuIGNsYXNzPSJwcmlmb250ZiB5amh0LXRsZS1wcmkiPsKle3tkYXRhLmdvb2RzX3ByaWNlfX08L3NwYW4+XG48L2Rpdj5cbjxkaXYgY2xhc3M9Imh0LWNvbS1kZXRhaWwiIGlkPSJ5amh0X2RldGFpbCI+XG4gIHt7aWYgIWRhdGEubm9pbmZvfX1cbiAgPGRpdiBjbGFzcz0iZ2xvYmFsLWNvbnRlbnQgeWpodC1tb2RlbCI+XG4gICAgPGRpdiBjbGFzcz0iZ2wtbGVmdCI+XG4gICAgICA8ZGl2IGNsYXNzPSJnbC1sLWl0ZW0gIHt7aWYgcHJvdHlwZT09XCd6aXlpbmdcJ319IHppeWluZyB7e2Vsc2V9fXNhbmZhbmd7ey9pZn19Ij5cbiAgICAgICAgPGVtIGNsYXNzPSJodC1iZyI+PC9lbT5cbiAgICAgICAgPHNwYW4+e3tpZiBwcm90eXBlPT1cJ3ppeWluZ1wnfX0g6Ieq6JClIHt7ZWxzZX1956ys5LiJ5pa5e3svaWZ9fTwvc3Bhbj5cbiAgICAgICAgPGRpdiBjbGFzcz0idGxlLXJlbWluZC1ib3giPlxuICAgICAgICAgIHt7cHJvdHlwZT09XCd6aXlpbmdcJz8oc2l0ZSArIFwn55u05o6l6ZSA5ZSuXCcpOihzaXRlICsgXCfnrKzkuInmlrnllYblrrbplIDllK5cJyl9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz0iZ2wtbC1pdGVtIHlqaHRiIj5cbiAgICAgICAgPGVtIGNsYXNzPSJodC1iZyI+PC9lbT5cbiAgICAgICAgPHNwYW4+5LiA6ZSu5rW35reYPC9zcGFuPlxuICAgICAgICA8ZGl2IGNsYXNzPSJ0bGUtcmVtaW5kLWJveCI+XG4gICAgICAgICAg55Sx5YmB5omL5biu5o+Q5L6b5LiA6ZSu5rW35reY5pyN5YqhXG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPSJnbC1sLWl0ZW0gdHJhbnNoZWxwIj5cbiAgICAgICAgPGVtIGNsYXNzPSJodC1iZyI+PC9lbT5cbiAgICAgICAgPHNwYW4+57+76K+R5biu5YqpPC9zcGFuPlxuICAgICAgICA8ZGl2IGNsYXNzPSJ0bGUtcmVtaW5kLWJveCI+5bey5Li65oKo5byA5ZCv5YiS6K+N57+76K+R77yM6byg5qCH6YCJ5Lit55u45YWz5paH5a2X77yM5Y2z5Y+v57+76K+RPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImdsLWwtaXRlbSBzaXplaGVscCI+XG4gICAgICAgIDxlbSBjbGFzcz0iaHQtYmciPjwvZW0+XG4gICAgICAgIDxzcGFuPuWwuueggeW4ruWKqTwvc3Bhbj5cbiAgICAgICAgPGRpdiBjbGFzcz0idGxlLXJlbWluZC1ib3giPueCueWHu+afpeeci+WwuueggeW4ruWKqTwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBjbGFzcz0iZ2wtcmlnaHQiPlxuICAgICAgPGRpdiBjbGFzcz0iZ2wtci1pdGVtIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InItaXRlbS1zcDEiPuWumOe9kei/kOi0uTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InItaXRlbS1zcDIiPjo8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3AzIHByaWZvbnRmIj7CpXt7ZGF0YS5vZmZpY2lhbF9wb3N0YWdlfX08L3NwYW4+XG4gICAgICAgIHt7aWYgZGF0YS54bV9vZmZpY2lhbCAhPSAwfX1cbiAgICAgICAgICA8c3BhbiBjbGFzcz0ici1pdGVtLXNwNCBvbGRmcmllZ2h0IHByaWZvbnRmIj7CpXt7ZGF0YS54bV9vZmZpY2lhbH19PC9zcGFuPlxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJyLXRhZyBodC1iZyI+PC9zcGFuPlxuICAgICAgICB7ey9pZn19XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImdsLXItaXRlbSI+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3AxIj7ovazov5DotLk8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3AyIj46PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0ici1pdGVtLXNwMyBwcmlmb250ZiI+wqV7e2RhdGEuaW50ZXJuYXRpb25hbF9wb3N0YWdlfX08L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3A0Ij48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9ImdsLXItaXRlbSI+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3AxIj7nqI7otLk8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3AyIj46PC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzcz0ici1pdGVtLXNwMyBwcmlmb250ZiI+wqV7e2RhdGEudGF4X2ZlZX19PC9zcGFuPlxuICAgICAgICB7e2lmIGRhdGEueG1fZmVlICE9IDB9fVxuICAgICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3A0IG9sZHRheCBwcmlmb250ZiI+wqV7e2RhdGEueG1fZmVlfX08L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9InItdGFnIGh0LWJnIj48L3NwYW4+XG4gICAgICAgIHt7L2lmfX1cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz0iZ2wtci1pdGVtIGRhb3NqIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InItaXRlbS1zcDEiPuWIsOaJi+S7tzwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InItaXRlbS1zcDIiPjo8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzPSJyLWl0ZW0tc3AzIHByaWZvbnRmIj7CpXt7ZGF0YS5wdXJlUHJpY2V9fTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9InItaXRlbS1zcDQiPjwvc3Bhbj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdiBjbGFzcz0iZ2xvYmFsLWZvb3QgeWpodC1tb2RlbCI+XG4gICAgPHNwYW4+6aKE6K6h5Yiw6LSn5pe26Ze0Ont7dGltZXN0cn19PC9zcGFuPlxuICAgIDxhIGhyZWY9Int7ZGF0YS51cmx9fSIgdGFyZ2V0PSJfYmxhbmsiPueri+WNs+i0reS5sDwvYT5cbiAgPC9kaXY+XG4gIHt7ZWxzZX19XG4gIDxkaXYgY2xhc3M9Imh0LWVycm9yLWluZm8iPlxuICAgIDxlbSBjbGFzcz0iaHQtYmciPjwvZW0+XG4gICAgPGRpdj7mirHmrYnvvIznlLHkuo7nm7jlhbPms5XlvovmiJbogIXovazov5DnpoHov5DnmoTljp/lm6A8L2Rpdj5cbiAgICA8ZGl2PuivpeWVhuWTgeaaguaXtuS4jeaUr+aMgeS4gOmUrua1t+a3mDwvZGl2PlxuICA8L2Rpdj5cbiAge3svaWZ9fVxuPC9kaXY+XG48c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAjeWpodF9kZXRhaWwge1xuICAgIC8qZGlzcGxheTogYmxvY2s7Ki9cbiAgfVxuICAuaHQtY29tLWRldGFpbCBzcGFuIHtcbiAgICBjb2xvcjogIzQwNDU0NztcbiAgfVxuICAueWpodGJ0biAqIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuICAueWpodGJ0biB7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogNDBweDtcbiAgfVxuICAueWpodGJ0biBlbSB7XG4gICAgd2lkdGg6IDE2cHg7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIG1hcmdpbi1yaWdodDogNnB4O1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTEzMHB4IC0xMHB4O1xuICB9XG4gIC55amh0YiBlbSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTUycHggLTM2cHg7XG4gIH1cbiAgLnRyYW5zaGVscCBlbSB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTc2cHggLTM2cHg7XG4gIH1cbiAgLnNpemVoZWxwIGVtIHtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAtMTAwcHggLTM2cHg7XG4gIH0gXG4gIC5zaXplaGVscCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIC5zaXplaGVscCBzcGFuIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICAuZ2wtcmlnaHQge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAyODZweDtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICB9XG4gIC55amh0LW1vZGVsIC5nbC1yaWdodCB7XG4gICAgd2lkdGg6IDI4MHB4O1xuICB9XG4gIC5nbC1yLWl0ZW0gc3BhbntcbiAgICBmbG9hdDogbGVmdDtcbiAgICBsaW5lLWhlaWdodDogNDRweDtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gIH1cbiAgLmdsLXItaXRlbSB7XG4gICAgd2lkdGg6ICAyODBweDtcbiAgICBoZWlnaHQ6IDQ0cHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNGOUY5Rjk7XG4gIH1cbiAgLmdsLXItaXRlbTpsYXN0LWNoaWxkIHtcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xuICB9XG4gIC5nbC1yLWl0ZW0gLnItaXRlbS1zcDEge1xuICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xuICAgIGhlaWdodDogNDRweDtcbiAgICB3aWR0aDogNjBweDtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICAgIGxpbmUtaGVpZ2h0OiA0NHB4O1xuICB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86MCl7XG4gICAgICAuZ2wtci1pdGVtIC5yLWl0ZW0tc3AxOmFmdGVye1xuICAgICAgICAgIGNvbnRlbnQ6Ii4iO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICBoZWlnaHQ6MDtcbiAgICAgIH1cbiAgfVxuICAuZ2wtci1pdGVtIC5yLWl0ZW0tc3AyIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDlweDtcbiAgfVxuICAuZ2wtci1pdGVtIC5yLWl0ZW0tc3AzIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEzcHg7XG4gIH1cbiAgLmdsLXItaXRlbSAub2xkZnJpZWdodCwgLmdsLXItaXRlbSAub2xkdGF4IHtcbiAgICBjb2xvcjogIzk2OTg5OTtcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcbiAgfVxuICAuZGFvc2ogLnItaXRlbS1zcDMge1xuICAgIGNvbG9yOiAjRTQzOTNDO1xuICB9XG4gIC5odC1jb20tZGV0YWlsIC5yLXRhZyB7XG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAxNXB4O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xNTBweCAtMTJweDtcbiAgICBtYXJnaW4tdG9wOiAxNHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XG4gIH1cbiAgLnRsZS1yZW1pbmQtYm94IHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbWluLWhlaWdodDogMThweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IDEzMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgIHBhZGRpbmc6IDZweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDhweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGNvbG9yOiAjNUM2MjY2O1xuICAgIHRvcDogMzhweDtcbiAgICBsZWZ0OiAxMXB4O1xuICAgIGJhY2tncm91bmQ6ICNGRUZGRjc7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0NDQ0NDQztcbiAgICB6LWluZGV4OiA5OTk5OTk7XG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG4gIC5nbC1sLWl0ZW06aG92ZXIgLnRsZS1yZW1pbmQtYm94IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAudGxlLXJlbWluZC1ib3g6YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAiIjtcbiAgICB3aWR0aDogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyLXdpZHRoOiAwcHggNXB4IDVweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2I0YjRiNDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAtNXB4O1xuICAgIGxlZnQ6IDMwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xuICB9XG4gIC50bGUtcmVtaW5kLWJveDphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgY29udGVudDogIiI7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAwO1xuICAgIGJvcmRlci13aWR0aDogMCA1cHggNXB4O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC00cHg7XG4gICAgbGVmdDogMjBweDtcbiAgfVxuICAgLmh0LWVycm9yLWluZm8gZW0ge1xuICAgIHdpZHRoOiA1OHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMTkycHg7XG4gICAgbWFyZ2luLXRvcDogNTNweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IC00cHggLTYwcHg7XG4gICB9XG4gIC5odC1lcnJvci1pbmZvIGRpdiB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAyMnB4O1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgY29sb3I6ICM1QzYyNjY7XG4gIH1cbjwvc3R5bGU+J30sZnVuY3Rpb24odCxlLG4peyhmdW5jdGlvbihlLGkpeyJ1c2Ugc3RyaWN0Ijt2YXIgbz1uKDIyKSxhPW4oNzMpLHI9bigxMikscz12b2lkIDAsbD0wLGM9e2FkZENhcnQ6bigxOTApLGNoZWNrb3V0Om4oMTkxKSxzaGlwcGluZzE6bigxOTIpLHNoaXBwaW5nMjpuKDE5MyksY29udGludWUxOm4oMTk0KSxjb250aW51ZTI6bigxOTUpLGNyZWRpdGluZm86bigxOTYpLGFkZGNyZWRpdDpuKDE5NykscHJvbW9jb2RlOm4oMTk4KSxjaG9vc2VDcmVkaXQ6bigxOTkpLGZpbmlzaGVkOm4oMjAwKX0scD17YWRkQ2FydDoiI2J1eWJveF9mZWF0dXJlX2RpdiAjYWRkVG9DYXJ0IC5hLWJ1dHRvbi1zdGFjayAuYS1idXR0b24taW5wdXQiLGNoZWNrb3V0OiIjaGxiLXB0Yy1idG4tbmF0aXZlIixzaGlwcGluZzE6IiNpZGVudGl0eS1hZGQtbmV3LWFkZHJlc3MgI2VudGVyQWRkcmVzc0Z1bGxOYW1lQ29udGFpbmVyIixzaGlwcGluZzI6IiNpZGVudGl0eS1hZGQtbmV3LWFkZHJlc3MgI2VudGVyQWRkcmVzc0Z1bGxOYW1lQ29udGFpbmVyIixjb250aW51ZTE6IiNzaGlwcGluZ09wdGlvbkZvcm1JZCAuYS1zcGFjaW5nLW1lZGl1bSAuY29udGludWUtYnV0dG9uIC5hLWJ1dHRvbi1pbm5lciIsY29udGludWUyOiIjb3JkZXItc3VtbWFyeSAjb3JkZXItc3VtbWFyeS1jb250YWluZXIgLmNvbnRpbnVlLWJ1dHRvbnMgLmEtYnV0dG9uLWlubmVyICNjb250aW51ZS10b3AiLGNyZWRpdGluZm86IiN3cmFwcGVyLW5ldy1jYyIsYWRkY3JlZGl0OiIjd3JhcHBlci1uZXctY2MiLHByb21vY29kZToiLnBtdHMtcmVkZWVtLWNsYWltLWNvZGUtZm9ybSIsY2hvb3NlQ3JlZGl0OiIjbmF2LWJhcisuYS1jb250YWluZXIgLmEtc3BhY2luZy1iYXNlIixmaW5pc2hlZDoiI29yZGVyLXN1bW1hcnktYm94In0sZD1mdW5jdGlvbigpe3ZhciB0PWUoImJvZHkiKVswXTtpZih0KXt2YXIgbj1mdW5jdGlvbiBpKCl7Y2xlYXJUaW1lb3V0KHMpLHM9c2V0VGltZW91dChmdW5jdGlvbigpe3JldHVybiBsKyssNDU9PT1sP3ZvaWQgdC5yZW1vdmVFdmVudExpc3RlbmVyKCJET01TdWJ0cmVlTW9kaWZpZWQiLGksITEpOnZvaWQgbSgpfSwyZTMpfTt0LmFkZEV2ZW50TGlzdGVuZXImJnQuYWRkRXZlbnRMaXN0ZW5lcigiRE9NU3VidHJlZU1vZGlmaWVkIixuLCExKX19LGg9ZnVuY3Rpb24odCxuKXtpZighKGUoIi5nd2RfIit0KS5sZW5ndGg+MCkpe3IoImhhaXRhb19yZW1pbmRfIit0KTt2YXIgYT1jW3RdOyJhZnRlciI9PW4/ZShwW3RdKS5lcSgwKS5hZnRlcihvLmNvbXBpbGUoYSkoe2Nfc2VydmVyOmkuY19zZXJ2ZXIsc19zZXJ2ZXI6aS5zX3NlcnZlcn0pKToiYXBwZW5kIj09biYmZShwW3RdKS5lcSgwKS5hcHBlbmQoby5jb21waWxlKGEpKHtjX3NlcnZlcjppLmNfc2VydmVyLHNfc2VydmVyOmkuc19zZXJ2ZXJ9KSl9fSx1PWZ1bmN0aW9uKCl7ZSgiLmJqZF9idG5fYm94IC5iamRfY2xvc2UiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7cmV0dXJuIGUoIi5iamRfYnRuX2JveCIpLmhpZGUoKSxhLnNldHRpbmdzKCJzZXRfaGlkZV9zaG9wdGlwIiwiaGlkZV9zaG9wdGlwIiwiMSIpLCExfSl9LG09ZnVuY3Rpb24oKXsyPT1pLnBhZ2VJbmZvLnR5cGU/aCgiYWRkQ2FydCIsImFmdGVyIik6ZSgiI2hsYi1wdGMtYnRuLW5hdGl2ZSIpLmxlbmd0aD4wP2goImNoZWNrb3V0IiwiYWZ0ZXIiKTplKCIjaWRlbnRpdHktYWRkLW5ldy1hZGRyZXNzIikubGVuZ3RoPjA/aCgic2hpcHBpbmcxIiwiYXBwZW5kIik6ZSgiI3NoaXBwaW5nT3B0aW9uRm9ybUlkIC5hLXNwYWNpbmctbWVkaXVtIC5jb250aW51ZS1idXR0b24gLmEtYnV0dG9uLWlubmVyIikubGVuZ3RoPjA/KGgoImNvbnRpbnVlMSIsImFwcGVuZCIpLGUoIiNzaGlwcGluZ09wdGlvbkZvcm1JZCAuYS1zcGFjaW5nLW1lZGl1bSAuY29udGludWUtYnV0dG9uIC5hLWJ1dHRvbi1pbm5lciAuYS1idXR0b24tdGV4dCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZSgiI3dyYXBwZXItbmV3LWNjIikubGVuZ3RoPjAmJihoKCJjcmVkaXRpbmZvIiwiYXBwZW5kIiksaCgiYWRkY3JlZGl0IiwiYXBwZW5kIiksaCgiY2hvb3NlQ3JlZGl0IiwiYXBwZW5kIikpfSwxNTAwKX0pKTplKCIjY29udGludWUtdG9wIikubGVuZ3RoPjA/KGgoImNvbnRpbnVlMiIsImFmdGVyIiksZSgiI3dyYXBwZXItbmV3LWNjIikubGVuZ3RoPjAmJihoKCJjcmVkaXRpbmZvIiwiYXBwZW5kIiksaCgiYWRkY3JlZGl0IiwiYXBwZW5kIiksaCgiY2hvb3NlQ3JlZGl0IiwiYXBwZW5kIiksZSgiI29yZGVyLXN1bW1hcnktY29udGFpbmVyICNjb250aW51ZS10b3AiKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7c2V0VGltZW91dChmdW5jdGlvbigpe2goInByb21vY29kZSIsImFwcGVuZCIpLGgoImZpbmlzaGVkIiwiYXBwZW5kIiksZSgiI29yZGVyLXN1bW1hcnktYm94IC5hLWJ1dHRvbi10ZXh0LnBsYWNlLXlvdXItb3JkZXItYnV0dG9uIikub24oImNsaWNrIixmdW5jdGlvbigpe3IoImhhaXRhb19yZW1pbmRfZmluaXNob3JkZXJzdWNjZXNzIil9KX0sMWUzKX0pKSk6ZSgiLnBtdHMtcmVkZWVtLWNsYWltLWNvZGUtZm9ybSIpLmxlbmd0aD4wPyhoKCJwcm9tb2NvZGUiLCJhcHBlbmQiKSxoKCJmaW5pc2hlZCIsImFwcGVuZCIpLGUoIiNvcmRlci1zdW1tYXJ5LWJveCAuYS1idXR0b24tdGV4dC5wbGFjZS15b3VyLW9yZGVyLWJ1dHRvbiIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtyKCJoYWl0YW9fcmVtaW5kX2ZpbmlzaG9yZGVyc3VjY2VzcyIpfSkpOmUoIiNvcmRlci1zdW1tYXJ5LWJveCAuYS1idXR0b24tdGV4dC5wbGFjZS15b3VyLW9yZGVyLWJ1dHRvbiIpLmxlbmd0aD4wJiYoaCgicHJvbW9jb2RlIiwiYXBwZW5kIiksaCgiZmluaXNoZWQiLCJhcHBlbmQiKSxlKCIjb3JkZXItc3VtbWFyeS1ib3ggLmEtYnV0dG9uLXRleHQucGxhY2UteW91ci1vcmRlci1idXR0b24iKS5vbigiY2xpY2siLGZ1bmN0aW9uKCl7cigiaGFpdGFvX3JlbWluZF9maW5pc2hvcmRlcnN1Y2Nlc3MiKX0pKSxlKCIjd3JhcHBlci1uZXctY2MiKS5sZW5ndGg+MCYmKGgoImNyZWRpdGluZm8iLCJhcHBlbmQiKSxoKCJhZGRjcmVkaXQiLCJhcHBlbmQiKSxoKCJjaG9vc2VDcmVkaXQiLCJhcHBlbmQiKSksZSgiI2NjQWRkQ2FyZCIpLmxlbmd0aCYmZSgiI2NjQWRkQ2FyZCIpLm9uKCJjbGljayIsZnVuY3Rpb24oKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aCgiY3JlZGl0aW5mbyIsImFwcGVuZCIpLGgoImFkZGNyZWRpdCIsImFwcGVuZCIpLGgoImNob29zZUNyZWRpdCIsImFwcGVuZCIpfSwxNTAwKX0pLHUoKX07dC5leHBvcnRzLmluaXQ9ZnVuY3Rpb24odCl7aS5JRTZ8fGkuSUU3fHxpLklFOHx8bG9jYXRpb24uaG9zdC5pbmRleE9mKCJhbWF6b24iKT4tMSYmInd3dy5hbWF6b24uY24iIT1sb2NhdGlvbi5ob3N0JiYobG9jYXRpb24uaG9zdC5pbmRleE9mKCIuY28uanAiKT4tMSYmZSgiaHRtbCIpLmFkZENsYXNzKCJhbWF6b24tanAiKSxsb2NhdGlvbi5ob3N0LmluZGV4T2YoIi5kZSIpPi0xfHwoMj09PXQ/ZShkb2N1bWVudCkub24oInJ1bmhhaXRhbyIsZnVuY3Rpb24oKXttKCksZCgpfSk6c2V0VGltZW91dChmdW5jdGlvbigpe20oKSxkKCl9LDE1MDApKSl9fSkuY2FsbChlLG4oNCksbigxKSl9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJnd2RfYWRkQ2FydCBiamRfYnRuX2JveCI+XG4gIDxhIGhyZWY9Int7Y19zZXJ2ZXJ9fSIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSLotK3nianlhZoiPjwvYT5cbiAgPHNwYW4gY2xhc3M9ImJqZF9hZGRjYXJ0Ij7kuIDplK7mtbfmt5g8L3NwYW4+XG4gIDxzcGFuIGNsYXNzPSJiamRfY2xvc2UiPjwvc3Bhbj5cbjwvZGl2PlxuPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgLmd3ZF9hZGRDYXJ0IHtcbiAgICB3aWR0aDogMTgwcHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgY29sb3I6ICM0OTRiNGQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC0yMTZweDtcbiAgICB0b3A6IDM2cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDI4cHg7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMjhweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ3YmVmZTtcbiAgICBmb250LWZhbWlseTogXCdNaWNyb3NvZnQgWWFoZWlcJztcbiAgfVxuICAuZ3dkX2FkZENhcnQgYSwgLmd3ZF9hZGRDYXJ0IHNwYW4ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAxOXB4O1xuICB9XG4gIC5nd2RfYWRkQ2FydCAuYmpkX2FkZGNhcnQge1xuICAgIGN1cnNvcjogdGV4dDtcbiAgfVxuICAuZ3dkX2FkZENhcnQgYSB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zaXRlaWNvbi5wbmdcJykgMHB4IDZweCBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiAyNHB4IDIycHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIHdpZHRoOiAyNnB4O1xuICB9XG4gIC5iamRfY2xvc2Uge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fY2xvc2VpY29uLnBuZ1wnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEycHggMTJweDtcbiAgfVxuICAuZ3dkX2FkZENhcnQ6YmVmb3Jle1xuICAgIGJvcmRlcjogMThweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ3YmVmZTtcbiAgICBjb250ZW50OiAiIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMTc4cHg7XG4gICAgd2lkdGg6IDBweDtcbiAgICBoZWlnaHQ6IDBweDtcbiAgICB0b3A6IC0xcHg7XG4gIH1cbiAgLmd3ZF9hZGRDYXJ0OmFmdGVye1xuICAgIGJvcmRlcjogMTdweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogI2ZmZjtcbiAgICBjb250ZW50OiAiIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMTc4cHg7XG4gICAgd2lkdGg6IDBweDtcbiAgICBoZWlnaHQ6IDBweDtcbiAgICB0b3A6IDBweDtcbiAgfVxuICAjYnV5Ym94X2ZlYXR1cmVfZGl2ICNhZGRUb0NhcnQgLmEtYnV0dG9uLXN0YWNrIHNwYW4uYS1idXR0b24taW5uZXIge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG4gICNyYmJDb250YWluZXIgZGl2LnJiYlNlY3Rpb24ge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG48L3N0eWxlPid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJnd2RfY2hlY2tvdXQgYmpkX2J0bl9ib3giPlxuICA8YSBocmVmPSJ7e2Nfc2VydmVyfX0iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0i6LSt54mp5YWaIj48L2E+XG4gIDxzcGFuIGNsYXNzPSJiamRfYWRkY2FydCI+5Y6757uT566XPC9zcGFuPlxuICA8c3BhbiBjbGFzcz0iYmpkX2Nsb3NlIj48L3NwYW4+XG48L2Rpdj5cbjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gIC5nd2RfY2hlY2tvdXQge1xuICAgIHdpZHRoOiAxNDhweDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogIzQ5NGI0ZDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDI4cHg7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDI4cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0N2JlZmU7XG4gICAgZm9udC1mYW1pbHk6IFwnTWljcm9zb2Z0IFlhaGVpXCc7XG4gICAgdG9wOiAycHg7XG4gICAgei1pbmRleDogOTk7XG4gICAgcmlnaHQ6IC0yMTFweDtcbiAgfVxuICAuZ3dkX2NoZWNrb3V0IGEsIC5nd2RfY2hlY2tvdXQgc3BhbiB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWxlZnQ6IDE5cHg7XG4gIH1cbiAgLmd3ZF9jaGVja291dCAuYmpkX2FkZGNhcnQge1xuICAgIGN1cnNvcjogdGV4dDtcbiAgfVxuICAuZ3dkX2NoZWNrb3V0IGEge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fc2l0ZWljb24ucG5nXCcpIDBweCA2cHggbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMjRweCAyMnB4O1xuICAgIGhlaWdodDogMzVweDtcbiAgICB3aWR0aDogMjZweDtcbiAgICBtYXJnaW4tbGVmdDogN3B4O1xuICB9XG4gIC5iamRfY2xvc2Uge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fY2xvc2VpY29uLnBuZ1wnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEycHggMTJweDtcbiAgfVxuICAuZ3dkX2NoZWNrb3V0OmJlZm9yZXtcbiAgICBib3JkZXI6IDI5cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiAjNDdiZWZlO1xuICAgIGNvbnRlbnQ6ICIiO1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDE4cHg7XG4gICAgYm9yZGVyLXRvcC13aWR0aDogMThweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTU4cHg7XG4gICAgd2lkdGg6IDBweDtcbiAgICBoZWlnaHQ6IDBweDtcbiAgICB0b3A6IC0xcHg7XG4gIH1cbiAgLmd3ZF9jaGVja291dDphZnRlciB7XG4gICAgYm9yZGVyOiAyN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yaWdodC1jb2xvcjogI2ZmZjtcbiAgICBjb250ZW50OiAiIjtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxN3B4O1xuICAgIGJvcmRlci10b3Atd2lkdGg6IDE3cHg7XG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IDMwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC01N3B4O1xuICAgIHdpZHRoOiAwcHg7XG4gICAgaGVpZ2h0OiAwcHg7XG4gICAgdG9wOiAwcHg7XG4gIH1cbiNobGItcHRjLWJ0biBzcGFuLmEtYnV0dG9uLWlubmVye1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuPC9zdHlsZT4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBjbGFzcz0iZ3dkX3NoaXBwaW5nMSBiamRfYnRuX2JveCI+XG4gIDxwPua4qemmqOaPkOekujwvcD5cbiAgPHNwYW4+5aaC6YCJ5oup55u06YKu77yM6K+355u05o6l5aGr5YaZ5Zu95YaF5pS26LSn5Zyw5Z2A77ybPC9zcGFuPlxuICA8c3Bhbj7lpoLkvb/nlKjovazov5DvvIzor7flnKjmraTpobXpnaLloavlhpnovazov5Dlhazlj7jlnLDlnYDvvJs8L3NwYW4+XG4gIDxhIGhyZWY9Int7Y19zZXJ2ZXJ9fS9hcHAvaGFpdGFvX2ludHIiIHRhcmdldD0iX2JsYW5rIiBjbGFzcz0idHJhbnNfYSI+6L2s6L+Q5pS755WlPC9hPlxuICA8YSBocmVmPSJ7e2Nfc2VydmVyfX0iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0i6LSt54mp5YWaIiBjbGFzcz0iYmpkX3NpdGVfaWNvbiI+PC9hPlxuICA8c3BhbiBjbGFzcz0iYmpkX2Nsb3NlIj48L3NwYW4+XG48L2Rpdj5cbjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gIC5nd2Rfc2hpcHBpbmcxIHtcbiAgICB3aWR0aDogMzQwcHg7XG4gICAgaGVpZ2h0OiAxNjBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IC0zNjVweDtcbiAgICB0b3A6IDg3cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0N2JlZmU7XG4gICAgZm9udC1mYW1pbHk6IFwnTWljcm9zb2Z0IFlhaGVpXCc7XG4gIH1cbiAgLmFtYXpvbi1kZSAuZ3dkX3NoaXBwaW5nMSB7XG4gICAgdG9wOiAzNTBweDtcbiAgfVxuICAuZ3dkX3NoaXBwaW5nMSBwIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgY29sb3I6ICMzRjQxNDI7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luOiAxN3B4IDAgMTZweCA2MHB4O1xuICB9XG4gIC5nd2Rfc2hpcHBpbmcxIHNwYW4ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBjb2xvcjogIzQ5NGI0ZDtcbiAgICBsaW5lLWhlaWdodDogMjJweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDMycHg7XG4gIH1cbiAgLmJqZF9zaXRlX2ljb24ge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fc2l0ZWljb24yLnBuZ1wnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDQ3cHggNDVweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQ4cHg7XG4gICAgaGVpZ2h0OiA0OHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IC0xcHg7XG4gICAgbGVmdDogMHB4O1xuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDIwcHg7XG4gIH1cbiAgLmd3ZF9zaGlwcGluZzEgLnRyYW5zX2F7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luOiAxN3B4IDMycHg7XG4gICAgY29sb3I6ICM0MEFDRTY7XG4gIH1cbiAgLmJqZF9jbG9zZSB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19jbG9zZWljb24ucG5nXCcpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMTJweCAxMnB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICAuZ3dkX3NoaXBwaW5nMSAuYmpkX2Nsb3NlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDBweDtcbiAgICB0b3A6IDBweDtcbiAgfVxuICAjaWRlbnRpdHktYWRkLW5ldy1hZGRyZXNzICNlbnRlckFkZHJlc3NGdWxsTmFtZUNvbnRhaW5lcntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbjwvc3R5bGU+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9Imd3ZF9zaGlwcGluZ19yZW1pbmQiPlxuICA8cD7or6XllYblk4HmlK/mjIHnm7Tpgq7kuK3lm708L3A+XG4gIDxwPuebtOmCru+8jOivt+Whq+WGmeWbveWGheaUtui0p+WcsOWdgO+8mzwvcD5cbiAgPHA+6L2s6L+Q77yM6K+35aGr5YaZ6L2s6L+Q5YWs5Y+45Zyw5Z2A44CCPC9wPlxuPC9kaXY+XG48c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAuZ3dkX3NoaXBwaW5nX3JlbWluZCB7XG4gICAgd2lkdGg6IDE3MnB4O1xuICAgIGhlaWdodDogMTI1cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE3OTFkZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IC0xOTVweDtcbiAgICB0b3A6IDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBmb250LWZhbWlseTogXCdNaWNyb3NvZnQgWWFoZWlcJztcbiAgfVxuICAuZ3dkX3NoaXBwaW5nX3JlbWluZDphZnRlcntcbiAgICBib3JkZXI6IDhweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmlnaHQtY29sb3I6ICMxNzkxZGU7XG4gICAgY29udGVudDogIiI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC0xNnB4O1xuICAgIHdpZHRoOiAwcHg7XG4gICAgaGVpZ2h0OiAwcHg7XG4gICAgdG9wOiAxMHB4O1xuICB9XG4gICNpZGVudGl0eS1hZGQtbmV3LWFkZHJlc3MgI2VudGVyQWRkcmVzc0Z1bGxOYW1lQ29udGFpbmVye1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuPC9zdHlsZT4nfSxmdW5jdGlvbih0LGUpe3QuZXhwb3J0cz0nPGRpdiBjbGFzcz0iZ3dkX2NvbnRpbnVlMSBiamRfYnRuX2JveCI+XG4gIDxhIGhyZWY9Int7Y19zZXJ2ZXJ9fSIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSLotK3nianlhZoiPjwvYT5cbiAgPHNwYW4gY2xhc3M9ImJqZF9hZGRjYXJ0Ij7ngrnmraTov5vlhaXkuIvkuIDmraU8L3NwYW4+XG4gIDxzcGFuIGNsYXNzPSJiamRfY2xvc2UiPjwvc3Bhbj5cbjwvZGl2PlxuPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgLmd3ZF9jb250aW51ZTEge1xuICAgIHdpZHRoOiAyMTBweDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogIzQ5NGI0ZDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTI1M3B4O1xuICAgIHRvcDogLTRweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMjhweDtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyOHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDdiZWZlO1xuICAgIGZvbnQtZmFtaWx5OiBcJ01pY3Jvc29mdCBZYWhlaVwnO1xuICB9XG4gIC5nd2RfY29udGludWUxIGEsIC5nd2RfY29udGludWUxIHNwYW4ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAxOXB4O1xuICB9XG4gIC5nd2RfY29udGludWUxIC5iamRfYWRkY2FydCB7XG4gICAgY3Vyc29yOiB0ZXh0O1xuICB9XG4gIC5nd2RfY29udGludWUxIGEge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fc2l0ZWljb24ucG5nXCcpIDBweCA2cHggbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMjRweCAyMnB4O1xuICAgIGhlaWdodDogMzVweDtcbiAgICB3aWR0aDogMjZweDtcbiAgfVxuICAuYmpkX2Nsb3NlIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Nsb3NlaWNvbi5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDEycHg7XG4gIH1cbiAgLmd3ZF9jb250aW51ZTE6YmVmb3Jle1xuICAgIGJvcmRlcjogMThweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ3YmVmZTtcbiAgICBjb250ZW50OiAiIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMjA4cHg7XG4gICAgd2lkdGg6IDBweDtcbiAgICBoZWlnaHQ6IDBweDtcbiAgICB0b3A6IC0xcHg7XG4gIH1cbiAgLmd3ZF9jb250aW51ZTE6YWZ0ZXJ7XG4gICAgYm9yZGVyOiAxN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjZmZmO1xuICAgIGNvbnRlbnQ6ICIiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAyMDhweDtcbiAgICB3aWR0aDogMHB4O1xuICAgIGhlaWdodDogMHB4O1xuICAgIHRvcDogMHB4O1xuICB9XG4gICNzaGlwcGluZ09wdGlvbkZvcm1JZCAuYS1ib3gtaW5uZXIgc3Bhbi5hLWJ1dHRvbi1pbm5lciwgI3NoaXBwaW5nT3B0aW9uRm9ybUlkIC5hLWJveC1pbm5lciAuY29udGludWUtYnV0dG9ue1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG48L3N0eWxlPid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJnd2RfY29udGludWUyIGJqZF9idG5fYm94Ij5cbiAgPGEgaHJlZj0ie3tjX3NlcnZlcn19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Iui0reeJqeWFmiI+PC9hPlxuICA8c3BhbiBjbGFzcz0iYmpkX2FkZGNhcnQiPueCueatpOi/m+WFpeS4i+S4gOatpTwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9ImJqZF9jbG9zZSI+PC9zcGFuPlxuPC9kaXY+XG48c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAuZ3dkX2NvbnRpbnVlMiB7XG4gICAgd2lkdGg6IDIxMHB4O1xuICAgIGhlaWdodDogMzZweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGNvbG9yOiAjNDk0YjRkO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtMjUzcHg7XG4gICAgdG9wOiAtMzNweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMjhweDtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAyOHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDdiZWZlO1xuICAgIGZvbnQtZmFtaWx5OiBcJ01pY3Jvc29mdCBZYWhlaVwnO1xuICB9XG4gIC5nd2RfY29udGludWUyIGEsIC5nd2RfY29udGludWUyIHNwYW4ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAxOXB4O1xuICB9XG4gIC5nd2RfY29udGludWUyIC5iamRfYWRkY2FydCB7XG4gICAgY3Vyc29yOiB0ZXh0O1xuICB9XG4gIC5nd2RfY29udGludWUyIGEge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fc2l0ZWljb24ucG5nXCcpIDBweCA2cHggbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMjRweCAyMnB4O1xuICAgIGhlaWdodDogMzVweDtcbiAgICB3aWR0aDogMjZweDtcbiAgfVxuICAuYmpkX2Nsb3NlIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Nsb3NlaWNvbi5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDEycHg7XG4gIH1cbiAgLmd3ZF9jb250aW51ZTI6YmVmb3Jle1xuICAgIGJvcmRlcjogMThweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ3YmVmZTtcbiAgICBjb250ZW50OiAiIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMjA4cHg7XG4gICAgd2lkdGg6IDBweDtcbiAgICBoZWlnaHQ6IDBweDtcbiAgICB0b3A6IC0xcHg7XG4gIH1cbiAgLmd3ZF9jb250aW51ZTI6YWZ0ZXJ7XG4gICAgYm9yZGVyOiAxN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAjZmZmO1xuICAgIGNvbnRlbnQ6ICIiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAyMDhweDtcbiAgICB3aWR0aDogMHB4O1xuICAgIGhlaWdodDogMHB4O1xuICAgIHRvcDogMHB4O1xuICB9XG4gICNvcmRlci1zdW1tYXJ5LWNvbnRhaW5lciAuYS1ib3gtaW5uZXIgc3BhbiwgI3NoaXBwaW5nT3B0aW9uRm9ybUlkIC5hLWJveC1pbm5lciAuY29udGludWUtYnV0dG9uIC5hLWJ1dHRvbi1wcmltYXJ5e1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG48L3N0eWxlPic7Cn0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9Imd3ZF9jcmVkaXRpbmZvIGJqZF9idG5fYm94Ij5cbiAgPHA+5L+h55So5Y2h6K+G5YirPC9wPlxuICA8c3Bhbj7ljZXluIHkv6HnlKjljaHvvJrkv6HnlKjljaHkuIrlj6rmnInpk7bogZTmoIflv5fvvJs8L3NwYW4+XG4gIDxzcGFuPuWPjOW4geS/oeeUqOWNoe+8muS/oeeUqOWNoeS4iuaciTxiPlZpc3RhPC9iPuOAgTxiPk1hc3RlckNhcmQ8L2I+44CBPGI+SkNCPC9iPuOAgTwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9ImJqZF9zcGFuXzIiPjxiPkFtZXJpY2FuRXhwcmVzczwvYj7moIflv5fnmoTvvIzkuIDoiKzpg73mmK/lj4zluIHkv6HnlKjljaE8L3NwYW4+XG4gIDxhIGhyZWY9Int7Y19zZXJ2ZXJ9fSIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSLotK3nianlhZoiIGNsYXNzPSJiamRfc2l0ZV9pY29uIj48L2E+XG4gIDxzcGFuIGNsYXNzPSJiamRfY2xvc2UiPjwvc3Bhbj5cbjwvZGl2PlxuPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgLmd3ZF9jcmVkaXRpbmZvIHtcbiAgICB3aWR0aDogNDU0cHg7XG4gICAgaGVpZ2h0OiAxNDBweDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IC00NjlweDtcbiAgICB0b3A6IDMwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0N2JlZmU7XG4gICAgZm9udC1mYW1pbHk6IFwnTWljcm9zb2Z0IFlhaGVpXCc7XG4gIH1cbiAgLmFtYXpvbi1qcCAuZ3dkX2NyZWRpdGluZm8ge1xuICAgIHRvcDogLTYwcHg7XG4gIH1cbiAgLmFtYXpvbi1kZSAuZ3dkX2NyZWRpdGluZm8ge1xuICAgIHRvcDogLTc1cHg7XG4gICAgei1pbmRleDogOTk5O1xuICB9XG4gIC5nd2RfY3JlZGl0aW5mbyBwIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgY29sb3I6ICMzRjQxNDI7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgbWFyZ2luOiAxN3B4IDAgMTZweCA2MHB4O1xuICB9XG4gIC5nd2RfY3JlZGl0aW5mbyBzcGFuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogYXV0bztcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgY29sb3I6ICM0OTRiNGQ7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgcGFkZGluZy1sZWZ0OiAzMnB4O1xuICB9XG4gIC5nd2RfY3JlZGl0aW5mbyAuYmpkX3NwYW5fMiB7XG4gICAgcGFkZGluZy1sZWZ0OiAxMThweDtcbiAgfVxuICAuYmpkX3NpdGVfaWNvbiB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zaXRlaWNvbjIucG5nXCcpIDBweCAwcHggbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogNDdweCA0NXB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogNDhweDtcbiAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogLTFweDtcbiAgICBsZWZ0OiAwcHg7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMjBweDtcbiAgfVxuICAuYmpkX2Nsb3NlIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Nsb3NlaWNvbi5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDEycHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG4gIC5nd2RfY3JlZGl0aW5mbyAuYmpkX2Nsb3NlIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDBweDtcbiAgICB0b3A6IDBweDtcbiAgfVxuICAjaWRlbnRpdHktYWRkLW5ldy1hZGRyZXNzICNlbnRlckFkZHJlc3NGdWxsTmFtZUNvbnRhaW5lcntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbjwvc3R5bGU+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9Imd3ZF9hZGRjcmVkaXQgYmpkX2J0bl9ib3giIGlkPSJhZGRjcmVkaXRfYnRuIj5cbiAgPGEgaHJlZj0ie3tjX3NlcnZlcn19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Iui0reeJqeWFmiI+PC9hPlxuICA8c3BhbiBjbGFzcz0iYmpkX2FkZGNhcnQiPua3u+WKoOS/oeeUqOWNoTwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9ImJqZF9jbG9zZSI+PC9zcGFuPlxuICA8ZGl2IGNsYXNzPSJjcmVkaXRfZGV0YWlsIj48L2Rpdj5cbjwvZGl2PlxuPHN0eWxlIHR5cGU9InRleHQvY3NzIj5cbiAgLmd3ZF9hZGRjcmVkaXQge1xuICAgIHdpZHRoOiAxODBweDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogIzQ5NGI0ZDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGluZS1oZWlnaHQ6IDM1cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDI4cHg7XG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDI4cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0N2JlZmU7XG4gICAgZm9udC1mYW1pbHk6IFwnTWljcm9zb2Z0IFlhaGVpXCc7XG4gICAgdG9wOiA0N3B4O1xuICAgIHotaW5kZXg6IDk5O1xuICAgIGxlZnQ6IDEyMnB4O1xuICB9XG4gIC5hbWF6b24tanAgLmd3ZF9hZGRjcmVkaXQge1xuICAgIHRvcDogNTRweDtcbiAgICBsZWZ0OiAxMzBweDtcbiAgfVxuICAuYW1hem9uLWRlIC5nd2RfYWRkY3JlZGl0IHtcbiAgICB0b3A6IDUzcHg7XG4gICAgbGVmdDogMTgwcHg7XG4gIH1cbiAgLmNyZWRpdF9kZXRhaWwge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICB0b3A6IC01M3B4O1xuICAgIGxlZnQ6IDE5NnB4O1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW8vYW1hem9uX3JlbWluZF9jcmVkaXRfaW5mby5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgd2lkdGg6IDM0MnB4O1xuICAgIGhlaWdodDogMTQwcHg7XG4gIH1cbiAgLmFtYXpvbi1kZSAuY3JlZGl0X2RldGFpbCB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zL2hhaXRhby9hbWF6b25fcmVtaW5kX2NyZWRpdF9pbmZvX2RlLnBuZ1wnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgfVxuICAuYW1hem9uLWpwIC5jcmVkaXRfZGV0YWlsIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvL2FtYXpvbl9yZW1pbmRfY3JlZGl0X2luZm9fanAucG5nXCcpIDBweCAwcHggbm8tcmVwZWF0O1xuICB9XG4gICNhZGRjcmVkaXRfYnRuOmhvdmVyIC5jcmVkaXRfZGV0YWlsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuICAuZ3dkX2FkZGNyZWRpdCBhLCAuZ3dkX2FkZGNyZWRpdCBzcGFuIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMTlweDtcbiAgfVxuICAuZ3dkX2FkZGNyZWRpdCAuYmpkX2FkZGNhcnQge1xuICAgIGN1cnNvcjogdGV4dDtcbiAgfVxuICAuZ3dkX2FkZGNyZWRpdCBhIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX3NpdGVpY29uLnBuZ1wnKSAwcHggNnB4IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDI0cHggMjJweDtcbiAgICBoZWlnaHQ6IDM1cHg7XG4gICAgd2lkdGg6IDI2cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDdweDtcbiAgfVxuICAuYmpkX2Nsb3NlIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Nsb3NlaWNvbi5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDEycHg7XG4gIH1cbiAgLmd3ZF9hZGRjcmVkaXQ6YmVmb3Jle1xuICAgIGJvcmRlcjogMjlweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmlnaHQtY29sb3I6ICM0N2JlZmU7XG4gICAgY29udGVudDogIiI7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMThweDtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAxOHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtNThweDtcbiAgICB3aWR0aDogMHB4O1xuICAgIGhlaWdodDogMHB4O1xuICAgIHRvcDogLTFweDtcbiAgfVxuICAuZ3dkX2FkZGNyZWRpdDphZnRlciB7XG4gICAgYm9yZGVyOiAyN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yaWdodC1jb2xvcjogI2ZmZjtcbiAgICBjb250ZW50OiAiIjtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxN3B4O1xuICAgIGJvcmRlci10b3Atd2lkdGg6IDE3cHg7XG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IDMwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC01N3B4O1xuICAgIHdpZHRoOiAwcHg7XG4gICAgaGVpZ2h0OiAwcHg7XG4gICAgdG9wOiAwcHg7XG4gIH1cbiAgI2lkZW50aXR5LWFkZC1uZXctYWRkcmVzcyAjZW50ZXJBZGRyZXNzRnVsbE5hbWVDb250YWluZXJ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG48L3N0eWxlPid9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJnd2RfcHJvbW9jb2RlIGJqZF9idG5fYm94Ij5cbiAgPGEgaHJlZj0ie3tjX3NlcnZlcn19IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Iui0reeJqeWFmiI+PC9hPlxuICA8c3BhbiBjbGFzcz0iYmpkX2FkZGNhcnQiPuWmguacieS8mOaDoOegge+8jOatpOWkhOa3u+WKoOS8mOaDoOeggTwvc3Bhbj5cbiAgPHNwYW4gY2xhc3M9ImJqZF9jbG9zZSI+PC9zcGFuPlxuPC9kaXY+XG48c3R5bGUgdHlwZT0idGV4dC9jc3MiPlxuICAuZ3dkX3Byb21vY29kZSB7XG4gICAgd2lkdGg6IDI5M3B4O1xuICAgIGhlaWdodDogMzZweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGNvbG9yOiAjNDk0YjRkO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtNjlweDtcbiAgICB0b3A6IDQ1cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDI4cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM0N2JlZmU7XG4gICAgZm9udC1mYW1pbHk6IFwnTWljcm9zb2Z0IFlhaGVpXCc7XG4gIH1cbiAgLmd3ZF9wcm9tb2NvZGUgYSwgLmd3ZF9wcm9tb2NvZGUgc3BhbiB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWxlZnQ6IDE5cHg7XG4gIH1cbiAgLmd3ZF9wcm9tb2NvZGUgLmJqZF9hZGRjYXJ0IHtcbiAgICBjdXJzb3I6IHRleHQ7XG4gIH1cbiAgLmd3ZF9wcm9tb2NvZGUgYSB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwne3tzX3NlcnZlcn19L2ltYWdlcy9leHRlbnNpb25zL2hhaXRhb19zaXRlaWNvbi5wbmdcJykgMHB4IDZweCBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiAyNHB4IDIycHg7XG4gICAgaGVpZ2h0OiAzNXB4O1xuICAgIHdpZHRoOiAyNnB4O1xuICB9XG4gIC5iamRfY2xvc2Uge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fY2xvc2VpY29uLnBuZ1wnKSAwcHggMHB4IG5vLXJlcGVhdDtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDEycHg7XG4gIH1cbiAgLmd3ZF9wcm9tb2NvZGU6YmVmb3Jle1xuICAgIGJvcmRlcjogMTBweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjNDdiZWZlO1xuICAgIGNvbnRlbnQ6ICIiO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAxNDlweDtcbiAgICB3aWR0aDogMHB4O1xuICAgIGhlaWdodDogMHB4O1xuICAgIHRvcDogLTIxcHg7XG4gIH1cbiAgLmd3ZF9wcm9tb2NvZGU6YWZ0ZXJ7XG4gICAgYm9yZGVyOiAxMHB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNmZmY7XG4gICAgY29udGVudDogIiI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDE0OXB4O1xuICAgIHdpZHRoOiAwcHg7XG4gICAgaGVpZ2h0OiAwcHg7XG4gICAgdG9wOiAtMjBweDtcbiAgfVxuICAucG10cy1yZWRlZW0tY2xhaW0tY29kZS1mb3JtIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIH1cbjwvc3R5bGU+J30sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9JzxkaXYgY2xhc3M9Imd3ZF9jaG9vc2VDcmVkaXQgYmpkX2J0bl9ib3giPlxuICA8YSBocmVmPSJ7e2Nfc2VydmVyfX0iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0i6LSt54mp5YWaIj48L2E+XG4gIDxzcGFuIGNsYXNzPSJiamRfYWRkY2FydCI+5pSv5oyB5Y2V5biBIC8g5Y+M5biB5L+h55So5Y2hPC9zcGFuPlxuICA8c3BhbiBjbGFzcz0iYmpkX2Nsb3NlIj48L3NwYW4+XG48L2Rpdj5cbjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gIC5nd2RfY2hvb3NlQ3JlZGl0IHtcbiAgICB3aWR0aDogMjQ5cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgY29sb3I6ICM0OTRiNGQ7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyOHB4O1xuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAyOHB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDdiZWZlO1xuICAgIGZvbnQtZmFtaWx5OiBcJ01pY3Jvc29mdCBZYWhlaVwnO1xuICAgIHRvcDogMHB4O1xuICAgIHotaW5kZXg6IDk5O1xuICAgIGxlZnQ6IDM2NXB4O1xuICB9XG4gIC5hbWF6b24tZGUgLmd3ZF9jaG9vc2VDcmVkaXQge1xuICAgIHRvcDogLTNweDtcbiAgICBsZWZ0OiA1MDdweDtcbiAgfVxuICAuZ3dkX2Nob29zZUNyZWRpdCBhLCAuZ3dkX2Nob29zZUNyZWRpdCBzcGFuIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW4tbGVmdDogMTlweDtcbiAgfVxuICAuZ3dkX2Nob29zZUNyZWRpdCAuYmpkX2FkZGNhcnQge1xuICAgIGN1cnNvcjogdGV4dDtcbiAgfVxuICAuZ3dkX2Nob29zZUNyZWRpdCBhIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX3NpdGVpY29uLnBuZ1wnKSAwcHggNnB4IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDI0cHggMjJweDtcbiAgICBoZWlnaHQ6IDM1cHg7XG4gICAgd2lkdGg6IDI2cHg7XG4gICAgbWFyZ2luLWxlZnQ6IDdweDtcbiAgfVxuICAuYmpkX2Nsb3NlIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Nsb3NlaWNvbi5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMnB4IDEycHg7XG4gIH1cbiAgLmd3ZF9jaG9vc2VDcmVkaXQ6YmVmb3Jle1xuICAgIGJvcmRlcjogMjlweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItcmlnaHQtY29sb3I6ICM0N2JlZmU7XG4gICAgY29udGVudDogIiI7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMThweDtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAxOHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtNThweDtcbiAgICB3aWR0aDogMHB4O1xuICAgIGhlaWdodDogMHB4O1xuICAgIHRvcDogLTFweDtcbiAgfVxuICAuZ3dkX2Nob29zZUNyZWRpdDphZnRlciB7XG4gICAgYm9yZGVyOiAyN3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1yaWdodC1jb2xvcjogI2ZmZjtcbiAgICBjb250ZW50OiAiIjtcbiAgICBib3JkZXItYm90dG9tLXdpZHRoOiAxN3B4O1xuICAgIGJvcmRlci10b3Atd2lkdGg6IDE3cHg7XG4gICAgYm9yZGVyLWxlZnQtd2lkdGg6IDMwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC01N3B4O1xuICAgIHdpZHRoOiAwcHg7XG4gICAgaGVpZ2h0OiAwcHg7XG4gICAgdG9wOiAwcHg7XG4gIH1cbiAgI25hdi1iYXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfVxuICAuYS1zcGFjaW5nLWJhc2Uge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgfSd9LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPSc8ZGl2IGNsYXNzPSJnd2RfZmluaXNoZWQgYmpkX2J0bl9ib3giPlxuICA8YSBocmVmPSJ7e2Nfc2VydmVyfX0iIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0i6LSt54mp5YWaIj48L2E+XG4gIDxzcGFuIGNsYXNzPSJiamRfYWRkY2FydCI+54K55q2k5a6M5oiQ6K6i5Y2VPC9zcGFuPlxuICA8c3BhbiBjbGFzcz0iYmpkX2Nsb3NlIj48L3NwYW4+XG48L2Rpdj5cbjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+XG4gIC5nd2RfZmluaXNoZWQge1xuICAgIHdpZHRoOiAxOTBweDtcbiAgICBoZWlnaHQ6IDM2cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogIzQ5NGI0ZDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTIyOHB4O1xuICAgIHRvcDogLTMycHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDI4cHg7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMjhweDtcbiAgICBmb250LXNpemU6IDE0cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzQ3YmVmZTtcbiAgICBmb250LWZhbWlseTogXCdNaWNyb3NvZnQgWWFoZWlcJztcbiAgfVxuICAuZ3dkX2ZpbmlzaGVkIGEsIC5nd2RfZmluaXNoZWQgc3BhbiB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgbWFyZ2luLWxlZnQ6IDE5cHg7XG4gIH1cbiAgLmd3ZF9maW5pc2hlZCAuYmpkX2FkZGNhcnQge1xuICAgIGN1cnNvcjogdGV4dDtcbiAgfVxuICAuZ3dkX2ZpbmlzaGVkIGEge1xuICAgIGJhY2tncm91bmQ6IHVybChcJ3t7c19zZXJ2ZXJ9fS9pbWFnZXMvZXh0ZW5zaW9ucy9oYWl0YW9fc2l0ZWljb24ucG5nXCcpIDBweCA2cHggbm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtc2l6ZTogMjRweCAyMnB4O1xuICAgIGhlaWdodDogMzVweDtcbiAgICB3aWR0aDogMjZweDtcbiAgfVxuICAuYmpkX2Nsb3NlIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCd7e3Nfc2VydmVyfX0vaW1hZ2VzL2V4dGVuc2lvbnMvaGFpdGFvX2Nsb3NlaWNvbi5wbmdcJykgMHB4IDBweCBuby1yZXBlYXQ7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDEycHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogMTJweCAxMnB4O1xuICB9XG4gIC5nd2RfZmluaXNoZWQ6YmVmb3Jle1xuICAgIGJvcmRlcjogMThweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogIzQ3YmVmZTtcbiAgICBjb250ZW50OiAiIjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMTg4cHg7XG4gICAgd2lkdGg6IDBweDtcbiAgICBoZWlnaHQ6IDBweDtcbiAgICB0b3A6IC0xcHg7XG4gIH1cbiAgLmd3ZF9maW5pc2hlZDphZnRlcntcbiAgICBib3JkZXI6IDE3cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWxlZnQtY29sb3I6ICNmZmY7XG4gICAgY29udGVudDogIiI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDE4OHB4O1xuICAgIHdpZHRoOiAwcHg7XG4gICAgaGVpZ2h0OiAwcHg7XG4gICAgdG9wOiAwcHg7XG4gIH1cbiAgI29yZGVyLXN1bW1hcnktYm94e1xuICAgIG92ZXJmbG93OiB2aXNpYmxlO1xuICB9XG4gIDwvc3R5bGU+J31dKTs="}]},{"name":"Enhanced word highlight","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http://maps.google.com/*","https://maps.google.com/*"],"orig_includes":["http://*","https://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194716},"enabled":false,"position":7,"file_url":"https://greasyfork.org/scripts/7251-enhanced-word-highlight/code/Enhanced%20word%20highlight.user.js","uuid":"0565b6c6-ad80-4bd9-95ba-dcabc89ff39b","source":""},{"name":"IG Helper: download Instagram pic & vids","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.instagram.com/*","https://*.cdninstagram.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194723},"enabled":false,"position":8,"file_url":"https://greasyfork.org/scripts/22660-ig-helper-download-instagram-pic-vids/code/IG%20Helper:%20download%20Instagram%20pic%20%20vids.user.js","uuid":"806ccb99-e681-493d-861d-12a8b3148c0c","source":"","requires":[{"meta":{"name":"FileSaver.min.js","url":"https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.3/FileSaver.min.js","ts":1544370233387,"mimetype":"text/javascript"},"source":"LyohIEBzb3VyY2UgaHR0cDovL3B1cmwuZWxpZ3JleS5jb20vZ2l0aHViL0ZpbGVTYXZlci5qcy9ibG9iL21hc3Rlci9GaWxlU2F2ZXIuanMgKi8KdmFyIHNhdmVBcz1zYXZlQXN8fGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0IjtpZih0eXBlb2YgZT09PSJ1bmRlZmluZWQifHx0eXBlb2YgbmF2aWdhdG9yIT09InVuZGVmaW5lZCImJi9NU0lFIFsxLTldXC4vLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe3JldHVybn12YXIgdD1lLmRvY3VtZW50LG49ZnVuY3Rpb24oKXtyZXR1cm4gZS5VUkx8fGUud2Via2l0VVJMfHxlfSxyPXQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiwiYSIpLG89ImRvd25sb2FkImluIHIsYT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgTW91c2VFdmVudCgiY2xpY2siKTtlLmRpc3BhdGNoRXZlbnQodCl9LGk9L2NvbnN0cnVjdG9yL2kudGVzdChlLkhUTUxFbGVtZW50KXx8ZS5zYWZhcmksZj0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHU9ZnVuY3Rpb24odCl7KGUuc2V0SW1tZWRpYXRlfHxlLnNldFRpbWVvdXQpKGZ1bmN0aW9uKCl7dGhyb3cgdH0sMCl9LHM9ImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIsZD0xZTMqNDAsYz1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2lmKHR5cGVvZiBlPT09InN0cmluZyIpe24oKS5yZXZva2VPYmplY3RVUkwoZSl9ZWxzZXtlLnJlbW92ZSgpfX07c2V0VGltZW91dCh0LGQpfSxsPWZ1bmN0aW9uKGUsdCxuKXt0PVtdLmNvbmNhdCh0KTt2YXIgcj10Lmxlbmd0aDt3aGlsZShyLS0pe3ZhciBvPWVbIm9uIit0W3JdXTtpZih0eXBlb2Ygbz09PSJmdW5jdGlvbiIpe3RyeXtvLmNhbGwoZSxufHxlKX1jYXRjaChhKXt1KGEpfX19fSxwPWZ1bmN0aW9uKGUpe2lmKC9eXHMqKD86dGV4dFwvXFMqfGFwcGxpY2F0aW9uXC94bWx8XFMqXC9cUypcK3htbClccyo7LipjaGFyc2V0XHMqPVxzKnV0Zi04L2kudGVzdChlLnR5cGUpKXtyZXR1cm4gbmV3IEJsb2IoW1N0cmluZy5mcm9tQ2hhckNvZGUoNjUyNzkpLGVdLHt0eXBlOmUudHlwZX0pfXJldHVybiBlfSx2PWZ1bmN0aW9uKHQsdSxkKXtpZighZCl7dD1wKHQpfXZhciB2PXRoaXMsdz10LnR5cGUsbT13PT09cyx5LGg9ZnVuY3Rpb24oKXtsKHYsIndyaXRlc3RhcnQgcHJvZ3Jlc3Mgd3JpdGUgd3JpdGVlbmQiLnNwbGl0KCIgIikpfSxTPWZ1bmN0aW9uKCl7aWYoKGZ8fG0mJmkpJiZlLkZpbGVSZWFkZXIpe3ZhciByPW5ldyBGaWxlUmVhZGVyO3Iub25sb2FkZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9Zj9yLnJlc3VsdDpyLnJlc3VsdC5yZXBsYWNlKC9eZGF0YTpbXjtdKjsvLCJkYXRhOmF0dGFjaG1lbnQvZmlsZTsiKTt2YXIgbj1lLm9wZW4odCwiX2JsYW5rIik7aWYoIW4pZS5sb2NhdGlvbi5ocmVmPXQ7dD11bmRlZmluZWQ7di5yZWFkeVN0YXRlPXYuRE9ORTtoKCl9O3IucmVhZEFzRGF0YVVSTCh0KTt2LnJlYWR5U3RhdGU9di5JTklUO3JldHVybn1pZigheSl7eT1uKCkuY3JlYXRlT2JqZWN0VVJMKHQpfWlmKG0pe2UubG9jYXRpb24uaHJlZj15fWVsc2V7dmFyIG89ZS5vcGVuKHksIl9ibGFuayIpO2lmKCFvKXtlLmxvY2F0aW9uLmhyZWY9eX19di5yZWFkeVN0YXRlPXYuRE9ORTtoKCk7Yyh5KX07di5yZWFkeVN0YXRlPXYuSU5JVDtpZihvKXt5PW4oKS5jcmVhdGVPYmplY3RVUkwodCk7c2V0VGltZW91dChmdW5jdGlvbigpe3IuaHJlZj15O3IuZG93bmxvYWQ9dTthKHIpO2goKTtjKHkpO3YucmVhZHlTdGF0ZT12LkRPTkV9KTtyZXR1cm59UygpfSx3PXYucHJvdG90eXBlLG09ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBuZXcgdihlLHR8fGUubmFtZXx8ImRvd25sb2FkIixuKX07aWYodHlwZW9mIG5hdmlnYXRvciE9PSJ1bmRlZmluZWQiJiZuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYil7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt0PXR8fGUubmFtZXx8ImRvd25sb2FkIjtpZighbil7ZT1wKGUpfXJldHVybiBuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYihlLHQpfX13LmFib3J0PWZ1bmN0aW9uKCl7fTt3LnJlYWR5U3RhdGU9dy5JTklUPTA7dy5XUklUSU5HPTE7dy5ET05FPTI7dy5lcnJvcj13Lm9ud3JpdGVzdGFydD13Lm9ucHJvZ3Jlc3M9dy5vbndyaXRlPXcub25hYm9ydD13Lm9uZXJyb3I9dy5vbndyaXRlZW5kPW51bGw7cmV0dXJuIG19KHR5cGVvZiBzZWxmIT09InVuZGVmaW5lZCImJnNlbGZ8fHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIiYmd2luZG93fHx0aGlzLmNvbnRlbnQpO2lmKHR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIiYmbW9kdWxlLmV4cG9ydHMpe21vZHVsZS5leHBvcnRzLnNhdmVBcz1zYXZlQXN9ZWxzZSBpZih0eXBlb2YgZGVmaW5lIT09InVuZGVmaW5lZCImJmRlZmluZSE9PW51bGwmJmRlZmluZS5hbWQhPT1udWxsKXtkZWZpbmUoIkZpbGVTYXZlci5qcyIsZnVuY3Rpb24oKXtyZXR1cm4gc2F2ZUFzfSl9Cg=="}]},{"name":"城通网盘、皮皮盘、牛盘显示正确下载地址","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*ctfile.com*","*ctfile.net*","*pipipan.com*","*6pan.cc/file-*html","*666pan.cc/file-*html","*777pan.cc/file-*html","*888pan.cc/file-*html"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194732},"enabled":true,"position":9,"file_url":"https://greasyfork.org/scripts/25270-%E5%9F%8E%E9%80%9A%E7%BD%91%E7%9B%98-%E7%9A%AE%E7%9A%AE%E7%9B%98-%E7%89%9B%E7%9B%98%E6%98%BE%E7%A4%BA%E6%AD%A3%E7%A1%AE%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/code/%E5%9F%8E%E9%80%9A%E7%BD%91%E7%9B%98%E3%80%81%E7%9A%AE%E7%9A%AE%E7%9B%98%E3%80%81%E7%89%9B%E7%9B%98%E6%98%BE%E7%A4%BA%E6%AD%A3%E7%A1%AE%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.user.js","uuid":"0ac3ede4-8510-4b6a-ad65-62995ab961b6","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQGlkICAgICAgICAgICBjdGZpbGVANDA1NjQ3ODI1QHFxLmNvbQovLyBAbmFtZSAgICAgICAgIOWfjumAmue9keebmOOAgeearuearuebmOOAgeeJm+ebmOaYvuekuuato+ehruS4i+i9veWcsOWdgAovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly93ZWliby5jb20vcGVuZGF2ZQovLyBAdmVyc2lvbiAgICAgIDAuOS4xCi8vIEBkZXNjcmlwdGlvbiAg5Z+O6YCa572R55uY44CB55qu55qu55uY44CB54mb55uY5pi+56S65q2j56Gu5LiL6L295Zyw5Z2AIeWOu+aOiemBruaMoeeahHBvcGp1bXDpgI/mmI7lsYLvvIHoh6rliqjot7PliLDnrKzkuozpobXvvIEKLy8gQGF1dGhvciAgICAgICA0MDU2NDc4MjVAcXEuY29tCi8vIEBpbmNsdWRlICAgICAgKmN0ZmlsZS5jb20qCi8vIEBpbmNsdWRlICAgICAgKmN0ZmlsZS5uZXQqCi8vIEBpbmNsdWRlICAgICAgKnBpcGlwYW4uY29tKgovLyBAaW5jbHVkZSAgICAgICo2cGFuLmNjL2ZpbGUtKmh0bWwKLy8gQGluY2x1ZGUgICAgICAqNjY2cGFuLmNjL2ZpbGUtKmh0bWwKLy8gQGluY2x1ZGUgICAgICAqNzc3cGFuLmNjL2ZpbGUtKmh0bWwKLy8gQGluY2x1ZGUgICAgICAqODg4cGFuLmNjL2ZpbGUtKmh0bWwKLy8gQGdyYW50ICAgICAgICBHTV94bWxodHRwUmVxdWVzdAovLyBAZ3JhbnQgICAgICAgIEdNX3NldENsaXBib2FyZAovLyA9PS9Vc2VyU2NyaXB0PT0KLy/niZvnm5gKaWYobG9jYXRpb24uaHJlZi5tYXRjaCgvNjY2cGFuXC5jY3w2cGFuXC5jY3w3NzdwYW5cLmNjfDg4OHBhblwuY2MvZykgKXsKCXZhciBmaWxlQ29kZSA9IGxvY2F0aW9uLmhyZWYubWF0Y2goLyhcZCspXC4vZylbMF0ucmVwbGFjZSgnLicsJycpOwoJLy9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYuZmlsZV9pdGVtJykuY2hpbGROb2Rlc1sxXS5pbm5lckhUTUwgKz0gJyZuYnNwOzxhIGlkPSJmcmVlX2Rvd25fbGluayIgY2xhc3M9ImNvbG9yX2J0biBidG5fZGVlcF9ibHVlIHR4dHdoaXRlIiBocmVmPSJodHRwOi8vd3d3Ljc3N3Bhbi5jYy9jZC5waHA/ZmlsZV9pZD0nICsgZmlsZUNvZGUgKyAnIiB0YXJnZXQ9Il9ibGFuayI+4oepIOebtOaOpeS4i+i9vTwvYT48c3Bhbj445YiG6ZKf5LiA5qyhPC9zcGFuPic7CgkvL2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmcmVlX2Rvd25fbGluaycpLmNsaWNrKCk7Cglsb2NhdGlvbi5ocmVmID0gJ2h0dHA6Ly93d3cuNzc3cGFuLmNjL2Rvd24tJyArIGZpbGVDb2RlICsgJy5odG1sJzsKfQovL+WfjumAmue9keebmOOAgeearuearuebmAovL+esrOS4gOmhteiHquWKqOeCueWHu+aMiemSrgppZihsb2NhdGlvbi5ocmVmLm1hdGNoKC9jdGZpbGVcLmNvbXxwaXBpcGFuXC5jb218Y3RmaWxlXC5uZXQvZykgJiYgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZyZWVfZG93bl9saW5rJykpewoJZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZyZWVfZG93bl9saW5rJykuY2xpY2soKTsKfQovL+aciXBvcOW5v+WRiueahOenu+mZpAppZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdhW2hyZWYqPSJwb3BqdW1wLnBocCJdJykgIT09IG51bGwpewoJdmFyIHBvcE5vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdhW2hyZWYqPSJwb3BqdW1wLnBocCJdJyk7Cglwb3BOb2RlLnJlbW92ZSgpOwp9CmlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpbmZvTW9kYWwnKSAhPT0gbnVsbCl7Cgl2YXIgcG9wTm9kZTEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjaW5mb01vZGFsJyk7Cglwb3BOb2RlMS5yZW1vdmUoKTsKfQppZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYubW9kYWwtYmFja2Ryb3AuZmFkZS5pbicpICE9PSBudWxsKXsKCXZhciBwb3BOb2RlMiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Rpdi5tb2RhbC1iYWNrZHJvcC5mYWRlLmluJyk7Cglwb3BOb2RlMi5yZW1vdmUoKTsKfQovL+iOt+WPluesrOS6jOmhtemHjOeahOecn+WunuS4i+i9veWcsOWdgCDlu7rnq4tjb3B55oyJ6ZKuCi8vdmFyIHVpZCA9IGxvY2F0aW9uLmhyZWYubWF0Y2goL1xkKy9nKVswXTsKLy92YXIgZmlkID0gbG9jYXRpb24uaHJlZi5tYXRjaCgvXGQrL2cpWzFdOwppZihkb2N1bWVudC5ib2R5LmlubmVySFRNTC5tYXRjaCgvdWlkPShcZCspXCZmaWQ9KFxkKykvZykpewoJdmFyIHVpZE5maWQgPSBkb2N1bWVudC5ib2R5LmlubmVySFRNTC5tYXRjaCgvdWlkPShcZCspXCZmaWQ9KFxkKykvZylbMF07CgkvL2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2Rpdi5wdWxsLXJpZ2h0JykucXVlcnlTZWxlY3RvcignYScpLmhyZWYubWF0Y2goLy4rKHVpZD1cZCsmZmlkPVxkKykmLisvKVsxXTsKfQp2YXIgY2hrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZyZWVfZG93bl9saW5rJykub25jbGljay50b1N0cmluZygpLm1hdGNoKC8sXHMnKC4rKScsXHMvKVsxXTsKdmFyIGpzb25VcmwgPSBsb2NhdGlvbi5ocmVmLm1hdGNoKC9eLipcL1wvW15cL10rL2cpWzBdKyIvZ2V0X2ZpbGVfdXJsLnBocD8iK3VpZE5maWQrIiZmaWxlX2Noaz0iK2NoaysiJnZlcmlmeWNvZGU9IjsKY29uc29sZS53YXJuKGpzb25VcmwpOwpHTV94bWxodHRwUmVxdWVzdCh7CgltZXRob2Q6ICdHRVQnLAoJdXJsOiAganNvblVybCwKCWhlYWRlcnM6IHsKCQknVXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82NS4wLjMzMjUuMTQ2IFNhZmFyaS81MzcuMzYnLAoJCSdBY2NlcHQnOiAndGV4dC9qYXZhc2NyaXB0LGFwcGxpY2F0aW9uL2pzb24nLAoJfSwKCW9ubG9hZDogZnVuY3Rpb24ocmVzcG9uc2VEZXRhaWxzKSB7CgkJLy9jb25zb2xlLndhcm4ocmVzcG9uc2VEZXRhaWxzLnJlc3BvbnNlVGV4dCk7CgkJdmFyIGpzb25EYXRhID0gZXZhbCgnKCcgKyByZXNwb25zZURldGFpbHMucmVzcG9uc2VUZXh0ICsgJyknKTsKCQkvL2NvbnNvbGUud2Fybihqc29uRGF0YSk7CgkJdmFyIGRvd25VcmwgPSBqc29uRGF0YS5kb3dudXJsOwoJCXVuc2FmZVdpbmRvdy5jb3B5SnNvbk1lbnUgPSBmdW5jdGlvbigpIHsKCQkJR01fc2V0Q2xpcGJvYXJkKGRvd25VcmwpOwoJCX07CgkJc2V0VGltZW91dChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZnJlZV9kb3duX2xpbmsnKS5uZXh0U2libGluZy5pbm5lckhUTUwgPSAnPGJ1dHRvbiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB0b3A6IDBweDsgcmlnaHQ6IDBweDsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTsgYm9yZGVyOiB1bnNldDsgYmFja2dyb3VuZDogcmdiYSgyMywxNjAsOTQsMC44KTsiIG9uY2xpY2s9ImNvcHlKc29uTWVudSgpO3RoaXMuc3R5bGUuYmFja2dyb3VuZD1cJ3JnYmEoMjQ3LDIwNiwzNywwLjgpXCc7Ij5Db3B555yf5a6e5LiL6L295Zyw5Z2APC9idXR0b24+JywyMDApOwoJfQp9KTs="},{"name":"VIP视频在线解析破解去广告（全网）2018.11.13更新可用","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://v.youku.com/v_show/*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/dianying/*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://*.acfun.cn/v/*","*://*.bilibili.com/video/*","*://*.bilibili.com/anime/*","*://vip.pptv.com/show/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.wasu.cn/Play/show/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1520144194737},"enabled":false,"position":10,"file_url":"https://greasyfork.org/scripts/35848-vip%E8%A7%86%E9%A2%91%E5%9C%A8%E7%BA%BF%E8%A7%A3%E6%9E%90%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%85%A8%E7%BD%91-2018-2-1%E6%9B%B4%E6%96%B0%E5%8F%AF%E7%94%A8/code/VIP%E8%A7%86%E9%A2%91%E5%9C%A8%E7%BA%BF%E8%A7%A3%E6%9E%90%E7%A0%B4%E8%A7%A3%E5%8E%BB%E5%B9%BF%E5%91%8A%EF%BC%88%E5%85%A8%E7%BD%91%EF%BC%89201821%E6%9B%B4%E6%96%B0%E5%8F%AF%E7%94%A8.user.js","uuid":"0212ad70-815a-4315-bddb-0543803ff55a","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"http://cdn.bootcss.com/jquery/1.8.3/jquery.min.js","ts":1545484332275,"mimetype":"text/javascript"},"source":""}]},{"name":"破解VIP会员视频集合","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://*.bilibili.com/blackboard/*"],"orig_includes":[],"orig_matches":["*://*.iqiyi.com/*","*://*.youku.com/*","*://*.le.com/*","*://*.letv.com/*","*://v.qq.com/*","*://*.tudou.com/*","*://*.mgtv.com/*","*://film.sohu.com/*","*://tv.sohu.com/*","*://*.acfun.cn/v/*","*://*.bilibili.com/*","*://vip.1905.com/play/*","*://*.pptv.com/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.fun.tv/vplay/*","*://*.wasu.cn/Play/show/*","*://*.56.com/*"],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1545918192158,"data":{}},"enabled":true,"position":11,"file_url":"https://greasyfork.org/scripts/27530-%E7%A0%B4%E8%A7%A3vip%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88/code/%E7%A0%B4%E8%A7%A3VIP%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88.user.js","uuid":"d70a1227-0231-440a-a533-4dec9d4f9e4c","source":""},{"name":"bilibili merged flv+mp4+ass+enhance","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://www.bilibili.com/video/av*","*://bangumi.bilibili.com/anime/*/play*","*://www.bilibili.com/bangumi/play/ep*","*://www.bilibili.com/bangumi/play/ss*","*://www.bilibili.com/bangumi/media/md*","*://www.biligame.com/detail/*","*://vc.bilibili.com/video/*","*://www.bilibili.com/watchlater/"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1550216439429,"data":{}},"enabled":false,"position":12,"file_url":"https://greasyfork.org/scripts/372516-bilibili-merged-flv-mp4-ass-enhance/code/bilibili%20merged%20flv+mp4+ass+enhance.user.js","uuid":"80f8d36c-4282-4ab1-85a4-2d07f78bbf4a","source":""}]}